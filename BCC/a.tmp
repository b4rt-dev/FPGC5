.code
; Setup stack and return function before jumping to Main of C program
Main:
    load32 0 r14            ; initialize base pointer address
    load32 0x77FFFF r13     ; initialize main stack address
    addr2reg Return_UART r1 ; get address of return function
    or r0 r1 r15            ; copy return addr to r15
    jump main               ; jump to main of C program
                            ; should return to the address in r15
    halt                    ; should not get here

; Function that is called after Main of C program has returned
; Return value should be in R1
; Send it over UART and halt afterwards
Return_UART:
    load32 0xC02723 r1          ; r1 = 0xC02723 | UART tx
    write 0 r1 r2               ; write r2 over UART
    halt                        ; halt

; COMPILED C CODE HERE

 ; glb exit : (
 ; prm     <something> : int
 ;     ) void
 ; glb atoi : (
 ; prm     <something> : * char
 ;     ) int
 ; glb strlen : (
 ; prm     <something> : * char
 ;     ) unsigned
 ; glb strcpy : (
 ; prm     <something> : * char
 ; prm     <something> : * char
 ;     ) * char
 ; glb strchr : (
 ; prm     <something> : * char
 ; prm     <something> : int
 ;     ) * char
 ; glb strcmp : (
 ; prm     <something> : * char
 ; prm     <something> : * char
 ;     ) int
 ; glb strncmp : (
 ; prm     <something> : * char
 ; prm     <something> : * char
 ; prm     <something> : unsigned
 ;     ) int
 ; glb memmove : (
 ; prm     <something> : * void
 ; prm     <something> : * void
 ; prm     <something> : unsigned
 ;     ) * void
 ; glb memcpy : (
 ; prm     <something> : * void
 ; prm     <something> : * void
 ; prm     <something> : unsigned
 ;     ) * void
 ; glb memset : (
 ; prm     <something> : * void
 ; prm     <something> : int
 ; prm     <something> : unsigned
 ;     ) * void
 ; glb memcmp : (
 ; prm     <something> : * void
 ; prm     <something> : * void
 ; prm     <something> : unsigned
 ;     ) int
 ; glb isspace : (
 ; prm     <something> : int
 ;     ) int
 ; glb isdigit : (
 ; prm     <something> : int
 ;     ) int
 ; glb isalpha : (
 ; prm     <something> : int
 ;     ) int
 ; glb isalnum : (
 ; prm     <something> : int
 ;     ) int
 ; glb fopen : (
 ; prm     <something> : * char
 ; prm     <something> : * char
 ;     ) * void
 ; glb fclose : (
 ; prm     <something> : * void
 ;     ) int
 ; glb putchar : (
 ; prm     <something> : int
 ;     ) int
 ; glb fputc : (
 ; prm     <something> : int
 ; prm     <something> : * void
 ;     ) int
 ; glb fgetc : (
 ; prm     <something> : * void
 ;     ) int
 ; glb puts : (
 ; prm     <something> : * char
 ;     ) int
 ; glb fputs : (
 ; prm     <something> : * char
 ; prm     <something> : * void
 ;     ) int
 ; glb sprintf : (
 ; prm     <something> : * char
 ; prm     <something> : * char
 ; prm     ...
 ;     ) int
 ; glb vsprintf : (
 ; prm     <something> : * char
 ; prm     <something> : * char
 ; prm     <something> : * void
 ;     ) int
 ; glb printf : (
 ; prm     <something> : * char
 ; prm     ...
 ;     ) int
 ; glb fprintf : (
 ; prm     <something> : * void
 ; prm     <something> : * char
 ; prm     ...
 ;     ) int
 ; glb vprintf : (
 ; prm     <something> : * char
 ; prm     <something> : * void
 ;     ) int
 ; glb vfprintf : (
 ; prm     <something> : * void
 ; prm     <something> : * char
 ; prm     <something> : * void
 ;     ) int
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb fgetpos : (
 ; prm     <something> : * void
 ; prm     <something> : * struct fpos_t_
 ;     ) int
 ; glb fsetpos : (
 ; prm     <something> : * void
 ; prm     <something> : * struct fpos_t_
 ;     ) int
 ; glb divmod : (
 ; prm     dividend : int
 ; prm     divisor : int
 ; prm     rem : * int
 ;     ) int
.code
; .globl divmod
divmod:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13         24 r13
 write         16 r13 r14
 add r13         16 r14
   write 4 r14 r15
 ; loc     dividend : (@8) : int
 ; loc     divisor : (@12) : int
 ; loc     rem : (@16) : * int
 ; loc     quotient : (@-4) : int
 ; RPN'ized expression: "quotient 1 = "
 ; Expanded expression: "(@-4) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc     neg : (@-8) : int
 ; RPN'ized expression: "neg 1 = "
 ; Expanded expression: "(@-8) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "dividend 0 > divisor 0 < && dividend 0 < divisor 0 > && || "
 ; Expanded expression: "(@8) *(4) 0 > [sh&&->6] (@12) *(4) 0 < &&[6] _Bool [sh||->4] (@8) *(4) 0 < [sh&&->5] (@12) *(4) 0 > &&[5] _Bool ||[4] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; >
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_6
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; <
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_6:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_4
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; <
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_5
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; >
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_5:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_4:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2
 ; RPN'ized expression: "neg 1 -u = "
 ; Expanded expression: "(@-8) -1 =(4) "
 ; -1
 load32 -1 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
Label_2:
 ; loc     tempdividend : (@-12) : int
 ; RPN'ized expression: "tempdividend dividend 0 < dividend dividend -u ? = "
 ; Expanded expression: "(@-12) (@8) *(4) 0 < [sh||->7] (@8) *(4) goto &&[7] (@8) *(4) -u &&[8] =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; <
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_7
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; sh-circ-goto goto
 jump Label_8
 ; short-circuit && target
Label_7:
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; -u
 sub r0 r2 r2
 ; short-circuit && target
Label_8:
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; loc     tempdivisor : (@-16) : int
 ; RPN'ized expression: "tempdivisor divisor 0 < divisor divisor -u ? = "
 ; Expanded expression: "(@-16) (@12) *(4) 0 < [sh||->9] (@12) *(4) goto &&[9] (@12) *(4) -u &&[10] =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; <
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_9
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; sh-circ-goto goto
 jump Label_10
 ; short-circuit && target
Label_9:
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; -u
 sub r0 r2 r2
 ; short-circuit && target
Label_10:
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; if
 ; RPN'ized expression: "tempdivisor tempdividend == "
 ; Expanded expression: "(@-16) *(4) (@-12) *(4) == "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; ==
 beq r2 r8 2
 jump Label_11
 ; {
 ; RPN'ized expression: "rem *u 0 = "
 ; Expanded expression: "(@16) *(4) 0 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; =
 write 0 r2 r0
 ; return
 ; RPN'ized expression: "1 neg * "
 ; Expanded expression: "1 (@-8) *(4) * "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 0
 ; <<
 shiftl r2 0 r2
 jump Label_1
 ; }
 jump Label_12
Label_11:
 ; else
 ; if
 ; RPN'ized expression: "tempdividend tempdivisor < "
 ; Expanded expression: "(@-12) *(4) (@-16) *(4) < "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_13
 ; {
 ; if
 ; RPN'ized expression: "dividend 0 < "
 ; Expanded expression: "(@8) *(4) 0 < "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; <
 bgts r0 r2 2
 jump Label_15
 ; RPN'ized expression: "rem *u tempdividend neg * = "
 ; Expanded expression: "(@16) *(4) (@-12) *(4) (@-8) *(4) * =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; local ofs
 ; * (read dereference)
 read -8 r14 r9
 ; *
 mult r8 r9 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 jump Label_16
Label_15:
 ; else
 ; RPN'ized expression: "rem *u tempdividend = "
 ; Expanded expression: "(@16) *(4) (@-12) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_16:
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
 jump Label_1
 ; }
Label_13:
Label_12:
 ; while
 ; RPN'ized expression: "tempdivisor 1 << tempdividend <= "
 ; Expanded expression: "(@-16) *(4) 1 << (@-12) *(4) <= "
Label_17:
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 1
 ; <<
 shiftl r2 1 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; <=
 bges r8 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_18
 ; {
 ; RPN'ized expression: "tempdivisor tempdivisor 1 << = "
 ; Expanded expression: "(@-16) (@-16) *(4) 1 << =(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 1
 ; <<
 shiftl r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "quotient quotient 1 << = "
 ; Expanded expression: "(@-4) (@-4) *(4) 1 << =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; <<
 shiftl r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; }
 jump Label_17
Label_18:
 ; if
 ; RPN'ized expression: "dividend 0 < "
 ; Expanded expression: "(@8) *(4) 0 < "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; <
 bgts r0 r2 2
 jump Label_19
 ; RPN'ized expression: "quotient quotient neg * ( rem , divisor , tempdividend tempdivisor - -u divmod ) + = "
 ; Expanded expression: "(@-4) (@-4) *(4) (@-8) *(4) *  (@16) *(4)  (@12) *(4)  (@-12) *(4) (@-16) *(4) - -u  divmod ()12 + =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -8 r14 r2
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r2 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -16 r14 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -u
 sub r0 r4 r4
 ; ,
 ; divmod
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump divmod
 add r13 16 r13
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 jump Label_20
Label_19:
 ; else
 ; RPN'ized expression: "quotient quotient neg * ( rem , divisor , tempdividend tempdivisor - divmod ) + = "
 ; Expanded expression: "(@-4) (@-4) *(4) (@-8) *(4) *  (@16) *(4)  (@12) *(4)  (@-12) *(4) (@-16) *(4) -  divmod ()12 + =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -8 r14 r2
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r2 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -16 r14 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; divmod
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump divmod
 add r13 16 r13
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
Label_20:
 ; return
 ; RPN'ized expression: "quotient "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
Label_1:
 read 4 r14 r15
 read 0 r14 r14
 add r13 24 r13
 jumpr 0 r15

 ; glb division : (
 ; prm     dividend : int
 ; prm     divisor : int
 ;     ) int
.code
; .globl division
division:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     dividend : (@8) : int
 ; loc     divisor : (@12) : int
 ; loc     rem : (@-4) : int
 ; RPN'ized expression: "rem 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
 ; return
 ; RPN'ized expression: "( rem &u , divisor , dividend divmod ) "
 ; Expanded expression: " (@-4)  (@12) *(4)  (@8) *(4)  divmod ()12 "
 ; (
 ; local ofs
 sub r14 4 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; divmod
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump divmod
 add r13 16 r13
Label_21:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb modulo : (
 ; prm     dividend : int
 ; prm     divisor : int
 ;     ) int
.code
; .globl modulo
modulo:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     dividend : (@8) : int
 ; loc     divisor : (@12) : int
 ; loc     rem : (@-4) : int
 ; RPN'ized expression: "rem 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
 ; RPN'ized expression: "( rem &u , divisor , dividend divmod ) "
 ; Expanded expression: " (@-4)  (@12) *(4)  (@8) *(4)  divmod ()12 "
 ; (
 ; local ofs
 sub r14 4 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; divmod
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump divmod
 add r13 16 r13
 ; return
 ; RPN'ized expression: "rem "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
Label_22:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb isalpha : (
 ; prm     argument : int
 ;     ) int
.code
; .globl isalpha
isalpha:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
 ; write 4 r14 r15
 ; loc     argument : (@8) : int
 ; if
 ; RPN'ized expression: "argument 65 >= argument 90 <= && "
 ; Expanded expression: "(@8) *(4) 65 >= [sh&&->26] (@8) *(4) 90 <= &&[26] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 65
 ; >=
 load32 65 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_26
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 90
 ; <=
 load32 91 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_26:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_24
 ; return
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; 2
 load32 2 r2
 jump Label_23
Label_24:
 ; if
 ; RPN'ized expression: "argument 97 >= argument 122 <= && "
 ; Expanded expression: "(@8) *(4) 97 >= [sh&&->29] (@8) *(4) 122 <= &&[29] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 97
 ; >=
 load32 97 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_29
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 122
 ; <=
 load32 123 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_29:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_27
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_23
Label_27:
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
Label_23:
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb isdigit : (
 ; prm     argument : int
 ;     ) int
.code
; .globl isdigit
isdigit:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
 ; write 4 r14 r15
 ; loc     argument : (@8) : int
 ; if
 ; RPN'ized expression: "argument 48 >= argument 57 <= && "
 ; Expanded expression: "(@8) *(4) 48 >= [sh&&->33] (@8) *(4) 57 <= &&[33] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 48
 ; >=
 load32 48 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_33
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 57
 ; <=
 load32 58 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_33:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_31
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_30
Label_31:
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
Label_30:
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb isalnum : (
 ; prm     argument : int
 ;     ) int
.code
; .globl isalnum
isalnum:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     argument : (@8) : int
 ; if
 ; RPN'ized expression: "( argument isdigit ) ( argument isalpha ) || "
 ; Expanded expression: " (@8) *(4)  isdigit ()4 _Bool [sh||->37]  (@8) *(4)  isalpha ()4 _Bool ||[37] "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; isdigit
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isdigit
 add r13 16 r13
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_37
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; isalpha
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isalpha
 add r13 16 r13
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_37:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_35
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_34
Label_35:
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
Label_34:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb memcpy : (
 ; prm     dest : * void
 ; prm     src : * void
 ; prm     len : unsigned
 ;     ) * void
.code
; .globl memcpy
memcpy:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13         20 r13
 write         12 r13 r14
 add r13         12 r14
 ; write 4 r14 r15
 ; loc     dest : (@8) : * void
 ; loc     src : (@12) : * void
 ; loc     len : (@16) : unsigned
 ; loc     csrc : (@-4) : * char
 ; loc     <something> : * char
 ; RPN'ized expression: "csrc src (something39) = "
 ; Expanded expression: "(@-4) (@12) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc     cdest : (@-8) : * char
 ; loc     <something> : * char
 ; RPN'ized expression: "cdest dest (something40) = "
 ; Expanded expression: "(@-8) (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; loc     i : (@-12) : int
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-12) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -12 r14 r0
Label_41:
 ; RPN'ized expression: "i len < "
 ; Expanded expression: "(@-12) *(4) (@16) *(4) <u "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; local ofs
 ; * (read dereference)
 read 16 r14 r8
 ; <u
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_44
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-12) ++p(4) "
 ; RPN'ized expression: "cdest i + *u csrc i + *u = "
 ; Expanded expression: "(@-8) *(4) (@-12) *(4) + (@-4) *(4) (@-12) *(4) + *(-1) =(-1) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; local ofs
 ; * (read dereference)
 read -12 r14 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_42:
 ; local ofs
 ; ++p
 read -12 r14 r2
 add r2 1 r2
 write -12 r14 r2
 sub r2 1 r2
 jump Label_41
Label_44:
Label_38:
 read 0 r14 r14
 add r13 20 r13
 jumpr 0 r15

 ; glb memmove : (
 ; prm     dest : * void
 ; prm     src : * void
 ; prm     n : unsigned
 ;     ) * void
.code
; .globl memmove
memmove:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13         20 r13
 write         12 r13 r14
 add r13         12 r14
   write 4 r14 r15
 ; loc     dest : (@8) : * void
 ; loc     src : (@12) : * void
 ; loc     n : (@16) : unsigned
 ; loc     from : (@-4) : * unsigned char
 ; loc     <something> : * unsigned char
 ; RPN'ized expression: "from src (something46) = "
 ; Expanded expression: "(@-4) (@12) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc     to : (@-8) : * unsigned char
 ; loc     <something> : * unsigned char
 ; RPN'ized expression: "to dest (something47) = "
 ; Expanded expression: "(@-8) (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "from to == n 0 == || "
 ; Expanded expression: "(@-4) *(4) (@-8) *(4) == [sh||->50] (@16) *(4) 0 == ||[50] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; ==
 xor r2 r8 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_50
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_50:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_48
 ; return
 ; RPN'ized expression: "dest "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 jump Label_45
Label_48:
 ; if
 ; loc     <something> : int
 ; RPN'ized expression: "to from > to from - n (something53) < && "
 ; Expanded expression: "(@-8) *(4) (@-4) *(4) >u [sh&&->54] (@-8) *(4) (@-4) *(4) - (@16) *(4) < &&[54] "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; >u
 bges r8 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_54
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read 16 r14 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_54:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_51
 ; {
 ; loc         i : (@-12) : int
 ; for
 ; RPN'ized expression: "i n 1 - = "
 ; Expanded expression: "(@-12) (@16) *(4) 1 - =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 1
 ; -
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
Label_55:
 ; RPN'ized expression: "i 0 >= "
 ; Expanded expression: "(@-12) *(4) 0 >= "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 0
 ; >=
 bges r2 r0 2
 jump Label_58
 ; RPN'ized expression: "i --p "
 ; Expanded expression: "(@-12) --p(4) "
 ; RPN'ized expression: "to i + *u from i + *u = "
 ; Expanded expression: "(@-8) *(4) (@-12) *(4) + (@-4) *(4) (@-12) *(4) + *(1) =(1) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; local ofs
 ; * (read dereference)
 read -12 r14 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 and r2 255 r2
Label_56:
 ; local ofs
 ; --p
 read -12 r14 r2
 sub r2 1 r2
 write -12 r14 r2
 add r2 1 r2
 jump Label_55
Label_58:
 ; return
 ; RPN'ized expression: "dest "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 jump Label_45
 ; }
Label_51:
 ; if
 ; loc     <something> : int
 ; RPN'ized expression: "from to > from to - n (something61) < && "
 ; Expanded expression: "(@-4) *(4) (@-8) *(4) >u [sh&&->62] (@-4) *(4) (@-8) *(4) - (@16) *(4) < &&[62] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; >u
 bges r8 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_62
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read 16 r14 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_62:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_59
 ; {
 ; loc         i : (@-12) : unsigned
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-12) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -12 r14 r0
Label_63:
 ; RPN'ized expression: "i n < "
 ; Expanded expression: "(@-12) *(4) (@16) *(4) <u "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; local ofs
 ; * (read dereference)
 read 16 r14 r8
 ; <u
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_66
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-12) ++p(4) "
 ; RPN'ized expression: "to i + *u from i + *u = "
 ; Expanded expression: "(@-8) *(4) (@-12) *(4) + (@-4) *(4) (@-12) *(4) + *(1) =(1) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; local ofs
 ; * (read dereference)
 read -12 r14 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 and r2 255 r2
Label_64:
 ; local ofs
 ; ++p
 read -12 r14 r2
 add r2 1 r2
 write -12 r14 r2
 sub r2 1 r2
 jump Label_63
Label_66:
 ; return
 ; RPN'ized expression: "dest "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 jump Label_45
 ; }
Label_59:
 ; RPN'ized expression: "( n , src , dest memcpy ) "
 ; Expanded expression: " (@16) *(4)  (@12) *(4)  (@8) *(4)  memcpy ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; memcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memcpy
 add r13 16 r13
 ; return
 ; RPN'ized expression: "dest "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
Label_45:
 read 4 r14 r15
 read 0 r14 r14
 add r13 20 r13
 jumpr 0 r15

 ; glb strcpy : (
 ; prm     destination : * char
 ; prm     source : * char
 ;     ) * char
.code
; .globl strcpy
strcpy:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
 ; write 4 r14 r15
 ; loc     destination : (@8) : * char
 ; loc     source : (@12) : * char
 ; if
 ; RPN'ized expression: "destination 0 == "
 ; Expanded expression: "(@8) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_68
 ; {
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
 jump Label_67
 ; }
Label_68:
 ; loc     ptr : (@-4) : * char
 ; RPN'ized expression: "ptr destination = "
 ; Expanded expression: "(@-4) (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; while
 ; RPN'ized expression: "source *u 0 != "
 ; Expanded expression: "(@12) *(4) *(-1) 0 != "
Label_70:
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; !=
 bne r2 r0 2
 jump Label_71
 ; {
 ; RPN'ized expression: "destination *u source *u = "
 ; Expanded expression: "(@8) *(4) (@12) *(4) *(-1) =(-1) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "destination ++p "
 ; Expanded expression: "(@8) ++p(4) "
 ; local ofs
 ; ++p
 read 8 r14 r2
 add r2 1 r2
 write 8 r14 r2
 sub r2 1 r2
 ; RPN'ized expression: "source ++p "
 ; Expanded expression: "(@12) ++p(4) "
 ; local ofs
 ; ++p
 read 12 r14 r2
 add r2 1 r2
 write 12 r14 r2
 sub r2 1 r2
 ; }
 jump Label_70
Label_71:
 ; RPN'ized expression: "destination *u 0 = "
 ; Expanded expression: "(@8) *(4) 0 =(-1) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; =
 write 0 r2 r0
 ; return
 ; RPN'ized expression: "ptr "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
Label_67:
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb strlen : (
 ; prm     str : * char
 ;     ) unsigned
.code
; .globl strlen
strlen:
 write 0 r13 r4
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
 ; write 4 r14 r15
 ; loc     str : (@8) : * char
 ; loc     s : (@-4) : * char
 ; for
 ; RPN'ized expression: "s str = "
 ; Expanded expression: "(@-4) (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
Label_73:
 ; RPN'ized expression: "s *u "
 ; Expanded expression: "(@-4) *(4) *(-1) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_76
 ; RPN'ized expression: "s ++ "
 ; Expanded expression: "(@-4) ++(4) "
Label_74:
 ; local ofs
 ; ++
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 jump Label_73
Label_76:
 ; return
 ; RPN'ized expression: "s str - "
 ; Expanded expression: "(@-4) *(4) (@8) *(4) - "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; -
 sub r2 r8 r2
Label_72:
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb strcat : (
 ; prm     dest : * char
 ; prm     src : * char
 ;     ) * char
.code
; .globl strcat
strcat:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     dest : (@8) : * char
 ; loc     src : (@12) : * char
 ; RPN'ized expression: "( src , dest ( dest strlen ) + strcpy ) "
 ; Expanded expression: " (@12) *(4)  (@8) *(4)  (@8) *(4)  strlen ()4 +  strcpy ()8 "
 ; (
 sub r13 8 r13
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; strlen
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump strlen
 add r13 16 r13
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; ,
 ; strcpy
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump strcpy
 add r13 16 r13
 ; return
 ; RPN'ized expression: "dest "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
Label_77:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb strchr : (
 ; prm     s : * char
 ; prm     c : int
 ;     ) * char
.code
; .globl strchr
strchr:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
 ; write 4 r14 r15
 ; loc     s : (@8) : * char
 ; loc     c : (@12) : int
 ; do
Label_79:
 ; {
 ; if
 ; RPN'ized expression: "s *u c == "
 ; Expanded expression: "(@8) *(4) *(-1) (@12) *(4) == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; ==
 beq r2 r8 2
 jump Label_82
 ; {
 ; return
 ; loc             <something> : * char
 ; RPN'ized expression: "s (something84) "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 jump Label_78
 ; }
Label_82:
 ; }
 ; while
 ; RPN'ized expression: "s ++p *u "
 ; Expanded expression: "(@8) ++p(4) *(-1) "
Label_80:
 ; local ofs
 ; ++p
 read 8 r14 r2
 add r2 1 r2
 write 8 r14 r2
 sub r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_79
Label_81:
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
Label_78:
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb strcmp : (
 ; prm     s1 : * char
 ; prm     s2 : * char
 ;     ) int
.code
; .globl strcmp
strcmp:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
 ; write 4 r14 r15
 ; loc     s1 : (@8) : * char
 ; loc     s2 : (@12) : * char
 ; while
 ; RPN'ized expression: "s1 *u s1 *u s2 *u == && "
 ; Expanded expression: "(@8) *(4) *(-1) _Bool [sh&&->88] (@8) *(4) *(-1) (@12) *(4) *(-1) == &&[88] "
Label_86:
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_88
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; ==
 xor r2 r8 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_88:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_87
 ; {
 ; RPN'ized expression: "s1 ++p "
 ; Expanded expression: "(@8) ++p(4) "
 ; local ofs
 ; ++p
 read 8 r14 r2
 add r2 1 r2
 write 8 r14 r2
 sub r2 1 r2
 ; RPN'ized expression: "s2 ++p "
 ; Expanded expression: "(@12) ++p(4) "
 ; local ofs
 ; ++p
 read 12 r14 r2
 add r2 1 r2
 write 12 r14 r2
 sub r2 1 r2
 ; }
 jump Label_86
Label_87:
 ; return
 ; loc     <something> : * unsigned char
 ; loc     <something> : * unsigned char
 ; RPN'ized expression: "s1 (something89) *u s2 (something90) *u - "
 ; Expanded expression: "(@8) *(4) *(1) (@12) *(4) *(1) - "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; -
 sub r2 r8 r2
Label_85:
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb strncmp : (
 ; prm     s1 : * char
 ; prm     s2 : * char
 ; prm     n : unsigned
 ;     ) int
.code
; .globl strncmp
strncmp:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
 ; write 4 r14 r15
 ; loc     s1 : (@8) : * char
 ; loc     s2 : (@12) : * char
 ; loc     n : (@16) : unsigned
 ; while
 ; RPN'ized expression: "n s1 *u && s1 *u s2 *u == && "
 ; Expanded expression: "(@16) *(4) _Bool [sh&&->95] (@8) *(4) *(-1) _Bool &&[95] _Bool [sh&&->94] (@8) *(4) *(-1) (@12) *(4) *(-1) == &&[94] "
Label_92:
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_95
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_95:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_94
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; ==
 xor r2 r8 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_94:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_93
 ; {
 ; RPN'ized expression: "s1 ++ "
 ; Expanded expression: "(@8) ++(4) "
 ; local ofs
 ; ++
 read 8 r14 r2
 add r2 1 r2
 write 8 r14 r2
 ; RPN'ized expression: "s2 ++ "
 ; Expanded expression: "(@12) ++(4) "
 ; local ofs
 ; ++
 read 12 r14 r2
 add r2 1 r2
 write 12 r14 r2
 ; RPN'ized expression: "n -- "
 ; Expanded expression: "(@16) --(4) "
 ; local ofs
 ; --
 read 16 r14 r2
 sub r2 1 r2
 write 16 r14 r2
 ; }
 jump Label_92
Label_93:
 ; if
 ; RPN'ized expression: "n 0 == "
 ; Expanded expression: "(@16) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_96
 ; {
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
 jump Label_91
 ; }
 jump Label_97
Label_96:
 ; else
 ; {
 ; return
 ; loc         <something> : * unsigned char
 ; loc         <something> : * unsigned char
 ; RPN'ized expression: "s1 (something98) *u s2 (something99) *u - "
 ; Expanded expression: "(@8) *(4) *(1) (@12) *(4) *(1) - "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; -
 sub r2 r8 r2
 jump Label_91
 ; }
Label_97:
Label_91:
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb truncUint : (
 ; prm     <something> : unsigned
 ;     ) unsigned
 ; glb truncInt : (
 ; prm     <something> : int
 ;     ) int
 ; glb GetToken : (void) int
 ; glb GetTokenName : (
 ; prm     token : int
 ;     ) * char
 ; glb DumpMacroTable : (void) void
 ; glb AddIdent : (
 ; prm     name : * char
 ;     ) int
 ; glb FindIdent : (
 ; prm     name : * char
 ;     ) int
 ; glb DumpIdentTable : (void) void
 ; glb lab2str : (
 ; prm     p : * char
 ; prm     n : int
 ;     ) * char
 ; glb GenInit : (void) void
 ; glb GenFin : (void) void
 ; glb GenInitParams : (
 ; prm     argc : int
 ; prm     argv : * * char
 ; prm     idx : * int
 ;     ) int
 ; glb GenInitFinalize : (void) void
 ; glb GenStartCommentLine : (void) void
 ; glb GenWordAlignment : (
 ; prm     bss : int
 ;     ) void
 ; glb GenLabel : (
 ; prm     Label : * char
 ; prm     Static : int
 ;     ) void
 ; glb GenNumLabel : (
 ; prm     Label : int
 ;     ) void
 ; glb GenZeroData : (
 ; prm     Size : unsigned
 ; prm     bss : int
 ;     ) void
 ; glb GenIntData : (
 ; prm     Size : int
 ; prm     Val : int
 ;     ) void
 ; glb GenStartAsciiString : (void) void
 ; glb GenAddrData : (
 ; prm     Size : int
 ; prm     Label : * char
 ; prm     ofs : int
 ;     ) void
 ; glb GenJumpUncond : (
 ; prm     Label : int
 ;     ) void
 ; glb GenJumpIfZero : (
 ; prm     Label : int
 ;     ) void
 ; glb GenJumpIfNotZero : (
 ; prm     Label : int
 ;     ) void
 ; glb GenJumpIfEqual : (
 ; prm     val : int
 ; prm     Label : int
 ;     ) void
 ; glb GenFxnProlog : (void) void
 ; glb GenFxnEpilog : (void) void
 ; glb GenIsrProlog : (void) void
 ; glb GenIsrEpilog : (void) void
 ; glb GenMaxLocalsSize : (void) int
 ; glb GenDumpChar : (
 ; prm     ch : int
 ;     ) void
 ; glb GenExpr : (void) void
 ; glb PushSyntax : (
 ; prm     t : int
 ;     ) void
 ; glb PushSyntax2 : (
 ; prm     t : int
 ; prm     v : int
 ;     ) void
 ; glb DumpSynDecls : (void) void
 ; glb push2 : (
 ; prm     v : int
 ; prm     v2 : int
 ;     ) void
 ; glb ins2 : (
 ; prm     pos : int
 ; prm     v : int
 ; prm     v2 : int
 ;     ) void
 ; glb ins : (
 ; prm     pos : int
 ; prm     v : int
 ;     ) void
 ; glb del : (
 ; prm     pos : int
 ; prm     cnt : int
 ;     ) void
 ; glb TokenStartsDeclaration : (
 ; prm     t : int
 ; prm     params : int
 ;     ) int
 ; RPN'ized expression: "4 "
 ; Expanded expression: "4 "
 ; Expression value: 4
 ; glb ParseDecl : (
 ; prm     tok : int
 ; prm     structInfo : * unsigned
 ; prm     cast : int
 ; prm     label : int
 ;     ) int
 ; glb ShiftChar : (void) void
 ; glb puts2 : (
 ; prm     <something> : * char
 ;     ) int
 ; glb printf2 : (
 ; prm     <something> : * char
 ; prm     ...
 ;     ) int
 ; glb error : (
 ; prm     format : * char
 ; prm     ...
 ;     ) void
 ; glb warning : (
 ; prm     format : * char
 ; prm     ...
 ;     ) void
 ; glb errorFile : (
 ; prm     n : * char
 ;     ) void
 ; glb errorFileName : (void) void
 ; glb errorInternal : (
 ; prm     n : int
 ;     ) void
 ; glb errorChrStr : (void) void
 ; glb errorStrLen : (void) void
 ; glb errorUnexpectedToken : (
 ; prm     tok : int
 ;     ) void
 ; glb errorDirective : (void) void
 ; glb errorCtrlOutOfScope : (void) void
 ; glb errorDecl : (void) void
 ; glb errorVarSize : (void) void
 ; glb errorInit : (void) void
 ; glb errorUnexpectedVoid : (void) void
 ; glb errorOpType : (void) void
 ; glb errorNotLvalue : (void) void
 ; glb errorNotConst : (void) void
 ; glb errorLongExpr : (void) void
 ; glb FindSymbol : (
 ; prm     s : * char
 ;     ) int
 ; glb SymType : (
 ; prm     SynPtr : int
 ;     ) int
 ; glb FindTaggedDecl : (
 ; prm     s : * char
 ; prm     start : int
 ; prm     CurScope : * int
 ;     ) int
 ; glb GetDeclSize : (
 ; prm     SyntaxPtr : int
 ; prm     SizeForDeref : int
 ;     ) int
 ; glb ParseExpr : (
 ; prm     tok : int
 ; prm     GotUnary : * int
 ; prm     ExprTypeSynPtr : * int
 ; prm     ConstExpr : * int
 ; prm     ConstVal : * int
 ; prm     option : int
 ; prm     option2 : int
 ;     ) int
 ; glb GetFxnInfo : (
 ; prm     ExprTypeSynPtr : int
 ; prm     MinParams : * int
 ; prm     MaxParams : * int
 ; prm     ReturnExprTypeSynPtr : * int
 ; prm     FirstParamSynPtr : * int
 ;     ) int
 ; glb verbose : int
.data
; .align 2
; .globl verbose
verbose:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb warnings : int
.data
; .align 2
; .globl warnings
warnings:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb warnCnt : int
.data
; .align 2
; .globl warnCnt
warnCnt:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb compileUserBDOS : int
.data
; .align 2
; .globl compileUserBDOS
compileUserBDOS:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb compileOS : int
.data
; .align 2
; .globl compileOS
compileOS:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb TokenValueInt : int
.data
; .align 2
; .globl TokenValueInt
TokenValueInt:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; RPN'ized expression: "63 1 + "
 ; Expanded expression: "64 "
 ; Expression value: 64
 ; glb TokenIdentName : [64u] char
.bss
; .globl TokenIdentName
TokenIdentName:
; .space 64
.dw 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

 ; glb TokenIdentNameLen : int
.data
; .align 2
; .globl TokenIdentNameLen
TokenIdentNameLen:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; RPN'ized expression: "255 1 + "
 ; Expanded expression: "256 "
 ; Expression value: 256
 ; glb TokenValueString : [256u] char
.bss
; .globl TokenValueString
TokenValueString:
; .space 256
.dw 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

 ; glb TokenStringLen : unsigned
.data
; .align 2
; .globl TokenStringLen
TokenStringLen:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb TokenStringSize : unsigned
.data
; .align 2
; .globl TokenStringSize
TokenStringSize:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb LineNo : int
.data
; .align 2
; .globl LineNo
LineNo:
 ; =
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 .dw 1 1 1 1

 ; glb LinePos : int
.data
; .align 2
; .globl LinePos
LinePos:
 ; =
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 .dw 1 1 1 1

 ; RPN'ized expression: "255 1 + "
 ; Expanded expression: "256 "
 ; Expression value: 256
 ; glb CharQueue : [256u] char
.bss
; .globl CharQueue
CharQueue:
; .space 256
.dw 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

 ; glb CharQueueLen : int
.data
; .align 2
; .globl CharQueueLen
CharQueueLen:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; RPN'ized expression: "4096 1024 + "
 ; Expanded expression: "5120 "
 ; Expression value: 5120
 ; glb MacroTable : [5120u] char
.bss
; .globl MacroTable
MacroTable:
; .space 5120
.dw

 ; glb MacroTableLen : int
.data
; .align 2
; .globl MacroTableLen
MacroTableLen:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; RPN'ized expression: "4096 1024 + 512 + "
 ; Expanded expression: "5632 "
 ; Expression value: 5632
 ; glb IdentTable : [5632u] char
.bss
; .globl IdentTable
IdentTable:
; .space 5632
.dw

 ; glb IdentTableLen : int
.data
; .align 2
; .globl IdentTableLen
IdentTableLen:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb DummyIdent : int
.bss
; .align 2
; .globl DummyIdent
DummyIdent:
; .space 4
.dw 0 0 0 0

 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb gotoLabels : [16u] [2u] int
.bss
; .align 2
; .globl gotoLabels
gotoLabels:
; .space 128
.dw 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
 ; glb gotoLabStat : [16u] char
.bss
; .globl gotoLabStat
gotoLabStat:
; .space 16
.dw 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

 ; glb gotoLabCnt : int
.data
; .align 2
; .globl gotoLabCnt
gotoLabCnt:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; RPN'ized expression: "128 "
 ; Expanded expression: "128 "
 ; Expression value: 128
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb Cases : [128u] [2u] int
.bss
; .align 2
; .globl Cases
Cases:
; .space 1024
.dw 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

 ; glb CasesCnt : int
.data
; .align 2
; .globl CasesCnt
CasesCnt:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb FileCnt : int
.data
; .align 2
; .globl FileCnt
FileCnt:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
 ; RPN'ized expression: "95 1 + "
 ; Expanded expression: "96 "
 ; Expression value: 96
 ; glb FileNames : [8u] [96u] char
.bss
; .globl FileNames
FileNames:
; .space 768
.dw 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
 ; glb Files : [8u] * void
.bss
; .align 2
; .globl Files
Files:
; .space 32
.dw 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

 ; glb OutFile : * void
.bss
; .align 2
; .globl OutFile
OutFile:
; .space 4
.dw 0 0 0 0

 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
 ; RPN'ized expression: "3 "
 ; Expanded expression: "3 "
 ; Expression value: 3
 ; glb CharQueues : [8u] [3u] char
.bss
; .globl CharQueues
CharQueues:
; .space 24
.dw 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
 ; glb LineNos : [8u] int
.bss
; .align 2
; .globl LineNos
LineNos:
; .space 32
.dw 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
 ; glb LinePoss : [8u] int
.bss
; .align 2
; .globl LinePoss
LinePoss:
; .space 32
.dw 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

 ; RPN'ized expression: "256 "
 ; Expanded expression: "256 "
 ; Expression value: 256
 ; glb SysSearchPaths : [256u] char
.bss
; .globl SysSearchPaths
SysSearchPaths:
; .space 256
.dw 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

 ; glb SysSearchPathsLen : int
.data
; .align 2
; .globl SysSearchPathsLen
SysSearchPathsLen:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; RPN'ized expression: "256 "
 ; Expanded expression: "256 "
 ; Expression value: 256
 ; glb SearchPaths : [256u] char
.bss
; .globl SearchPaths
SearchPaths:
; .space 256
.dw 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

 ; glb SearchPathsLen : int
.data
; .align 2
; .globl SearchPathsLen
SearchPathsLen:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb PrepDontSkipTokens : int
.data
; .align 2
; .globl PrepDontSkipTokens
PrepDontSkipTokens:
 ; =
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 .dw 1 1 1 1

 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb PrepStack : [8u] [2u] int
.bss
; .align 2
; .globl PrepStack
PrepStack:
; .space 64
.dw 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

 ; glb PrepSp : int
.data
; .align 2
; .globl PrepSp
PrepSp:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb ExprLevel : int
.data
; .align 2
; .globl ExprLevel
ExprLevel:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; RPN'ized expression: "129 "
 ; Expanded expression: "129 "
 ; Expression value: 129
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb stack : [129u] [2u] int
.bss
; .align 2
; .globl stack
stack:
; .space 1032
.dw 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

 ; glb sp : int
.data
; .align 2
; .globl sp
sp:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; RPN'ized expression: "129 "
 ; Expanded expression: "129 "
 ; Expression value: 129
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb opstack : [129u] [2u] int
.bss
; .align 2
; .globl opstack
opstack:
; .space 1032
.dw 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

 ; glb opsp : int
.data
; .align 2
; .globl opsp
opsp:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb OutputFormat : int
.data
; .align 2
; .globl OutputFormat
OutputFormat:
 ; =
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 .dw 1 1 1 1

 ; glb GenExterns : int
.data
; .align 2
; .globl GenExterns
GenExterns:
 ; =
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 .dw 1 1 1 1

 ; glb UseBss : int
.data
; .align 2
; .globl UseBss
UseBss:
 ; =
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 .dw 1 1 1 1

 ; glb UseLeadingUnderscores : int
.data
; .align 2
; .globl UseLeadingUnderscores
UseLeadingUnderscores:
 ; =
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 .dw 1 1 1 1

 ; glb FileHeader : * char
.data
; .align 2
; .globl FileHeader
FileHeader:
 ; =

.rdata
Label_100:
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L100 "
 ; Expanded expression: "L100 "
.dl Label_100
.dl Label_100
.dl Label_100
.dl Label_100

 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb CodeHeaderFooter : [2u] * char
.data
; .align 2
; .globl CodeHeaderFooter
CodeHeaderFooter:
 ; =

.rdata
Label_101:
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L101 "
 ; Expanded expression: "L101 "
.dl Label_101
.dl Label_101
.dl Label_101
.dl Label_101

.rdata
Label_102:
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L102 "
 ; Expanded expression: "L102 "
.dl Label_102
.dl Label_102
.dl Label_102
.dl Label_102

 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb DataHeaderFooter : [2u] * char
.data
; .align 2
; .globl DataHeaderFooter
DataHeaderFooter:
 ; =

.rdata
Label_103:
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L103 "
 ; Expanded expression: "L103 "
.dl Label_103
.dl Label_103
.dl Label_103
.dl Label_103

.rdata
Label_104:
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L104 "
 ; Expanded expression: "L104 "
.dl Label_104
.dl Label_104
.dl Label_104
.dl Label_104

 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb RoDataHeaderFooter : [2u] * char
.data
; .align 2
; .globl RoDataHeaderFooter
RoDataHeaderFooter:
 ; =

.rdata
Label_105:
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L105 "
 ; Expanded expression: "L105 "
.dl Label_105
.dl Label_105
.dl Label_105
.dl Label_105

.rdata
Label_106:
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L106 "
 ; Expanded expression: "L106 "
.dl Label_106
.dl Label_106
.dl Label_106
.dl Label_106

 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb BssHeaderFooter : [2u] * char
.data
; .align 2
; .globl BssHeaderFooter
BssHeaderFooter:
 ; =

.rdata
Label_107:
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L107 "
 ; Expanded expression: "L107 "
.dl Label_107
.dl Label_107
.dl Label_107
.dl Label_107

.rdata
Label_108:
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L108 "
 ; Expanded expression: "L108 "
.dl Label_108
.dl Label_108
.dl Label_108
.dl Label_108

 ; glb CurHeaderFooter : * * char
.bss
; .align 2
; .globl CurHeaderFooter
CurHeaderFooter:
; .space 4
.dw 0 0 0 0

 ; glb CharIsSigned : int
.data
; .align 2
; .globl CharIsSigned
CharIsSigned:
 ; =
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 .dw 1 1 1 1

 ; glb SizeOfWord : int
.data
; .align 2
; .globl SizeOfWord
SizeOfWord:
 ; =
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 .dw 2 2 2 2

 ; glb SizeOfWideChar : int
.data
; .align 2
; .globl SizeOfWideChar
SizeOfWideChar:
 ; =
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 .dw 2 2 2 2

 ; glb WideCharIsSigned : int
.data
; .align 2
; .globl WideCharIsSigned
WideCharIsSigned:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb WideCharType1 : int
.bss
; .align 2
; .globl WideCharType1
WideCharType1:
; .space 4
.dw 0 0 0 0

 ; glb WideCharType2 : int
.bss
; .align 2
; .globl WideCharType2
WideCharType2:
; .space 4
.dw 0 0 0 0

 ; glb LabelCnt : int
.data
; .align 2
; .globl LabelCnt
LabelCnt:
 ; =
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 .dw 1 1 1 1

 ; glb StructCpyLabel : int
.data
; .align 2
; .globl StructCpyLabel
StructCpyLabel:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb StructPushLabel : int
.data
; .align 2
; .globl StructPushLabel
StructPushLabel:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb CurFxnSyntaxPtr : int
.data
; .align 2
; .globl CurFxnSyntaxPtr
CurFxnSyntaxPtr:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb CurFxnParamCntMin : int
.data
; .align 2
; .globl CurFxnParamCntMin
CurFxnParamCntMin:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb CurFxnParamCntMax : int
.data
; .align 2
; .globl CurFxnParamCntMax
CurFxnParamCntMax:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb CurFxnLocalOfs : int
.data
; .align 2
; .globl CurFxnLocalOfs
CurFxnLocalOfs:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb CurFxnMinLocalOfs : int
.data
; .align 2
; .globl CurFxnMinLocalOfs
CurFxnMinLocalOfs:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb CurFxnReturnExprTypeSynPtr : int
.data
; .align 2
; .globl CurFxnReturnExprTypeSynPtr
CurFxnReturnExprTypeSynPtr:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb CurFxnEpilogLabel : int
.data
; .align 2
; .globl CurFxnEpilogLabel
CurFxnEpilogLabel:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb CurFxnName : * char
.data
; .align 2
; .globl CurFxnName
CurFxnName:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb IsMain : int
.bss
; .align 2
; .globl IsMain
IsMain:
; .space 4
.dw 0 0 0 0

 ; glb ParseLevel : int
.data
; .align 2
; .globl ParseLevel
ParseLevel:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; glb ParamLevel : int
.data
; .align 2
; .globl ParamLevel
ParamLevel:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

 ; RPN'ized expression: "2048 1024 + "
 ; Expanded expression: "3072 "
 ; Expression value: 3072
 ; glb SyntaxStack0 : [3072u] unsigned char
.bss
; .globl SyntaxStack0
SyntaxStack0:
; .space 3072
.dw

 ; RPN'ized expression: "2048 1024 + "
 ; Expanded expression: "3072 "
 ; Expression value: 3072
 ; glb SyntaxStack1 : [3072u] int
.bss
; .align 2
; .globl SyntaxStack1
SyntaxStack1:
; .space 12288
.dw

 ; glb SyntaxStackCnt : int
.bss
; .align 2
; .globl SyntaxStackCnt
SyntaxStackCnt:
; .space 4
.dw 0 0 0 0

 ; glb truncUint : (
 ; prm     n : unsigned
 ;     ) unsigned
.code
; .globl truncUint
truncUint:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
 ; write 4 r14 r15
 ; loc     n : (@8) : unsigned
 ; if
 ; RPN'ized expression: "SizeOfWord 2 == "
 ; Expanded expression: "SizeOfWord *(4) 2 == "
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_110
 ; RPN'ized expression: "n 0u ~ 8 << 8 << ~ &= "
 ; Expanded expression: "(@8) 65535u &=(4) "
 ; 65535
 load32 65535 r2
 ; local ofs
 ; &=
 read 8 r14 r12
 and r12 r2 r2
 write 8 r14 r2
 jump Label_111
Label_110:
 ; else
 ; if
 ; RPN'ized expression: "SizeOfWord 4 == "
 ; Expanded expression: "SizeOfWord *(4) 4 == "
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; 4
 ; ==
 load32 4 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_112
 ; RPN'ized expression: "n 0u ~ 8 << 12 << 12 << ~ &= "
 ; Expanded expression: "(@8) 4294967295u &=(4) "
 ; -1
 load32 -1 r2
 ; local ofs
 ; &=
 read 8 r14 r12
 and r12 r2 r2
 write 8 r14 r2
Label_112:
Label_111:
 ; return
 ; RPN'ized expression: "n "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
Label_109:
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb truncInt : (
 ; prm     n : int
 ;     ) int
.code
; .globl truncInt
truncInt:
 write 0 r13 r4
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
 ; write 4 r14 r15
 ; loc     n : (@8) : int
 ; loc     un : (@-4) : unsigned
 ; RPN'ized expression: "un n = "
 ; Expanded expression: "(@-4) (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "SizeOfWord 2 == "
 ; Expanded expression: "SizeOfWord *(4) 2 == "
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_115
 ; {
 ; RPN'ized expression: "un 0u ~ 8 << 8 << ~ &= "
 ; Expanded expression: "(@-4) 65535u &=(4) "
 ; 65535
 load32 65535 r2
 ; local ofs
 ; &=
 read -4 r14 r12
 and r12 r2 r2
 write -4 r14 r2
 ; RPN'ized expression: "un un 8 >> 7 >> 1 & 0u ~ * 8 << 8 << |= "
 ; Expanded expression: "(@-4) (@-4) *(4) 8 >>u 7 >>u 1 & 4294967295u * 8 << 8 << |=(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 8
 ; >>u
 shiftr r2 8 r2
 ; 7
 ; >>u
 shiftr r2 7 r2
 ; 1
 ; &
 and r2 1 r2
 ; -1
 load32 -1 r8
 ; *
 mult r2 r8 r2
 ; 8
 ; <<
 shiftl r2 8 r2
 ; 8
 ; <<
 shiftl r2 8 r2
 ; local ofs
 ; |=
 read -4 r14 r12
 or r12 r2 r2
 write -4 r14 r2
 ; }
 jump Label_116
Label_115:
 ; else
 ; if
 ; RPN'ized expression: "SizeOfWord 4 == "
 ; Expanded expression: "SizeOfWord *(4) 4 == "
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; 4
 ; ==
 load32 4 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_117
 ; {
 ; RPN'ized expression: "un 0u ~ 8 << 12 << 12 << ~ &= "
 ; Expanded expression: "(@-4) 4294967295u &=(4) "
 ; -1
 load32 -1 r2
 ; local ofs
 ; &=
 read -4 r14 r12
 and r12 r2 r2
 write -4 r14 r2
 ; RPN'ized expression: "un un 8 >> 12 >> 11 >> 1 & 0u ~ * 8 << 12 << 12 << |= "
 ; Expanded expression: "(@-4) (@-4) *(4) 8 >>u 12 >>u 11 >>u 1 & 4294967295u * 8 << 12 << 12 << |=(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 8
 ; >>u
 shiftr r2 8 r2
 ; 12
 ; >>u
 shiftr r2 12 r2
 ; 11
 ; >>u
 shiftr r2 11 r2
 ; 1
 ; &
 and r2 1 r2
 ; -1
 load32 -1 r8
 ; *
 mult r2 r8 r2
 ; 8
 ; <<
 shiftl r2 8 r2
 ; 12
 ; <<
 shiftl r2 12 r2
 ; 12
 ; <<
 shiftl r2 12 r2
 ; local ofs
 ; |=
 read -4 r14 r12
 or r12 r2 r2
 write -4 r14 r2
 ; }
Label_117:
Label_116:
 ; return
 ; loc     <something> : int
 ; RPN'ized expression: "un (something119) "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
Label_114:
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb FindMacro : (
 ; prm     name : * char
 ;     ) int
.code
; .globl FindMacro
FindMacro:
 write 0 r13 r4
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     name : (@8) : * char
 ; loc     i : (@-4) : int
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_121:
 ; RPN'ized expression: "i MacroTableLen < "
 ; Expanded expression: "(@-4) *(4) MacroTableLen *(4) < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; MacroTableLen
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_124
 ; {
 ; if
 ; RPN'ized expression: "( name , MacroTable i + 1 + strcmp ) 0 == "
 ; Expanded expression: " (@8) *(4)  MacroTable (@-4) *(4) + 1 +  strcmp ()8 0 == "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; MacroTable
 addr2reg MacroTable r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; 1
 ; +
 add r4 1 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_125
 ; return
 ; RPN'ized expression: "i 1 + MacroTable i + *u + "
 ; Expanded expression: "(@-4) *(4) 1 + MacroTable (@-4) *(4) + *(-1) + "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; MacroTable
 addr2reg MacroTable r8
 ; local ofs
 ; * (read dereference)
 read -4 r14 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 jump Label_120
Label_125:
 ; RPN'ized expression: "i i 1 + MacroTable i + *u + = "
 ; Expanded expression: "(@-4) (@-4) *(4) 1 + MacroTable (@-4) *(4) + *(-1) + =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; MacroTable
 addr2reg MacroTable r8
 ; local ofs
 ; * (read dereference)
 read -4 r14 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "i i 1 + MacroTable i + *u + = "
 ; Expanded expression: "(@-4) (@-4) *(4) 1 + MacroTable (@-4) *(4) + *(-1) + =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; MacroTable
 addr2reg MacroTable r8
 ; local ofs
 ; * (read dereference)
 read -4 r14 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; }
 jump Label_121
Label_124:
 ; return
 ; RPN'ized expression: "1 -u "
 ; Expanded expression: "-1 "
 ; Expression value: -1
 ; -1
 load32 -1 r2
Label_120:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb UndefineMacro : (
 ; prm     name : * char
 ;     ) int
.code
; .globl UndefineMacro
UndefineMacro:
 write 0 r13 r4
 sub r13         16 r13
 write          8 r13 r14
 add r13          8 r14
   write 4 r14 r15
 ; loc     name : (@8) : * char
 ; loc     i : (@-4) : int
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_128:
 ; RPN'ized expression: "i MacroTableLen < "
 ; Expanded expression: "(@-4) *(4) MacroTableLen *(4) < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; MacroTableLen
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_131
 ; {
 ; if
 ; RPN'ized expression: "( name , MacroTable i + 1 + strcmp ) 0 == "
 ; Expanded expression: " (@8) *(4)  MacroTable (@-4) *(4) + 1 +  strcmp ()8 0 == "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; MacroTable
 addr2reg MacroTable r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; 1
 ; +
 add r4 1 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_132
 ; {
 ; loc             len : (@-8) : int
 ; RPN'ized expression: "len 1 MacroTable i + *u + = "
 ; Expanded expression: "(@-8) 1 MacroTable (@-4) *(4) + *(-1) + =(4) "
 ; MacroTable
 addr2reg MacroTable r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; +
 add r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "len len 1 + MacroTable i len + + *u + = "
 ; Expanded expression: "(@-8) (@-8) *(4) 1 + MacroTable (@-4) *(4) (@-8) *(4) + + *(-1) + =(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; MacroTable
 addr2reg MacroTable r8
 ; local ofs
 ; * (read dereference)
 read -4 r14 r9
 ; local ofs
 ; * (read dereference)
 read -8 r14 r10
 ; +
 add r9 r10 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "( MacroTableLen i - len - , MacroTable i + len + , MacroTable i + memmove ) "
 ; Expanded expression: " MacroTableLen *(4) (@-4) *(4) - (@-8) *(4) -  MacroTable (@-4) *(4) + (@-8) *(4) +  MacroTable (@-4) *(4) +  memmove ()12 "
 ; (
 ; MacroTableLen
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r6 r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -8 r14 r6
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r6 r6
 ; ,
 ; MacroTable
 addr2reg MacroTable r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -4 r14 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -8 r14 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; MacroTable
 addr2reg MacroTable r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; memmove
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memmove
 add r13 16 r13
 ; RPN'ized expression: "MacroTableLen len -= "
 ; Expanded expression: "MacroTableLen (@-8) *(4) -=(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; MacroTableLen
 ; -=
 addr2reg MacroTableLen r1
 read 0 r1 r12
 sub r12 r2 r2
 addr2reg MacroTableLen r1
 write 0 r1 r2
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_127
 ; }
Label_132:
 ; RPN'ized expression: "i i 1 + MacroTable i + *u + = "
 ; Expanded expression: "(@-4) (@-4) *(4) 1 + MacroTable (@-4) *(4) + *(-1) + =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; MacroTable
 addr2reg MacroTable r8
 ; local ofs
 ; * (read dereference)
 read -4 r14 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "i i 1 + MacroTable i + *u + = "
 ; Expanded expression: "(@-4) (@-4) *(4) 1 + MacroTable (@-4) *(4) + *(-1) + =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; MacroTable
 addr2reg MacroTable r8
 ; local ofs
 ; * (read dereference)
 read -4 r14 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; }
 jump Label_128
Label_131:
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
Label_127:
 read 4 r14 r15
 read 0 r14 r14
 add r13 16 r13
 jumpr 0 r15

 ; glb AddMacroIdent : (
 ; prm     name : * char
 ;     ) void
.code
; .globl AddMacroIdent
AddMacroIdent:
 write 0 r13 r4
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     name : (@8) : * char
 ; loc     l : (@-4) : int
 ; RPN'ized expression: "l ( name strlen ) = "
 ; Expanded expression: "(@-4)  (@8) *(4)  strlen ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; strlen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strlen
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "l 127 >= "
 ; Expanded expression: "(@-4) *(4) 127 >= "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 127
 ; >=
 load32 127 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_135

.rdata
Label_137:
.dw 77 97 99 114 111 32 105 100 101 110 116 105 102 105 101 114 32 116 111 111 32 108 111 110 103 32 39 37 115 39 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( name , L137 error ) "
 ; Expanded expression: " (@8) *(4)  L137  error ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 137
 addr2reg Label_137 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_135:
 ; if
 ; RPN'ized expression: "4096 1024 + MacroTableLen - l 3 + < "
 ; Expanded expression: "5120 MacroTableLen *(4) - (@-4) *(4) 3 + < "
 ; 5120
 load32 5120 r2
 ; MacroTableLen
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 3
 ; +
 add r8 3 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_138

.rdata
Label_140:
.dw 77 97 99 114 111 32 116 97 98 108 101 32 101 120 104 97 117 115 116 101 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L140 error ) "
 ; Expanded expression: " L140  error ()4 "
 ; (
 ; 140
 addr2reg Label_140 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_138:
 ; RPN'ized expression: "MacroTable MacroTableLen ++p + *u l 1 + = "
 ; Expanded expression: "MacroTable MacroTableLen ++p(4) + (@-4) *(4) 1 + =(-1) "
 ; MacroTable
 addr2reg MacroTable r2
 ; MacroTableLen
 ; ++p
 addr2reg MacroTableLen r1
 read 0 r1 r8
 add r8 1 r8
 addr2reg MacroTableLen r1
 write 0 r1 r8
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "( name , MacroTable MacroTableLen + strcpy ) "
 ; Expanded expression: " (@8) *(4)  MacroTable MacroTableLen *(4) +  strcpy ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; MacroTable
 addr2reg MacroTable r4
 ; MacroTableLen
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; strcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcpy
 add r13 16 r13
 ; RPN'ized expression: "MacroTableLen l 1 + += "
 ; Expanded expression: "MacroTableLen (@-4) *(4) 1 + +=(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; MacroTableLen
 ; +=
 addr2reg MacroTableLen r1
 read 0 r1 r12
 add r12 r2 r2
 addr2reg MacroTableLen r1
 write 0 r1 r2
 ; RPN'ized expression: "MacroTable MacroTableLen + *u 0 = "
 ; Expanded expression: "MacroTable MacroTableLen *(4) + 0 =(-1) "
 ; MacroTable
 addr2reg MacroTable r2
 ; MacroTableLen
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r8
 ; +
 add r2 r8 r2
 ; 0
 ; =
 write 0 r2 r0
Label_134:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb AddMacroExpansionChar : (
 ; prm     e : char
 ;     ) void
.code
; .globl AddMacroExpansionChar
AddMacroExpansionChar:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     e : (@8) : char
 ; if
 ; RPN'ized expression: "e 0 == "
 ; Expanded expression: "(@8) *(-1) 0 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_142
 ; {
 ; while

.rdata
Label_146:
.dw 32 9 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "MacroTable MacroTableLen + *u ( MacroTable MacroTableLen MacroTable MacroTableLen + *u + + *u , L146 strchr ) && "
 ; Expanded expression: "MacroTable MacroTableLen *(4) + *(-1) _Bool [sh&&->147]  MacroTable MacroTableLen *(4) MacroTable MacroTableLen *(4) + *(-1) + + *(-1)  L146  strchr ()8 _Bool &&[147] "
Label_144:
 ; MacroTable
 addr2reg MacroTable r2
 ; MacroTableLen
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; * (read dereference)
 read 0 r2 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_147
 ; (
 ; MacroTable
 addr2reg MacroTable r5
 ; MacroTableLen
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r5
 ; MacroTable
 sub r13 4 r13
 write 0 r13 r5
 addr2reg MacroTable r5
 ; MacroTableLen
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; * (read dereference)
 read 0 r5 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 146
 addr2reg Label_146 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_147:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_145
 ; RPN'ized expression: "MacroTable MacroTableLen + *u --p "
 ; Expanded expression: "MacroTable MacroTableLen *(4) + --p(-1) "
 ; MacroTable
 addr2reg MacroTable r2
 ; MacroTableLen
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r8
 ; +
 add r2 r8 r2
 ; --p
 or r0 r2 r11
 read 0 r11 r2
 sub r2 1 r2
 write 0 r11 r2
 add r2 1 r2
 jump Label_144
Label_145:
 ; RPN'ized expression: "MacroTableLen 1 MacroTable MacroTableLen + *u + += "
 ; Expanded expression: "MacroTableLen 1 MacroTable MacroTableLen *(4) + *(-1) + +=(4) "
 ; MacroTable
 addr2reg MacroTable r2
 ; MacroTableLen
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; +
 add r2 1 r2
 ; MacroTableLen
 ; +=
 addr2reg MacroTableLen r1
 read 0 r1 r12
 add r12 r2 r2
 addr2reg MacroTableLen r1
 write 0 r1 r2
 ; return
 jump Label_141
 ; }
Label_142:
 ; if
 ; RPN'ized expression: "MacroTableLen 1 + MacroTable MacroTableLen + *u + 4096 1024 + >= "
 ; Expanded expression: "MacroTableLen *(4) 1 + MacroTable MacroTableLen *(4) + *(-1) + 5120 >= "
 ; MacroTableLen
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r2
 ; 1
 ; +
 add r2 1 r2
 ; MacroTable
 addr2reg MacroTable r8
 ; MacroTableLen
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; 5120
 ; >=
 load32 5120 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_148

.rdata
Label_150:
.dw 77 97 99 114 111 32 116 97 98 108 101 32 101 120 104 97 117 115 116 101 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L150 error ) "
 ; Expanded expression: " L150  error ()4 "
 ; (
 ; 150
 addr2reg Label_150 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_148:
 ; if
 ; RPN'ized expression: "MacroTable MacroTableLen + *u 127 >= "
 ; Expanded expression: "MacroTable MacroTableLen *(4) + *(-1) 127 >= "
 ; MacroTable
 addr2reg MacroTable r2
 ; MacroTableLen
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 127
 ; >=
 load32 127 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_151

.rdata
Label_153:
.dw 77 97 99 114 111 32 100 101 102 105 110 105 116 105 111 110 32 116 111 111 32 108 111 110 103 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L153 error ) "
 ; Expanded expression: " L153  error ()4 "
 ; (
 ; 153
 addr2reg Label_153 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_151:
 ; RPN'ized expression: "MacroTable MacroTableLen 1 + MacroTable MacroTableLen + *u + + *u e = "
 ; Expanded expression: "MacroTable MacroTableLen *(4) 1 + MacroTable MacroTableLen *(4) + *(-1) + + (@8) *(-1) =(-1) "
 ; MacroTable
 addr2reg MacroTable r2
 ; MacroTableLen
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r8
 ; 1
 ; +
 add r8 1 r8
 ; MacroTable
 addr2reg MacroTable r9
 ; MacroTableLen
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r10
 ; +
 add r9 r10 r9
 ; * (read dereference)
 read 0 r9 r9
 ; +
 add r8 r9 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "MacroTable MacroTableLen + *u ++p "
 ; Expanded expression: "MacroTable MacroTableLen *(4) + ++p(-1) "
 ; MacroTable
 addr2reg MacroTable r2
 ; MacroTableLen
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r8
 ; +
 add r2 r8 r2
 ; ++p
 or r0 r2 r11
 read 0 r11 r2
 add r2 1 r2
 write 0 r11 r2
 sub r2 1 r2
Label_141:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb DefineMacro : (
 ; prm     name : * char
 ; prm     expansion : * char
 ;     ) void
.code
; .globl DefineMacro
DefineMacro:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     name : (@8) : * char
 ; loc     expansion : (@12) : * char
 ; RPN'ized expression: "( name AddMacroIdent ) "
 ; Expanded expression: " (@8) *(4)  AddMacroIdent ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; AddMacroIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump AddMacroIdent
 add r13 16 r13
 ; do
Label_155:
 ; {
 ; RPN'ized expression: "( expansion *u AddMacroExpansionChar ) "
 ; Expanded expression: " (@12) *(4) *(-1)  AddMacroExpansionChar ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; AddMacroExpansionChar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump AddMacroExpansionChar
 add r13 16 r13
 ; }
 ; while
 ; RPN'ized expression: "expansion ++p *u 0 != "
 ; Expanded expression: "(@12) ++p(4) *(-1) 0 != "
Label_156:
 ; local ofs
 ; ++p
 read 12 r14 r2
 add r2 1 r2
 write 12 r14 r2
 sub r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; !=
 beq r2 r0 2
 jump Label_155
Label_157:
Label_154:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb DumpMacroTable : (void) void
.code
; .globl DumpMacroTable
DumpMacroTable:
 sub r13         16 r13
 write          8 r13 r14
 add r13          8 r14
   write 4 r14 r15
 ; loc     i : (@-4) : int
 ; loc     j : (@-8) : int

.rdata
Label_159:
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L159 puts2 ) "
 ; Expanded expression: " L159  puts2 ()4 "
 ; (
 ; 159
 addr2reg Label_159 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_160:
.dw 77 97 99 114 111 32 116 97 98 108 101 58 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L160 printf2 ) "
 ; Expanded expression: " L160  printf2 ()4 "
 ; (
 ; 160
 addr2reg Label_160 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_161:
 ; RPN'ized expression: "i MacroTableLen < "
 ; Expanded expression: "(@-4) *(4) MacroTableLen *(4) < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; MacroTableLen
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_164
 ; {
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_165:
.dw 77 97 99 114 111 32 37 115 32 61 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( MacroTable i + 1 + , L165 printf2 ) "
 ; Expanded expression: " MacroTable (@-4) *(4) + 1 +  L165  printf2 ()8 "
 ; (
 ; MacroTable
 addr2reg MacroTable r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -4 r14 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; 1
 ; +
 add r5 1 r5
 ; ,
 ; 165
 addr2reg Label_165 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "i i 1 + MacroTable i + *u + = "
 ; Expanded expression: "(@-4) (@-4) *(4) 1 + MacroTable (@-4) *(4) + *(-1) + =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; MacroTable
 addr2reg MacroTable r8
 ; local ofs
 ; * (read dereference)
 read -4 r14 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2

.rdata
Label_166:
.dw 96 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L166 printf2 ) "
 ; Expanded expression: " L166  printf2 ()4 "
 ; (
 ; 166
 addr2reg Label_166 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "j MacroTable i ++p + *u = "
 ; Expanded expression: "(@-8) MacroTable (@-4) ++p(4) + *(-1) =(4) "
 ; MacroTable
 addr2reg MacroTable r2
 ; local ofs
 ; ++p
 read -4 r14 r8
 add r8 1 r8
 write -4 r14 r8
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; while
 ; RPN'ized expression: "j --p "
 ; Expanded expression: "(@-8) --p(4) "
Label_167:
 ; local ofs
 ; --p
 read -8 r14 r2
 sub r2 1 r2
 write -8 r14 r2
 add r2 1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_168

.rdata
Label_169:
.dw 37 99 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( MacroTable i ++p + *u , L169 printf2 ) "
 ; Expanded expression: " MacroTable (@-4) ++p(4) + *(-1)  L169  printf2 ()8 "
 ; (
 ; MacroTable
 addr2reg MacroTable r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; ++p
 read -4 r14 r5
 add r5 1 r5
 write -4 r14 r5
 sub r5 1 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 169
 addr2reg Label_169 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 jump Label_167
Label_168:

.rdata
Label_170:
.dw 96 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L170 printf2 ) "
 ; Expanded expression: " L170  printf2 ()4 "
 ; (
 ; 170
 addr2reg Label_170 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; }
 jump Label_161
Label_164:
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_171:
.dw 66 121 116 101 115 32 117 115 101 100 58 32 37 100 47 37 100 10 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( 4096 1024 + , MacroTableLen , L171 printf2 ) "
 ; Expanded expression: " 5120  MacroTableLen *(4)  L171  printf2 ()12 "
 ; (
 ; 5120
 load32 5120 r6
 ; ,
 ; MacroTableLen
 ; * (read dereference)
 addr2reg MacroTableLen r1
 read 0 r1 r5
 ; ,
 ; 171
 addr2reg Label_171 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_158:
 read 4 r14 r15
 read 0 r14 r14
 add r13 16 r13
 jumpr 0 r15

 ; glb FindIdent : (
 ; prm     name : * char
 ;     ) int
.code
; .globl FindIdent
FindIdent:
 write 0 r13 r4
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     name : (@8) : * char
 ; loc     i : (@-4) : int
 ; for
 ; RPN'ized expression: "i IdentTableLen = "
 ; Expanded expression: "(@-4) IdentTableLen *(4) =(4) "
 ; IdentTableLen
 ; * (read dereference)
 addr2reg IdentTableLen r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
Label_173:
 ; RPN'ized expression: "i 0 > "
 ; Expanded expression: "(@-4) *(4) 0 > "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; >
 bgts r2 r0 2
 jump Label_176
 ; {
 ; RPN'ized expression: "i 1 IdentTable i 1 - + *u + -= "
 ; Expanded expression: "(@-4) 1 IdentTable (@-4) *(4) 1 - + *(-1) + -=(4) "
 ; IdentTable
 addr2reg IdentTable r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; +
 add r2 1 r2
 ; local ofs
 ; -=
 read -4 r14 r12
 sub r12 r2 r2
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "( name , IdentTable i + strcmp ) 0 == "
 ; Expanded expression: " (@8) *(4)  IdentTable (@-4) *(4) +  strcmp ()8 0 == "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; IdentTable
 addr2reg IdentTable r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_177
 ; return
 ; RPN'ized expression: "i "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 jump Label_172
Label_177:
 ; }
 jump Label_173
Label_176:
 ; return
 ; RPN'ized expression: "1 -u "
 ; Expanded expression: "-1 "
 ; Expression value: -1
 ; -1
 load32 -1 r2
Label_172:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb AddIdent : (
 ; prm     name : * char
 ;     ) int
.code
; .globl AddIdent
AddIdent:
 write 0 r13 r4
 sub r13         16 r13
 write          8 r13 r14
 add r13          8 r14
   write 4 r14 r15
 ; loc     name : (@8) : * char
 ; loc     i : (@-4) : int
 ; loc     len : (@-8) : int
 ; if
 ; RPN'ized expression: "i ( name FindIdent ) = 0 >= "
 ; Expanded expression: "(@-4)  (@8) *(4)  FindIdent ()4 =(4) 0 >= "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; FindIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump FindIdent
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; 0
 ; >=
 bges r2 r0 2
 jump Label_180
 ; return
 ; RPN'ized expression: "i "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 jump Label_179
Label_180:
 ; RPN'ized expression: "i IdentTableLen = "
 ; Expanded expression: "(@-4) IdentTableLen *(4) =(4) "
 ; IdentTableLen
 ; * (read dereference)
 addr2reg IdentTableLen r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "len ( name strlen ) = "
 ; Expanded expression: "(@-8)  (@8) *(4)  strlen ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; strlen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strlen
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "len 127 >= "
 ; Expanded expression: "(@-8) *(4) 127 >= "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 127
 ; >=
 load32 127 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_182

.rdata
Label_184:
.dw 73 100 101 110 116 105 102 105 101 114 32 116 111 111 32 108 111 110 103 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L184 error ) "
 ; Expanded expression: " L184  error ()4 "
 ; (
 ; 184
 addr2reg Label_184 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_182:
 ; if
 ; RPN'ized expression: "4096 1024 + 512 + IdentTableLen - len 2 + < "
 ; Expanded expression: "5632 IdentTableLen *(4) - (@-8) *(4) 2 + < "
 ; 5632
 load32 5632 r2
 ; IdentTableLen
 ; * (read dereference)
 addr2reg IdentTableLen r1
 read 0 r1 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 2
 ; +
 add r8 2 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_185

.rdata
Label_187:
.dw 73 100 101 110 116 105 102 105 101 114 32 116 97 98 108 101 32 101 120 104 97 117 115 116 101 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L187 error ) "
 ; Expanded expression: " L187  error ()4 "
 ; (
 ; 187
 addr2reg Label_187 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_185:
 ; RPN'ized expression: "( name , IdentTable IdentTableLen + strcpy ) "
 ; Expanded expression: " (@8) *(4)  IdentTable IdentTableLen *(4) +  strcpy ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; IdentTable
 addr2reg IdentTable r4
 ; IdentTableLen
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg IdentTableLen r1
 read 0 r1 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; strcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcpy
 add r13 16 r13
 ; RPN'ized expression: "IdentTableLen len 1 + += "
 ; Expanded expression: "IdentTableLen (@-8) *(4) 1 + +=(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; IdentTableLen
 ; +=
 addr2reg IdentTableLen r1
 read 0 r1 r12
 add r12 r2 r2
 addr2reg IdentTableLen r1
 write 0 r1 r2
 ; RPN'ized expression: "IdentTable IdentTableLen ++p + *u len 1 + = "
 ; Expanded expression: "IdentTable IdentTableLen ++p(4) + (@-8) *(4) 1 + =(-1) "
 ; IdentTable
 addr2reg IdentTable r2
 ; IdentTableLen
 ; ++p
 addr2reg IdentTableLen r1
 read 0 r1 r8
 add r8 1 r8
 addr2reg IdentTableLen r1
 write 0 r1 r8
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; return
 ; RPN'ized expression: "i "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
Label_179:
 read 4 r14 r15
 read 0 r14 r14
 add r13 16 r13
 jumpr 0 r15

 ; glb AddNumericIdent : (
 ; prm     n : int
 ;     ) int
.code
; .globl AddNumericIdent
AddNumericIdent:
 write 0 r13 r4
 sub r13         24 r13
 write         16 r13 r14
 add r13         16 r14
   write 4 r14 r15
 ; loc     n : (@8) : int
 ; RPN'ized expression: "1 2 8 n sizeof * + 3 / + "
 ; Expanded expression: "12u "
 ; Expression value: 12u
 ; loc     s : (@-12) : [12u] char
 ; loc     p : (@-16) : * char
 ; RPN'ized expression: "p s s sizeof + = "
 ; Expanded expression: "(@-16) (@0) =(4) "
 ; local ofs
 add r14 0 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "p -- *u 0 = "
 ; Expanded expression: "(@-16) --(4) 0 =(-1) "
 ; local ofs
 ; --
 read -16 r14 r2
 sub r2 1 r2
 write -16 r14 r2
 ; 0
 ; =
 write 0 r2 r0
 ; RPN'ized expression: "p ( n , p lab2str ) = "
 ; Expanded expression: "(@-16)  (@8) *(4)  (@-16) *(4)  lab2str ()8 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; ,
 ; lab2str
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump lab2str
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; return
 ; RPN'ized expression: "( p AddIdent ) "
 ; Expanded expression: " (@-16) *(4)  AddIdent ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; ,
 ; AddIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump AddIdent
 add r13 16 r13
Label_188:
 read 4 r14 r15
 read 0 r14 r14
 add r13 24 r13
 jumpr 0 r15

 ; glb AddGotoLabel : (
 ; prm     name : * char
 ; prm     label : int
 ;     ) int
.code
; .globl AddGotoLabel
AddGotoLabel:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     name : (@8) : * char
 ; loc     label : (@12) : int
 ; loc     i : (@-4) : int
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_190:
 ; RPN'ized expression: "i gotoLabCnt < "
 ; Expanded expression: "(@-4) *(4) gotoLabCnt *(4) < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; gotoLabCnt
 ; * (read dereference)
 addr2reg gotoLabCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_193
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; {
 ; if
 ; RPN'ized expression: "( name , IdentTable gotoLabels i + *u 0 + *u + strcmp ) 0 == "
 ; Expanded expression: " (@8) *(4)  IdentTable gotoLabels (@-4) *(4) 8 * + 0 + *(4) +  strcmp ()8 0 == "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; IdentTable
 addr2reg IdentTable r4
 ; gotoLabels
 sub r13 4 r13
 write 0 r13 r4
 addr2reg gotoLabels r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; 0
 ; +
 add r4 0 r4
 ; * (read dereference)
 read 0 r4 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_194
 ; {
 ; if
 ; RPN'ized expression: "gotoLabStat i + *u label & "
 ; Expanded expression: "gotoLabStat (@-4) *(4) + *(-1) (@12) *(4) & "
 ; gotoLabStat
 addr2reg gotoLabStat r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; &
 and r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_196

.rdata
Label_198:
.dw 82 101 100 101 102 105 110 105 116 105 111 110 32 111 102 32 108 97 98 101 108 32 39 37 115 39 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( name , L198 error ) "
 ; Expanded expression: " (@8) *(4)  L198  error ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 198
 addr2reg Label_198 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_196:
 ; RPN'ized expression: "gotoLabStat i + *u 2 label 0 == * label + |= "
 ; Expanded expression: "gotoLabStat (@-4) *(4) + 2 (@12) *(4) 0 == * (@12) *(4) + |=(-1) "
 ; gotoLabStat
 addr2reg gotoLabStat r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; 0
 ; ==
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; 1
 ; <<
 shiftl r8 1 r8
 ; local ofs
 ; * (read dereference)
 read 12 r14 r9
 ; +
 add r8 r9 r8
 ; |=
 or r0 r2 r12
 read 0 r2 r2
 or r2 r8 r2
 write 0 r12 r2
 ; return
 ; RPN'ized expression: "gotoLabels i + *u 1 + *u "
 ; Expanded expression: "gotoLabels (@-4) *(4) 8 * + 4 + *(4) "
 ; gotoLabels
 addr2reg gotoLabels r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_189
 ; }
Label_194:
 ; }
Label_191:
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_190
Label_193:
 ; if
 ; RPN'ized expression: "gotoLabCnt 16 >= "
 ; Expanded expression: "gotoLabCnt *(4) 16 >= "
 ; gotoLabCnt
 ; * (read dereference)
 addr2reg gotoLabCnt r1
 read 0 r1 r2
 ; 16
 ; >=
 load32 16 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_199

.rdata
Label_201:
.dw 71 111 116 111 32 116 97 98 108 101 32 101 120 104 97 117 115 116 101 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L201 error ) "
 ; Expanded expression: " L201  error ()4 "
 ; (
 ; 201
 addr2reg Label_201 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_199:
 ; RPN'ized expression: "gotoLabels gotoLabCnt + *u 0 + *u ( name AddIdent ) = "
 ; Expanded expression: "gotoLabels gotoLabCnt *(4) 8 * + 0 +  (@8) *(4)  AddIdent ()4 =(4) "
 ; gotoLabels
 addr2reg gotoLabels r2
 ; gotoLabCnt
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg gotoLabCnt r1
 read 0 r1 r2
 ; 3
 ; <<
 shiftl r2 3 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; 0
 ; +
 add r2 0 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; AddIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump AddIdent
 add r13 16 r13
 ; = (write dereference)
 read 0 r13 r11
 add r13 4 r13
 write 0 r11 r2
 ; RPN'ized expression: "gotoLabels gotoLabCnt + *u 1 + *u LabelCnt ++p = "
 ; Expanded expression: "gotoLabels gotoLabCnt *(4) 8 * + 4 + LabelCnt ++p(4) =(4) "
 ; gotoLabels
 addr2reg gotoLabels r2
 ; gotoLabCnt
 ; * (read dereference)
 addr2reg gotoLabCnt r1
 read 0 r1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r8
 add r8 1 r8
 addr2reg LabelCnt r1
 write 0 r1 r8
 sub r8 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "gotoLabStat gotoLabCnt + *u 2 label 0 == * label + = "
 ; Expanded expression: "gotoLabStat gotoLabCnt *(4) + 2 (@12) *(4) 0 == * (@12) *(4) + =(-1) "
 ; gotoLabStat
 addr2reg gotoLabStat r2
 ; gotoLabCnt
 ; * (read dereference)
 addr2reg gotoLabCnt r1
 read 0 r1 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; 0
 ; ==
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; 1
 ; <<
 shiftl r8 1 r8
 ; local ofs
 ; * (read dereference)
 read 12 r14 r9
 ; +
 add r8 r9 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; return
 ; RPN'ized expression: "gotoLabels gotoLabCnt ++p + *u 1 + *u "
 ; Expanded expression: "gotoLabels gotoLabCnt ++p(4) 8 * + 4 + *(4) "
 ; gotoLabels
 addr2reg gotoLabels r2
 ; gotoLabCnt
 ; ++p
 addr2reg gotoLabCnt r1
 read 0 r1 r8
 add r8 1 r8
 addr2reg gotoLabCnt r1
 write 0 r1 r8
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
Label_189:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb UndoNonLabelIdents : (
 ; prm     len : int
 ;     ) void
.code
; .globl UndoNonLabelIdents
UndoNonLabelIdents:
 write 0 r13 r4
 sub r13         24 r13
 write         16 r13 r14
 add r13         16 r14
   write 4 r14 r15
 ; loc     len : (@8) : int
 ; loc     i : (@-4) : int
 ; RPN'ized expression: "IdentTableLen len = "
 ; Expanded expression: "IdentTableLen (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; IdentTableLen
 ; = (write dereference)
 addr2reg IdentTableLen r1
 write 0 r1 r2
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_203:
 ; RPN'ized expression: "i gotoLabCnt < "
 ; Expanded expression: "(@-4) *(4) gotoLabCnt *(4) < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; gotoLabCnt
 ; * (read dereference)
 addr2reg gotoLabCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_206
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; if
 ; RPN'ized expression: "gotoLabels i + *u 0 + *u len >= "
 ; Expanded expression: "gotoLabels (@-4) *(4) 8 * + 0 + *(4) (@8) *(4) >= "
 ; gotoLabels
 addr2reg gotoLabels r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; >=
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_207
 ; {
 ; loc         pfrom : (@-8) : * char
 ; RPN'ized expression: "pfrom IdentTable gotoLabels i + *u 0 + *u + = "
 ; Expanded expression: "(@-8) IdentTable gotoLabels (@-4) *(4) 8 * + 0 + *(4) + =(4) "
 ; IdentTable
 addr2reg IdentTable r2
 ; gotoLabels
 addr2reg gotoLabels r8
 ; local ofs
 ; * (read dereference)
 read -4 r14 r9
 ; 3
 ; <<
 shiftl r9 3 r9
 ; +
 add r8 r9 r8
 ; 0
 ; +
 add r8 0 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; loc         pto : (@-12) : * char
 ; RPN'ized expression: "pto IdentTable IdentTableLen + = "
 ; Expanded expression: "(@-12) IdentTable IdentTableLen *(4) + =(4) "
 ; IdentTable
 addr2reg IdentTable r2
 ; IdentTableLen
 ; * (read dereference)
 addr2reg IdentTableLen r1
 read 0 r1 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; loc         l : (@-16) : int
 ; RPN'ized expression: "l ( pfrom strlen ) 2 + = "
 ; Expanded expression: "(@-16)  (@-8) *(4)  strlen ()4 2 + =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; strlen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strlen
 add r13 16 r13
 ; 2
 ; +
 add r2 2 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "( l , pfrom , pto memmove ) "
 ; Expanded expression: " (@-16) *(4)  (@-8) *(4)  (@-12) *(4)  memmove ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; memmove
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memmove
 add r13 16 r13
 ; RPN'ized expression: "IdentTableLen l += "
 ; Expanded expression: "IdentTableLen (@-16) *(4) +=(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; IdentTableLen
 ; +=
 addr2reg IdentTableLen r1
 read 0 r1 r12
 add r12 r2 r2
 addr2reg IdentTableLen r1
 write 0 r1 r2
 ; RPN'ized expression: "gotoLabels i + *u 0 + *u pto IdentTable - = "
 ; Expanded expression: "gotoLabels (@-4) *(4) 8 * + 0 + (@-12) *(4) IdentTable - =(4) "
 ; gotoLabels
 addr2reg gotoLabels r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; IdentTable
 addr2reg IdentTable r9
 ; -
 sub r8 r9 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
Label_207:
Label_204:
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_203
Label_206:
Label_202:
 read 4 r14 r15
 read 0 r14 r14
 add r13 24 r13
 jumpr 0 r15

 ; glb AddCase : (
 ; prm     val : int
 ; prm     label : int
 ;     ) void
.code
; .globl AddCase
AddCase:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     val : (@8) : int
 ; loc     label : (@12) : int
 ; if
 ; RPN'ized expression: "CasesCnt 128 >= "
 ; Expanded expression: "CasesCnt *(4) 128 >= "
 ; CasesCnt
 ; * (read dereference)
 addr2reg CasesCnt r1
 read 0 r1 r2
 ; 128
 ; >=
 load32 128 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_210

.rdata
Label_212:
.dw 67 97 115 101 32 116 97 98 108 101 32 101 120 104 97 117 115 116 101 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L212 error ) "
 ; Expanded expression: " L212  error ()4 "
 ; (
 ; 212
 addr2reg Label_212 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_210:
 ; RPN'ized expression: "Cases CasesCnt + *u 0 + *u val = "
 ; Expanded expression: "Cases CasesCnt *(4) 8 * + 0 + (@8) *(4) =(4) "
 ; Cases
 addr2reg Cases r2
 ; CasesCnt
 ; * (read dereference)
 addr2reg CasesCnt r1
 read 0 r1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "Cases CasesCnt ++p + *u 1 + *u label = "
 ; Expanded expression: "Cases CasesCnt ++p(4) 8 * + 4 + (@12) *(4) =(4) "
 ; Cases
 addr2reg Cases r2
 ; CasesCnt
 ; ++p
 addr2reg CasesCnt r1
 read 0 r1 r8
 add r8 1 r8
 addr2reg CasesCnt r1
 write 0 r1 r8
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_209:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb DumpIdentTable : (void) void
.code
; .globl DumpIdentTable
DumpIdentTable:
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     i : (@-4) : int

.rdata
Label_214:
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L214 puts2 ) "
 ; Expanded expression: " L214  puts2 ()4 "
 ; (
 ; 214
 addr2reg Label_214 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_215:
.dw 73 100 101 110 116 105 102 105 101 114 32 116 97 98 108 101 58 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L215 printf2 ) "
 ; Expanded expression: " L215  printf2 ()4 "
 ; (
 ; 215
 addr2reg Label_215 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_216:
 ; RPN'ized expression: "i IdentTableLen < "
 ; Expanded expression: "(@-4) *(4) IdentTableLen *(4) < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; IdentTableLen
 ; * (read dereference)
 addr2reg IdentTableLen r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_219
 ; {
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_220:
.dw 73 100 101 110 116 32 37 115 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( IdentTable i + , L220 printf2 ) "
 ; Expanded expression: " IdentTable (@-4) *(4) +  L220  printf2 ()8 "
 ; (
 ; IdentTable
 addr2reg IdentTable r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -4 r14 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; 220
 addr2reg Label_220 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "i ( IdentTable i + strlen ) 2 + += "
 ; Expanded expression: "(@-4)  IdentTable (@-4) *(4) +  strlen ()4 2 + +=(4) "
 ; (
 ; IdentTable
 addr2reg IdentTable r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; strlen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strlen
 add r13 16 r13
 ; 2
 ; +
 add r2 2 r2
 ; local ofs
 ; +=
 read -4 r14 r12
 add r12 r2 r2
 write -4 r14 r2
 ; }
 jump Label_216
Label_219:
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_221:
.dw 66 121 116 101 115 32 117 115 101 100 58 32 37 100 47 37 100 10 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( 4096 1024 + 512 + , IdentTableLen , L221 printf2 ) "
 ; Expanded expression: " 5632  IdentTableLen *(4)  L221  printf2 ()12 "
 ; (
 ; 5632
 load32 5632 r6
 ; ,
 ; IdentTableLen
 ; * (read dereference)
 addr2reg IdentTableLen r1
 read 0 r1 r5
 ; ,
 ; 221
 addr2reg Label_221 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_213:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb rws : [0u] * char
.data
; .align 2
; .globl rws
rws:
 ; =

.rdata
Label_222:
.dw 98 114 101 97 107 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L222 "
 ; Expanded expression: "L222 "
.dl Label_222
.dl Label_222
.dl Label_222
.dl Label_222

.rdata
Label_223:
.dw 99 97 115 101 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L223 "
 ; Expanded expression: "L223 "
.dl Label_223
.dl Label_223
.dl Label_223
.dl Label_223

.rdata
Label_224:
.dw 99 104 97 114 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L224 "
 ; Expanded expression: "L224 "
.dl Label_224
.dl Label_224
.dl Label_224
.dl Label_224

.rdata
Label_225:
.dw 99 111 110 116 105 110 117 101 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L225 "
 ; Expanded expression: "L225 "
.dl Label_225
.dl Label_225
.dl Label_225
.dl Label_225

.rdata
Label_226:
.dw 100 101 102 97 117 108 116 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L226 "
 ; Expanded expression: "L226 "
.dl Label_226
.dl Label_226
.dl Label_226
.dl Label_226

.rdata
Label_227:
.dw 100 111 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L227 "
 ; Expanded expression: "L227 "
.dl Label_227
.dl Label_227
.dl Label_227
.dl Label_227

.rdata
Label_228:
.dw 101 108 115 101 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L228 "
 ; Expanded expression: "L228 "
.dl Label_228
.dl Label_228
.dl Label_228
.dl Label_228

.rdata
Label_229:
.dw 101 120 116 101 114 110 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L229 "
 ; Expanded expression: "L229 "
.dl Label_229
.dl Label_229
.dl Label_229
.dl Label_229

.rdata
Label_230:
.dw 102 111 114 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L230 "
 ; Expanded expression: "L230 "
.dl Label_230
.dl Label_230
.dl Label_230
.dl Label_230

.rdata
Label_231:
.dw 105 102 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L231 "
 ; Expanded expression: "L231 "
.dl Label_231
.dl Label_231
.dl Label_231
.dl Label_231

.rdata
Label_232:
.dw 105 110 116 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L232 "
 ; Expanded expression: "L232 "
.dl Label_232
.dl Label_232
.dl Label_232
.dl Label_232

.rdata
Label_233:
.dw 114 101 116 117 114 110 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L233 "
 ; Expanded expression: "L233 "
.dl Label_233
.dl Label_233
.dl Label_233
.dl Label_233

.rdata
Label_234:
.dw 115 105 103 110 101 100 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L234 "
 ; Expanded expression: "L234 "
.dl Label_234
.dl Label_234
.dl Label_234
.dl Label_234

.rdata
Label_235:
.dw 115 105 122 101 111 102 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L235 "
 ; Expanded expression: "L235 "
.dl Label_235
.dl Label_235
.dl Label_235
.dl Label_235

.rdata
Label_236:
.dw 115 116 97 116 105 99 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L236 "
 ; Expanded expression: "L236 "
.dl Label_236
.dl Label_236
.dl Label_236
.dl Label_236

.rdata
Label_237:
.dw 115 119 105 116 99 104 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L237 "
 ; Expanded expression: "L237 "
.dl Label_237
.dl Label_237
.dl Label_237
.dl Label_237

.rdata
Label_238:
.dw 117 110 115 105 103 110 101 100 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L238 "
 ; Expanded expression: "L238 "
.dl Label_238
.dl Label_238
.dl Label_238
.dl Label_238

.rdata
Label_239:
.dw 118 111 105 100 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L239 "
 ; Expanded expression: "L239 "
.dl Label_239
.dl Label_239
.dl Label_239
.dl Label_239

.rdata
Label_240:
.dw 119 104 105 108 101 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L240 "
 ; Expanded expression: "L240 "
.dl Label_240
.dl Label_240
.dl Label_240
.dl Label_240

.rdata
Label_241:
.dw 97 115 109 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L241 "
 ; Expanded expression: "L241 "
.dl Label_241
.dl Label_241
.dl Label_241
.dl Label_241

.rdata
Label_242:
.dw 97 117 116 111 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L242 "
 ; Expanded expression: "L242 "
.dl Label_242
.dl Label_242
.dl Label_242
.dl Label_242

.rdata
Label_243:
.dw 99 111 110 115 116 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L243 "
 ; Expanded expression: "L243 "
.dl Label_243
.dl Label_243
.dl Label_243
.dl Label_243

.rdata
Label_244:
.dw 100 111 117 98 108 101 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L244 "
 ; Expanded expression: "L244 "
.dl Label_244
.dl Label_244
.dl Label_244
.dl Label_244

.rdata
Label_245:
.dw 101 110 117 109 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L245 "
 ; Expanded expression: "L245 "
.dl Label_245
.dl Label_245
.dl Label_245
.dl Label_245

.rdata
Label_246:
.dw 102 108 111 97 116 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L246 "
 ; Expanded expression: "L246 "
.dl Label_246
.dl Label_246
.dl Label_246
.dl Label_246

.rdata
Label_247:
.dw 103 111 116 111 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L247 "
 ; Expanded expression: "L247 "
.dl Label_247
.dl Label_247
.dl Label_247
.dl Label_247

.rdata
Label_248:
.dw 105 110 108 105 110 101 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L248 "
 ; Expanded expression: "L248 "
.dl Label_248
.dl Label_248
.dl Label_248
.dl Label_248

.rdata
Label_249:
.dw 108 111 110 103 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L249 "
 ; Expanded expression: "L249 "
.dl Label_249
.dl Label_249
.dl Label_249
.dl Label_249

.rdata
Label_250:
.dw 114 101 103 105 115 116 101 114 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L250 "
 ; Expanded expression: "L250 "
.dl Label_250
.dl Label_250
.dl Label_250
.dl Label_250

.rdata
Label_251:
.dw 114 101 115 116 114 105 99 116 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L251 "
 ; Expanded expression: "L251 "
.dl Label_251
.dl Label_251
.dl Label_251
.dl Label_251

.rdata
Label_252:
.dw 115 104 111 114 116 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L252 "
 ; Expanded expression: "L252 "
.dl Label_252
.dl Label_252
.dl Label_252
.dl Label_252

.rdata
Label_253:
.dw 115 116 114 117 99 116 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L253 "
 ; Expanded expression: "L253 "
.dl Label_253
.dl Label_253
.dl Label_253
.dl Label_253

.rdata
Label_254:
.dw 116 121 112 101 100 101 102 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L254 "
 ; Expanded expression: "L254 "
.dl Label_254
.dl Label_254
.dl Label_254
.dl Label_254

.rdata
Label_255:
.dw 117 110 105 111 110 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L255 "
 ; Expanded expression: "L255 "
.dl Label_255
.dl Label_255
.dl Label_255
.dl Label_255

.rdata
Label_256:
.dw 118 111 108 97 116 105 108 101 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L256 "
 ; Expanded expression: "L256 "
.dl Label_256
.dl Label_256
.dl Label_256
.dl Label_256

.rdata
Label_257:
.dw 95 66 111 111 108 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L257 "
 ; Expanded expression: "L257 "
.dl Label_257
.dl Label_257
.dl Label_257
.dl Label_257

.rdata
Label_258:
.dw 95 67 111 109 112 108 101 120 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L258 "
 ; Expanded expression: "L258 "
.dl Label_258
.dl Label_258
.dl Label_258
.dl Label_258

.rdata
Label_259:
.dw 95 73 109 97 103 105 110 97 114 121 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L259 "
 ; Expanded expression: "L259 "
.dl Label_259
.dl Label_259
.dl Label_259
.dl Label_259

.rdata
Label_260:
.dw 95 95 105 110 116 101 114 114 117 112 116 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L260 "
 ; Expanded expression: "L260 "
.dl Label_260
.dl Label_260
.dl Label_260
.dl Label_260

 ; glb rwtk : [0u] unsigned char
.data
; .globl rwtk
rwtk:
 ; =
 ; RPN'ized expression: "26 "
 ; Expanded expression: "26 "
 ; Expression value: 26
 .dw 26
 ; RPN'ized expression: "118 "
 ; Expanded expression: "118 "
 ; Expression value: 118
 .dw 118
 ; RPN'ized expression: "18 "
 ; Expanded expression: "18 "
 ; Expression value: 18
 .dw 18
 ; RPN'ized expression: "25 "
 ; Expanded expression: "25 "
 ; Expression value: 25
 .dw 25
 ; RPN'ized expression: "119 "
 ; Expanded expression: "119 "
 ; Expression value: 119
 .dw 119
 ; RPN'ized expression: "115 "
 ; Expanded expression: "115 "
 ; Expression value: 115
 .dw 115
 ; RPN'ized expression: "23 "
 ; Expanded expression: "23 "
 ; Expression value: 23
 .dw 23
 ; RPN'ized expression: "108 "
 ; Expanded expression: "108 "
 ; Expression value: 108
 .dw 108
 ; RPN'ized expression: "116 "
 ; Expanded expression: "116 "
 ; Expression value: 116
 .dw 116
 ; RPN'ized expression: "22 "
 ; Expanded expression: "22 "
 ; Expression value: 22
 .dw 22
 ; RPN'ized expression: "19 "
 ; Expanded expression: "19 "
 ; Expression value: 19
 .dw 19
 ; RPN'ized expression: "20 "
 ; Expanded expression: "20 "
 ; Expression value: 20
 .dw 20
 ; RPN'ized expression: "102 "
 ; Expanded expression: "102 "
 ; Expression value: 102
 .dw 102
 ; RPN'ized expression: "27 "
 ; Expanded expression: "27 "
 ; Expression value: 27
 .dw 27
 ; RPN'ized expression: "106 "
 ; Expanded expression: "106 "
 ; Expression value: 106
 .dw 106
 ; RPN'ized expression: "117 "
 ; Expanded expression: "117 "
 ; Expression value: 117
 .dw 117
 ; RPN'ized expression: "101 "
 ; Expanded expression: "101 "
 ; Expression value: 101
 .dw 101
 ; RPN'ized expression: "17 "
 ; Expanded expression: "17 "
 ; Expression value: 17
 .dw 17
 ; RPN'ized expression: "24 "
 ; Expanded expression: "24 "
 ; Expression value: 24
 .dw 24
 ; RPN'ized expression: "96 "
 ; Expanded expression: "96 "
 ; Expression value: 96
 .dw 96
 ; RPN'ized expression: "109 "
 ; Expanded expression: "109 "
 ; Expression value: 109
 .dw 109
 ; RPN'ized expression: "103 "
 ; Expanded expression: "103 "
 ; Expression value: 103
 .dw 103
 ; RPN'ized expression: "98 "
 ; Expanded expression: "98 "
 ; Expression value: 98
 .dw 98
 ; RPN'ized expression: "112 "
 ; Expanded expression: "112 "
 ; Expression value: 112
 .dw 112
 ; RPN'ized expression: "97 "
 ; Expanded expression: "97 "
 ; Expression value: 97
 .dw 97
 ; RPN'ized expression: "21 "
 ; Expanded expression: "21 "
 ; Expression value: 21
 .dw 21
 ; RPN'ized expression: "107 "
 ; Expanded expression: "107 "
 ; Expression value: 107
 .dw 107
 ; RPN'ized expression: "99 "
 ; Expanded expression: "99 "
 ; Expression value: 99
 .dw 99
 ; RPN'ized expression: "110 "
 ; Expanded expression: "110 "
 ; Expression value: 110
 .dw 110
 ; RPN'ized expression: "105 "
 ; Expanded expression: "105 "
 ; Expression value: 105
 .dw 105
 ; RPN'ized expression: "100 "
 ; Expanded expression: "100 "
 ; Expression value: 100
 .dw 100
 ; RPN'ized expression: "113 "
 ; Expanded expression: "113 "
 ; Expression value: 113
 .dw 113
 ; RPN'ized expression: "111 "
 ; Expanded expression: "111 "
 ; Expression value: 111
 .dw 111
 ; RPN'ized expression: "114 "
 ; Expanded expression: "114 "
 ; Expression value: 114
 .dw 114
 ; RPN'ized expression: "104 "
 ; Expanded expression: "104 "
 ; Expression value: 104
 .dw 104
 ; RPN'ized expression: "120 "
 ; Expanded expression: "120 "
 ; Expression value: 120
 .dw 120
 ; RPN'ized expression: "121 "
 ; Expanded expression: "121 "
 ; Expression value: 121
 .dw 121
 ; RPN'ized expression: "122 "
 ; Expanded expression: "122 "
 ; Expression value: 122
 .dw 122
 ; RPN'ized expression: "148 "
 ; Expanded expression: "148 "
 ; Expression value: 148
 .dw 148

 ; glb GetTokenByWord : (
 ; prm     word : * char
 ;     ) int
.code
; .globl GetTokenByWord
GetTokenByWord:
 write 0 r13 r4
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     word : (@8) : * char
 ; loc     i : (@-4) : unsigned
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_262:
 ; RPN'ized expression: "i ( rws 0 + *u sizeof , rws sizeof division ) < "
 ; Expanded expression: "(@-4) *(4)  4u  156u  division ()8 <u "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; 4
 load32 4 r5
 ; ,
 ; 156
 load32 156 r4
 ; ,
 ; division
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump division
 add r13 16 r13
 ; <u
 read 0 r13 r11
 add r13 4 r13
 bges r11 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_265
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; if
 ; RPN'ized expression: "( word , rws i + *u strcmp ) 0 == "
 ; Expanded expression: " (@8) *(4)  rws (@-4) *(4) 4 * + *(4)  strcmp ()8 0 == "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; rws
 addr2reg rws r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_266
 ; return
 ; RPN'ized expression: "rwtk i + *u "
 ; Expanded expression: "rwtk (@-4) *(4) + *(1) "
 ; rwtk
 addr2reg rwtk r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_261
Label_266:
Label_263:
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_262
Label_265:
 ; return
 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
 ; 16
 load32 16 r2
Label_261:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb tktk : [0u] unsigned char
.data
; .globl tktk
tktk:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0
 ; RPN'ized expression: "43 "
 ; Expanded expression: "43 "
 ; Expression value: 43
 .dw 43
 ; RPN'ized expression: "45 "
 ; Expanded expression: "45 "
 ; Expression value: 45
 .dw 45
 ; RPN'ized expression: "126 "
 ; Expanded expression: "126 "
 ; Expression value: 126
 .dw 126
 ; RPN'ized expression: "42 "
 ; Expanded expression: "42 "
 ; Expression value: 42
 .dw 42
 ; RPN'ized expression: "47 "
 ; Expanded expression: "47 "
 ; Expression value: 47
 .dw 47
 ; RPN'ized expression: "37 "
 ; Expanded expression: "37 "
 ; Expression value: 37
 .dw 37
 ; RPN'ized expression: "38 "
 ; Expanded expression: "38 "
 ; Expression value: 38
 .dw 38
 ; RPN'ized expression: "124 "
 ; Expanded expression: "124 "
 ; Expression value: 124
 .dw 124
 ; RPN'ized expression: "94 "
 ; Expanded expression: "94 "
 ; Expression value: 94
 .dw 94
 ; RPN'ized expression: "33 "
 ; Expanded expression: "33 "
 ; Expression value: 33
 .dw 33
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
 .dw 60
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
 .dw 62
 ; RPN'ized expression: "40 "
 ; Expanded expression: "40 "
 ; Expression value: 40
 .dw 40
 ; RPN'ized expression: "41 "
 ; Expanded expression: "41 "
 ; Expression value: 41
 .dw 41
 ; RPN'ized expression: "91 "
 ; Expanded expression: "91 "
 ; Expression value: 91
 .dw 91
 ; RPN'ized expression: "93 "
 ; Expanded expression: "93 "
 ; Expression value: 93
 .dw 93
 ; RPN'ized expression: "123 "
 ; Expanded expression: "123 "
 ; Expression value: 123
 .dw 123
 ; RPN'ized expression: "125 "
 ; Expanded expression: "125 "
 ; Expression value: 125
 .dw 125
 ; RPN'ized expression: "61 "
 ; Expanded expression: "61 "
 ; Expression value: 61
 .dw 61
 ; RPN'ized expression: "44 "
 ; Expanded expression: "44 "
 ; Expression value: 44
 .dw 44
 ; RPN'ized expression: "59 "
 ; Expanded expression: "59 "
 ; Expression value: 59
 .dw 59
 ; RPN'ized expression: "58 "
 ; Expanded expression: "58 "
 ; Expression value: 58
 .dw 58
 ; RPN'ized expression: "46 "
 ; Expanded expression: "46 "
 ; Expression value: 46
 .dw 46
 ; RPN'ized expression: "63 "
 ; Expanded expression: "63 "
 ; Expression value: 63
 .dw 63
 ; RPN'ized expression: "4 "
 ; Expanded expression: "4 "
 ; Expression value: 4
 .dw 4
 ; RPN'ized expression: "6 "
 ; Expanded expression: "6 "
 ; Expression value: 6
 .dw 6
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
 .dw 8
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
 .dw 10
 ; RPN'ized expression: "12 "
 ; Expanded expression: "12 "
 ; Expression value: 12
 .dw 12
 ; RPN'ized expression: "14 "
 ; Expanded expression: "14 "
 ; Expression value: 14
 .dw 14
 ; RPN'ized expression: "65 "
 ; Expanded expression: "65 "
 ; Expression value: 65
 .dw 65
 ; RPN'ized expression: "67 "
 ; Expanded expression: "67 "
 ; Expression value: 67
 .dw 67
 ; RPN'ized expression: "69 "
 ; Expanded expression: "69 "
 ; Expression value: 69
 .dw 69
 ; RPN'ized expression: "71 "
 ; Expanded expression: "71 "
 ; Expression value: 71
 .dw 71
 ; RPN'ized expression: "73 "
 ; Expanded expression: "73 "
 ; Expression value: 73
 .dw 73
 ; RPN'ized expression: "5 "
 ; Expanded expression: "5 "
 ; Expression value: 5
 .dw 5
 ; RPN'ized expression: "7 "
 ; Expanded expression: "7 "
 ; Expression value: 7
 .dw 7
 ; RPN'ized expression: "9 "
 ; Expanded expression: "9 "
 ; Expression value: 9
 .dw 9
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
 .dw 11
 ; RPN'ized expression: "13 "
 ; Expanded expression: "13 "
 ; Expression value: 13
 .dw 13
 ; RPN'ized expression: "15 "
 ; Expanded expression: "15 "
 ; Expression value: 15
 .dw 15
 ; RPN'ized expression: "66 "
 ; Expanded expression: "66 "
 ; Expression value: 66
 .dw 66
 ; RPN'ized expression: "68 "
 ; Expanded expression: "68 "
 ; Expression value: 68
 .dw 68
 ; RPN'ized expression: "70 "
 ; Expanded expression: "70 "
 ; Expression value: 70
 .dw 70
 ; RPN'ized expression: "72 "
 ; Expanded expression: "72 "
 ; Expression value: 72
 .dw 72
 ; RPN'ized expression: "74 "
 ; Expanded expression: "74 "
 ; Expression value: 74
 .dw 74
 ; RPN'ized expression: "77 "
 ; Expanded expression: "77 "
 ; Expression value: 77
 .dw 77
 ; RPN'ized expression: "79 "
 ; Expanded expression: "79 "
 ; Expression value: 79
 .dw 79
 ; RPN'ized expression: "81 "
 ; Expanded expression: "81 "
 ; Expression value: 81
 .dw 81
 ; RPN'ized expression: "83 "
 ; Expanded expression: "83 "
 ; Expression value: 83
 .dw 83
 ; RPN'ized expression: "85 "
 ; Expanded expression: "85 "
 ; Expression value: 85
 .dw 85
 ; RPN'ized expression: "87 "
 ; Expanded expression: "87 "
 ; Expression value: 87
 .dw 87
 ; RPN'ized expression: "28 "
 ; Expanded expression: "28 "
 ; Expression value: 28
 .dw 28
 ; RPN'ized expression: "29 "
 ; Expanded expression: "29 "
 ; Expression value: 29
 .dw 29
 ; RPN'ized expression: "30 "
 ; Expanded expression: "30 "
 ; Expression value: 30
 .dw 30
 ; RPN'ized expression: "48 "
 ; Expanded expression: "48 "
 ; Expression value: 48
 .dw 48
 ; RPN'ized expression: "78 "
 ; Expanded expression: "78 "
 ; Expression value: 78
 .dw 78
 ; RPN'ized expression: "80 "
 ; Expanded expression: "80 "
 ; Expression value: 80
 .dw 80
 ; RPN'ized expression: "82 "
 ; Expanded expression: "82 "
 ; Expression value: 82
 .dw 82
 ; RPN'ized expression: "84 "
 ; Expanded expression: "84 "
 ; Expression value: 84
 .dw 84
 ; RPN'ized expression: "86 "
 ; Expanded expression: "86 "
 ; Expression value: 86
 .dw 86
 ; RPN'ized expression: "88 "
 ; Expanded expression: "88 "
 ; Expression value: 88
 .dw 88
 ; RPN'ized expression: "31 "
 ; Expanded expression: "31 "
 ; Expression value: 31
 .dw 31
 ; RPN'ized expression: "64 "
 ; Expanded expression: "64 "
 ; Expression value: 64
 .dw 64
 ; RPN'ized expression: "75 "
 ; Expanded expression: "75 "
 ; Expression value: 75
 .dw 75
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 .dw 1
 ; RPN'ized expression: "3 "
 ; Expanded expression: "3 "
 ; Expression value: 3
 .dw 3
 ; RPN'ized expression: "89 "
 ; Expanded expression: "89 "
 ; Expression value: 89
 .dw 89
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 .dw 2
 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
 .dw 16
 ; RPN'ized expression: "90 "
 ; Expanded expression: "90 "
 ; Expression value: 90
 .dw 90
 ; RPN'ized expression: "128 "
 ; Expanded expression: "128 "
 ; Expression value: 128
 .dw 128
 ; RPN'ized expression: "100 "
 ; Expanded expression: "100 "
 ; Expression value: 100
 .dw 100
 ; RPN'ized expression: "99 "
 ; Expanded expression: "99 "
 ; Expression value: 99
 .dw 99
 ; RPN'ized expression: "129 "
 ; Expanded expression: "129 "
 ; Expression value: 129
 .dw 129
 ; RPN'ized expression: "130 "
 ; Expanded expression: "130 "
 ; Expression value: 130
 .dw 130
 ; RPN'ized expression: "131 "
 ; Expanded expression: "131 "
 ; Expression value: 131
 .dw 131
 ; RPN'ized expression: "149 "
 ; Expanded expression: "149 "
 ; Expression value: 149
 .dw 149
 ; RPN'ized expression: "150 "
 ; Expanded expression: "150 "
 ; Expression value: 150
 .dw 150
 ; RPN'ized expression: "151 "
 ; Expanded expression: "151 "
 ; Expression value: 151
 .dw 151

 ; glb tks : [0u] * char
.data
; .align 2
; .globl tks
tks:
 ; =

.rdata
Label_268:
.dw 60 69 79 70 62 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L268 "
 ; Expanded expression: "L268 "
.dl Label_268
.dl Label_268
.dl Label_268
.dl Label_268

.rdata
Label_269:
.dw 43 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L269 "
 ; Expanded expression: "L269 "
.dl Label_269
.dl Label_269
.dl Label_269
.dl Label_269

.rdata
Label_270:
.dw 45 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L270 "
 ; Expanded expression: "L270 "
.dl Label_270
.dl Label_270
.dl Label_270
.dl Label_270

.rdata
Label_271:
.dw 126 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L271 "
 ; Expanded expression: "L271 "
.dl Label_271
.dl Label_271
.dl Label_271
.dl Label_271

.rdata
Label_272:
.dw 42 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L272 "
 ; Expanded expression: "L272 "
.dl Label_272
.dl Label_272
.dl Label_272
.dl Label_272

.rdata
Label_273:
.dw 47 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L273 "
 ; Expanded expression: "L273 "
.dl Label_273
.dl Label_273
.dl Label_273
.dl Label_273

.rdata
Label_274:
.dw 37 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L274 "
 ; Expanded expression: "L274 "
.dl Label_274
.dl Label_274
.dl Label_274
.dl Label_274

.rdata
Label_275:
.dw 38 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L275 "
 ; Expanded expression: "L275 "
.dl Label_275
.dl Label_275
.dl Label_275
.dl Label_275

.rdata
Label_276:
.dw 124 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L276 "
 ; Expanded expression: "L276 "
.dl Label_276
.dl Label_276
.dl Label_276
.dl Label_276

.rdata
Label_277:
.dw 94 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L277 "
 ; Expanded expression: "L277 "
.dl Label_277
.dl Label_277
.dl Label_277
.dl Label_277

.rdata
Label_278:
.dw 33 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L278 "
 ; Expanded expression: "L278 "
.dl Label_278
.dl Label_278
.dl Label_278
.dl Label_278

.rdata
Label_279:
.dw 60 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L279 "
 ; Expanded expression: "L279 "
.dl Label_279
.dl Label_279
.dl Label_279
.dl Label_279

.rdata
Label_280:
.dw 62 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L280 "
 ; Expanded expression: "L280 "
.dl Label_280
.dl Label_280
.dl Label_280
.dl Label_280

.rdata
Label_281:
.dw 40 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L281 "
 ; Expanded expression: "L281 "
.dl Label_281
.dl Label_281
.dl Label_281
.dl Label_281

.rdata
Label_282:
.dw 41 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L282 "
 ; Expanded expression: "L282 "
.dl Label_282
.dl Label_282
.dl Label_282
.dl Label_282

.rdata
Label_283:
.dw 91 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L283 "
 ; Expanded expression: "L283 "
.dl Label_283
.dl Label_283
.dl Label_283
.dl Label_283

.rdata
Label_284:
.dw 93 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L284 "
 ; Expanded expression: "L284 "
.dl Label_284
.dl Label_284
.dl Label_284
.dl Label_284

.rdata
Label_285:
.dw 123 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L285 "
 ; Expanded expression: "L285 "
.dl Label_285
.dl Label_285
.dl Label_285
.dl Label_285

.rdata
Label_286:
.dw 125 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L286 "
 ; Expanded expression: "L286 "
.dl Label_286
.dl Label_286
.dl Label_286
.dl Label_286

.rdata
Label_287:
.dw 61 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L287 "
 ; Expanded expression: "L287 "
.dl Label_287
.dl Label_287
.dl Label_287
.dl Label_287

.rdata
Label_288:
.dw 44 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L288 "
 ; Expanded expression: "L288 "
.dl Label_288
.dl Label_288
.dl Label_288
.dl Label_288

.rdata
Label_289:
.dw 59 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L289 "
 ; Expanded expression: "L289 "
.dl Label_289
.dl Label_289
.dl Label_289
.dl Label_289

.rdata
Label_290:
.dw 58 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L290 "
 ; Expanded expression: "L290 "
.dl Label_290
.dl Label_290
.dl Label_290
.dl Label_290

.rdata
Label_291:
.dw 46 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L291 "
 ; Expanded expression: "L291 "
.dl Label_291
.dl Label_291
.dl Label_291
.dl Label_291

.rdata
Label_292:
.dw 63 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L292 "
 ; Expanded expression: "L292 "
.dl Label_292
.dl Label_292
.dl Label_292
.dl Label_292

.rdata
Label_293:
.dw 60 60 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L293 "
 ; Expanded expression: "L293 "
.dl Label_293
.dl Label_293
.dl Label_293
.dl Label_293

.rdata
Label_294:
.dw 38 38 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L294 "
 ; Expanded expression: "L294 "
.dl Label_294
.dl Label_294
.dl Label_294
.dl Label_294

.rdata
Label_295:
.dw 61 61 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L295 "
 ; Expanded expression: "L295 "
.dl Label_295
.dl Label_295
.dl Label_295
.dl Label_295

.rdata
Label_296:
.dw 60 61 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L296 "
 ; Expanded expression: "L296 "
.dl Label_296
.dl Label_296
.dl Label_296
.dl Label_296

.rdata
Label_297:
.dw 43 43 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L297 "
 ; Expanded expression: "L297 "
.dl Label_297
.dl Label_297
.dl Label_297
.dl Label_297

.rdata
Label_298:
.dw 45 62 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L298 "
 ; Expanded expression: "L298 "
.dl Label_298
.dl Label_298
.dl Label_298
.dl Label_298

.rdata
Label_299:
.dw 42 61 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L299 "
 ; Expanded expression: "L299 "
.dl Label_299
.dl Label_299
.dl Label_299
.dl Label_299

.rdata
Label_300:
.dw 37 61 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L300 "
 ; Expanded expression: "L300 "
.dl Label_300
.dl Label_300
.dl Label_300
.dl Label_300

.rdata
Label_301:
.dw 45 61 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L301 "
 ; Expanded expression: "L301 "
.dl Label_301
.dl Label_301
.dl Label_301
.dl Label_301

.rdata
Label_302:
.dw 62 62 61 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L302 "
 ; Expanded expression: "L302 "
.dl Label_302
.dl Label_302
.dl Label_302
.dl Label_302

.rdata
Label_303:
.dw 94 61 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L303 "
 ; Expanded expression: "L303 "
.dl Label_303
.dl Label_303
.dl Label_303
.dl Label_303

.rdata
Label_304:
.dw 62 62 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L304 "
 ; Expanded expression: "L304 "
.dl Label_304
.dl Label_304
.dl Label_304
.dl Label_304

.rdata
Label_305:
.dw 124 124 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L305 "
 ; Expanded expression: "L305 "
.dl Label_305
.dl Label_305
.dl Label_305
.dl Label_305

.rdata
Label_306:
.dw 33 61 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L306 "
 ; Expanded expression: "L306 "
.dl Label_306
.dl Label_306
.dl Label_306
.dl Label_306

.rdata
Label_307:
.dw 62 61 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L307 "
 ; Expanded expression: "L307 "
.dl Label_307
.dl Label_307
.dl Label_307
.dl Label_307

.rdata
Label_308:
.dw 45 45 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L308 "
 ; Expanded expression: "L308 "
.dl Label_308
.dl Label_308
.dl Label_308
.dl Label_308

.rdata
Label_309:
.dw 46 46 46 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L309 "
 ; Expanded expression: "L309 "
.dl Label_309
.dl Label_309
.dl Label_309
.dl Label_309

.rdata
Label_310:
.dw 47 61 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L310 "
 ; Expanded expression: "L310 "
.dl Label_310
.dl Label_310
.dl Label_310
.dl Label_310

.rdata
Label_311:
.dw 43 61 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L311 "
 ; Expanded expression: "L311 "
.dl Label_311
.dl Label_311
.dl Label_311
.dl Label_311

.rdata
Label_312:
.dw 60 60 61 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L312 "
 ; Expanded expression: "L312 "
.dl Label_312
.dl Label_312
.dl Label_312
.dl Label_312

.rdata
Label_313:
.dw 38 61 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L313 "
 ; Expanded expression: "L313 "
.dl Label_313
.dl Label_313
.dl Label_313
.dl Label_313

.rdata
Label_314:
.dw 124 61 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L314 "
 ; Expanded expression: "L314 "
.dl Label_314
.dl Label_314
.dl Label_314
.dl Label_314

.rdata
Label_315:
.dw 38 117 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L315 "
 ; Expanded expression: "L315 "
.dl Label_315
.dl Label_315
.dl Label_315
.dl Label_315

.rdata
Label_316:
.dw 43 117 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L316 "
 ; Expanded expression: "L316 "
.dl Label_316
.dl Label_316
.dl Label_316
.dl Label_316

.rdata
Label_317:
.dw 43 43 112 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L317 "
 ; Expanded expression: "L317 "
.dl Label_317
.dl Label_317
.dl Label_317
.dl Label_317

.rdata
Label_318:
.dw 43 61 112 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L318 "
 ; Expanded expression: "L318 "
.dl Label_318
.dl Label_318
.dl Label_318
.dl Label_318

.rdata
Label_319:
.dw 60 117 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L319 "
 ; Expanded expression: "L319 "
.dl Label_319
.dl Label_319
.dl Label_319
.dl Label_319

.rdata
Label_320:
.dw 60 61 117 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L320 "
 ; Expanded expression: "L320 "
.dl Label_320
.dl Label_320
.dl Label_320
.dl Label_320

.rdata
Label_321:
.dw 62 62 117 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L321 "
 ; Expanded expression: "L321 "
.dl Label_321
.dl Label_321
.dl Label_321
.dl Label_321

.rdata
Label_322:
.dw 47 117 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L322 "
 ; Expanded expression: "L322 "
.dl Label_322
.dl Label_322
.dl Label_322
.dl Label_322

.rdata
Label_323:
.dw 37 117 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L323 "
 ; Expanded expression: "L323 "
.dl Label_323
.dl Label_323
.dl Label_323
.dl Label_323

.rdata
Label_324:
.dw 44 98 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L324 "
 ; Expanded expression: "L324 "
.dl Label_324
.dl Label_324
.dl Label_324
.dl Label_324

.rdata
Label_325:
.dw 42 117 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L325 "
 ; Expanded expression: "L325 "
.dl Label_325
.dl Label_325
.dl Label_325
.dl Label_325

.rdata
Label_326:
.dw 45 117 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L326 "
 ; Expanded expression: "L326 "
.dl Label_326
.dl Label_326
.dl Label_326
.dl Label_326

.rdata
Label_327:
.dw 45 45 112 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L327 "
 ; Expanded expression: "L327 "
.dl Label_327
.dl Label_327
.dl Label_327
.dl Label_327

.rdata
Label_328:
.dw 45 61 112 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L328 "
 ; Expanded expression: "L328 "
.dl Label_328
.dl Label_328
.dl Label_328
.dl Label_328

.rdata
Label_329:
.dw 62 117 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L329 "
 ; Expanded expression: "L329 "
.dl Label_329
.dl Label_329
.dl Label_329
.dl Label_329

.rdata
Label_330:
.dw 62 61 117 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L330 "
 ; Expanded expression: "L330 "
.dl Label_330
.dl Label_330
.dl Label_330
.dl Label_330

.rdata
Label_331:
.dw 62 62 61 117 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L331 "
 ; Expanded expression: "L331 "
.dl Label_331
.dl Label_331
.dl Label_331
.dl Label_331

.rdata
Label_332:
.dw 47 61 117 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L332 "
 ; Expanded expression: "L332 "
.dl Label_332
.dl Label_332
.dl Label_332
.dl Label_332

.rdata
Label_333:
.dw 37 61 117 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L333 "
 ; Expanded expression: "L333 "
.dl Label_333
.dl Label_333
.dl Label_333
.dl Label_333

.rdata
Label_334:
.dw 60 78 117 109 73 110 116 62 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L334 "
 ; Expanded expression: "L334 "
.dl Label_334
.dl Label_334
.dl Label_334
.dl Label_334

.rdata
Label_335:
.dw 60 76 105 116 83 116 114 62 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L335 "
 ; Expanded expression: "L335 "
.dl Label_335
.dl Label_335
.dl Label_335
.dl Label_335

.rdata
Label_336:
.dw 60 76 111 99 97 108 79 102 115 62 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L336 "
 ; Expanded expression: "L336 "
.dl Label_336
.dl Label_336
.dl Label_336
.dl Label_336

.rdata
Label_337:
.dw 60 78 117 109 85 105 110 116 62 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L337 "
 ; Expanded expression: "L337 "
.dl Label_337
.dl Label_337
.dl Label_337
.dl Label_337

.rdata
Label_338:
.dw 60 73 100 101 110 116 62 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L338 "
 ; Expanded expression: "L338 "
.dl Label_338
.dl Label_338
.dl Label_338
.dl Label_338

.rdata
Label_339:
.dw 60 83 104 111 114 116 67 105 114 99 62 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L339 "
 ; Expanded expression: "L339 "
.dl Label_339
.dl Label_339
.dl Label_339
.dl Label_339

.rdata
Label_340:
.dw 115 105 103 110 101 100 32 99 104 97 114 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L340 "
 ; Expanded expression: "L340 "
.dl Label_340
.dl Label_340
.dl Label_340
.dl Label_340

.rdata
Label_341:
.dw 115 104 111 114 116 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L341 "
 ; Expanded expression: "L341 "
.dl Label_341
.dl Label_341
.dl Label_341
.dl Label_341

.rdata
Label_342:
.dw 108 111 110 103 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L342 "
 ; Expanded expression: "L342 "
.dl Label_342
.dl Label_342
.dl Label_342
.dl Label_342

.rdata
Label_343:
.dw 117 110 115 105 103 110 101 100 32 99 104 97 114 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L343 "
 ; Expanded expression: "L343 "
.dl Label_343
.dl Label_343
.dl Label_343
.dl Label_343

.rdata
Label_344:
.dw 117 110 115 105 103 110 101 100 32 115 104 111 114 116 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L344 "
 ; Expanded expression: "L344 "
.dl Label_344
.dl Label_344
.dl Label_344
.dl Label_344

.rdata
Label_345:
.dw 117 110 115 105 103 110 101 100 32 108 111 110 103 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L345 "
 ; Expanded expression: "L345 "
.dl Label_345
.dl Label_345
.dl Label_345
.dl Label_345

.rdata
Label_346:
.dw 102 108 111 97 116 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L346 "
 ; Expanded expression: "L346 "
.dl Label_346
.dl Label_346
.dl Label_346
.dl Label_346

.rdata
Label_347:
.dw 60 78 117 109 67 104 97 114 87 105 100 101 62 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L347 "
 ; Expanded expression: "L347 "
.dl Label_347
.dl Label_347
.dl Label_347
.dl Label_347

.rdata
Label_348:
.dw 60 76 105 116 83 116 114 87 105 100 101 62 
; .space 1
.dw 0

.data
 ; RPN'ized expression: "L348 "
 ; Expanded expression: "L348 "
.dl Label_348
.dl Label_348
.dl Label_348
.dl Label_348

 ; glb GetTokenName : (
 ; prm     token : int
 ;     ) * char
.code
; .globl GetTokenName
GetTokenName:
 write 0 r13 r4
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     token : (@8) : int
 ; loc     i : (@-4) : unsigned
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_350:
 ; RPN'ized expression: "i ( tktk 0 + *u sizeof , tktk sizeof division ) < "
 ; Expanded expression: "(@-4) *(4)  1u  81u  division ()8 <u "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; 1
 load32 1 r5
 ; ,
 ; 81
 load32 81 r4
 ; ,
 ; division
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump division
 add r13 16 r13
 ; <u
 read 0 r13 r11
 add r13 4 r13
 bges r11 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_353
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; if
 ; RPN'ized expression: "tktk i + *u token == "
 ; Expanded expression: "tktk (@-4) *(4) + *(1) (@8) *(4) == "
 ; tktk
 addr2reg tktk r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; ==
 beq r2 r8 2
 jump Label_354
 ; return
 ; RPN'ized expression: "tks i + *u "
 ; Expanded expression: "tks (@-4) *(4) 4 * + *(4) "
 ; tks
 addr2reg tks r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_349
Label_354:
Label_351:
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_350
Label_353:
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_356:
 ; RPN'ized expression: "i ( rws 0 + *u sizeof , rws sizeof division ) < "
 ; Expanded expression: "(@-4) *(4)  4u  156u  division ()8 <u "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; 4
 load32 4 r5
 ; ,
 ; 156
 load32 156 r4
 ; ,
 ; division
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump division
 add r13 16 r13
 ; <u
 read 0 r13 r11
 add r13 4 r13
 bges r11 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_359
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; if
 ; RPN'ized expression: "rwtk i + *u token == "
 ; Expanded expression: "rwtk (@-4) *(4) + *(1) (@8) *(4) == "
 ; rwtk
 addr2reg rwtk r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; ==
 beq r2 r8 2
 jump Label_360
 ; return
 ; RPN'ized expression: "rws i + *u "
 ; Expanded expression: "rws (@-4) *(4) 4 * + *(4) "
 ; rws
 addr2reg rws r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_349
Label_360:
Label_357:
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_356
Label_359:
 ; RPN'ized expression: "( 1 errorInternal ) "
 ; Expanded expression: " 1  errorInternal ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
 ; return

.rdata
Label_362:
; .space 1
.dw 0

.code
 ; RPN'ized expression: "L362 "
 ; Expanded expression: "L362 "
 ; 362
 addr2reg Label_362 r2
Label_349:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb GetNextChar : (void) int
.code
; .globl GetNextChar
GetNextChar:
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     ch : (@-4) : int
 ; RPN'ized expression: "ch 1 -u = "
 ; Expanded expression: "(@-4) -1 =(4) "
 ; -1
 load32 -1 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "FileCnt Files FileCnt 1 - + *u && "
 ; Expanded expression: "FileCnt *(4) _Bool [sh&&->366] Files FileCnt *(4) 1 - 4 * + *(4) _Bool &&[366] "
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_366
 ; Files
 addr2reg Files r2
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_366:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_364
 ; {
 ; if
 ; RPN'ized expression: "ch ( Files FileCnt 1 - + *u fgetc ) = 1 -u == "
 ; Expanded expression: "(@-4)  Files FileCnt *(4) 1 - 4 * + *(4)  fgetc ()4 =(4) -1 == "
 ; (
 ; Files
 addr2reg Files r4
 ; FileCnt
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r4
 ; 1
 ; -
 sub r4 1 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; fgetc
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump fgetc
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; -1
 ; ==
 load32 -1 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_367
 ; {
 ; RPN'ized expression: "( Files FileCnt 1 - + *u fclose ) "
 ; Expanded expression: " Files FileCnt *(4) 1 - 4 * + *(4)  fclose ()4 "
 ; (
 ; Files
 addr2reg Files r4
 ; FileCnt
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r4
 ; 1
 ; -
 sub r4 1 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; fclose
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump fclose
 add r13 16 r13
 ; RPN'ized expression: "Files FileCnt 1 - + *u 0 = "
 ; Expanded expression: "Files FileCnt *(4) 1 - 4 * + 0 =(4) "
 ; Files
 addr2reg Files r2
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; 0
 ; =
 write 0 r2 r0
 ; RPN'ized expression: "LineNos FileCnt 1 - + *u LineNo = "
 ; Expanded expression: "LineNos FileCnt *(4) 1 - 4 * + LineNo *(4) =(4) "
 ; LineNos
 addr2reg LineNos r2
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; LineNo
 ; * (read dereference)
 addr2reg LineNo r1
 read 0 r1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "LinePoss FileCnt 1 - + *u LinePos = "
 ; Expanded expression: "LinePoss FileCnt *(4) 1 - 4 * + LinePos *(4) =(4) "
 ; LinePoss
 addr2reg LinePoss r2
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; LinePos
 ; * (read dereference)
 addr2reg LinePos r1
 read 0 r1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
Label_367:
 ; }
Label_364:
 ; return
 ; RPN'ized expression: "ch "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
Label_363:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb ShiftChar : (void) void
.code
; .globl ShiftChar
ShiftChar:
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; if
 ; RPN'ized expression: "CharQueueLen "
 ; Expanded expression: "CharQueueLen *(4) "
 ; CharQueueLen
 ; * (read dereference)
 addr2reg CharQueueLen r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_370
 ; RPN'ized expression: "( CharQueueLen -- , CharQueue 1 + , CharQueue memmove ) "
 ; Expanded expression: " CharQueueLen --(4)  CharQueue 1 +  CharQueue  memmove ()12 "
 ; (
 ; CharQueueLen
 ; --
 addr2reg CharQueueLen r1
 read 0 r1 r6
 sub r6 1 r6
 addr2reg CharQueueLen r1
 write 0 r1 r6
 ; ,
 ; CharQueue
 addr2reg CharQueue r5
 ; 1
 ; +
 add r5 1 r5
 ; ,
 ; CharQueue
 addr2reg CharQueue r4
 ; ,
 ; memmove
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memmove
 add r13 16 r13
Label_370:
 ; while
 ; RPN'ized expression: "CharQueueLen 3 < "
 ; Expanded expression: "CharQueueLen *(4) 3 < "
Label_372:
 ; CharQueueLen
 ; * (read dereference)
 addr2reg CharQueueLen r1
 read 0 r1 r2
 ; 3
 ; <
 load32 3 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_373
 ; {
 ; loc         ch : (@-4) : int
 ; RPN'ized expression: "ch ( GetNextChar ) = "
 ; Expanded expression: "(@-4)  GetNextChar ()0 =(4) "
 ; (
 ; GetNextChar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetNextChar
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "ch 1 -u == "
 ; Expanded expression: "(@-4) *(4) -1 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; -1
 ; ==
 load32 -1 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_374
 ; RPN'ized expression: "ch 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_374:
 ; RPN'ized expression: "CharQueue CharQueueLen ++p + *u ch = "
 ; Expanded expression: "CharQueue CharQueueLen ++p(4) + (@-4) *(4) =(-1) "
 ; CharQueue
 addr2reg CharQueue r2
 ; CharQueueLen
 ; ++p
 addr2reg CharQueueLen r1
 read 0 r1 r8
 add r8 1 r8
 addr2reg CharQueueLen r1
 write 0 r1 r8
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
 jump Label_372
Label_373:
Label_369:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb ShiftCharN : (
 ; prm     n : int
 ;     ) void
.code
; .globl ShiftCharN
ShiftCharN:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     n : (@8) : int
 ; while
 ; RPN'ized expression: "n --p 0 > "
 ; Expanded expression: "(@8) --p(4) 0 > "
Label_377:
 ; local ofs
 ; --p
 read 8 r14 r2
 sub r2 1 r2
 write 8 r14 r2
 add r2 1 r2
 ; 0
 ; >
 bgts r2 r0 2
 jump Label_378
 ; {
 ; RPN'ized expression: "( ShiftChar ) "
 ; Expanded expression: " ShiftChar ()0 "
 ; (
 ; ShiftChar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftChar
 add r13 16 r13
 ; RPN'ized expression: "LinePos ++p "
 ; Expanded expression: "LinePos ++p(4) "
 ; LinePos
 ; ++p
 addr2reg LinePos r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LinePos r1
 write 0 r1 r2
 sub r2 1 r2
 ; }
 jump Label_377
Label_378:
Label_376:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb IncludeFile : (
 ; prm     quot : int
 ;     ) void
.code
; .globl IncludeFile
IncludeFile:
 write 0 r13 r4
 sub r13        272 r13
 write        264 r13 r14
 add r13        264 r14
   write 4 r14 r15
 ; loc     quot : (@8) : int
 ; loc     nlen : (@-4) : int
 ; RPN'ized expression: "nlen ( TokenValueString strlen ) = "
 ; Expanded expression: "(@-4)  TokenValueString  strlen ()4 =(4) "
 ; (
 ; TokenValueString
 addr2reg TokenValueString r4
 ; ,
 ; strlen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strlen
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "CharQueueLen 3 != "
 ; Expanded expression: "CharQueueLen *(4) 3 != "
 ; CharQueueLen
 ; * (read dereference)
 addr2reg CharQueueLen r1
 read 0 r1 r2
 ; 3
 ; !=
 load32 3 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_380
 ; RPN'ized expression: "( 2 errorInternal ) "
 ; Expanded expression: " 2  errorInternal ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
Label_380:
 ; if
 ; RPN'ized expression: "FileCnt 8 >= "
 ; Expanded expression: "FileCnt *(4) 8 >= "
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r2
 ; 8
 ; >=
 load32 8 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_382

.rdata
Label_384:
.dw 84 111 111 32 109 97 110 121 32 105 110 99 108 117 100 101 32 102 105 108 101 115 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L384 error ) "
 ; Expanded expression: " L384  error ()4 "
 ; (
 ; 384
 addr2reg Label_384 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_382:
 ; RPN'ized expression: "LineNos FileCnt 1 - + *u LineNo = "
 ; Expanded expression: "LineNos FileCnt *(4) 1 - 4 * + LineNo *(4) =(4) "
 ; LineNos
 addr2reg LineNos r2
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; LineNo
 ; * (read dereference)
 addr2reg LineNo r1
 read 0 r1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "LinePoss FileCnt 1 - + *u LinePos = "
 ; Expanded expression: "LinePoss FileCnt *(4) 1 - 4 * + LinePos *(4) =(4) "
 ; LinePoss
 addr2reg LinePoss r2
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; LinePos
 ; * (read dereference)
 addr2reg LinePos r1
 read 0 r1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "( CharQueueLen , CharQueue , CharQueues FileCnt 1 - + *u memcpy ) "
 ; Expanded expression: " CharQueueLen *(4)  CharQueue  CharQueues FileCnt *(4) 1 - 3 * +  memcpy ()12 "
 ; (
 ; CharQueueLen
 ; * (read dereference)
 addr2reg CharQueueLen r1
 read 0 r1 r6
 ; ,
 ; CharQueue
 addr2reg CharQueue r5
 ; ,
 ; CharQueues
 addr2reg CharQueues r4
 ; FileCnt
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r4
 ; 1
 ; -
 sub r4 1 r4
 ; 3
 sub r13 4 r13
 write 0 r13 r4
 load32 3 r4
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r4 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; memcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memcpy
 add r13 16 r13
 ; if
 ; RPN'ized expression: "nlen 95 > "
 ; Expanded expression: "(@-4) *(4) 95 > "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 95
 ; >
 load32 96 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_385
 ; RPN'ized expression: "( errorFileName ) "
 ; Expanded expression: " errorFileName ()0 "
 ; (
 ; errorFileName
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorFileName
 add r13 16 r13
Label_385:
 ; if
 ; RPN'ized expression: "quot 34 == "
 ; Expanded expression: "(@8) *(4) 34 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 34
 ; ==
 load32 34 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_387
 ; {
 ; RPN'ized expression: "255 "
 ; Expanded expression: "255 "
 ; Expression value: 255

.data
Label_389:
; .space 255
.dw 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

.code
 ; loc         cFileDir : (@-260) : [255u] char
 ; =
 ; (
 ; local ofs
 sub r14 260 r6
 ; ,
 ; 389
 addr2reg Label_389 r5
 ; ,
 ; 255
 load32 255 r4
 ; ,
 ; 390
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump Label_390
 add r13 16 r13
 ; RPN'ized expression: "( FileNames 0 + *u , cFileDir strcpy ) "
 ; Expanded expression: " FileNames 0 +  (@-260)  strcpy ()8 "
 ; (
 ; FileNames
 addr2reg FileNames r5
 ; 0
 ; +
 add r5 0 r5
 ; ,
 ; local ofs
 sub r14 260 r4
 ; ,
 ; strcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcpy
 add r13 16 r13
 ; loc         len : (@-264) : int
 ; RPN'ized expression: "len ( cFileDir strlen ) = "
 ; Expanded expression: "(@-264)  (@-260)  strlen ()4 =(4) "
 ; (
 ; local ofs
 sub r14 260 r4
 ; ,
 ; strlen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strlen
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -264 r14 r2
 ; while
 ; RPN'ized expression: "len 0 > "
 ; Expanded expression: "(@-264) *(4) 0 > "
Label_391:
 ; local ofs
 ; * (read dereference)
 read -264 r14 r2
 ; 0
 ; >
 bgts r2 r0 2
 jump Label_392
 ; {
 ; RPN'ized expression: "len --p "
 ; Expanded expression: "(@-264) --p(4) "
 ; local ofs
 ; --p
 read -264 r14 r2
 sub r2 1 r2
 write -264 r14 r2
 add r2 1 r2
 ; if
 ; RPN'ized expression: "cFileDir len + *u 47 == "
 ; Expanded expression: "(@-260) (@-264) *(4) + *(-1) 47 == "
 ; local ofs
 sub r14 260 r2
 ; local ofs
 ; * (read dereference)
 read -264 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 47
 ; ==
 load32 47 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_393
 ; {
 ; RPN'ized expression: "cFileDir len 1 + + *u 0 = "
 ; Expanded expression: "(@-260) (@-264) *(4) 1 + + 0 =(-1) "
 ; local ofs
 sub r14 260 r2
 ; local ofs
 ; * (read dereference)
 read -264 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; 0
 ; =
 write 0 r2 r0
 ; break
 jump Label_392
 ; }
Label_393:
 ; }
 jump Label_391
Label_392:
 ; if
 ; RPN'ized expression: "len 0 == "
 ; Expanded expression: "(@-264) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -264 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_395
 ; {
 ; RPN'ized expression: "cFileDir 0 + *u 0 = "
 ; Expanded expression: "(@-260) 0 =(-1) "
 ; 0
 ; local ofs
 ; =
 write -260 r14 r0
 ; }
Label_395:
 ; RPN'ized expression: "( TokenValueString , FileNames FileCnt + *u strcpy ) "
 ; Expanded expression: " TokenValueString  FileNames FileCnt *(4) 96 * +  strcpy ()8 "
 ; (
 ; TokenValueString
 addr2reg TokenValueString r5
 ; ,
 ; FileNames
 addr2reg FileNames r4
 ; FileCnt
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r4
 ; 96
 sub r13 4 r13
 write 0 r13 r4
 load32 96 r4
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r4 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; strcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcpy
 add r13 16 r13
 ; RPN'ized expression: "( FileNames FileCnt + *u , cFileDir strcat ) "
 ; Expanded expression: " FileNames FileCnt *(4) 96 * +  (@-260)  strcat ()8 "
 ; (
 ; FileNames
 addr2reg FileNames r5
 ; FileCnt
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r5
 ; 96
 sub r13 4 r13
 write 0 r13 r5
 load32 96 r5
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r5 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; local ofs
 sub r14 260 r4
 ; ,
 ; strcat
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcat
 add r13 16 r13

.rdata
Label_397:
.dw 114 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "Files FileCnt + *u ( L397 , cFileDir fopen ) = "
 ; Expanded expression: "Files FileCnt *(4) 4 * +  L397  (@-260)  fopen ()8 =(4) "
 ; Files
 addr2reg Files r2
 ; FileCnt
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r2
 ; 2
 ; <<
 shiftl r2 2 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; 397
 addr2reg Label_397 r5
 ; ,
 ; local ofs
 sub r14 260 r4
 ; ,
 ; fopen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump fopen
 add r13 16 r13
 ; = (write dereference)
 read 0 r13 r11
 add r13 4 r13
 write 0 r11 r2
 ; }
Label_387:
 ; if
 ; RPN'ized expression: "Files FileCnt + *u 0 == "
 ; Expanded expression: "Files FileCnt *(4) 4 * + *(4) 0 == "
 ; Files
 addr2reg Files r2
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_398
 ; {
 ; loc         i : (@-8) : int
 ; loc         paths : (@-12) : * char
 ; RPN'ized expression: "paths SearchPaths = "
 ; Expanded expression: "(@-12) SearchPaths =(4) "
 ; SearchPaths
 addr2reg SearchPaths r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; loc         pl : (@-16) : int
 ; RPN'ized expression: "pl SearchPathsLen = "
 ; Expanded expression: "(@-16) SearchPathsLen *(4) =(4) "
 ; SearchPathsLen
 ; * (read dereference)
 addr2reg SearchPathsLen r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; for
Label_400:
 ; {
 ; if
 ; RPN'ized expression: "quot 60 == "
 ; Expanded expression: "(@8) *(4) 60 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 60
 ; ==
 load32 60 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_404
 ; {
 ; RPN'ized expression: "paths SysSearchPaths = "
 ; Expanded expression: "(@-12) SysSearchPaths =(4) "
 ; SysSearchPaths
 addr2reg SysSearchPaths r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; RPN'ized expression: "pl SysSearchPathsLen = "
 ; Expanded expression: "(@-16) SysSearchPathsLen *(4) =(4) "
 ; SysSearchPathsLen
 ; * (read dereference)
 addr2reg SysSearchPathsLen r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; }
Label_404:
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-8) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -8 r14 r0
Label_406:
 ; RPN'ized expression: "i pl < "
 ; Expanded expression: "(@-8) *(4) (@-16) *(4) < "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_409
 ; {
 ; loc                 plen : (@-20) : int
 ; RPN'ized expression: "plen ( paths i + strlen ) = "
 ; Expanded expression: "(@-20)  (@-12) *(4) (@-8) *(4) +  strlen ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -8 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; strlen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strlen
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; if
 ; RPN'ized expression: "plen 1 + nlen + 95 < "
 ; Expanded expression: "(@-20) *(4) 1 + (@-4) *(4) + 95 < "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; 95
 ; <
 load32 95 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_410
 ; {
 ; RPN'ized expression: "( paths i + , FileNames FileCnt + *u strcpy ) "
 ; Expanded expression: " (@-12) *(4) (@-8) *(4) +  FileNames FileCnt *(4) 96 * +  strcpy ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -8 r14 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; FileNames
 addr2reg FileNames r4
 ; FileCnt
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r4
 ; 96
 sub r13 4 r13
 write 0 r13 r4
 load32 96 r4
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r4 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; strcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcpy
 add r13 16 r13
 ; RPN'ized expression: "( TokenValueString , FileNames FileCnt + *u plen + 1 + strcpy ) "
 ; Expanded expression: " TokenValueString  FileNames FileCnt *(4) 96 * + (@-20) *(4) + 1 +  strcpy ()8 "
 ; (
 ; TokenValueString
 addr2reg TokenValueString r5
 ; ,
 ; FileNames
 addr2reg FileNames r4
 ; FileCnt
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r4
 ; 96
 sub r13 4 r13
 write 0 r13 r4
 load32 96 r4
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r4 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; 1
 ; +
 add r4 1 r4
 ; ,
 ; strcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcpy
 add r13 16 r13
 ; RPN'ized expression: "FileNames FileCnt + *u plen + *u 47 = "
 ; Expanded expression: "FileNames FileCnt *(4) 96 * + (@-20) *(4) + 47 =(-1) "
 ; FileNames
 addr2reg FileNames r2
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r8
 ; 96
 load32 96 r9
 ; *
 mult r8 r9 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -20 r14 r8
 ; +
 add r2 r8 r2
 ; 47
 load32 47 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; if

.rdata
Label_414:
.dw 114 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "Files FileCnt + *u ( L414 , FileNames FileCnt + *u fopen ) = 0 != "
 ; Expanded expression: "Files FileCnt *(4) 4 * +  L414  FileNames FileCnt *(4) 96 * +  fopen ()8 =(4) 0 != "
 ; Files
 addr2reg Files r2
 ; FileCnt
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r2
 ; 2
 ; <<
 shiftl r2 2 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; 414
 addr2reg Label_414 r5
 ; ,
 ; FileNames
 addr2reg FileNames r4
 ; FileCnt
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r4
 ; 96
 sub r13 4 r13
 write 0 r13 r4
 load32 96 r4
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r4 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; fopen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump fopen
 add r13 16 r13
 ; = (write dereference)
 read 0 r13 r11
 add r13 4 r13
 write 0 r11 r2
 ; 0
 ; !=
 bne r2 r0 2
 jump Label_412
 ; break
 jump Label_409
Label_412:
 ; }
Label_410:
 ; RPN'ized expression: "i plen 1 + += "
 ; Expanded expression: "(@-8) (@-20) *(4) 1 + +=(4) "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; local ofs
 ; +=
 read -8 r14 r12
 add r12 r2 r2
 write -8 r14 r2
 ; }
 jump Label_406
Label_409:
 ; if
 ; RPN'ized expression: "Files FileCnt + *u quot 60 == || "
 ; Expanded expression: "Files FileCnt *(4) 4 * + *(4) _Bool [sh||->417] (@8) *(4) 60 == ||[417] "
 ; Files
 addr2reg Files r2
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_417
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 60
 ; ==
 load32 60 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_417:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_415
 ; break
 jump Label_403
Label_415:
 ; RPN'ized expression: "quot 60 = "
 ; Expanded expression: "(@8) 60 =(4) "
 ; 60
 load32 60 r2
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 jump Label_400
Label_403:
 ; }
Label_398:
 ; if
 ; RPN'ized expression: "Files FileCnt + *u 0 == "
 ; Expanded expression: "Files FileCnt *(4) 4 * + *(4) 0 == "
 ; Files
 addr2reg Files r2
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_418
 ; {
 ; RPN'ized expression: "( TokenValueString errorFile ) "
 ; Expanded expression: " TokenValueString  errorFile ()4 "
 ; (
 ; TokenValueString
 addr2reg TokenValueString r4
 ; ,
 ; errorFile
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorFile
 add r13 16 r13
 ; }
Label_418:
 ; RPN'ized expression: "CharQueueLen 0 = "
 ; Expanded expression: "CharQueueLen 0 =(4) "
 ; 0
 ; CharQueueLen
 ; =
 addr2reg CharQueueLen r1
 write 0 r1 r0
 ; RPN'ized expression: "LineNo LinePos 1 = = "
 ; Expanded expression: "LineNo LinePos 1 =(4) =(4) "
 ; 1
 load32 1 r2
 ; LinePos
 ; = (write dereference)
 addr2reg LinePos r1
 write 0 r1 r2
 ; LineNo
 ; = (write dereference)
 addr2reg LineNo r1
 write 0 r1 r2
 ; RPN'ized expression: "FileCnt ++p "
 ; Expanded expression: "FileCnt ++p(4) "
 ; FileCnt
 ; ++p
 addr2reg FileCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg FileCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; RPN'ized expression: "( ShiftChar ) "
 ; Expanded expression: " ShiftChar ()0 "
 ; (
 ; ShiftChar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftChar
 add r13 16 r13
Label_379:
 read 4 r14 r15
 read 0 r14 r14
 add r13 272 r13
 jumpr 0 r15

 ; glb EndOfFiles : (void) int
.code
; .globl EndOfFiles
EndOfFiles:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; if
 ; RPN'ized expression: "FileCnt -- 0 == "
 ; Expanded expression: "FileCnt --(4) 0 == "
 ; FileCnt
 ; --
 addr2reg FileCnt r1
 read 0 r1 r2
 sub r2 1 r2
 addr2reg FileCnt r1
 write 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_421
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_420
Label_421:
 ; RPN'ized expression: "LineNo LineNos FileCnt 1 - + *u = "
 ; Expanded expression: "LineNo LineNos FileCnt *(4) 1 - 4 * + *(4) =(4) "
 ; LineNos
 addr2reg LineNos r2
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; LineNo
 ; = (write dereference)
 addr2reg LineNo r1
 write 0 r1 r2
 ; RPN'ized expression: "LinePos LinePoss FileCnt 1 - + *u = "
 ; Expanded expression: "LinePos LinePoss FileCnt *(4) 1 - 4 * + *(4) =(4) "
 ; LinePoss
 addr2reg LinePoss r2
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; LinePos
 ; = (write dereference)
 addr2reg LinePos r1
 write 0 r1 r2
 ; RPN'ized expression: "CharQueueLen 3 = "
 ; Expanded expression: "CharQueueLen 3 =(4) "
 ; 3
 load32 3 r2
 ; CharQueueLen
 ; = (write dereference)
 addr2reg CharQueueLen r1
 write 0 r1 r2
 ; RPN'ized expression: "( CharQueueLen , CharQueues FileCnt 1 - + *u , CharQueue memcpy ) "
 ; Expanded expression: " CharQueueLen *(4)  CharQueues FileCnt *(4) 1 - 3 * +  CharQueue  memcpy ()12 "
 ; (
 ; CharQueueLen
 ; * (read dereference)
 addr2reg CharQueueLen r1
 read 0 r1 r6
 ; ,
 ; CharQueues
 addr2reg CharQueues r5
 ; FileCnt
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r5
 ; 1
 ; -
 sub r5 1 r5
 ; 3
 sub r13 4 r13
 write 0 r13 r5
 load32 3 r5
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r5 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; CharQueue
 addr2reg CharQueue r4
 ; ,
 ; memcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memcpy
 add r13 16 r13
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
Label_420:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb SkipSpace : (
 ; prm     SkipNewLines : int
 ;     ) void
.code
; .globl SkipSpace
SkipSpace:
 write 0 r13 r4
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     SkipNewLines : (@8) : int
 ; loc     p : (@-4) : * char
 ; RPN'ized expression: "p CharQueue = "
 ; Expanded expression: "(@-4) CharQueue =(4) "
 ; CharQueue
 addr2reg CharQueue r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; while
 ; RPN'ized expression: "p *u 0 != "
 ; Expanded expression: "(@-4) *(4) *(-1) 0 != "
Label_424:
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; !=
 bne r2 r0 2
 jump Label_425
 ; {
 ; if

.rdata
Label_428:
.dw 32 9 12 11 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L428 strchr ) "
 ; Expanded expression: " (@-4) *(4) *(-1)  L428  strchr ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 428
 addr2reg Label_428 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_426
 ; {
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; continue
 jump Label_424
 ; }
Label_426:
 ; if

.rdata
Label_431:
.dw 13 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L431 strchr ) "
 ; Expanded expression: " (@-4) *(4) *(-1)  L431  strchr ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 431
 addr2reg Label_431 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_429
 ; {
 ; if
 ; RPN'ized expression: "SkipNewLines 0 == "
 ; Expanded expression: "(@8) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_432
 ; return
 jump Label_423
Label_432:
 ; if
 ; RPN'ized expression: "p *u 13 == p 1 + *u 10 == && "
 ; Expanded expression: "(@-4) *(4) *(-1) 13 == [sh&&->436] (@-4) *(4) 1 + *(-1) 10 == &&[436] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 13
 ; ==
 load32 13 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_436
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 10
 ; ==
 load32 10 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_436:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_434
 ; RPN'ized expression: "( ShiftChar ) "
 ; Expanded expression: " ShiftChar ()0 "
 ; (
 ; ShiftChar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftChar
 add r13 16 r13
Label_434:
 ; RPN'ized expression: "( ShiftChar ) "
 ; Expanded expression: " ShiftChar ()0 "
 ; (
 ; ShiftChar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftChar
 add r13 16 r13
 ; RPN'ized expression: "LineNo ++p "
 ; Expanded expression: "LineNo ++p(4) "
 ; LineNo
 ; ++p
 addr2reg LineNo r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LineNo r1
 write 0 r1 r2
 sub r2 1 r2
 ; RPN'ized expression: "LinePos 1 = "
 ; Expanded expression: "LinePos 1 =(4) "
 ; 1
 load32 1 r2
 ; LinePos
 ; = (write dereference)
 addr2reg LinePos r1
 write 0 r1 r2
 ; continue
 jump Label_424
 ; }
Label_429:
 ; if
 ; RPN'ized expression: "p *u 47 == "
 ; Expanded expression: "(@-4) *(4) *(-1) 47 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 47
 ; ==
 load32 47 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_437
 ; {
 ; if
 ; RPN'ized expression: "p 1 + *u 47 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 47 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 47
 ; ==
 load32 47 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_439
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; while

.rdata
Label_443:
.dw 13 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L443 strchr ) 0 == "
 ; Expanded expression: " (@-4) *(4) *(-1)  L443  strchr ()8 0 == "
Label_441:
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 443
 addr2reg Label_443 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_442
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 jump Label_441
Label_442:
 ; continue
 jump Label_424
 ; }
 jump Label_440
Label_439:
 ; else
 ; if
 ; RPN'ized expression: "p 1 + *u 42 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 42 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 42
 ; ==
 load32 42 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_444
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; while
 ; RPN'ized expression: "p *u 0 != p *u 42 == p 1 + *u 47 == && 0 == && "
 ; Expanded expression: "(@-4) *(4) *(-1) 0 != [sh&&->448] (@-4) *(4) *(-1) 42 == [sh&&->449] (@-4) *(4) 1 + *(-1) 47 == &&[449] 0 == &&[448] "
Label_446:
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; !=
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_448
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 42
 ; ==
 load32 42 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_449
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 47
 ; ==
 load32 47 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_449:
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_448:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_447
 ; {
 ; if

.rdata
Label_452:
.dw 13 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L452 strchr ) "
 ; Expanded expression: " (@-4) *(4) *(-1)  L452  strchr ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 452
 addr2reg Label_452 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_450
 ; {
 ; if
 ; RPN'ized expression: "SkipNewLines 0 == "
 ; Expanded expression: "(@8) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_453

.rdata
Label_455:
.dw 73 110 118 97 108 105 100 32 99 111 109 109 101 110 116 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L455 error ) "
 ; Expanded expression: " L455  error ()4 "
 ; (
 ; 455
 addr2reg Label_455 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_453:
 ; if
 ; RPN'ized expression: "p *u 13 == p 1 + *u 10 == && "
 ; Expanded expression: "(@-4) *(4) *(-1) 13 == [sh&&->458] (@-4) *(4) 1 + *(-1) 10 == &&[458] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 13
 ; ==
 load32 13 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_458
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 10
 ; ==
 load32 10 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_458:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_456
 ; RPN'ized expression: "( ShiftChar ) "
 ; Expanded expression: " ShiftChar ()0 "
 ; (
 ; ShiftChar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftChar
 add r13 16 r13
Label_456:
 ; RPN'ized expression: "( ShiftChar ) "
 ; Expanded expression: " ShiftChar ()0 "
 ; (
 ; ShiftChar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftChar
 add r13 16 r13
 ; RPN'ized expression: "LineNo ++p "
 ; Expanded expression: "LineNo ++p(4) "
 ; LineNo
 ; ++p
 addr2reg LineNo r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LineNo r1
 write 0 r1 r2
 sub r2 1 r2
 ; RPN'ized expression: "LinePos 1 = "
 ; Expanded expression: "LinePos 1 =(4) "
 ; 1
 load32 1 r2
 ; LinePos
 ; = (write dereference)
 addr2reg LinePos r1
 write 0 r1 r2
 ; }
 jump Label_451
Label_450:
 ; else
 ; {
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; }
Label_451:
 ; }
 jump Label_446
Label_447:
 ; if
 ; RPN'ized expression: "p *u 0 == "
 ; Expanded expression: "(@-4) *(4) *(-1) 0 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_459

.rdata
Label_461:
.dw 73 110 118 97 108 105 100 32 99 111 109 109 101 110 116 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L461 error ) "
 ; Expanded expression: " L461  error ()4 "
 ; (
 ; 461
 addr2reg Label_461 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_459:
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; continue
 jump Label_424
 ; }
Label_444:
Label_440:
 ; }
Label_437:
 ; break
 jump Label_425
 ; }
 jump Label_424
Label_425:
Label_423:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb SkipLine : (void) void
.code
; .globl SkipLine
SkipLine:
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     p : (@-4) : * char
 ; RPN'ized expression: "p CharQueue = "
 ; Expanded expression: "(@-4) CharQueue =(4) "
 ; CharQueue
 addr2reg CharQueue r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; while
 ; RPN'ized expression: "p *u 0 != "
 ; Expanded expression: "(@-4) *(4) *(-1) 0 != "
Label_463:
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; !=
 bne r2 r0 2
 jump Label_464
 ; {
 ; if

.rdata
Label_467:
.dw 13 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L467 strchr ) "
 ; Expanded expression: " (@-4) *(4) *(-1)  L467  strchr ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 467
 addr2reg Label_467 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_465
 ; {
 ; if
 ; RPN'ized expression: "p *u 13 == p 1 + *u 10 == && "
 ; Expanded expression: "(@-4) *(4) *(-1) 13 == [sh&&->470] (@-4) *(4) 1 + *(-1) 10 == &&[470] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 13
 ; ==
 load32 13 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_470
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 10
 ; ==
 load32 10 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_470:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_468
 ; RPN'ized expression: "( ShiftChar ) "
 ; Expanded expression: " ShiftChar ()0 "
 ; (
 ; ShiftChar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftChar
 add r13 16 r13
Label_468:
 ; RPN'ized expression: "( ShiftChar ) "
 ; Expanded expression: " ShiftChar ()0 "
 ; (
 ; ShiftChar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftChar
 add r13 16 r13
 ; RPN'ized expression: "LineNo ++p "
 ; Expanded expression: "LineNo ++p(4) "
 ; LineNo
 ; ++p
 addr2reg LineNo r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LineNo r1
 write 0 r1 r2
 sub r2 1 r2
 ; RPN'ized expression: "LinePos 1 = "
 ; Expanded expression: "LinePos 1 =(4) "
 ; 1
 load32 1 r2
 ; LinePos
 ; = (write dereference)
 addr2reg LinePos r1
 write 0 r1 r2
 ; break
 jump Label_464
 ; }
 jump Label_466
Label_465:
 ; else
 ; {
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; }
Label_466:
 ; }
 jump Label_463
Label_464:
Label_462:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb GetIdent : (void) void
.code
; .globl GetIdent
GetIdent:
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     p : (@-4) : * char
 ; RPN'ized expression: "p CharQueue = "
 ; Expanded expression: "(@-4) CharQueue =(4) "
 ; CharQueue
 addr2reg CharQueue r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "p *u 95 != ( p *u 255u & isalpha ) 0 == && "
 ; Expanded expression: "(@-4) *(4) *(-1) 95 != [sh&&->474]  (@-4) *(4) *(-1) 255u &  isalpha ()4 0 == &&[474] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 95
 ; !=
 load32 95 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_474
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; 255
 ; &
 and r4 255 r4
 ; ,
 ; isalpha
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isalpha
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_474:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_472

.rdata
Label_475:
.dw 73 100 101 110 116 105 102 105 101 114 32 101 120 112 101 99 116 101 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L475 error ) "
 ; Expanded expression: " L475  error ()4 "
 ; (
 ; 475
 addr2reg Label_475 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_472:
 ; if
 ; RPN'ized expression: "p *u 76 == p 1 + *u 39 == p 1 + *u 34 == || && "
 ; Expanded expression: "(@-4) *(4) *(-1) 76 == [sh&&->478] (@-4) *(4) 1 + *(-1) 39 == [sh||->479] (@-4) *(4) 1 + *(-1) 34 == ||[479] _Bool &&[478] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 76
 ; ==
 load32 76 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_478
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 39
 ; ==
 load32 39 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_479
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 34
 ; ==
 load32 34 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_479:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_478:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_476
 ; RPN'ized expression: "( errorChrStr ) "
 ; Expanded expression: " errorChrStr ()0 "
 ; (
 ; errorChrStr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorChrStr
 add r13 16 r13
Label_476:
 ; RPN'ized expression: "TokenIdentNameLen 0 = "
 ; Expanded expression: "TokenIdentNameLen 0 =(4) "
 ; 0
 ; TokenIdentNameLen
 ; =
 addr2reg TokenIdentNameLen r1
 write 0 r1 r0
 ; RPN'ized expression: "TokenIdentName TokenIdentNameLen ++p + *u p *u = "
 ; Expanded expression: "TokenIdentName TokenIdentNameLen ++p(4) + (@-4) *(4) *(-1) =(-1) "
 ; TokenIdentName
 addr2reg TokenIdentName r2
 ; TokenIdentNameLen
 ; ++p
 addr2reg TokenIdentNameLen r1
 read 0 r1 r8
 add r8 1 r8
 addr2reg TokenIdentNameLen r1
 write 0 r1 r8
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "TokenIdentName TokenIdentNameLen + *u 0 = "
 ; Expanded expression: "TokenIdentName TokenIdentNameLen *(4) + 0 =(-1) "
 ; TokenIdentName
 addr2reg TokenIdentName r2
 ; TokenIdentNameLen
 ; * (read dereference)
 addr2reg TokenIdentNameLen r1
 read 0 r1 r8
 ; +
 add r2 r8 r2
 ; 0
 ; =
 write 0 r2 r0
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; while
 ; RPN'ized expression: "p *u 95 == ( p *u 255u & isalnum ) || "
 ; Expanded expression: "(@-4) *(4) *(-1) 95 == [sh||->482]  (@-4) *(4) *(-1) 255u &  isalnum ()4 _Bool ||[482] "
Label_480:
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 95
 ; ==
 load32 95 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_482
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; 255
 ; &
 and r4 255 r4
 ; ,
 ; isalnum
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isalnum
 add r13 16 r13
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_482:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_481
 ; {
 ; if
 ; RPN'ized expression: "TokenIdentNameLen 63 == "
 ; Expanded expression: "TokenIdentNameLen *(4) 63 == "
 ; TokenIdentNameLen
 ; * (read dereference)
 addr2reg TokenIdentNameLen r1
 read 0 r1 r2
 ; 63
 ; ==
 load32 63 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_483

.rdata
Label_485:
.dw 73 100 101 110 116 105 102 105 101 114 32 116 111 111 32 108 111 110 103 32 39 37 115 39 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( TokenIdentName , L485 error ) "
 ; Expanded expression: " TokenIdentName  L485  error ()8 "
 ; (
 ; TokenIdentName
 addr2reg TokenIdentName r5
 ; ,
 ; 485
 addr2reg Label_485 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_483:
 ; RPN'ized expression: "TokenIdentName TokenIdentNameLen ++p + *u p *u = "
 ; Expanded expression: "TokenIdentName TokenIdentNameLen ++p(4) + (@-4) *(4) *(-1) =(-1) "
 ; TokenIdentName
 addr2reg TokenIdentName r2
 ; TokenIdentNameLen
 ; ++p
 addr2reg TokenIdentNameLen r1
 read 0 r1 r8
 add r8 1 r8
 addr2reg TokenIdentNameLen r1
 write 0 r1 r8
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "TokenIdentName TokenIdentNameLen + *u 0 = "
 ; Expanded expression: "TokenIdentName TokenIdentNameLen *(4) + 0 =(-1) "
 ; TokenIdentName
 addr2reg TokenIdentName r2
 ; TokenIdentNameLen
 ; * (read dereference)
 addr2reg TokenIdentNameLen r1
 read 0 r1 r8
 ; +
 add r2 r8 r2
 ; 0
 ; =
 write 0 r2 r0
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; }
 jump Label_480
Label_481:
Label_471:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb GetCharValue : (
 ; prm     wide : int
 ;     ) unsigned
.code
; .globl GetCharValue
GetCharValue:
 write 0 r13 r4
 sub r13         28 r13
 write         20 r13 r14
 add r13         20 r14
   write 4 r14 r15
 ; loc     wide : (@8) : int
 ; loc     p : (@-4) : * char
 ; RPN'ized expression: "p CharQueue = "
 ; Expanded expression: "(@-4) CharQueue =(4) "
 ; CharQueue
 addr2reg CharQueue r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc     ch : (@-8) : unsigned
 ; RPN'ized expression: "ch 0 = "
 ; Expanded expression: "(@-8) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -8 r14 r0
 ; loc     cnt : (@-12) : int
 ; RPN'ized expression: "cnt 0 = "
 ; Expanded expression: "(@-12) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -12 r14 r0
 ; loc     <something> : void
 ; RPN'ized expression: "wide (something487) "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; if
 ; RPN'ized expression: "p *u 92 == "
 ; Expanded expression: "(@-4) *(4) *(-1) 92 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 92
 ; ==
 load32 92 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_488
 ; {
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; if

.rdata
Label_492:
.dw 10 13 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L492 strchr ) "
 ; Expanded expression: " (@-4) *(4) *(-1)  L492  strchr ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 492
 addr2reg Label_492 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_490
 ; goto lerr
 jump Label_493
Label_490:
 ; if
 ; RPN'ized expression: "p *u 120 == "
 ; Expanded expression: "(@-4) *(4) *(-1) 120 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 120
 ; ==
 load32 120 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_494
 ; {
 ; loc             digs : Label_496 : [0u] char

.data
Label_496:
 ; =
.dw 48 49 50 51 52 53 54 55 56 57 65 66 67 68 69 70 97 98 99 100 101 102 
; .space 1
.dw 0

.code
 ; loc             vals : Label_497 : [0u] char

.data
Label_497:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 .dw 1
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 .dw 2
 ; RPN'ized expression: "3 "
 ; Expanded expression: "3 "
 ; Expression value: 3
 .dw 3
 ; RPN'ized expression: "4 "
 ; Expanded expression: "4 "
 ; Expression value: 4
 .dw 4
 ; RPN'ized expression: "5 "
 ; Expanded expression: "5 "
 ; Expression value: 5
 .dw 5
 ; RPN'ized expression: "6 "
 ; Expanded expression: "6 "
 ; Expression value: 6
 .dw 6
 ; RPN'ized expression: "7 "
 ; Expanded expression: "7 "
 ; Expression value: 7
 .dw 7
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
 .dw 8
 ; RPN'ized expression: "9 "
 ; Expanded expression: "9 "
 ; Expression value: 9
 .dw 9
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
 .dw 10
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
 .dw 11
 ; RPN'ized expression: "12 "
 ; Expanded expression: "12 "
 ; Expression value: 12
 .dw 12
 ; RPN'ized expression: "13 "
 ; Expanded expression: "13 "
 ; Expression value: 13
 .dw 13
 ; RPN'ized expression: "14 "
 ; Expanded expression: "14 "
 ; Expression value: 14
 .dw 14
 ; RPN'ized expression: "15 "
 ; Expanded expression: "15 "
 ; Expression value: 15
 .dw 15
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
 .dw 10
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
 .dw 11
 ; RPN'ized expression: "12 "
 ; Expanded expression: "12 "
 ; Expression value: 12
 .dw 12
 ; RPN'ized expression: "13 "
 ; Expanded expression: "13 "
 ; Expression value: 13
 .dw 13
 ; RPN'ized expression: "14 "
 ; Expanded expression: "14 "
 ; Expression value: 14
 .dw 14
 ; RPN'ized expression: "15 "
 ; Expanded expression: "15 "
 ; Expression value: 15
 .dw 15

.code
 ; loc             pp : (@-16) : * char
 ; loc             zeroes : (@-20) : int
 ; RPN'ized expression: "zeroes 0 = "
 ; Expanded expression: "(@-20) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -20 r14 r0
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; if

.rdata
Label_500:
.dw 10 13 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L500 strchr ) "
 ; Expanded expression: " (@-4) *(4) *(-1)  L500  strchr ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 500
 addr2reg Label_500 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_498
 ; goto lerr
 jump Label_493
Label_498:
 ; if
 ; RPN'ized expression: "p *u 48 == "
 ; Expanded expression: "(@-4) *(4) *(-1) 48 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 48
 ; ==
 load32 48 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_501
 ; {
 ; do
Label_503:
 ; {
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; }
 ; while
 ; RPN'ized expression: "p *u 48 == "
 ; Expanded expression: "(@-4) *(4) *(-1) 48 == "
Label_504:
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 48
 ; ==
 load32 48 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_503
Label_505:
 ; RPN'ized expression: "zeroes 1 = "
 ; Expanded expression: "(@-20) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; }
Label_501:
 ; while
 ; RPN'ized expression: "p *u pp ( p *u , digs strchr ) = 0 != && "
 ; Expanded expression: "(@-4) *(4) *(-1) _Bool [sh&&->508] (@-16)  (@-4) *(4) *(-1)  L496  strchr ()8 =(4) 0 != &&[508] "
Label_506:
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_508
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 496
 addr2reg Label_496 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; 0
 ; !=
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_508:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_507
 ; {
 ; RPN'ized expression: "ch 4 <<= "
 ; Expanded expression: "(@-8) 4 <<=(4) "
 ; 4
 load32 4 r2
 ; local ofs
 ; <<=
 read -8 r14 r12
 shiftl r12 r2 r2
 write -8 r14 r2
 ; RPN'ized expression: "ch vals pp digs - + *u |= "
 ; Expanded expression: "(@-8) L497 (@-16) *(4) L496 - + *(-1) |=(4) "
 ; 497
 addr2reg Label_497 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 496
 addr2reg Label_496 r9
 ; -
 sub r8 r9 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; |=
 read -8 r14 r12
 or r12 r2 r2
 write -8 r14 r2
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; if
 ; RPN'ized expression: "cnt ++ 2 > "
 ; Expanded expression: "(@-12) ++(4) 2 > "
 ; local ofs
 ; ++
 read -12 r14 r2
 add r2 1 r2
 write -12 r14 r2
 ; 2
 ; >
 load32 3 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_509
 ; {
 ; if
 ; RPN'ized expression: "PrepDontSkipTokens "
 ; Expanded expression: "PrepDontSkipTokens *(4) "
 ; PrepDontSkipTokens
 ; * (read dereference)
 addr2reg PrepDontSkipTokens r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_511
 ; goto lerr
 jump Label_493
Label_511:
 ; }
Label_509:
 ; }
 jump Label_506
Label_507:
 ; if
 ; RPN'ized expression: "zeroes cnt + 0 == "
 ; Expanded expression: "(@-20) *(4) (@-12) *(4) + 0 == "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; +
 add r2 r8 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_513
 ; goto lerr
 jump Label_493
Label_513:
 ; }
 jump Label_495
Label_494:
 ; else
 ; if
 ; RPN'ized expression: "p *u 48 >= p *u 55 <= && "
 ; Expanded expression: "(@-4) *(4) *(-1) 48 >= [sh&&->517] (@-4) *(4) *(-1) 55 <= &&[517] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 48
 ; >=
 load32 48 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_517
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 55
 ; <=
 load32 56 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_517:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_515
 ; {
 ; do
Label_518:
 ; {
 ; RPN'ized expression: "ch 3 <<= "
 ; Expanded expression: "(@-8) 3 <<=(4) "
 ; 3
 load32 3 r2
 ; local ofs
 ; <<=
 read -8 r14 r12
 shiftl r12 r2 r2
 write -8 r14 r2
 ; RPN'ized expression: "ch p *u 48 - |= "
 ; Expanded expression: "(@-8) (@-4) *(4) *(-1) 48 - |=(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 48
 ; -
 sub r2 48 r2
 ; local ofs
 ; |=
 read -8 r14 r12
 or r12 r2 r2
 write -8 r14 r2
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; RPN'ized expression: "cnt ++ "
 ; Expanded expression: "(@-12) ++(4) "
 ; local ofs
 ; ++
 read -12 r14 r2
 add r2 1 r2
 write -12 r14 r2
 ; }
 ; while
 ; RPN'ized expression: "p *u 48 >= p *u 55 <= && cnt 3 < && "
 ; Expanded expression: "(@-4) *(4) *(-1) 48 >= [sh&&->522] (@-4) *(4) *(-1) 55 <= &&[522] _Bool [sh&&->521] (@-12) *(4) 3 < &&[521] "
Label_519:
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 48
 ; >=
 load32 48 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_522
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 55
 ; <=
 load32 56 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_522:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_521
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 3
 ; <
 load32 3 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_521:
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_518
Label_520:
 ; if
 ; RPN'ized expression: "ch 8 >> "
 ; Expanded expression: "(@-8) *(4) 8 >>u "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 8
 ; >>u
 shiftr r2 8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_523
 ; goto lerr
 jump Label_493
Label_523:
 ; }
 jump Label_516
Label_515:
 ; else
 ; {
 ; switch
 ; RPN'ized expression: "p *u "
 ; Expanded expression: "(@-4) *(4) *(-1) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_526
 ; {
 ; case
 ; RPN'ized expression: "97 "
 ; Expanded expression: "97 "
 ; Expression value: 97
Label_527:
 ; RPN'ized expression: "ch 7 = "
 ; Expanded expression: "(@-8) 7 =(4) "
 ; 7
 load32 7 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; break
 jump Label_525
 ; case
 ; RPN'ized expression: "98 "
 ; Expanded expression: "98 "
 ; Expression value: 98
Label_528:
 ; RPN'ized expression: "ch 8 = "
 ; Expanded expression: "(@-8) 8 =(4) "
 ; 8
 load32 8 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; break
 jump Label_525
 ; case
 ; RPN'ized expression: "102 "
 ; Expanded expression: "102 "
 ; Expression value: 102
Label_529:
 ; RPN'ized expression: "ch 12 = "
 ; Expanded expression: "(@-8) 12 =(4) "
 ; 12
 load32 12 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; break
 jump Label_525
 ; case
 ; RPN'ized expression: "110 "
 ; Expanded expression: "110 "
 ; Expression value: 110
Label_530:
 ; RPN'ized expression: "ch 10 = "
 ; Expanded expression: "(@-8) 10 =(4) "
 ; 10
 load32 10 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; break
 jump Label_525
 ; case
 ; RPN'ized expression: "114 "
 ; Expanded expression: "114 "
 ; Expression value: 114
Label_531:
 ; RPN'ized expression: "ch 13 = "
 ; Expanded expression: "(@-8) 13 =(4) "
 ; 13
 load32 13 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; break
 jump Label_525
 ; case
 ; RPN'ized expression: "116 "
 ; Expanded expression: "116 "
 ; Expression value: 116
Label_532:
 ; RPN'ized expression: "ch 9 = "
 ; Expanded expression: "(@-8) 9 =(4) "
 ; 9
 load32 9 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; break
 jump Label_525
 ; case
 ; RPN'ized expression: "118 "
 ; Expanded expression: "118 "
 ; Expression value: 118
Label_533:
 ; RPN'ized expression: "ch 11 = "
 ; Expanded expression: "(@-8) 11 =(4) "
 ; 11
 load32 11 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; break
 jump Label_525
 ; default
Label_534:
 ; goto lself
 jump Label_535
 ; }
 jump Label_525
Label_526:
 load32 97 r12
 bne r2 r12 2
 jump Label_527
 load32 98 r12
 bne r2 r12 2
 jump Label_528
 load32 102 r12
 bne r2 r12 2
 jump Label_529
 load32 110 r12
 bne r2 r12 2
 jump Label_530
 load32 114 r12
 bne r2 r12 2
 jump Label_531
 load32 116 r12
 bne r2 r12 2
 jump Label_532
 load32 118 r12
 bne r2 r12 2
 jump Label_533
 jump Label_534
Label_525:
 ; }
Label_516:
Label_495:
 ; }
 jump Label_489
Label_488:
 ; else
 ; {
 ; lself:
Label_535:
 ; if

.rdata
Label_538:
.dw 10 13 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L538 strchr ) "
 ; Expanded expression: " (@-4) *(4) *(-1)  L538  strchr ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 538
 addr2reg Label_538 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_536
 ; {
 ; lerr:
Label_493:
 ; RPN'ized expression: "( errorChrStr ) "
 ; Expanded expression: " errorChrStr ()0 "
 ; (
 ; errorChrStr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorChrStr
 add r13 16 r13
 ; }
Label_536:
 ; RPN'ized expression: "ch p *u 255u & = "
 ; Expanded expression: "(@-8) (@-4) *(4) *(-1) 255u & =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 255
 ; &
 and r2 255 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; }
Label_489:
 ; return
 ; RPN'ized expression: "ch "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
Label_486:
 read 4 r14 r15
 read 0 r14 r14
 add r13 28 r13
 jumpr 0 r15

 ; glb GetString : (
 ; prm     terminator : char
 ; prm     wide : int
 ; prm     option : int
 ;     ) void
.code
; .globl GetString
GetString:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13         24 r13
 write         16 r13 r14
 add r13         16 r14
   write 4 r14 r15
 ; loc     terminator : (@8) : char
 ; loc     wide : (@12) : int
 ; loc     option : (@16) : int
 ; loc     p : (@-4) : * char
 ; RPN'ized expression: "p CharQueue = "
 ; Expanded expression: "(@-4) CharQueue =(4) "
 ; CharQueue
 addr2reg CharQueue r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc     ch : (@-8) : unsigned
 ; RPN'ized expression: "ch 0 = "
 ; Expanded expression: "(@-8) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -8 r14 r0
 ; loc     chsz : (@-12) : unsigned
 ; RPN'ized expression: "chsz 1 = "
 ; Expanded expression: "(@-12) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; loc     i : (@-16) : int
 ; RPN'ized expression: "TokenStringLen 0 = "
 ; Expanded expression: "TokenStringLen 0 =(4) "
 ; 0
 ; TokenStringLen
 ; =
 addr2reg TokenStringLen r1
 write 0 r1 r0
 ; RPN'ized expression: "TokenStringSize 0 = "
 ; Expanded expression: "TokenStringSize 0 =(4) "
 ; 0
 ; TokenStringSize
 ; =
 addr2reg TokenStringSize r1
 write 0 r1 r0
 ; RPN'ized expression: "TokenValueString TokenStringLen + *u 0 = "
 ; Expanded expression: "TokenValueString TokenStringLen *(4) + 0 =(-1) "
 ; TokenValueString
 addr2reg TokenValueString r2
 ; TokenStringLen
 ; * (read dereference)
 addr2reg TokenStringLen r1
 read 0 r1 r8
 ; +
 add r2 r8 r2
 ; 0
 ; =
 write 0 r2 r0
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; while

.rdata
Label_542:
.dw 10 13 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p *u terminator == ( p *u , L542 strchr ) || 0 == "
 ; Expanded expression: "(@-4) *(4) *(-1) (@8) *(-1) == [sh||->543]  (@-4) *(4) *(-1)  L542  strchr ()8 _Bool ||[543] 0 == "
Label_540:
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ==
 read 0 r13 r11
 add r13 4 r13
 xor r11 r2 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_543
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 542
 addr2reg Label_542 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_543:
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_541
 ; {
 ; RPN'ized expression: "ch ( wide GetCharValue ) = "
 ; Expanded expression: "(@-8)  (@12) *(4)  GetCharValue ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; GetCharValue
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetCharValue
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; switch
 ; RPN'ized expression: "option "
 ; Expanded expression: "(@16) *(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 jump Label_545
 ; {
 ; case
 ; RPN'ized expression: "35 "
 ; Expanded expression: "35 "
 ; Expression value: 35
Label_546:
 ; if
 ; RPN'ized expression: "TokenStringLen 255 == "
 ; Expanded expression: "TokenStringLen *(4) 255 == "
 ; TokenStringLen
 ; * (read dereference)
 addr2reg TokenStringLen r1
 read 0 r1 r2
 ; 255
 ; ==
 load32 255 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_547
 ; RPN'ized expression: "( errorStrLen ) "
 ; Expanded expression: " errorStrLen ()0 "
 ; (
 ; errorStrLen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorStrLen
 add r13 16 r13
Label_547:
 ; RPN'ized expression: "TokenValueString TokenStringLen ++p + *u ch = "
 ; Expanded expression: "TokenValueString TokenStringLen ++p(4) + (@-8) *(4) =(-1) "
 ; TokenValueString
 addr2reg TokenValueString r2
 ; TokenStringLen
 ; ++p
 addr2reg TokenStringLen r1
 read 0 r1 r8
 add r8 1 r8
 addr2reg TokenStringLen r1
 write 0 r1 r8
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "TokenValueString TokenStringLen + *u 0 = "
 ; Expanded expression: "TokenValueString TokenStringLen *(4) + 0 =(-1) "
 ; TokenValueString
 addr2reg TokenValueString r2
 ; TokenStringLen
 ; * (read dereference)
 addr2reg TokenStringLen r1
 read 0 r1 r8
 ; +
 add r2 r8 r2
 ; 0
 ; =
 write 0 r2 r0
 ; RPN'ized expression: "TokenStringSize chsz += "
 ; Expanded expression: "TokenStringSize (@-12) *(4) +=(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; TokenStringSize
 ; +=
 addr2reg TokenStringSize r1
 read 0 r1 r12
 add r12 r2 r2
 addr2reg TokenStringSize r1
 write 0 r1 r2
 ; break
 jump Label_544
 ; case
 ; RPN'ized expression: "97 "
 ; Expanded expression: "97 "
 ; Expression value: 97
Label_549:

.rdata
Label_550:
.dw 37 99 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ch , L550 printf2 ) "
 ; Expanded expression: " (@-8) *(4)  L550  printf2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r5
 ; ,
 ; 550
 addr2reg Label_550 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_544
 ; case
 ; RPN'ized expression: "100 "
 ; Expanded expression: "100 "
 ; Expression value: 100
Label_551:
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-16) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -16 r14 r0
Label_552:
 ; RPN'ized expression: "i chsz < "
 ; Expanded expression: "(@-16) *(4) (@-12) *(4) <u "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; <u
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_555
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-16) ++p(4) "
 ; {
 ; RPN'ized expression: "( ch 255u & GenDumpChar ) "
 ; Expanded expression: " (@-8) *(4) 255u &  GenDumpChar ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; 255
 ; &
 and r4 255 r4
 ; ,
 ; GenDumpChar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenDumpChar
 add r13 16 r13
 ; RPN'ized expression: "ch 8 >>= "
 ; Expanded expression: "(@-8) 8 >>=u(4) "
 ; 8
 load32 8 r2
 ; local ofs
 ; >>=u
 read -8 r14 r12
 shiftr r12 r2 r2
 write -8 r14 r2
 ; RPN'ized expression: "TokenStringLen ++p "
 ; Expanded expression: "TokenStringLen ++p(4) "
 ; TokenStringLen
 ; ++p
 addr2reg TokenStringLen r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg TokenStringLen r1
 write 0 r1 r2
 sub r2 1 r2
 ; }
Label_553:
 ; local ofs
 ; ++p
 read -16 r14 r2
 add r2 1 r2
 write -16 r14 r2
 sub r2 1 r2
 jump Label_552
Label_555:
 ; RPN'ized expression: "TokenStringLen chsz -= "
 ; Expanded expression: "TokenStringLen (@-12) *(4) -=(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; TokenStringLen
 ; -=
 addr2reg TokenStringLen r1
 read 0 r1 r12
 sub r12 r2 r2
 addr2reg TokenStringLen r1
 write 0 r1 r2
 ; default
Label_556:
 ; if
 ; RPN'ized expression: "TokenStringSize 4294967295u chsz - > "
 ; Expanded expression: "TokenStringSize *(4) 4294967295u (@-12) *(4) - >u "
 ; TokenStringSize
 ; * (read dereference)
 addr2reg TokenStringSize r1
 read 0 r1 r2
 ; -1
 load32 -1 r8
 ; local ofs
 ; * (read dereference)
 read -12 r14 r9
 ; -
 sub r8 r9 r8
 ; >u
 bges r8 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_557
 ; RPN'ized expression: "( errorStrLen ) "
 ; Expanded expression: " errorStrLen ()0 "
 ; (
 ; errorStrLen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorStrLen
 add r13 16 r13
Label_557:
 ; RPN'ized expression: "TokenStringSize chsz += "
 ; Expanded expression: "TokenStringSize (@-12) *(4) +=(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; TokenStringSize
 ; +=
 addr2reg TokenStringSize r1
 read 0 r1 r12
 add r12 r2 r2
 addr2reg TokenStringSize r1
 write 0 r1 r2
 ; RPN'ized expression: "TokenStringLen ++p "
 ; Expanded expression: "TokenStringLen ++p(4) "
 ; TokenStringLen
 ; ++p
 addr2reg TokenStringLen r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg TokenStringLen r1
 write 0 r1 r2
 sub r2 1 r2
 ; break
 jump Label_544
 ; }
 jump Label_544
Label_545:
 load32 35 r12
 bne r2 r12 2
 jump Label_546
 load32 97 r12
 bne r2 r12 2
 jump Label_549
 load32 100 r12
 bne r2 r12 2
 jump Label_551
 jump Label_556
Label_544:
 ; }
 jump Label_540
Label_541:
 ; if
 ; RPN'ized expression: "p *u terminator != "
 ; Expanded expression: "(@-4) *(4) *(-1) (@8) *(-1) != "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; !=
 bne r2 r8 2
 jump Label_559
 ; RPN'ized expression: "( errorChrStr ) "
 ; Expanded expression: " errorChrStr ()0 "
 ; (
 ; errorChrStr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorChrStr
 add r13 16 r13
Label_559:
 ; if
 ; RPN'ized expression: "option 100 == "
 ; Expanded expression: "(@16) *(4) 100 == "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 100
 ; ==
 load32 100 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_561
 ; RPN'ized expression: "( 1 -u GenDumpChar ) "
 ; Expanded expression: " -1  GenDumpChar ()4 "
 ; (
 ; -1
 load32 -1 r4
 ; ,
 ; GenDumpChar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenDumpChar
 add r13 16 r13
Label_561:
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; RPN'ized expression: "( option 35 != SkipSpace ) "
 ; Expanded expression: " (@16) *(4) 35 !=  SkipSpace ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r4
 ; 35
 ; !=
 load32 35 r1
 xor r4 r1 r4
 bges r0 r4 3
 load32 1 r4
 jumpo 2
 load32 0 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
Label_539:
 read 4 r14 r15
 read 0 r14 r14
 add r13 24 r13
 jumpr 0 r15

 ; glb pushPrep : (
 ; prm     NoSkip : int
 ;     ) void
.code
; .globl pushPrep
pushPrep:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     NoSkip : (@8) : int
 ; if
 ; RPN'ized expression: "PrepSp 8 >= "
 ; Expanded expression: "PrepSp *(4) 8 >= "
 ; PrepSp
 ; * (read dereference)
 addr2reg PrepSp r1
 read 0 r1 r2
 ; 8
 ; >=
 load32 8 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_564

.rdata
Label_566:
.dw 84 111 111 32 109 97 110 121 32 35 105 102 40 110 41 100 101 102 39 115 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L566 error ) "
 ; Expanded expression: " L566  error ()4 "
 ; (
 ; 566
 addr2reg Label_566 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_564:
 ; RPN'ized expression: "PrepStack PrepSp + *u 0 + *u PrepDontSkipTokens = "
 ; Expanded expression: "PrepStack PrepSp *(4) 8 * + 0 + PrepDontSkipTokens *(4) =(4) "
 ; PrepStack
 addr2reg PrepStack r2
 ; PrepSp
 ; * (read dereference)
 addr2reg PrepSp r1
 read 0 r1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; PrepDontSkipTokens
 ; * (read dereference)
 addr2reg PrepDontSkipTokens r1
 read 0 r1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "PrepStack PrepSp ++p + *u 1 + *u NoSkip = "
 ; Expanded expression: "PrepStack PrepSp ++p(4) 8 * + 4 + (@8) *(4) =(4) "
 ; PrepStack
 addr2reg PrepStack r2
 ; PrepSp
 ; ++p
 addr2reg PrepSp r1
 read 0 r1 r8
 add r8 1 r8
 addr2reg PrepSp r1
 write 0 r1 r8
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "PrepDontSkipTokens NoSkip &= "
 ; Expanded expression: "PrepDontSkipTokens (@8) *(4) &=(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; PrepDontSkipTokens
 ; &=
 addr2reg PrepDontSkipTokens r1
 read 0 r1 r12
 and r12 r2 r2
 addr2reg PrepDontSkipTokens r1
 write 0 r1 r2
Label_563:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb popPrep : (void) int
.code
; .globl popPrep
popPrep:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; if
 ; RPN'ized expression: "PrepSp 0 <= "
 ; Expanded expression: "PrepSp *(4) 0 <= "
 ; PrepSp
 ; * (read dereference)
 addr2reg PrepSp r1
 read 0 r1 r2
 ; 0
 ; <=
 bges r0 r2 2
 jump Label_568

.rdata
Label_570:
.dw 35 101 108 115 101 32 111 114 32 35 101 110 100 105 102 32 119 105 116 104 111 117 116 32 35 105 102 40 110 41 100 101 102 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L570 error ) "
 ; Expanded expression: " L570  error ()4 "
 ; (
 ; 570
 addr2reg Label_570 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_568:
 ; RPN'ized expression: "PrepDontSkipTokens PrepStack PrepSp -- + *u 0 + *u = "
 ; Expanded expression: "PrepDontSkipTokens PrepStack PrepSp --(4) 8 * + 0 + *(4) =(4) "
 ; PrepStack
 addr2reg PrepStack r2
 ; PrepSp
 ; --
 addr2reg PrepSp r1
 read 0 r1 r8
 sub r8 1 r8
 addr2reg PrepSp r1
 write 0 r1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; PrepDontSkipTokens
 ; = (write dereference)
 addr2reg PrepDontSkipTokens r1
 write 0 r1 r2
 ; return
 ; RPN'ized expression: "PrepStack PrepSp + *u 1 + *u "
 ; Expanded expression: "PrepStack PrepSp *(4) 8 * + 4 + *(4) "
 ; PrepStack
 addr2reg PrepStack r2
 ; PrepSp
 ; * (read dereference)
 addr2reg PrepSp r1
 read 0 r1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
Label_567:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GetNumber : (void) int
.code
; .globl GetNumber
GetNumber:
 sub r13         44 r13
 write         36 r13 r14
 add r13         36 r14
   write 4 r14 r15
 ; loc     p : (@-4) : * char
 ; RPN'ized expression: "p CharQueue = "
 ; Expanded expression: "(@-4) CharQueue =(4) "
 ; CharQueue
 addr2reg CharQueue r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc     ch : (@-8) : int
 ; RPN'ized expression: "ch p *u = "
 ; Expanded expression: "(@-8) (@-4) *(4) *(-1) =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; loc     leadingZero : (@-12) : int
 ; RPN'ized expression: "leadingZero ch 48 == = "
 ; Expanded expression: "(@-12) (@-8) *(4) 48 == =(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 48
 ; ==
 load32 48 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; loc     n : (@-16) : unsigned
 ; RPN'ized expression: "n 0 = "
 ; Expanded expression: "(@-16) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -16 r14 r0
 ; loc     type : (@-20) : int
 ; RPN'ized expression: "type 0 = "
 ; Expanded expression: "(@-20) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -20 r14 r0
 ; loc     uSuffix : (@-24) : int
 ; RPN'ized expression: "uSuffix 0 = "
 ; Expanded expression: "(@-24) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -24 r14 r0
 ; loc     lSuffix : (@-28) : int
 ; RPN'ized expression: "lSuffix 0 = "
 ; Expanded expression: "(@-28) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -28 r14 r0
 ; loc     eTooBig : (@-32) : * char

.rdata
Label_572:
.dw 67 111 110 115 116 97 110 116 32 116 111 111 32 98 105 103 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "eTooBig L572 = "
 ; Expanded expression: "(@-32) L572 =(4) "
 ; 572
 addr2reg Label_572 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; if
 ; RPN'ized expression: "leadingZero p 1 + *u 120 == p 1 + *u 88 == || && "
 ; Expanded expression: "(@-12) *(4) _Bool [sh&&->575] (@-4) *(4) 1 + *(-1) 120 == [sh||->576] (@-4) *(4) 1 + *(-1) 88 == ||[576] _Bool &&[575] "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_575
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 120
 ; ==
 load32 120 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_576
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 88
 ; ==
 load32 88 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_576:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_575:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_573
 ; {
 ; loc         cnt : (@-36) : int
 ; RPN'ized expression: "cnt 0 = "
 ; Expanded expression: "(@-36) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -36 r14 r0
 ; RPN'ized expression: "type 104 = "
 ; Expanded expression: "(@-20) 104 =(4) "
 ; 104
 load32 104 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; while

.rdata
Label_579:
.dw 97 98 99 100 101 102 65 66 67 68 69 70 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "ch p *u = 0 != ( ch 255u & isdigit ) ( ch , L579 strchr ) || && "
 ; Expanded expression: "(@-8) (@-4) *(4) *(-1) =(4) 0 != [sh&&->580]  (@-8) *(4) 255u &  isdigit ()4 _Bool [sh||->581]  (@-8) *(4)  L579  strchr ()8 _Bool ||[581] _Bool &&[580] "
Label_577:
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; 0
 ; !=
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_580
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; 255
 ; &
 and r4 255 r4
 ; ,
 ; isdigit
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isdigit
 add r13 16 r13
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_581
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r5
 ; ,
 ; 579
 addr2reg Label_579 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_581:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_580:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_578
 ; {
 ; if
 ; RPN'ized expression: "ch 97 >= "
 ; Expanded expression: "(@-8) *(4) 97 >= "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 97
 ; >=
 load32 97 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_582
 ; RPN'ized expression: "ch 97 10 - -= "
 ; Expanded expression: "(@-8) 87 -=(4) "
 ; 87
 load32 87 r2
 ; local ofs
 ; -=
 read -8 r14 r12
 sub r12 r2 r2
 write -8 r14 r2
 jump Label_583
Label_582:
 ; else
 ; if
 ; RPN'ized expression: "ch 65 >= "
 ; Expanded expression: "(@-8) *(4) 65 >= "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 65
 ; >=
 load32 65 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_584
 ; RPN'ized expression: "ch 65 10 - -= "
 ; Expanded expression: "(@-8) 55 -=(4) "
 ; 55
 load32 55 r2
 ; local ofs
 ; -=
 read -8 r14 r12
 sub r12 r2 r2
 write -8 r14 r2
 jump Label_585
Label_584:
 ; else
 ; RPN'ized expression: "ch 48 -= "
 ; Expanded expression: "(@-8) 48 -=(4) "
 ; 48
 load32 48 r2
 ; local ofs
 ; -=
 read -8 r14 r12
 sub r12 r2 r2
 write -8 r14 r2
Label_585:
Label_583:
 ; RPN'ized expression: "n n 16 * ch + = "
 ; Expanded expression: "(@-16) (@-16) *(4) 16 * (@-8) *(4) + =(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 4
 ; <<
 shiftl r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; RPN'ized expression: "cnt ++p "
 ; Expanded expression: "(@-36) ++p(4) "
 ; local ofs
 ; ++p
 read -36 r14 r2
 add r2 1 r2
 write -36 r14 r2
 sub r2 1 r2
 ; }
 jump Label_577
Label_578:
 ; if
 ; RPN'ized expression: "cnt 0 == "
 ; Expanded expression: "(@-36) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_586

.rdata
Label_588:
.dw 73 110 118 97 108 105 100 32 104 101 120 97 100 101 99 105 109 97 108 32 99 111 110 115 116 97 110 116 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L588 error ) "
 ; Expanded expression: " L588  error ()4 "
 ; (
 ; 588
 addr2reg Label_588 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_586:
 ; }
 jump Label_574
Label_573:
 ; else
 ; {
 ; loc         base : (@-36) : int
 ; RPN'ized expression: "base leadingZero 10 8 ? = "
 ; Expanded expression: "(@-36) (@-12) *(4) [sh||->589] 10 goto &&[589] 8 &&[590] =(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_589
 ; 10
 load32 10 r2
 ; sh-circ-goto goto
 jump Label_590
 ; short-circuit && target
Label_589:
 ; 8
 load32 8 r2
 ; short-circuit && target
Label_590:
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; RPN'ized expression: "type leadingZero 100 111 ? = "
 ; Expanded expression: "(@-20) (@-12) *(4) [sh||->591] 100 goto &&[591] 111 &&[592] =(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_591
 ; 100
 load32 100 r2
 ; sh-circ-goto goto
 jump Label_592
 ; short-circuit && target
Label_591:
 ; 111
 load32 111 r2
 ; short-circuit && target
Label_592:
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; while
 ; RPN'ized expression: "ch p *u = 48 >= ch base 48 + < && "
 ; Expanded expression: "(@-8) (@-4) *(4) *(-1) =(4) 48 >= [sh&&->595] (@-8) *(4) (@-36) *(4) 48 + < &&[595] "
Label_593:
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; 48
 ; >=
 load32 48 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_595
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r8
 ; 48
 ; +
 add r8 48 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_595:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_594
 ; {
 ; RPN'ized expression: "ch 48 -= "
 ; Expanded expression: "(@-8) 48 -=(4) "
 ; 48
 load32 48 r2
 ; local ofs
 ; -=
 read -8 r14 r12
 sub r12 r2 r2
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "PrepDontSkipTokens n base * ch + n base * < && "
 ; Expanded expression: "PrepDontSkipTokens *(4) _Bool [sh&&->598] (@-16) *(4) (@-36) *(4) * (@-8) *(4) + (@-16) *(4) (@-36) *(4) * <u &&[598] "
 ; PrepDontSkipTokens
 ; * (read dereference)
 addr2reg PrepDontSkipTokens r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_598
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r8
 ; *
 mult r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; local ofs
 ; * (read dereference)
 read -36 r14 r9
 ; *
 mult r8 r9 r8
 ; <u
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_598:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_596
 ; RPN'ized expression: "( eTooBig error ) "
 ; Expanded expression: " (@-32) *(4)  error ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_596:
 ; RPN'ized expression: "n n base * ch + = "
 ; Expanded expression: "(@-16) (@-16) *(4) (@-36) *(4) * (@-8) *(4) + =(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r8
 ; *
 mult r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; }
 jump Label_593
Label_594:
 ; }
Label_574:
 ; {
 ; if
 ; RPN'ized expression: "ch p *u = 117 == ch 85 == || "
 ; Expanded expression: "(@-8) (@-4) *(4) *(-1) =(4) 117 == [sh||->601] (@-8) *(4) 85 == ||[601] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; 117
 ; ==
 load32 117 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_601
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 85
 ; ==
 load32 85 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_601:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_599
 ; {
 ; RPN'ized expression: "uSuffix 1 = "
 ; Expanded expression: "(@-24) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; }
Label_599:
 ; if
 ; RPN'ized expression: "ch p *u = 108 == ch 76 == || "
 ; Expanded expression: "(@-8) (@-4) *(4) *(-1) =(4) 108 == [sh||->604] (@-8) *(4) 76 == ||[604] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; 108
 ; ==
 load32 108 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_604
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 76
 ; ==
 load32 76 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_604:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_602
 ; {
 ; RPN'ized expression: "lSuffix 1 = "
 ; Expanded expression: "(@-28) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -28 r14 r2
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; if
 ; RPN'ized expression: "uSuffix 0 == ch p *u = 117 == ch 85 == || && "
 ; Expanded expression: "(@-24) *(4) 0 == [sh&&->607] (@-8) (@-4) *(4) *(-1) =(4) 117 == [sh||->608] (@-8) *(4) 85 == ||[608] _Bool &&[607] "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_607
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; 117
 ; ==
 load32 117 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_608
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 85
 ; ==
 load32 85 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_608:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_607:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_605
 ; {
 ; RPN'ized expression: "uSuffix 1 = "
 ; Expanded expression: "(@-24) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; }
Label_605:
 ; }
Label_602:
 ; }
 ; if
 ; RPN'ized expression: "PrepDontSkipTokens 0 == "
 ; Expanded expression: "PrepDontSkipTokens *(4) 0 == "
 ; PrepDontSkipTokens
 ; * (read dereference)
 addr2reg PrepDontSkipTokens r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_609
 ; {
 ; RPN'ized expression: "TokenValueInt 0 = "
 ; Expanded expression: "TokenValueInt 0 =(4) "
 ; 0
 ; TokenValueInt
 ; =
 addr2reg TokenValueInt r1
 write 0 r1 r0
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_571
 ; }
Label_609:
 ; if
 ; RPN'ized expression: "SizeOfWord 2 == n 8 >> 8 >> && SizeOfWord 2 == lSuffix && || SizeOfWord 4 == n 8 >> 12 >> 12 >> && || "
 ; Expanded expression: "SizeOfWord *(4) 2 == [sh&&->617] (@-16) *(4) 8 >>u 8 >>u _Bool &&[617] _Bool [sh||->615] SizeOfWord *(4) 2 == [sh&&->616] (@-28) *(4) _Bool &&[616] _Bool ||[615] _Bool [sh||->613] SizeOfWord *(4) 4 == [sh&&->614] (@-16) *(4) 8 >>u 12 >>u 12 >>u _Bool &&[614] _Bool ||[613] "
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_617
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 8
 ; >>u
 shiftr r2 8 r2
 ; 8
 ; >>u
 shiftr r2 8 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_617:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_615
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_616
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_616:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_615:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_613
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; 4
 ; ==
 load32 4 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_614
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 8
 ; >>u
 shiftr r2 8 r2
 ; 12
 ; >>u
 shiftr r2 12 r2
 ; 12
 ; >>u
 shiftr r2 12 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_614:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_613:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_611

.rdata
Label_618:
.dw 67 111 110 115 116 97 110 116 32 116 111 111 32 98 105 103 32 102 111 114 32 37 100 45 98 105 116 32 116 121 112 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( SizeOfWord 8 * , L618 error ) "
 ; Expanded expression: " SizeOfWord *(4) 8 *  L618  error ()8 "
 ; (
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r5
 ; 3
 ; <<
 shiftl r5 3 r5
 ; ,
 ; 618
 addr2reg Label_618 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_611:
 ; loc     <something> : int
 ; RPN'ized expression: "TokenValueInt n (something619) = "
 ; Expanded expression: "TokenValueInt (@-16) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; TokenValueInt
 ; = (write dereference)
 addr2reg TokenValueInt r1
 write 0 r1 r2
 ; if
 ; RPN'ized expression: "uSuffix 0 == SizeOfWord 2 == n 15 >> 0 == && SizeOfWord 4 == n 8 >> 12 >> 11 >> 0 == && || && "
 ; Expanded expression: "(@-24) *(4) 0 == [sh&&->622] SizeOfWord *(4) 2 == [sh&&->625] (@-16) *(4) 15 >>u 0 == &&[625] _Bool [sh||->623] SizeOfWord *(4) 4 == [sh&&->624] (@-16) *(4) 8 >>u 12 >>u 11 >>u 0 == &&[624] _Bool ||[623] _Bool &&[622] "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_622
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_625
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 15
 ; >>u
 shiftr r2 15 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_625:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_623
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; 4
 ; ==
 load32 4 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_624
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 8
 ; >>u
 shiftr r2 8 r2
 ; 12
 ; >>u
 shiftr r2 12 r2
 ; 11
 ; >>u
 shiftr r2 11 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_624:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_623:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_622:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_620
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_571
Label_620:
 ; if
 ; RPN'ized expression: "uSuffix 0 == type 100 == && "
 ; Expanded expression: "(@-24) *(4) 0 == [sh&&->628] (@-20) *(4) 100 == &&[628] "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_628
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; 100
 ; ==
 load32 100 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_628:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_626

.rdata
Label_629:
.dw 67 111 110 115 116 97 110 116 32 116 111 111 32 98 105 103 32 102 111 114 32 37 100 45 98 105 116 32 115 105 103 110 101 100 32 116 121 112 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( SizeOfWord 8 * , L629 error ) "
 ; Expanded expression: " SizeOfWord *(4) 8 *  L629  error ()8 "
 ; (
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r5
 ; 3
 ; <<
 shiftl r5 3 r5
 ; ,
 ; 629
 addr2reg Label_629 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_626:
 ; return
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; 2
 load32 2 r2
Label_571:
 read 4 r14 r15
 read 0 r14 r14
 add r13 44 r13
 jumpr 0 r15

 ; glb GetTokenInner : (void) int
.code
; .globl GetTokenInner
GetTokenInner:
 sub r13         32 r13
 write         24 r13 r14
 add r13         24 r14
   write 4 r14 r15
 ; loc     p : (@-4) : * char
 ; RPN'ized expression: "p CharQueue = "
 ; Expanded expression: "(@-4) CharQueue =(4) "
 ; CharQueue
 addr2reg CharQueue r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc     ch : (@-8) : int
 ; RPN'ized expression: "ch p *u = "
 ; Expanded expression: "(@-8) (@-4) *(4) *(-1) =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; loc     wide : (@-12) : int
 ; RPN'ized expression: "wide 0 = "
 ; Expanded expression: "(@-12) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -12 r14 r0
 ; if

.rdata
Label_633:
.dw 44 59 58 40 41 91 93 123 125 126 63 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ch , L633 strchr ) "
 ; Expanded expression: " (@-8) *(4)  L633  strchr ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r5
 ; ,
 ; 633
 addr2reg Label_633 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_631
 ; {
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "ch "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_630
 ; }
Label_631:
 ; switch
 ; RPN'ized expression: "ch "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_635
 ; {
 ; case
 ; RPN'ized expression: "43 "
 ; Expanded expression: "43 "
 ; Expression value: 43
Label_636:
 ; if
 ; RPN'ized expression: "p 1 + *u 43 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 43 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 43
 ; ==
 load32 43 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_637
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "12 "
 ; Expanded expression: "12 "
 ; Expression value: 12
 ; 12
 load32 12 r2
 jump Label_630
 ; }
Label_637:
 ; if
 ; RPN'ized expression: "p 1 + *u 61 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 61 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 61
 ; ==
 load32 61 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_639
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "68 "
 ; Expanded expression: "68 "
 ; Expression value: 68
 ; 68
 load32 68 r2
 jump Label_630
 ; }
Label_639:
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "ch "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_630
 ; case
 ; RPN'ized expression: "45 "
 ; Expanded expression: "45 "
 ; Expression value: 45
Label_641:
 ; if
 ; RPN'ized expression: "p 1 + *u 45 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 45 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 45
 ; ==
 load32 45 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_642
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "13 "
 ; Expanded expression: "13 "
 ; Expression value: 13
 ; 13
 load32 13 r2
 jump Label_630
 ; }
Label_642:
 ; if
 ; RPN'ized expression: "p 1 + *u 61 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 61 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 61
 ; ==
 load32 61 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_644
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "69 "
 ; Expanded expression: "69 "
 ; Expression value: 69
 ; 69
 load32 69 r2
 jump Label_630
 ; }
Label_644:
 ; if
 ; RPN'ized expression: "p 1 + *u 62 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 62 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 62
 ; ==
 load32 62 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_646
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "14 "
 ; Expanded expression: "14 "
 ; Expression value: 14
 ; 14
 load32 14 r2
 jump Label_630
 ; }
Label_646:
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "ch "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_630
 ; case
 ; RPN'ized expression: "33 "
 ; Expanded expression: "33 "
 ; Expression value: 33
Label_648:
 ; if
 ; RPN'ized expression: "p 1 + *u 61 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 61 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 61
 ; ==
 load32 61 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_649
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "9 "
 ; Expanded expression: "9 "
 ; Expression value: 9
 ; 9
 load32 9 r2
 jump Label_630
 ; }
Label_649:
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "ch "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_630
 ; case
 ; RPN'ized expression: "61 "
 ; Expanded expression: "61 "
 ; Expression value: 61
Label_651:
 ; if
 ; RPN'ized expression: "p 1 + *u 61 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 61 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 61
 ; ==
 load32 61 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_652
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
 ; 8
 load32 8 r2
 jump Label_630
 ; }
Label_652:
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "ch "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_630
 ; case
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
Label_654:
 ; if
 ; RPN'ized expression: "p 1 + *u 61 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 61 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 61
 ; ==
 load32 61 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_655
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
 ; 10
 load32 10 r2
 jump Label_630
 ; }
Label_655:
 ; if
 ; RPN'ized expression: "p 1 + *u 60 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 60 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 60
 ; ==
 load32 60 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_657
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; if
 ; RPN'ized expression: "p 0 + *u 61 != "
 ; Expanded expression: "(@-4) *(4) 0 + *(-1) 61 != "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 61
 ; !=
 load32 61 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_659
 ; return
 ; RPN'ized expression: "4 "
 ; Expanded expression: "4 "
 ; Expression value: 4
 ; 4
 load32 4 r2
 jump Label_630
Label_659:
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "70 "
 ; Expanded expression: "70 "
 ; Expression value: 70
 ; 70
 load32 70 r2
 jump Label_630
 ; }
Label_657:
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "ch "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_630
 ; case
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
Label_661:
 ; if
 ; RPN'ized expression: "p 1 + *u 61 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 61 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 61
 ; ==
 load32 61 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_662
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
 ; 11
 load32 11 r2
 jump Label_630
 ; }
Label_662:
 ; if
 ; RPN'ized expression: "p 1 + *u 62 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 62 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 62
 ; ==
 load32 62 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_664
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; if
 ; RPN'ized expression: "p 0 + *u 61 != "
 ; Expanded expression: "(@-4) *(4) 0 + *(-1) 61 != "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 61
 ; !=
 load32 61 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_666
 ; return
 ; RPN'ized expression: "5 "
 ; Expanded expression: "5 "
 ; Expression value: 5
 ; 5
 load32 5 r2
 jump Label_630
Label_666:
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "71 "
 ; Expanded expression: "71 "
 ; Expression value: 71
 ; 71
 load32 71 r2
 jump Label_630
 ; }
Label_664:
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "ch "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_630
 ; case
 ; RPN'ized expression: "38 "
 ; Expanded expression: "38 "
 ; Expression value: 38
Label_668:
 ; if
 ; RPN'ized expression: "p 1 + *u 38 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 38 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 38
 ; ==
 load32 38 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_669
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "6 "
 ; Expanded expression: "6 "
 ; Expression value: 6
 ; 6
 load32 6 r2
 jump Label_630
 ; }
Label_669:
 ; if
 ; RPN'ized expression: "p 1 + *u 61 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 61 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 61
 ; ==
 load32 61 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_671
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "72 "
 ; Expanded expression: "72 "
 ; Expression value: 72
 ; 72
 load32 72 r2
 jump Label_630
 ; }
Label_671:
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "ch "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_630
 ; case
 ; RPN'ized expression: "124 "
 ; Expanded expression: "124 "
 ; Expression value: 124
Label_673:
 ; if
 ; RPN'ized expression: "p 1 + *u 124 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 124 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 124
 ; ==
 load32 124 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_674
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "7 "
 ; Expanded expression: "7 "
 ; Expression value: 7
 ; 7
 load32 7 r2
 jump Label_630
 ; }
Label_674:
 ; if
 ; RPN'ized expression: "p 1 + *u 61 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 61 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 61
 ; ==
 load32 61 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_676
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "74 "
 ; Expanded expression: "74 "
 ; Expression value: 74
 ; 74
 load32 74 r2
 jump Label_630
 ; }
Label_676:
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "ch "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_630
 ; case
 ; RPN'ized expression: "94 "
 ; Expanded expression: "94 "
 ; Expression value: 94
Label_678:
 ; if
 ; RPN'ized expression: "p 1 + *u 61 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 61 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 61
 ; ==
 load32 61 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_679
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "73 "
 ; Expanded expression: "73 "
 ; Expression value: 73
 ; 73
 load32 73 r2
 jump Label_630
 ; }
Label_679:
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "ch "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_630
 ; case
 ; RPN'ized expression: "46 "
 ; Expanded expression: "46 "
 ; Expression value: 46
Label_681:
 ; if
 ; RPN'ized expression: "p 1 + *u 46 == p 2 + *u 46 == && "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 46 == [sh&&->684] (@-4) *(4) 2 + *(-1) 46 == &&[684] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 46
 ; ==
 load32 46 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_684
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 2
 ; +
 add r2 2 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 46
 ; ==
 load32 46 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_684:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_682
 ; {
 ; RPN'ized expression: "( 3 ShiftCharN ) "
 ; Expanded expression: " 3  ShiftCharN ()4 "
 ; (
 ; 3
 load32 3 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "15 "
 ; Expanded expression: "15 "
 ; Expression value: 15
 ; 15
 load32 15 r2
 jump Label_630
 ; }
Label_682:
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "ch "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_630
 ; case
 ; RPN'ized expression: "42 "
 ; Expanded expression: "42 "
 ; Expression value: 42
Label_685:
 ; if
 ; RPN'ized expression: "p 1 + *u 61 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 61 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 61
 ; ==
 load32 61 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_686
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "65 "
 ; Expanded expression: "65 "
 ; Expression value: 65
 ; 65
 load32 65 r2
 jump Label_630
 ; }
Label_686:
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "ch "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_630
 ; case
 ; RPN'ized expression: "37 "
 ; Expanded expression: "37 "
 ; Expression value: 37
Label_688:
 ; if
 ; RPN'ized expression: "p 1 + *u 61 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 61 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 61
 ; ==
 load32 61 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_689
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "67 "
 ; Expanded expression: "67 "
 ; Expression value: 67
 ; 67
 load32 67 r2
 jump Label_630
 ; }
Label_689:
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "ch "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_630
 ; case
 ; RPN'ized expression: "47 "
 ; Expanded expression: "47 "
 ; Expression value: 47
Label_691:
 ; if
 ; RPN'ized expression: "p 1 + *u 61 == "
 ; Expanded expression: "(@-4) *(4) 1 + *(-1) 61 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 61
 ; ==
 load32 61 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_692
 ; {
 ; RPN'ized expression: "( 2 ShiftCharN ) "
 ; Expanded expression: " 2  ShiftCharN ()4 "
 ; (
 ; 2
 load32 2 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "66 "
 ; Expanded expression: "66 "
 ; Expression value: 66
 ; 66
 load32 66 r2
 jump Label_630
 ; }
Label_692:
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; return
 ; RPN'ized expression: "ch "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_630
 ; }
 jump Label_634
Label_635:
 load32 43 r12
 bne r2 r12 2
 jump Label_636
 load32 45 r12
 bne r2 r12 2
 jump Label_641
 load32 33 r12
 bne r2 r12 2
 jump Label_648
 load32 61 r12
 bne r2 r12 2
 jump Label_651
 load32 60 r12
 bne r2 r12 2
 jump Label_654
 load32 62 r12
 bne r2 r12 2
 jump Label_661
 load32 38 r12
 bne r2 r12 2
 jump Label_668
 load32 124 r12
 bne r2 r12 2
 jump Label_673
 load32 94 r12
 bne r2 r12 2
 jump Label_678
 load32 46 r12
 bne r2 r12 2
 jump Label_681
 load32 42 r12
 bne r2 r12 2
 jump Label_685
 load32 37 r12
 bne r2 r12 2
 jump Label_688
 load32 47 r12
 bne r2 r12 2
 jump Label_691
Label_634:
 ; if
 ; RPN'ized expression: "( ch 255u & isdigit ) "
 ; Expanded expression: " (@-8) *(4) 255u &  isdigit ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; 255
 ; &
 and r4 255 r4
 ; ,
 ; isdigit
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isdigit
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_694
 ; return
 ; RPN'ized expression: "( GetNumber ) "
 ; Expanded expression: " GetNumber ()0 "
 ; (
 ; GetNumber
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetNumber
 add r13 16 r13
 jump Label_630
Label_694:
 ; if
 ; RPN'ized expression: "ch 39 == "
 ; Expanded expression: "(@-8) *(4) 39 == "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 39
 ; ==
 load32 39 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_696
 ; {
 ; loc         v : (@-16) : unsigned
 ; RPN'ized expression: "v 0 = "
 ; Expanded expression: "(@-16) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -16 r14 r0
 ; loc         cnt : (@-20) : int
 ; RPN'ized expression: "cnt 0 = "
 ; Expanded expression: "(@-20) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -20 r14 r0
 ; loc         max_cnt : (@-24) : int
 ; RPN'ized expression: "max_cnt SizeOfWord = "
 ; Expanded expression: "(@-24) SizeOfWord *(4) =(4) "
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; if

.rdata
Label_700:
.dw 39 10 13 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L700 strchr ) "
 ; Expanded expression: " (@-4) *(4) *(-1)  L700  strchr ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 700
 addr2reg Label_700 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_698
 ; RPN'ized expression: "( errorChrStr ) "
 ; Expanded expression: " errorChrStr ()0 "
 ; (
 ; errorChrStr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorChrStr
 add r13 16 r13
Label_698:
 ; do
Label_701:
 ; {
 ; RPN'ized expression: "v 8 <<= "
 ; Expanded expression: "(@-16) 8 <<=(4) "
 ; 8
 load32 8 r2
 ; local ofs
 ; <<=
 read -16 r14 r12
 shiftl r12 r2 r2
 write -16 r14 r2
 ; RPN'ized expression: "v ( wide GetCharValue ) |= "
 ; Expanded expression: "(@-16)  (@-12) *(4)  GetCharValue ()4 |=(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; GetCharValue
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetCharValue
 add r13 16 r13
 ; local ofs
 ; |=
 read -16 r14 r12
 or r12 r2 r2
 write -16 r14 r2
 ; if
 ; RPN'ized expression: "cnt ++ max_cnt > "
 ; Expanded expression: "(@-20) ++(4) (@-24) *(4) > "
 ; local ofs
 ; ++
 read -20 r14 r2
 add r2 1 r2
 write -20 r14 r2
 ; local ofs
 ; * (read dereference)
 read -24 r14 r8
 ; >
 bges r8 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_704
 ; RPN'ized expression: "( errorChrStr ) "
 ; Expanded expression: " errorChrStr ()0 "
 ; (
 ; errorChrStr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorChrStr
 add r13 16 r13
Label_704:
 ; }
 ; while

.rdata
Label_706:
.dw 39 10 13 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L706 strchr ) 0 == "
 ; Expanded expression: " (@-4) *(4) *(-1)  L706  strchr ()8 0 == "
Label_702:
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 706
 addr2reg Label_706 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; 0
 ; ==
 bne r2 r0 2
 jump Label_701
Label_703:
 ; if
 ; RPN'ized expression: "p *u 39 != "
 ; Expanded expression: "(@-4) *(4) *(-1) 39 != "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 39
 ; !=
 load32 39 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_707
 ; RPN'ized expression: "( errorChrStr ) "
 ; Expanded expression: " errorChrStr ()0 "
 ; (
 ; errorChrStr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorChrStr
 add r13 16 r13
Label_707:
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; {
 ; if
 ; RPN'ized expression: "cnt 1 == "
 ; Expanded expression: "(@-20) *(4) 1 == "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_709
 ; {
 ; RPN'ized expression: "TokenValueInt v = "
 ; Expanded expression: "TokenValueInt (@-16) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; TokenValueInt
 ; = (write dereference)
 addr2reg TokenValueInt r1
 write 0 r1 r2
 ; RPN'ized expression: "TokenValueInt CharIsSigned TokenValueInt 128 >= && 256 * -= "
 ; Expanded expression: "TokenValueInt CharIsSigned *(4) _Bool [sh&&->711] TokenValueInt *(4) 128 >= &&[711] 256 * -=(4) "
 ; CharIsSigned
 ; * (read dereference)
 addr2reg CharIsSigned r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_711
 ; TokenValueInt
 ; * (read dereference)
 addr2reg TokenValueInt r1
 read 0 r1 r2
 ; 128
 ; >=
 load32 128 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit && target
Label_711:
 ; 8
 ; <<
 shiftl r2 8 r2
 ; TokenValueInt
 ; -=
 addr2reg TokenValueInt r1
 read 0 r1 r12
 sub r12 r2 r2
 addr2reg TokenValueInt r1
 write 0 r1 r2
 ; }
 jump Label_710
Label_709:
 ; else
 ; {
 ; RPN'ized expression: "TokenValueInt v = "
 ; Expanded expression: "TokenValueInt (@-16) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; TokenValueInt
 ; = (write dereference)
 addr2reg TokenValueInt r1
 write 0 r1 r2
 ; RPN'ized expression: "TokenValueInt SizeOfWord 2 == TokenValueInt 32768 >= && 65536 * -= "
 ; Expanded expression: "TokenValueInt SizeOfWord *(4) 2 == [sh&&->712] TokenValueInt *(4) 32768 >= &&[712] 65536 * -=(4) "
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_712
 ; TokenValueInt
 ; * (read dereference)
 addr2reg TokenValueInt r1
 read 0 r1 r2
 ; 32768
 ; >=
 load32 32768 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit && target
Label_712:
 ; 16
 ; <<
 shiftl r2 16 r2
 ; TokenValueInt
 ; -=
 addr2reg TokenValueInt r1
 read 0 r1 r12
 sub r12 r2 r2
 addr2reg TokenValueInt r1
 write 0 r1 r2
 ; }
Label_710:
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_630
 ; }
 ; }
 jump Label_697
Label_696:
 ; else
 ; if
 ; RPN'ized expression: "ch 34 == "
 ; Expanded expression: "(@-8) *(4) 34 == "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 34
 ; ==
 load32 34 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_713
 ; {
 ; return
 ; RPN'ized expression: "3 "
 ; Expanded expression: "3 "
 ; Expression value: 3
 ; 3
 load32 3 r2
 jump Label_630
 ; }
Label_713:
Label_697:
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
Label_630:
 read 4 r14 r15
 read 0 r14 r14
 add r13 32 r13
 jumpr 0 r15

 ; glb Reserve4Expansion : (
 ; prm     name : * char
 ; prm     len : int
 ;     ) void
.code
; .globl Reserve4Expansion
Reserve4Expansion:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     name : (@8) : * char
 ; loc     len : (@12) : int
 ; if
 ; RPN'ized expression: "255 1 + CharQueueLen - len 1 + < "
 ; Expanded expression: "256 CharQueueLen *(4) - (@12) *(4) 1 + < "
 ; 256
 load32 256 r2
 ; CharQueueLen
 ; * (read dereference)
 addr2reg CharQueueLen r1
 read 0 r1 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_716

.rdata
Label_718:
.dw 84 111 111 32 108 111 110 103 32 101 120 112 97 110 115 105 111 110 32 111 102 32 109 97 99 114 111 32 39 37 115 39 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( name , L718 error ) "
 ; Expanded expression: " (@8) *(4)  L718  error ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 718
 addr2reg Label_718 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_716:
 ; RPN'ized expression: "( CharQueueLen , CharQueue , CharQueue len + 1 + memmove ) "
 ; Expanded expression: " CharQueueLen *(4)  CharQueue  CharQueue (@12) *(4) + 1 +  memmove ()12 "
 ; (
 ; CharQueueLen
 ; * (read dereference)
 addr2reg CharQueueLen r1
 read 0 r1 r6
 ; ,
 ; CharQueue
 addr2reg CharQueue r5
 ; ,
 ; CharQueue
 addr2reg CharQueue r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read 12 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; 1
 ; +
 add r4 1 r4
 ; ,
 ; memmove
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memmove
 add r13 16 r13
 ; RPN'ized expression: "CharQueue len + *u 32 = "
 ; Expanded expression: "CharQueue (@12) *(4) + 32 =(-1) "
 ; CharQueue
 addr2reg CharQueue r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; +
 add r2 r8 r2
 ; 32
 load32 32 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "CharQueueLen len 1 + += "
 ; Expanded expression: "CharQueueLen (@12) *(4) 1 + +=(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; CharQueueLen
 ; +=
 addr2reg CharQueueLen r1
 read 0 r1 r12
 add r12 r2 r2
 addr2reg CharQueueLen r1
 write 0 r1 r2
Label_715:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GetToken : (void) int
.code
; .globl GetToken
GetToken:
 sub r13         44 r13
 write         36 r13 r14
 add r13         36 r14
   write 4 r14 r15
 ; loc     p : (@-4) : * char
 ; RPN'ized expression: "p CharQueue = "
 ; Expanded expression: "(@-4) CharQueue =(4) "
 ; CharQueue
 addr2reg CharQueue r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc     ch : (@-8) : int
 ; loc     tok : (@-12) : int
 ; for
Label_720:
 ; {
 ; RPN'ized expression: "( 1 SkipSpace ) "
 ; Expanded expression: " 1  SkipSpace ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
 ; if
 ; RPN'ized expression: "ch p *u = 0 == "
 ; Expanded expression: "(@-8) (@-4) *(4) *(-1) =(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_724
 ; {
 ; if
 ; RPN'ized expression: "( EndOfFiles ) "
 ; Expanded expression: " EndOfFiles ()0 "
 ; (
 ; EndOfFiles
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump EndOfFiles
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_726
 ; break
 jump Label_723
Label_726:
 ; continue
 jump Label_720
 ; }
Label_724:
 ; if
 ; RPN'ized expression: "tok ( GetTokenInner ) = 0 != "
 ; Expanded expression: "(@-12)  GetTokenInner ()0 =(4) 0 != "
 ; (
 ; GetTokenInner
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetTokenInner
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; 0
 ; !=
 bne r2 r0 2
 jump Label_728
 ; {
 ; if
 ; RPN'ized expression: "PrepDontSkipTokens "
 ; Expanded expression: "PrepDontSkipTokens *(4) "
 ; PrepDontSkipTokens
 ; * (read dereference)
 addr2reg PrepDontSkipTokens r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_730
 ; return
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-12) *(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 jump Label_719
Label_730:
 ; if
 ; RPN'ized expression: "tok 3 == "
 ; Expanded expression: "(@-12) *(4) 3 == "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 3
 ; ==
 load32 3 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_732
 ; RPN'ized expression: "( 0 , 0 , 34 GetString ) "
 ; Expanded expression: " 0  0  34  GetString ()12 "
 ; (
 ; 0
 load32 0 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 34
 load32 34 r4
 ; ,
 ; GetString
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetString
 add r13 16 r13
Label_732:
 ; continue
 jump Label_720
 ; }
Label_728:
 ; if
 ; RPN'ized expression: "ch 95 == ( ch 255u & isalpha ) || "
 ; Expanded expression: "(@-8) *(4) 95 == [sh||->736]  (@-8) *(4) 255u &  isalpha ()4 _Bool ||[736] "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 95
 ; ==
 load32 95 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_736
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; 255
 ; &
 and r4 255 r4
 ; ,
 ; isalpha
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isalpha
 add r13 16 r13
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_736:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_734
 ; {
 ; loc             midx : (@-16) : int
 ; RPN'ized expression: "( GetIdent ) "
 ; Expanded expression: " GetIdent ()0 "
 ; (
 ; GetIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetIdent
 add r13 16 r13
 ; if
 ; RPN'ized expression: "PrepDontSkipTokens 0 == "
 ; Expanded expression: "PrepDontSkipTokens *(4) 0 == "
 ; PrepDontSkipTokens
 ; * (read dereference)
 addr2reg PrepDontSkipTokens r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_737
 ; continue
 jump Label_720
Label_737:
 ; RPN'ized expression: "tok ( TokenIdentName GetTokenByWord ) = "
 ; Expanded expression: "(@-12)  TokenIdentName  GetTokenByWord ()4 =(4) "
 ; (
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; GetTokenByWord
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetTokenByWord
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; if

.rdata
Label_741:
.dw 95 95 70 73 76 69 95 95 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L741 , TokenIdentName strcmp ) 0 == "
 ; Expanded expression: " L741  TokenIdentName  strcmp ()8 0 == "
 ; (
 ; 741
 addr2reg Label_741 r5
 ; ,
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_739
 ; {
 ; loc                 p : (@-20) : * char
 ; RPN'ized expression: "p FileNames FileCnt 1 - + *u = "
 ; Expanded expression: "(@-20) FileNames FileCnt *(4) 1 - 96 * + =(4) "
 ; FileNames
 addr2reg FileNames r2
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 96
 load32 96 r9
 ; *
 mult r8 r9 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; loc                 len : (@-24) : int
 ; RPN'ized expression: "len ( p strlen ) = "
 ; Expanded expression: "(@-24)  (@-20) *(4)  strlen ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r4
 ; ,
 ; strlen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strlen
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; RPN'ized expression: "( len 2 + , TokenIdentName Reserve4Expansion ) "
 ; Expanded expression: " (@-24) *(4) 2 +  TokenIdentName  Reserve4Expansion ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -24 r14 r5
 ; 2
 ; +
 add r5 2 r5
 ; ,
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; Reserve4Expansion
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump Reserve4Expansion
 add r13 16 r13
 ; RPN'ized expression: "CharQueue *u 34 = "
 ; Expanded expression: "CharQueue 34 =(-1) "
 ; 34
 load32 34 r2
 ; CharQueue
 ; = (write dereference)
 addr2reg CharQueue r1
 write 0 r1 r2
 ; RPN'ized expression: "( len , p , CharQueue 1 + memcpy ) "
 ; Expanded expression: " (@-24) *(4)  (@-20) *(4)  CharQueue 1 +  memcpy ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -24 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -20 r14 r5
 ; ,
 ; CharQueue
 addr2reg CharQueue r4
 ; 1
 ; +
 add r4 1 r4
 ; ,
 ; memcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memcpy
 add r13 16 r13
 ; RPN'ized expression: "CharQueue len 1 + + *u 34 = "
 ; Expanded expression: "CharQueue (@-24) *(4) 1 + + 34 =(-1) "
 ; CharQueue
 addr2reg CharQueue r2
 ; local ofs
 ; * (read dereference)
 read -24 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; 34
 load32 34 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; continue
 jump Label_720
 ; }
 jump Label_740
Label_739:
 ; else
 ; if

.rdata
Label_744:
.dw 95 95 76 73 78 69 95 95 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L744 , TokenIdentName strcmp ) 0 == "
 ; Expanded expression: " L744  TokenIdentName  strcmp ()8 0 == "
 ; (
 ; 744
 addr2reg Label_744 r5
 ; ,
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_742
 ; {
 ; RPN'ized expression: "2 8 LineNo sizeof * + 3 / "
 ; Expanded expression: "11u "
 ; Expression value: 11u
 ; loc                 s : (@-28) : [11u] char
 ; loc                 p : (@-32) : * char
 ; RPN'ized expression: "p ( LineNo , s s sizeof + lab2str ) = "
 ; Expanded expression: "(@-32)  LineNo *(4)  (@-17)  lab2str ()8 =(4) "
 ; (
 ; LineNo
 ; * (read dereference)
 addr2reg LineNo r1
 read 0 r1 r5
 ; ,
 ; local ofs
 sub r14 17 r4
 ; ,
 ; lab2str
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump lab2str
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; loc                 len : (@-36) : int
 ; RPN'ized expression: "len s s sizeof + p - = "
 ; Expanded expression: "(@-36) (@-17) (@-32) *(4) - =(4) "
 ; local ofs
 sub r14 17 r2
 ; local ofs
 ; * (read dereference)
 read -32 r14 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; RPN'ized expression: "( len , TokenIdentName Reserve4Expansion ) "
 ; Expanded expression: " (@-36) *(4)  TokenIdentName  Reserve4Expansion ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r5
 ; ,
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; Reserve4Expansion
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump Reserve4Expansion
 add r13 16 r13
 ; RPN'ized expression: "( len , p , CharQueue memcpy ) "
 ; Expanded expression: " (@-36) *(4)  (@-32) *(4)  CharQueue  memcpy ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; CharQueue
 addr2reg CharQueue r4
 ; ,
 ; memcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memcpy
 add r13 16 r13
 ; continue
 jump Label_720
 ; }
 jump Label_743
Label_742:
 ; else
 ; if
 ; RPN'ized expression: "midx ( TokenIdentName FindMacro ) = 0 >= "
 ; Expanded expression: "(@-16)  TokenIdentName  FindMacro ()4 =(4) 0 >= "
 ; (
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; FindMacro
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump FindMacro
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; 0
 ; >=
 bges r2 r0 2
 jump Label_745
 ; {
 ; loc                 len : (@-20) : int
 ; RPN'ized expression: "len MacroTable midx + *u = "
 ; Expanded expression: "(@-20) MacroTable (@-16) *(4) + *(-1) =(4) "
 ; MacroTable
 addr2reg MacroTable r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; RPN'ized expression: "( len , TokenIdentName Reserve4Expansion ) "
 ; Expanded expression: " (@-20) *(4)  TokenIdentName  Reserve4Expansion ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r5
 ; ,
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; Reserve4Expansion
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump Reserve4Expansion
 add r13 16 r13
 ; RPN'ized expression: "( len , MacroTable midx + 1 + , CharQueue memcpy ) "
 ; Expanded expression: " (@-20) *(4)  MacroTable (@-16) *(4) + 1 +  CharQueue  memcpy ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r6
 ; ,
 ; MacroTable
 addr2reg MacroTable r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -16 r14 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; 1
 ; +
 add r5 1 r5
 ; ,
 ; CharQueue
 addr2reg CharQueue r4
 ; ,
 ; memcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memcpy
 add r13 16 r13
 ; continue
 jump Label_720
 ; }
Label_745:
Label_743:
Label_740:
 ; if
 ; RPN'ized expression: "tok 103 == tok 104 == | tok 109 == | tok 110 == | tok 105 == | "
 ; Expanded expression: "(@-12) *(4) 103 == (@-12) *(4) 104 == | (@-12) *(4) 109 == | (@-12) *(4) 110 == | (@-12) *(4) 105 == | "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 103
 ; ==
 load32 103 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 104
 ; ==
 load32 104 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; |
 or r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 109
 ; ==
 load32 109 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; |
 or r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 110
 ; ==
 load32 110 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; |
 or r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 105
 ; ==
 load32 105 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; |
 or r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_747
 ; continue
 jump Label_720
Label_747:
 ; return
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-12) *(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 jump Label_719
 ; }
Label_734:
 ; if
 ; RPN'ized expression: "ch 35 == "
 ; Expanded expression: "(@-8) *(4) 35 == "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 35
 ; ==
 load32 35 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_749
 ; {
 ; loc             line : (@-16) : int
 ; RPN'ized expression: "line 0 = "
 ; Expanded expression: "(@-16) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -16 r14 r0
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; RPN'ized expression: "( 0 SkipSpace ) "
 ; Expanded expression: " 0  SkipSpace ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
 ; if

.rdata
Label_753:
.dw 13 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L753 strchr ) "
 ; Expanded expression: " (@-4) *(4) *(-1)  L753  strchr ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 753
 addr2reg Label_753 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_751
 ; continue
 jump Label_720
Label_751:
 ; if
 ; RPN'ized expression: "( p *u 255u & isdigit ) "
 ; Expanded expression: " (@-4) *(4) *(-1) 255u &  isdigit ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; 255
 ; &
 and r4 255 r4
 ; ,
 ; isdigit
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isdigit
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_754
 ; {
 ; RPN'ized expression: "line 1 = "
 ; Expanded expression: "(@-16) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; }
 jump Label_755
Label_754:
 ; else
 ; {
 ; RPN'ized expression: "( GetIdent ) "
 ; Expanded expression: " GetIdent ()0 "
 ; (
 ; GetIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetIdent
 add r13 16 r13
 ; if

.rdata
Label_758:
.dw 108 105 110 101 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L758 , TokenIdentName strcmp ) 0 == "
 ; Expanded expression: " L758  TokenIdentName  strcmp ()8 0 == "
 ; (
 ; 758
 addr2reg Label_758 r5
 ; ,
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_756
 ; {
 ; RPN'ized expression: "( 0 SkipSpace ) "
 ; Expanded expression: " 0  SkipSpace ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
 ; if
 ; RPN'ized expression: "( p *u 255u & isdigit ) 0 == "
 ; Expanded expression: " (@-4) *(4) *(-1) 255u &  isdigit ()4 0 == "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; 255
 ; &
 and r4 255 r4
 ; ,
 ; isdigit
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isdigit
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_759
 ; RPN'ized expression: "( errorDirective ) "
 ; Expanded expression: " errorDirective ()0 "
 ; (
 ; errorDirective
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDirective
 add r13 16 r13
Label_759:
 ; RPN'ized expression: "line 1 = "
 ; Expanded expression: "(@-16) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; }
Label_756:
 ; }
Label_755:
 ; if
 ; RPN'ized expression: "line "
 ; Expanded expression: "(@-16) *(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_761
 ; {
 ; if
 ; RPN'ized expression: "( GetNumber ) 1 != "
 ; Expanded expression: " GetNumber ()0 1 != "
 ; (
 ; GetNumber
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetNumber
 add r13 16 r13
 ; 1
 ; !=
 load32 1 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_763
 ; RPN'ized expression: "( errorDirective ) "
 ; Expanded expression: " errorDirective ()0 "
 ; (
 ; errorDirective
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDirective
 add r13 16 r13
Label_763:
 ; RPN'ized expression: "line TokenValueInt = "
 ; Expanded expression: "(@-16) TokenValueInt *(4) =(4) "
 ; TokenValueInt
 ; * (read dereference)
 addr2reg TokenValueInt r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "( 0 SkipSpace ) "
 ; Expanded expression: " 0  SkipSpace ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
 ; if
 ; RPN'ized expression: "p *u 34 == p *u 60 == || "
 ; Expanded expression: "(@-4) *(4) *(-1) 34 == [sh||->767] (@-4) *(4) *(-1) 60 == ||[767] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 34
 ; ==
 load32 34 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_767
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 60
 ; ==
 load32 60 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_767:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_765
 ; {
 ; if
 ; RPN'ized expression: "p *u 34 == "
 ; Expanded expression: "(@-4) *(4) *(-1) 34 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 34
 ; ==
 load32 34 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_768
 ; RPN'ized expression: "( 35 , 0 , 34 GetString ) "
 ; Expanded expression: " 35  0  34  GetString ()12 "
 ; (
 ; 35
 load32 35 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 34
 load32 34 r4
 ; ,
 ; GetString
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetString
 add r13 16 r13
 jump Label_769
Label_768:
 ; else
 ; RPN'ized expression: "( 35 , 0 , 62 GetString ) "
 ; Expanded expression: " 35  0  62  GetString ()12 "
 ; (
 ; 35
 load32 35 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 62
 load32 62 r4
 ; ,
 ; GetString
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetString
 add r13 16 r13
Label_769:
 ; if
 ; RPN'ized expression: "( TokenValueString strlen ) 95 > "
 ; Expanded expression: " TokenValueString  strlen ()4 95 >u "
 ; (
 ; TokenValueString
 addr2reg TokenValueString r4
 ; ,
 ; strlen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strlen
 add r13 16 r13
 ; 95
 ; >u
 load32 96 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_770
 ; RPN'ized expression: "( errorFileName ) "
 ; Expanded expression: " errorFileName ()0 "
 ; (
 ; errorFileName
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorFileName
 add r13 16 r13
Label_770:
 ; RPN'ized expression: "( TokenValueString , FileNames FileCnt 1 - + *u strcpy ) "
 ; Expanded expression: " TokenValueString  FileNames FileCnt *(4) 1 - 96 * +  strcpy ()8 "
 ; (
 ; TokenValueString
 addr2reg TokenValueString r5
 ; ,
 ; FileNames
 addr2reg FileNames r4
 ; FileCnt
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r4
 ; 1
 ; -
 sub r4 1 r4
 ; 96
 sub r13 4 r13
 write 0 r13 r4
 load32 96 r4
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r4 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; strcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcpy
 add r13 16 r13
 ; }
Label_765:
 ; while

.rdata
Label_774:
.dw 13 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L774 strchr ) 0 == "
 ; Expanded expression: " (@-4) *(4) *(-1)  L774  strchr ()8 0 == "
Label_772:
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 774
 addr2reg Label_774 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_773
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 jump Label_772
Label_773:
 ; RPN'ized expression: "LineNo line 1 - = "
 ; Expanded expression: "LineNo (@-16) *(4) 1 - =(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 1
 ; -
 sub r2 1 r2
 ; LineNo
 ; = (write dereference)
 addr2reg LineNo r1
 write 0 r1 r2
 ; RPN'ized expression: "LinePos 1 = "
 ; Expanded expression: "LinePos 1 =(4) "
 ; 1
 load32 1 r2
 ; LinePos
 ; = (write dereference)
 addr2reg LinePos r1
 write 0 r1 r2
 ; continue
 jump Label_720
 ; }
Label_761:
 ; if

.rdata
Label_777:
.dw 100 101 102 105 110 101 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L777 , TokenIdentName strcmp ) 0 == "
 ; Expanded expression: " L777  TokenIdentName  strcmp ()8 0 == "
 ; (
 ; 777
 addr2reg Label_777 r5
 ; ,
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_775
 ; {
 ; RPN'ized expression: "( 0 SkipSpace ) "
 ; Expanded expression: " 0  SkipSpace ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
 ; RPN'ized expression: "( GetIdent ) "
 ; Expanded expression: " GetIdent ()0 "
 ; (
 ; GetIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetIdent
 add r13 16 r13
 ; if
 ; RPN'ized expression: "PrepDontSkipTokens 0 == "
 ; Expanded expression: "PrepDontSkipTokens *(4) 0 == "
 ; PrepDontSkipTokens
 ; * (read dereference)
 addr2reg PrepDontSkipTokens r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_778
 ; {
 ; RPN'ized expression: "( 0 SkipSpace ) "
 ; Expanded expression: " 0  SkipSpace ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
 ; while

.rdata
Label_782:
.dw 13 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L782 strchr ) 0 == "
 ; Expanded expression: " (@-4) *(4) *(-1)  L782  strchr ()8 0 == "
Label_780:
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 782
 addr2reg Label_782 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_781
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 jump Label_780
Label_781:
 ; continue
 jump Label_720
 ; }
Label_778:
 ; if
 ; RPN'ized expression: "( TokenIdentName FindMacro ) 0 >= "
 ; Expanded expression: " TokenIdentName  FindMacro ()4 0 >= "
 ; (
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; FindMacro
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump FindMacro
 add r13 16 r13
 ; 0
 ; >=
 bges r2 r0 2
 jump Label_783

.rdata
Label_785:
.dw 82 101 100 101 102 105 110 105 116 105 111 110 32 111 102 32 109 97 99 114 111 32 39 37 115 39 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( TokenIdentName , L785 error ) "
 ; Expanded expression: " TokenIdentName  L785  error ()8 "
 ; (
 ; TokenIdentName
 addr2reg TokenIdentName r5
 ; ,
 ; 785
 addr2reg Label_785 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_783:
 ; if
 ; RPN'ized expression: "p *u 40 == "
 ; Expanded expression: "(@-4) *(4) *(-1) 40 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_786
 ; RPN'ized expression: "( errorDirective ) "
 ; Expanded expression: " errorDirective ()0 "
 ; (
 ; errorDirective
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDirective
 add r13 16 r13
Label_786:
 ; RPN'ized expression: "( TokenIdentName AddMacroIdent ) "
 ; Expanded expression: " TokenIdentName  AddMacroIdent ()4 "
 ; (
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; AddMacroIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump AddMacroIdent
 add r13 16 r13
 ; RPN'ized expression: "( 0 SkipSpace ) "
 ; Expanded expression: " 0  SkipSpace ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
 ; while

.rdata
Label_790:
.dw 13 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L790 strchr ) 0 == "
 ; Expanded expression: " (@-4) *(4) *(-1)  L790  strchr ()8 0 == "
Label_788:
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 790
 addr2reg Label_790 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_789
 ; {
 ; RPN'ized expression: "( p *u AddMacroExpansionChar ) "
 ; Expanded expression: " (@-4) *(4) *(-1)  AddMacroExpansionChar ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; AddMacroExpansionChar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump AddMacroExpansionChar
 add r13 16 r13
 ; RPN'ized expression: "( 1 ShiftCharN ) "
 ; Expanded expression: " 1  ShiftCharN ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; ShiftCharN
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftCharN
 add r13 16 r13
 ; if

.rdata
Label_793:
.dw 32 9 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p *u 0 != ( p *u , L793 strchr ) p *u 47 == p 1 + *u 47 == p 1 + *u 42 == || && || && "
 ; Expanded expression: "(@-4) *(4) *(-1) 0 != [sh&&->794]  (@-4) *(4) *(-1)  L793  strchr ()8 _Bool [sh||->795] (@-4) *(4) *(-1) 47 == [sh&&->796] (@-4) *(4) 1 + *(-1) 47 == [sh||->797] (@-4) *(4) 1 + *(-1) 42 == ||[797] _Bool &&[796] _Bool ||[795] _Bool &&[794] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; !=
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_794
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 793
 addr2reg Label_793 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_795
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 47
 ; ==
 load32 47 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_796
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 47
 ; ==
 load32 47 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_797
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 42
 ; ==
 load32 42 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_797:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_796:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_795:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_794:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_791
 ; {
 ; RPN'ized expression: "( 0 SkipSpace ) "
 ; Expanded expression: " 0  SkipSpace ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
 ; RPN'ized expression: "( 32 AddMacroExpansionChar ) "
 ; Expanded expression: " 32  AddMacroExpansionChar ()4 "
 ; (
 ; 32
 load32 32 r4
 ; ,
 ; AddMacroExpansionChar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump AddMacroExpansionChar
 add r13 16 r13
 ; }
Label_791:
 ; }
 jump Label_788
Label_789:
 ; RPN'ized expression: "( 0 AddMacroExpansionChar ) "
 ; Expanded expression: " 0  AddMacroExpansionChar ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; AddMacroExpansionChar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump AddMacroExpansionChar
 add r13 16 r13
 ; continue
 jump Label_720
 ; }
 jump Label_776
Label_775:
 ; else
 ; if

.rdata
Label_800:
.dw 117 110 100 101 102 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L800 , TokenIdentName strcmp ) 0 == "
 ; Expanded expression: " L800  TokenIdentName  strcmp ()8 0 == "
 ; (
 ; 800
 addr2reg Label_800 r5
 ; ,
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_798
 ; {
 ; RPN'ized expression: "( 0 SkipSpace ) "
 ; Expanded expression: " 0  SkipSpace ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
 ; RPN'ized expression: "( GetIdent ) "
 ; Expanded expression: " GetIdent ()0 "
 ; (
 ; GetIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetIdent
 add r13 16 r13
 ; if
 ; RPN'ized expression: "PrepDontSkipTokens "
 ; Expanded expression: "PrepDontSkipTokens *(4) "
 ; PrepDontSkipTokens
 ; * (read dereference)
 addr2reg PrepDontSkipTokens r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_801
 ; RPN'ized expression: "( TokenIdentName UndefineMacro ) "
 ; Expanded expression: " TokenIdentName  UndefineMacro ()4 "
 ; (
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; UndefineMacro
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump UndefineMacro
 add r13 16 r13
Label_801:
 ; RPN'ized expression: "( 0 SkipSpace ) "
 ; Expanded expression: " 0  SkipSpace ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
 ; if

.rdata
Label_805:
.dw 13 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L805 strchr ) 0 == "
 ; Expanded expression: " (@-4) *(4) *(-1)  L805  strchr ()8 0 == "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 805
 addr2reg Label_805 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_803
 ; RPN'ized expression: "( errorDirective ) "
 ; Expanded expression: " errorDirective ()0 "
 ; (
 ; errorDirective
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDirective
 add r13 16 r13
Label_803:
 ; continue
 jump Label_720
 ; }
 jump Label_799
Label_798:
 ; else
 ; if

.rdata
Label_808:
.dw 105 110 99 108 117 100 101 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L808 , TokenIdentName strcmp ) 0 == "
 ; Expanded expression: " L808  TokenIdentName  strcmp ()8 0 == "
 ; (
 ; 808
 addr2reg Label_808 r5
 ; ,
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_806
 ; {
 ; loc                 quot : (@-20) : int
 ; RPN'ized expression: "( 0 SkipSpace ) "
 ; Expanded expression: " 0  SkipSpace ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
 ; RPN'ized expression: "quot p *u = "
 ; Expanded expression: "(@-20) (@-4) *(4) *(-1) =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; if
 ; RPN'ized expression: "p *u 34 == "
 ; Expanded expression: "(@-4) *(4) *(-1) 34 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 34
 ; ==
 load32 34 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_809
 ; RPN'ized expression: "( 35 , 0 , 34 GetString ) "
 ; Expanded expression: " 35  0  34  GetString ()12 "
 ; (
 ; 35
 load32 35 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 34
 load32 34 r4
 ; ,
 ; GetString
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetString
 add r13 16 r13
 jump Label_810
Label_809:
 ; else
 ; if
 ; RPN'ized expression: "p *u 60 == "
 ; Expanded expression: "(@-4) *(4) *(-1) 60 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 60
 ; ==
 load32 60 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_811
 ; RPN'ized expression: "( 35 , 0 , 62 GetString ) "
 ; Expanded expression: " 35  0  62  GetString ()12 "
 ; (
 ; 35
 load32 35 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 62
 load32 62 r4
 ; ,
 ; GetString
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetString
 add r13 16 r13
 jump Label_812
Label_811:
 ; else
 ; RPN'ized expression: "( errorFileName ) "
 ; Expanded expression: " errorFileName ()0 "
 ; (
 ; errorFileName
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorFileName
 add r13 16 r13
Label_812:
Label_810:
 ; RPN'ized expression: "( 0 SkipSpace ) "
 ; Expanded expression: " 0  SkipSpace ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
 ; if

.rdata
Label_815:
.dw 13 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L815 strchr ) 0 == "
 ; Expanded expression: " (@-4) *(4) *(-1)  L815  strchr ()8 0 == "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 815
 addr2reg Label_815 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_813
 ; RPN'ized expression: "( errorDirective ) "
 ; Expanded expression: " errorDirective ()0 "
 ; (
 ; errorDirective
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDirective
 add r13 16 r13
Label_813:
 ; if
 ; RPN'ized expression: "PrepDontSkipTokens "
 ; Expanded expression: "PrepDontSkipTokens *(4) "
 ; PrepDontSkipTokens
 ; * (read dereference)
 addr2reg PrepDontSkipTokens r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_816
 ; RPN'ized expression: "( quot IncludeFile ) "
 ; Expanded expression: " (@-20) *(4)  IncludeFile ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r4
 ; ,
 ; IncludeFile
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump IncludeFile
 add r13 16 r13
Label_816:
 ; continue
 jump Label_720
 ; }
 jump Label_807
Label_806:
 ; else
 ; if

.rdata
Label_820:
.dw 105 102 100 101 102 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L820 , TokenIdentName strcmp ) 0 == "
 ; Expanded expression: " L820  TokenIdentName  strcmp ()8 0 == "
 ; (
 ; 820
 addr2reg Label_820 r5
 ; ,
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_818
 ; {
 ; loc                 def : (@-20) : int
 ; RPN'ized expression: "( 0 SkipSpace ) "
 ; Expanded expression: " 0  SkipSpace ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
 ; RPN'ized expression: "( GetIdent ) "
 ; Expanded expression: " GetIdent ()0 "
 ; (
 ; GetIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetIdent
 add r13 16 r13
 ; RPN'ized expression: "def ( TokenIdentName FindMacro ) 0 >= = "
 ; Expanded expression: "(@-20)  TokenIdentName  FindMacro ()4 0 >= =(4) "
 ; (
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; FindMacro
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump FindMacro
 add r13 16 r13
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; RPN'ized expression: "( 0 SkipSpace ) "
 ; Expanded expression: " 0  SkipSpace ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
 ; if

.rdata
Label_823:
.dw 13 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L823 strchr ) 0 == "
 ; Expanded expression: " (@-4) *(4) *(-1)  L823  strchr ()8 0 == "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 823
 addr2reg Label_823 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_821
 ; RPN'ized expression: "( errorDirective ) "
 ; Expanded expression: " errorDirective ()0 "
 ; (
 ; errorDirective
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDirective
 add r13 16 r13
Label_821:
 ; RPN'ized expression: "( def pushPrep ) "
 ; Expanded expression: " (@-20) *(4)  pushPrep ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r4
 ; ,
 ; pushPrep
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump pushPrep
 add r13 16 r13
 ; continue
 jump Label_720
 ; }
 jump Label_819
Label_818:
 ; else
 ; if

.rdata
Label_826:
.dw 105 102 110 100 101 102 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L826 , TokenIdentName strcmp ) 0 == "
 ; Expanded expression: " L826  TokenIdentName  strcmp ()8 0 == "
 ; (
 ; 826
 addr2reg Label_826 r5
 ; ,
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_824
 ; {
 ; loc                 def : (@-20) : int
 ; RPN'ized expression: "( 0 SkipSpace ) "
 ; Expanded expression: " 0  SkipSpace ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
 ; RPN'ized expression: "( GetIdent ) "
 ; Expanded expression: " GetIdent ()0 "
 ; (
 ; GetIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetIdent
 add r13 16 r13
 ; RPN'ized expression: "def ( TokenIdentName FindMacro ) 0 >= = "
 ; Expanded expression: "(@-20)  TokenIdentName  FindMacro ()4 0 >= =(4) "
 ; (
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; FindMacro
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump FindMacro
 add r13 16 r13
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; RPN'ized expression: "( 0 SkipSpace ) "
 ; Expanded expression: " 0  SkipSpace ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
 ; if

.rdata
Label_829:
.dw 13 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L829 strchr ) 0 == "
 ; Expanded expression: " (@-4) *(4) *(-1)  L829  strchr ()8 0 == "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 829
 addr2reg Label_829 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_827
 ; RPN'ized expression: "( errorDirective ) "
 ; Expanded expression: " errorDirective ()0 "
 ; (
 ; errorDirective
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDirective
 add r13 16 r13
Label_827:
 ; RPN'ized expression: "( def 0 == pushPrep ) "
 ; Expanded expression: " (@-20) *(4) 0 ==  pushPrep ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r4
 ; 0
 ; ==
 load32 1 r1
 bges r4 r1 3
 load32 1 r4
 jumpo 2
 load32 0 r4
 ; ,
 ; pushPrep
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump pushPrep
 add r13 16 r13
 ; continue
 jump Label_720
 ; }
 jump Label_825
Label_824:
 ; else
 ; if

.rdata
Label_832:
.dw 101 108 115 101 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L832 , TokenIdentName strcmp ) 0 == "
 ; Expanded expression: " L832  TokenIdentName  strcmp ()8 0 == "
 ; (
 ; 832
 addr2reg Label_832 r5
 ; ,
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_830
 ; {
 ; loc                 def : (@-20) : int
 ; RPN'ized expression: "( 0 SkipSpace ) "
 ; Expanded expression: " 0  SkipSpace ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
 ; if

.rdata
Label_835:
.dw 13 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L835 strchr ) 0 == "
 ; Expanded expression: " (@-4) *(4) *(-1)  L835  strchr ()8 0 == "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 835
 addr2reg Label_835 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_833
 ; RPN'ized expression: "( errorDirective ) "
 ; Expanded expression: " errorDirective ()0 "
 ; (
 ; errorDirective
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDirective
 add r13 16 r13
Label_833:
 ; RPN'ized expression: "def ( popPrep ) = "
 ; Expanded expression: "(@-20)  popPrep ()0 =(4) "
 ; (
 ; popPrep
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump popPrep
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; if
 ; RPN'ized expression: "def 2 >= "
 ; Expanded expression: "(@-20) *(4) 2 >= "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; 2
 ; >=
 load32 2 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_836

.rdata
Label_838:
.dw 35 101 108 115 101 32 111 114 32 35 101 110 100 105 102 32 119 105 116 104 111 117 116 32 35 105 102 40 110 41 100 101 102 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L838 error ) "
 ; Expanded expression: " L838  error ()4 "
 ; (
 ; 838
 addr2reg Label_838 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_836:
 ; RPN'ized expression: "( 2 def 0 == + pushPrep ) "
 ; Expanded expression: " 2 (@-20) *(4) 0 == +  pushPrep ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r4
 ; 0
 ; ==
 load32 1 r1
 bges r4 r1 3
 load32 1 r4
 jumpo 2
 load32 0 r4
 ; 2
 ; +
 add r4 2 r4
 ; ,
 ; pushPrep
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump pushPrep
 add r13 16 r13
 ; continue
 jump Label_720
 ; }
 jump Label_831
Label_830:
 ; else
 ; if

.rdata
Label_841:
.dw 101 110 100 105 102 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L841 , TokenIdentName strcmp ) 0 == "
 ; Expanded expression: " L841  TokenIdentName  strcmp ()8 0 == "
 ; (
 ; 841
 addr2reg Label_841 r5
 ; ,
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_839
 ; {
 ; RPN'ized expression: "( 0 SkipSpace ) "
 ; Expanded expression: " 0  SkipSpace ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; SkipSpace
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipSpace
 add r13 16 r13
 ; if

.rdata
Label_844:
.dw 13 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u , L844 strchr ) 0 == "
 ; Expanded expression: " (@-4) *(4) *(-1)  L844  strchr ()8 0 == "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 844
 addr2reg Label_844 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_842
 ; RPN'ized expression: "( errorDirective ) "
 ; Expanded expression: " errorDirective ()0 "
 ; (
 ; errorDirective
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDirective
 add r13 16 r13
Label_842:
 ; RPN'ized expression: "( popPrep ) "
 ; Expanded expression: " popPrep ()0 "
 ; (
 ; popPrep
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump popPrep
 add r13 16 r13
 ; continue
 jump Label_720
 ; }
Label_839:
Label_831:
Label_825:
Label_819:
Label_807:
Label_799:
Label_776:
 ; if
 ; RPN'ized expression: "PrepDontSkipTokens 0 == "
 ; Expanded expression: "PrepDontSkipTokens *(4) 0 == "
 ; PrepDontSkipTokens
 ; * (read dereference)
 addr2reg PrepDontSkipTokens r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_845
 ; {
 ; if

.rdata
Label_849:
.dw 105 102 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L849 , TokenIdentName strcmp ) 0 == "
 ; Expanded expression: " L849  TokenIdentName  strcmp ()8 0 == "
 ; (
 ; 849
 addr2reg Label_849 r5
 ; ,
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_847
 ; RPN'ized expression: "( 0 pushPrep ) "
 ; Expanded expression: " 0  pushPrep ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; pushPrep
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump pushPrep
 add r13 16 r13
 jump Label_848
Label_847:
 ; else
 ; if

.rdata
Label_852:
.dw 101 108 105 102 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L852 , TokenIdentName strcmp ) 0 == "
 ; Expanded expression: " L852  TokenIdentName  strcmp ()8 0 == "
 ; (
 ; 852
 addr2reg Label_852 r5
 ; ,
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_850
 ; RPN'ized expression: "( popPrep ) ( 0 pushPrep ) ,b "
 ; Expanded expression: " popPrep ()0 void  0  pushPrep ()4 ,b "
 ; (
 ; popPrep
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump popPrep
 add r13 16 r13
 ; void
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; pushPrep
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump pushPrep
 add r13 16 r13
 ; ,b
Label_850:
Label_848:
 ; RPN'ized expression: "( SkipLine ) "
 ; Expanded expression: " SkipLine ()0 "
 ; (
 ; SkipLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SkipLine
 add r13 16 r13
 ; continue
 jump Label_720
 ; }
Label_845:
 ; RPN'ized expression: "( errorDirective ) "
 ; Expanded expression: " errorDirective ()0 "
 ; (
 ; errorDirective
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDirective
 add r13 16 r13
 ; }
Label_749:

.rdata
Label_853:
.dw 73 110 118 97 108 105 100 32 111 114 32 117 110 115 117 112 112 111 114 116 101 100 32 99 104 97 114 97 99 116 101 114 32 119 105 116 104 32 99 111 100 101 32 48 120 37 48 50 88 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p *u 255u & , L853 error ) "
 ; Expanded expression: " (@-4) *(4) *(-1) 255u &  L853  error ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; 255
 ; &
 and r5 255 r5
 ; ,
 ; 853
 addr2reg Label_853 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
 ; }
 jump Label_720
Label_723:
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
Label_719:
 read 4 r14 r15
 read 0 r14 r14
 add r13 44 r13
 jumpr 0 r15

 ; glb errorRedecl : (
 ; prm     s : * char
 ;     ) void
.code
; .globl errorRedecl
errorRedecl:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     s : (@8) : * char

.rdata
Label_855:
.dw 73 110 118 97 108 105 100 32 111 114 32 117 110 115 117 112 112 111 114 116 101 100 32 114 101 100 101 99 108 97 114 97 116 105 111 110 32 111 102 32 39 37 115 39 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( s , L855 error ) "
 ; Expanded expression: " (@8) *(4)  L855  error ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 855
 addr2reg Label_855 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_854:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenInit : (void) void
.code
; .globl GenInit
GenInit:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
 ; write 4 r14 r15
 ; RPN'ized expression: "SizeOfWord 4 = "
 ; Expanded expression: "SizeOfWord 4 =(4) "
 ; 4
 load32 4 r2
 ; SizeOfWord
 ; = (write dereference)
 addr2reg SizeOfWord r1
 write 0 r1 r2
 ; RPN'ized expression: "OutputFormat 1 = "
 ; Expanded expression: "OutputFormat 1 =(4) "
 ; 1
 load32 1 r2
 ; OutputFormat
 ; = (write dereference)
 addr2reg OutputFormat r1
 write 0 r1 r2

.rdata
Label_857:
.dw 46 99 111 100 101 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "CodeHeaderFooter 0 + *u L857 = "
 ; Expanded expression: "CodeHeaderFooter 0 + L857 =(4) "
 ; CodeHeaderFooter
 addr2reg CodeHeaderFooter r2
 ; 0
 ; +
 add r2 0 r2
 ; 857
 addr2reg Label_857 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2

.rdata
Label_858:
.dw 46 100 97 116 97 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "DataHeaderFooter 0 + *u L858 = "
 ; Expanded expression: "DataHeaderFooter 0 + L858 =(4) "
 ; DataHeaderFooter
 addr2reg DataHeaderFooter r2
 ; 0
 ; +
 add r2 0 r2
 ; 858
 addr2reg Label_858 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2

.rdata
Label_859:
.dw 46 114 100 97 116 97 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "RoDataHeaderFooter 0 + *u L859 = "
 ; Expanded expression: "RoDataHeaderFooter 0 + L859 =(4) "
 ; RoDataHeaderFooter
 addr2reg RoDataHeaderFooter r2
 ; 0
 ; +
 add r2 0 r2
 ; 859
 addr2reg Label_859 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2

.rdata
Label_860:
.dw 46 98 115 115 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "BssHeaderFooter 0 + *u L860 = "
 ; Expanded expression: "BssHeaderFooter 0 + L860 =(4) "
 ; BssHeaderFooter
 addr2reg BssHeaderFooter r2
 ; 0
 ; +
 add r2 0 r2
 ; 860
 addr2reg Label_860 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "UseLeadingUnderscores 0 = "
 ; Expanded expression: "UseLeadingUnderscores 0 =(4) "
 ; 0
 ; UseLeadingUnderscores
 ; =
 addr2reg UseLeadingUnderscores r1
 write 0 r1 r0
Label_856:
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenInitParams : (
 ; prm     argc : int
 ; prm     argv : * * char
 ; prm     idx : * int
 ;     ) int
.code
; .globl GenInitParams
GenInitParams:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
 ; write 4 r14 r15
 ; loc     argc : (@8) : int
 ; loc     argv : (@12) : * * char
 ; loc     idx : (@16) : * int
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
Label_861:
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenInitFinalize : (void) void
.code
; .globl GenInitFinalize
GenInitFinalize:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; if
 ; RPN'ized expression: "compileUserBDOS "
 ; Expanded expression: "compileUserBDOS *(4) "
 ; compileUserBDOS
 ; * (read dereference)
 addr2reg compileUserBDOS r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_863
 ; {

.rdata
Label_865:
.dw 46 99 111 100 101 10 
.dw 59 32 83 101 116 117 112 32 115 116 97 99 107 32 97 110 100 32 114 101 116 117 114 110 32 102 117 110 99 116 105 111 110 32 98 101 102 111 114 101 32 106 117 109 112 105 110 103 32 116 111 32 77 97 105 110 32 111 102 32 66 68 79 83 32 117 115 101 114 32 112 114 111 103 114 97 109 10 
.dw 59 32 66 68 79 83 32 117 115 101 114 32 112 114 111 103 114 97 109 115 32 104 97 118 101 32 116 104 101 105 114 32 115 116 97 99 107 32 116 111 32 107 101 101 112 32 116 104 101 32 111 116 104 101 114 32 115 116 97 99 107 115 32 105 110 116 97 99 116 10 
.dw 77 97 105 110 58 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 32 114 49 52 32 32 32 32 32 32 32 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 98 97 115 101 32 112 111 105 110 116 101 114 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 120 55 51 70 70 70 70 32 114 49 51 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 117 115 101 114 32 109 97 105 110 32 115 116 97 99 107 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 97 100 100 114 50 114 101 103 32 82 101 116 117 114 110 95 66 68 79 83 32 114 49 32 59 32 103 101 116 32 97 100 100 114 101 115 115 32 111 102 32 114 101 116 117 114 110 32 102 117 110 99 116 105 111 110 10 
.dw 32 32 32 32 111 114 32 114 48 32 114 49 32 114 49 53 32 32 32 32 32 32 32 32 32 32 32 32 59 32 99 111 112 121 32 114 101 116 117 114 110 32 97 100 100 114 32 116 111 32 114 49 53 10 
.dw 32 32 32 32 106 117 109 112 32 109 97 105 110 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 106 117 109 112 32 116 111 32 109 97 105 110 32 111 102 32 67 32 112 114 111 103 114 97 109 10 
.dw 32 32 32 32 104 97 108 116 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 110 111 116 32 103 101 116 32 104 101 114 101 10 
.dw 10 
.dw 59 32 70 117 110 99 116 105 111 110 32 116 104 97 116 32 105 115 32 99 97 108 108 101 100 32 97 102 116 101 114 32 77 97 105 110 32 111 102 32 67 32 117 115 101 114 32 112 114 111 103 114 97 109 32 104 97 115 32 114 101 116 117 114 110 101 100 10 
.dw 59 32 72 101 114 101 32 119 101 32 100 111 32 115 111 109 101 32 112 111 115 116 32 112 114 111 99 101 115 115 105 110 103 32 98 101 102 111 114 101 32 106 117 109 112 105 110 103 32 98 97 99 107 32 116 111 32 66 68 79 83 10 
.dw 59 32 73 116 115 32 97 100 114 114 101 115 115 32 115 104 111 117 108 100 32 98 101 32 111 110 32 116 111 112 32 111 102 32 116 104 101 32 104 97 114 100 119 97 114 101 32 115 116 97 99 107 10 
.dw 82 101 116 117 114 110 95 66 68 79 83 58 10 
.dw 32 32 32 32 59 32 110 111 116 105 102 121 32 112 114 111 103 114 97 109 32 104 97 115 32 101 110 100 101 100 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 120 49 48 48 51 48 48 32 114 49 10 
.dw 32 32 32 32 119 114 105 116 101 32 48 32 114 49 32 114 48 10 
.dw 10 
.dw 32 32 32 32 112 111 112 32 114 49 10 
.dw 32 32 32 32 106 117 109 112 114 32 51 32 114 49 10 
.dw 32 32 32 32 104 97 108 116 32 32 32 32 59 32 115 104 111 117 108 100 32 110 111 116 32 103 101 116 32 104 101 114 101 10 
.dw 10 
.dw 59 32 67 79 77 80 73 76 69 68 32 67 32 67 79 68 69 32 72 69 82 69 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L865 printf2 ) "
 ; Expanded expression: " L865  printf2 ()4 "
 ; (
 ; 865
 addr2reg Label_865 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; }
 jump Label_864
Label_863:
 ; else
 ; {

.rdata
Label_866:
.dw 46 99 111 100 101 10 
.dw 59 32 83 101 116 117 112 32 115 116 97 99 107 32 97 110 100 32 114 101 116 117 114 110 32 102 117 110 99 116 105 111 110 32 98 101 102 111 114 101 32 106 117 109 112 105 110 103 32 116 111 32 77 97 105 110 32 111 102 32 67 32 112 114 111 103 114 97 109 10 
.dw 77 97 105 110 58 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 32 114 49 52 32 32 32 32 32 32 32 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 98 97 115 101 32 112 111 105 110 116 101 114 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 120 55 55 70 70 70 70 32 114 49 51 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 109 97 105 110 32 115 116 97 99 107 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 97 100 100 114 50 114 101 103 32 82 101 116 117 114 110 95 85 65 82 84 32 114 49 32 59 32 103 101 116 32 97 100 100 114 101 115 115 32 111 102 32 114 101 116 117 114 110 32 102 117 110 99 116 105 111 110 10 
.dw 32 32 32 32 111 114 32 114 48 32 114 49 32 114 49 53 32 32 32 32 32 32 32 32 32 32 32 32 59 32 99 111 112 121 32 114 101 116 117 114 110 32 97 100 100 114 32 116 111 32 114 49 53 10 
.dw 32 32 32 32 106 117 109 112 32 109 97 105 110 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 106 117 109 112 32 116 111 32 109 97 105 110 32 111 102 32 67 32 112 114 111 103 114 97 109 10 
.dw 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 114 101 116 117 114 110 32 116 111 32 116 104 101 32 97 100 100 114 101 115 115 32 105 110 32 114 49 53 10 
.dw 32 32 32 32 104 97 108 116 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 110 111 116 32 103 101 116 32 104 101 114 101 10 
.dw 10 
.dw 59 32 70 117 110 99 116 105 111 110 32 116 104 97 116 32 105 115 32 99 97 108 108 101 100 32 97 102 116 101 114 32 77 97 105 110 32 111 102 32 67 32 112 114 111 103 114 97 109 32 104 97 115 32 114 101 116 117 114 110 101 100 10 
.dw 59 32 82 101 116 117 114 110 32 118 97 108 117 101 32 115 104 111 117 108 100 32 98 101 32 105 110 32 82 49 10 
.dw 59 32 83 101 110 100 32 105 116 32 111 118 101 114 32 85 65 82 84 32 97 110 100 32 104 97 108 116 32 97 102 116 101 114 119 97 114 100 115 10 
.dw 82 101 116 117 114 110 95 85 65 82 84 58 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 120 67 48 50 55 50 51 32 114 49 32 32 32 32 32 32 32 32 32 32 59 32 114 49 32 61 32 48 120 67 48 50 55 50 51 32 124 32 85 65 82 84 32 116 120 10 
.dw 32 32 32 32 119 114 105 116 101 32 48 32 114 49 32 114 50 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 119 114 105 116 101 32 114 50 32 111 118 101 114 32 85 65 82 84 10 
.dw 32 32 32 32 104 97 108 116 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 104 97 108 116 10 
.dw 10 
.dw 59 32 67 79 77 80 73 76 69 68 32 67 32 67 79 68 69 32 72 69 82 69 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L866 printf2 ) "
 ; Expanded expression: " L866  printf2 ()4 "
 ; (
 ; 866
 addr2reg Label_866 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; }
Label_864:
Label_862:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenStartCommentLine : (void) void
.code
; .globl GenStartCommentLine
GenStartCommentLine:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15

.rdata
Label_868:
.dw 32 59 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L868 printf2 ) "
 ; Expanded expression: " L868  printf2 ()4 "
 ; (
 ; 868
 addr2reg Label_868 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_867:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenWordAlignment : (
 ; prm     bss : int
 ;     ) void
.code
; .globl GenWordAlignment
GenWordAlignment:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     bss : (@8) : int
 ; loc     <something> : void
 ; RPN'ized expression: "bss (something870) "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2

.rdata
Label_871:
.dw 59 32 46 97 108 105 103 110 32 50 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L871 printf2 ) "
 ; Expanded expression: " L871  printf2 ()4 "
 ; (
 ; 871
 addr2reg Label_871 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_869:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenLabel : (
 ; prm     Label : * char
 ; prm     Static : int
 ;     ) void
.code
; .globl GenLabel
GenLabel:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     Label : (@8) : * char
 ; loc     Static : (@12) : int
 ; {
 ; if
 ; RPN'ized expression: "Static 0 == GenExterns && "
 ; Expanded expression: "(@12) *(4) 0 == [sh&&->875] GenExterns *(4) _Bool &&[875] "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_875
 ; GenExterns
 ; * (read dereference)
 addr2reg GenExterns r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_875:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_873

.rdata
Label_876:
.dw 59 32 46 103 108 111 98 108 32 37 115 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( Label , L876 printf2 ) "
 ; Expanded expression: " (@8) *(4)  L876  printf2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 876
 addr2reg Label_876 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_873:

.rdata
Label_877:
.dw 37 115 58 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( Label , L877 printf2 ) "
 ; Expanded expression: " (@8) *(4)  L877  printf2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 877
 addr2reg Label_877 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; }
Label_872:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenPrintLabel : (
 ; prm     Label : * char
 ;     ) void
.code
; .globl GenPrintLabel
GenPrintLabel:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     Label : (@8) : * char
 ; {
 ; if
 ; RPN'ized expression: "( Label *u isdigit ) "
 ; Expanded expression: " (@8) *(4) *(-1)  isdigit ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; isdigit
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isdigit
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_879

.rdata
Label_881:
.dw 76 97 98 101 108 95 37 115 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( Label , L881 printf2 ) "
 ; Expanded expression: " (@8) *(4)  L881  printf2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 881
 addr2reg Label_881 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 jump Label_880
Label_879:
 ; else

.rdata
Label_882:
.dw 37 115 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( Label , L882 printf2 ) "
 ; Expanded expression: " (@8) *(4)  L882  printf2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 882
 addr2reg Label_882 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_880:
 ; }
Label_878:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenNumLabel : (
 ; prm     Label : int
 ;     ) void
.code
; .globl GenNumLabel
GenNumLabel:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     Label : (@8) : int

.rdata
Label_884:
.dw 76 97 98 101 108 95 37 100 58 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( Label , L884 printf2 ) "
 ; Expanded expression: " (@8) *(4)  L884  printf2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 884
 addr2reg Label_884 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_883:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenPrintNumLabel : (
 ; prm     label : int
 ;     ) void
.code
; .globl GenPrintNumLabel
GenPrintNumLabel:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     label : (@8) : int

.rdata
Label_886:
.dw 76 97 98 101 108 95 37 100 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( label , L886 printf2 ) "
 ; Expanded expression: " (@8) *(4)  L886  printf2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 886
 addr2reg Label_886 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_885:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenZeroData : (
 ; prm     Size : unsigned
 ; prm     bss : int
 ;     ) void
.code
; .globl GenZeroData
GenZeroData:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     Size : (@8) : unsigned
 ; loc     bss : (@12) : int
 ; loc     <something> : void
 ; RPN'ized expression: "bss (something888) "
 ; Expanded expression: "(@12) *(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2

.rdata
Label_889:
.dw 59 32 46 115 112 97 99 101 32 37 117 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( Size truncUint ) , L889 printf2 ) "
 ; Expanded expression: "  (@8) *(4)  truncUint ()4  L889  printf2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; truncUint
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; ,
 ; 889
 sub r13 4 r13
 write 0 r13 r2
 addr2reg Label_889 r2
 ; ,
 ; printf2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "Size 0 > "
 ; Expanded expression: "(@8) *(4) 0 >u "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; >u
 bne r2 r0 2
 jump Label_890
 ; {

.rdata
Label_892:
.dw 46 100 119 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L892 printf2 ) "
 ; Expanded expression: " L892  printf2 ()4 "
 ; (
 ; 892
 addr2reg Label_892 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; loc         i : (@-4) : int
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_893:
 ; RPN'ized expression: "i Size < "
 ; Expanded expression: "(@-4) *(4) (@8) *(4) <u "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; <u
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_896
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; {

.rdata
Label_897:
.dw 32 48 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L897 printf2 ) "
 ; Expanded expression: " L897  printf2 ()4 "
 ; (
 ; 897
 addr2reg Label_897 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; }
Label_894:
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_893
Label_896:

.rdata
Label_898:
.dw 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L898 printf2 ) "
 ; Expanded expression: " L898  printf2 ()4 "
 ; (
 ; 898
 addr2reg Label_898 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; }
Label_890:
Label_887:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb GenIntData : (
 ; prm     Size : int
 ; prm     Val : int
 ;     ) void
.code
; .globl GenIntData
GenIntData:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     Size : (@8) : int
 ; loc     Val : (@12) : int
 ; RPN'ized expression: "Val ( Val truncInt ) = "
 ; Expanded expression: "(@12)  (@12) *(4)  truncInt ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; if
 ; RPN'ized expression: "Size 1 == "
 ; Expanded expression: "(@8) *(4) 1 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_900

.rdata
Label_902:
.dw 32 46 100 119 32 37 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( Val , L902 printf2 ) "
 ; Expanded expression: " (@12) *(4)  L902  printf2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; 902
 addr2reg Label_902 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 jump Label_901
Label_900:
 ; else
 ; if
 ; RPN'ized expression: "Size 2 == "
 ; Expanded expression: "(@8) *(4) 2 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_903

.rdata
Label_905:
.dw 32 46 100 119 32 37 100 32 37 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( Val , Val , L905 printf2 ) "
 ; Expanded expression: " (@12) *(4)  (@12) *(4)  L905  printf2 ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; 905
 addr2reg Label_905 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 jump Label_904
Label_903:
 ; else
 ; if
 ; RPN'ized expression: "Size 4 == "
 ; Expanded expression: "(@8) *(4) 4 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 4
 ; ==
 load32 4 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_906

.rdata
Label_908:
.dw 32 46 100 119 32 37 100 32 37 100 32 37 100 32 37 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( Val , Val , Val , Val , L908 printf2 ) "
 ; Expanded expression: " (@12) *(4)  (@12) *(4)  (@12) *(4)  (@12) *(4)  L908  printf2 ()20 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; 908
 addr2reg Label_908 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 20 r13
Label_906:
Label_904:
Label_901:
Label_899:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenStartAsciiString : (void) void
.code
; .globl GenStartAsciiString
GenStartAsciiString:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15

.rdata
Label_910:
.dw 46 100 119 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L910 printf2 ) "
 ; Expanded expression: " L910  printf2 ()4 "
 ; (
 ; 910
 addr2reg Label_910 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_909:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenAddrData : (
 ; prm     Size : int
 ; prm     Label : * char
 ; prm     ofs : int
 ;     ) void
.code
; .globl GenAddrData
GenAddrData:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     Size : (@8) : int
 ; loc     Label : (@12) : * char
 ; loc     ofs : (@16) : int
 ; RPN'ized expression: "ofs ( ofs truncInt ) = "
 ; Expanded expression: "(@16)  (@16) *(4)  truncInt ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 16 r14 r2
 ; loc     i : (@-4) : int
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_912:
 ; RPN'ized expression: "i 4 < "
 ; Expanded expression: "(@-4) *(4) 4 < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 4
 ; <
 load32 4 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_915
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; {

.rdata
Label_916:
.dw 46 100 108 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L916 printf2 ) "
 ; Expanded expression: " L916  printf2 ()4 "
 ; (
 ; 916
 addr2reg Label_916 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "( Label GenPrintLabel ) "
 ; Expanded expression: " (@12) *(4)  GenPrintLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; GenPrintLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintLabel
 add r13 16 r13
 ; if
 ; RPN'ized expression: "ofs "
 ; Expanded expression: "(@16) *(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_917

.rdata
Label_919:
.dw 32 37 43 100 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ofs , L919 printf2 ) "
 ; Expanded expression: " (@16) *(4)  L919  printf2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r5
 ; ,
 ; 919
 addr2reg Label_919 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_917:

.rdata
Label_920:
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L920 puts2 ) "
 ; Expanded expression: " L920  puts2 ()4 "
 ; (
 ; 920
 addr2reg Label_920 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
 ; }
Label_913:
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_912
Label_915:
Label_911:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb GenFxnSizeNeeded : (void) int
.code
; .globl GenFxnSizeNeeded
GenFxnSizeNeeded:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
 ; write 4 r14 r15
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
Label_921:
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenRecordFxnSize : (
 ; prm     startLabelName : * char
 ; prm     endLabelNo : int
 ;     ) void
.code
; .globl GenRecordFxnSize
GenRecordFxnSize:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
 ; write 4 r14 r15
 ; loc     startLabelName : (@8) : * char
 ; loc     endLabelNo : (@12) : int
 ; loc     <something> : void
 ; RPN'ized expression: "startLabelName (something923) "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; loc     <something> : void
 ; RPN'ized expression: "endLabelNo (something924) "
 ; Expanded expression: "(@12) *(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
Label_922:
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenPrintInstr : (
 ; prm     instr : int
 ; prm     val : int
 ;     ) void
.code
; .globl GenPrintInstr
GenPrintInstr:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     instr : (@8) : int
 ; loc     val : (@12) : int
 ; loc     p : (@-4) : * char

.rdata
Label_926:
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L926 = "
 ; Expanded expression: "(@-4) L926 =(4) "
 ; 926
 addr2reg Label_926 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc     <something> : void
 ; RPN'ized expression: "val (something927) "
 ; Expanded expression: "(@12) *(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; switch
 ; RPN'ized expression: "instr "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 jump Label_929
 ; {
 ; case
 ; RPN'ized expression: "48 "
 ; Expanded expression: "48 "
 ; Expression value: 48
Label_930:

.rdata
Label_931:
.dw 104 97 108 116 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L931 = "
 ; Expanded expression: "(@-4) L931 =(4) "
 ; 931
 addr2reg Label_931 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "49 "
 ; Expanded expression: "49 "
 ; Expression value: 49
Label_932:

.rdata
Label_933:
.dw 114 101 97 100 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L933 = "
 ; Expanded expression: "(@-4) L933 =(4) "
 ; 933
 addr2reg Label_933 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "50 "
 ; Expanded expression: "50 "
 ; Expression value: 50
Label_934:

.rdata
Label_935:
.dw 119 114 105 116 101 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L935 = "
 ; Expanded expression: "(@-4) L935 =(4) "
 ; 935
 addr2reg Label_935 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "51 "
 ; Expanded expression: "51 "
 ; Expression value: 51
Label_936:

.rdata
Label_937:
.dw 99 111 112 121 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L937 = "
 ; Expanded expression: "(@-4) L937 =(4) "
 ; 937
 addr2reg Label_937 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "52 "
 ; Expanded expression: "52 "
 ; Expression value: 52
Label_938:

.rdata
Label_939:
.dw 112 117 115 104 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L939 = "
 ; Expanded expression: "(@-4) L939 =(4) "
 ; 939
 addr2reg Label_939 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "53 "
 ; Expanded expression: "53 "
 ; Expression value: 53
Label_940:

.rdata
Label_941:
.dw 112 111 112 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L941 = "
 ; Expanded expression: "(@-4) L941 =(4) "
 ; 941
 addr2reg Label_941 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "54 "
 ; Expanded expression: "54 "
 ; Expression value: 54
Label_942:

.rdata
Label_943:
.dw 106 117 109 112 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L943 = "
 ; Expanded expression: "(@-4) L943 =(4) "
 ; 943
 addr2reg Label_943 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "55 "
 ; Expanded expression: "55 "
 ; Expression value: 55
Label_944:

.rdata
Label_945:
.dw 106 117 109 112 111 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L945 = "
 ; Expanded expression: "(@-4) L945 =(4) "
 ; 945
 addr2reg Label_945 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "56 "
 ; Expanded expression: "56 "
 ; Expression value: 56
Label_946:

.rdata
Label_947:
.dw 106 117 109 112 114 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L947 = "
 ; Expanded expression: "(@-4) L947 =(4) "
 ; 947
 addr2reg Label_947 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "57 "
 ; Expanded expression: "57 "
 ; Expression value: 57
Label_948:

.rdata
Label_949:
.dw 106 117 109 112 114 111 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L949 = "
 ; Expanded expression: "(@-4) L949 =(4) "
 ; 949
 addr2reg Label_949 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "58 "
 ; Expanded expression: "58 "
 ; Expression value: 58
Label_950:

.rdata
Label_951:
.dw 108 111 97 100 51 50 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L951 = "
 ; Expanded expression: "(@-4) L951 =(4) "
 ; 951
 addr2reg Label_951 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "59 "
 ; Expanded expression: "59 "
 ; Expression value: 59
Label_952:

.rdata
Label_953:
.dw 108 111 97 100 104 105 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L953 = "
 ; Expanded expression: "(@-4) L953 =(4) "
 ; 953
 addr2reg Label_953 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
Label_954:

.rdata
Label_955:
.dw 98 101 113 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L955 = "
 ; Expanded expression: "(@-4) L955 =(4) "
 ; 955
 addr2reg Label_955 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "61 "
 ; Expanded expression: "61 "
 ; Expression value: 61
Label_956:

.rdata
Label_957:
.dw 98 110 101 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L957 = "
 ; Expanded expression: "(@-4) L957 =(4) "
 ; 957
 addr2reg Label_957 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
Label_958:

.rdata
Label_959:
.dw 98 103 116 115 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L959 = "
 ; Expanded expression: "(@-4) L959 =(4) "
 ; 959
 addr2reg Label_959 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "63 "
 ; Expanded expression: "63 "
 ; Expression value: 63
Label_960:

.rdata
Label_961:
.dw 98 103 101 115 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L961 = "
 ; Expanded expression: "(@-4) L961 =(4) "
 ; 961
 addr2reg Label_961 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "64 "
 ; Expanded expression: "64 "
 ; Expression value: 64
Label_962:

.rdata
Label_963:
.dw 115 97 118 112 99 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L963 = "
 ; Expanded expression: "(@-4) L963 =(4) "
 ; 963
 addr2reg Label_963 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "65 "
 ; Expanded expression: "65 "
 ; Expression value: 65
Label_964:

.rdata
Label_965:
.dw 114 101 116 105 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L965 = "
 ; Expanded expression: "(@-4) L965 =(4) "
 ; 965
 addr2reg Label_965 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "66 "
 ; Expanded expression: "66 "
 ; Expression value: 66
Label_966:

.rdata
Label_967:
.dw 111 114 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L967 = "
 ; Expanded expression: "(@-4) L967 =(4) "
 ; 967
 addr2reg Label_967 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "67 "
 ; Expanded expression: "67 "
 ; Expression value: 67
Label_968:

.rdata
Label_969:
.dw 97 110 100 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L969 = "
 ; Expanded expression: "(@-4) L969 =(4) "
 ; 969
 addr2reg Label_969 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "68 "
 ; Expanded expression: "68 "
 ; Expression value: 68
Label_970:

.rdata
Label_971:
.dw 120 111 114 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L971 = "
 ; Expanded expression: "(@-4) L971 =(4) "
 ; 971
 addr2reg Label_971 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "69 "
 ; Expanded expression: "69 "
 ; Expression value: 69
Label_972:

.rdata
Label_973:
.dw 97 100 100 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L973 = "
 ; Expanded expression: "(@-4) L973 =(4) "
 ; 973
 addr2reg Label_973 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "70 "
 ; Expanded expression: "70 "
 ; Expression value: 70
Label_974:

.rdata
Label_975:
.dw 115 117 98 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L975 = "
 ; Expanded expression: "(@-4) L975 =(4) "
 ; 975
 addr2reg Label_975 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "71 "
 ; Expanded expression: "71 "
 ; Expression value: 71
Label_976:

.rdata
Label_977:
.dw 115 104 105 102 116 108 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L977 = "
 ; Expanded expression: "(@-4) L977 =(4) "
 ; 977
 addr2reg Label_977 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "72 "
 ; Expanded expression: "72 "
 ; Expression value: 72
Label_978:

.rdata
Label_979:
.dw 115 104 105 102 116 114 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L979 = "
 ; Expanded expression: "(@-4) L979 =(4) "
 ; 979
 addr2reg Label_979 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "73 "
 ; Expanded expression: "73 "
 ; Expression value: 73
Label_980:

.rdata
Label_981:
.dw 109 117 108 116 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L981 = "
 ; Expanded expression: "(@-4) L981 =(4) "
 ; 981
 addr2reg Label_981 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "74 "
 ; Expanded expression: "74 "
 ; Expression value: 74
Label_982:

.rdata
Label_983:
.dw 110 111 116 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L983 = "
 ; Expanded expression: "(@-4) L983 =(4) "
 ; 983
 addr2reg Label_983 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "75 "
 ; Expanded expression: "75 "
 ; Expression value: 75
Label_984:

.rdata
Label_985:
.dw 110 111 112 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L985 = "
 ; Expanded expression: "(@-4) L985 =(4) "
 ; 985
 addr2reg Label_985 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "76 "
 ; Expanded expression: "76 "
 ; Expression value: 76
Label_986:

.rdata
Label_987:
.dw 97 100 100 114 50 114 101 103 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L987 = "
 ; Expanded expression: "(@-4) L987 =(4) "
 ; 987
 addr2reg Label_987 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; case
 ; RPN'ized expression: "77 "
 ; Expanded expression: "77 "
 ; Expression value: 77
Label_988:

.rdata
Label_989:
.dw 114 101 97 100 105 110 116 105 100 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p L989 = "
 ; Expanded expression: "(@-4) L989 =(4) "
 ; 989
 addr2reg Label_989 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_928
 ; }
 jump Label_928
Label_929:
 load32 48 r12
 bne r2 r12 2
 jump Label_930
 load32 49 r12
 bne r2 r12 2
 jump Label_932
 load32 50 r12
 bne r2 r12 2
 jump Label_934
 load32 51 r12
 bne r2 r12 2
 jump Label_936
 load32 52 r12
 bne r2 r12 2
 jump Label_938
 load32 53 r12
 bne r2 r12 2
 jump Label_940
 load32 54 r12
 bne r2 r12 2
 jump Label_942
 load32 55 r12
 bne r2 r12 2
 jump Label_944
 load32 56 r12
 bne r2 r12 2
 jump Label_946
 load32 57 r12
 bne r2 r12 2
 jump Label_948
 load32 58 r12
 bne r2 r12 2
 jump Label_950
 load32 59 r12
 bne r2 r12 2
 jump Label_952
 load32 60 r12
 bne r2 r12 2
 jump Label_954
 load32 61 r12
 bne r2 r12 2
 jump Label_956
 load32 62 r12
 bne r2 r12 2
 jump Label_958
 load32 63 r12
 bne r2 r12 2
 jump Label_960
 load32 64 r12
 bne r2 r12 2
 jump Label_962
 load32 65 r12
 bne r2 r12 2
 jump Label_964
 load32 66 r12
 bne r2 r12 2
 jump Label_966
 load32 67 r12
 bne r2 r12 2
 jump Label_968
 load32 68 r12
 bne r2 r12 2
 jump Label_970
 load32 69 r12
 bne r2 r12 2
 jump Label_972
 load32 70 r12
 bne r2 r12 2
 jump Label_974
 load32 71 r12
 bne r2 r12 2
 jump Label_976
 load32 72 r12
 bne r2 r12 2
 jump Label_978
 load32 73 r12
 bne r2 r12 2
 jump Label_980
 load32 74 r12
 bne r2 r12 2
 jump Label_982
 load32 75 r12
 bne r2 r12 2
 jump Label_984
 load32 76 r12
 bne r2 r12 2
 jump Label_986
 load32 77 r12
 bne r2 r12 2
 jump Label_988
Label_928:

.rdata
Label_990:
.dw 32 37 115 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p , L990 printf2 ) "
 ; Expanded expression: " (@-4) *(4)  L990  printf2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; ,
 ; 990
 addr2reg Label_990 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_925:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb GenPrintOperand : (
 ; prm     op : int
 ; prm     val : int
 ;     ) void
.code
; .globl GenPrintOperand
GenPrintOperand:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     op : (@8) : int
 ; loc     val : (@12) : int
 ; if
 ; RPN'ized expression: "op 0 >= op 15 <= && "
 ; Expanded expression: "(@8) *(4) 0 >= [sh&&->994] (@8) *(4) 15 <= &&[994] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_994
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 15
 ; <=
 load32 16 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_994:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_992
 ; {

.rdata
Label_995:
.dw 114 37 100 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( op , L995 printf2 ) "
 ; Expanded expression: " (@8) *(4)  L995  printf2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 995
 addr2reg Label_995 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; }
 jump Label_993
Label_992:
 ; else
 ; if
 ; RPN'ized expression: "op 32 >= op 47 <= && "
 ; Expanded expression: "(@8) *(4) 32 >= [sh&&->998] (@8) *(4) 47 <= &&[998] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 32
 ; >=
 load32 32 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_998
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 47
 ; <=
 load32 48 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_998:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_996
 ; {

.rdata
Label_999:
.dw 37 100 32 114 37 100 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( op 32 - , ( val truncInt ) , L999 printf2 ) "
 ; Expanded expression: " (@8) *(4) 32 -   (@12) *(4)  truncInt ()4  L999  printf2 ()12 "
 ; (
 sub r13 4 r13
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 32
 ; -
 sub r2 32 r2
 ; ,
 ; (
 sub r13 4 r13
 write 0 r13 r2
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; ,
 ; truncInt
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; ,
 ; 999
 sub r13 4 r13
 write 0 r13 r2
 addr2reg Label_999 r2
 ; ,
 ; printf2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 read 8 r13 r6
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; }
 jump Label_997
Label_996:
 ; else
 ; {
 ; switch
 ; RPN'ized expression: "op "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 jump Label_1001
 ; {
 ; case
 ; RPN'ized expression: "128 "
 ; Expanded expression: "128 "
 ; Expression value: 128
Label_1002:

.rdata
Label_1003:
.dw 37 100 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( val truncInt ) , L1003 printf2 ) "
 ; Expanded expression: "  (@12) *(4)  truncInt ()4  L1003  printf2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; ,
 ; truncInt
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; ,
 ; 1003
 sub r13 4 r13
 write 0 r13 r2
 addr2reg Label_1003 r2
 ; ,
 ; printf2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_1000
 ; case
 ; RPN'ized expression: "131 "
 ; Expanded expression: "131 "
 ; Expression value: 131
Label_1004:

.rdata
Label_1005:
.dw 37 37 108 111 40 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1005 printf2 ) "
 ; Expanded expression: " L1005  printf2 ()4 "
 ; (
 ; 1005
 addr2reg Label_1005 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "( IdentTable val + GenPrintLabel ) "
 ; Expanded expression: " IdentTable (@12) *(4) +  GenPrintLabel ()4 "
 ; (
 ; IdentTable
 addr2reg IdentTable r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read 12 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; GenPrintLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintLabel
 add r13 16 r13

.rdata
Label_1006:
.dw 41 40 114 49 41 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1006 printf2 ) "
 ; Expanded expression: " L1006  printf2 ()4 "
 ; (
 ; 1006
 addr2reg Label_1006 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_1000
 ; case
 ; RPN'ized expression: "129 "
 ; Expanded expression: "129 "
 ; Expression value: 129
Label_1007:
 ; RPN'ized expression: "( IdentTable val + GenPrintLabel ) "
 ; Expanded expression: " IdentTable (@12) *(4) +  GenPrintLabel ()4 "
 ; (
 ; IdentTable
 addr2reg IdentTable r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read 12 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; GenPrintLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintLabel
 add r13 16 r13
 ; break
 jump Label_1000
 ; case
 ; RPN'ized expression: "130 "
 ; Expanded expression: "130 "
 ; Expression value: 130
Label_1008:
 ; RPN'ized expression: "( val GenPrintNumLabel ) "
 ; Expanded expression: " (@12) *(4)  GenPrintNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; GenPrintNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintNumLabel
 add r13 16 r13
 ; break
 jump Label_1000
 ; default
Label_1009:
 ; RPN'ized expression: "( 100 errorInternal ) "
 ; Expanded expression: " 100  errorInternal ()4 "
 ; (
 ; 100
 load32 100 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
 ; break
 jump Label_1000
 ; }
 jump Label_1000
Label_1001:
 load32 128 r12
 bne r2 r12 2
 jump Label_1002
 load32 131 r12
 bne r2 r12 2
 jump Label_1004
 load32 129 r12
 bne r2 r12 2
 jump Label_1007
 load32 130 r12
 bne r2 r12 2
 jump Label_1008
 jump Label_1009
Label_1000:
 ; }
Label_997:
Label_993:
Label_991:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenPrintOperandSeparator : (void) void
.code
; .globl GenPrintOperandSeparator
GenPrintOperandSeparator:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15

.rdata
Label_1011:
.dw 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1011 printf2 ) "
 ; Expanded expression: " L1011  printf2 ()4 "
 ; (
 ; 1011
 addr2reg Label_1011 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_1010:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenPrintNewLine : (void) void
.code
; .globl GenPrintNewLine
GenPrintNewLine:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15

.rdata
Label_1013:
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1013 puts2 ) "
 ; Expanded expression: " L1013  puts2 ()4 "
 ; (
 ; 1013
 addr2reg Label_1013 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
Label_1012:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenPrintInstr1Operand : (
 ; prm     instr : int
 ; prm     instrval : int
 ; prm     operand : int
 ; prm     operandval : int
 ;     ) void
.code
; .globl GenPrintInstr1Operand
GenPrintInstr1Operand:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     instr : (@8) : int
 ; loc     instrval : (@12) : int
 ; loc     operand : (@16) : int
 ; loc     operandval : (@20) : int
 ; RPN'ized expression: "( instrval , instr GenPrintInstr ) "
 ; Expanded expression: " (@12) *(4)  (@8) *(4)  GenPrintInstr ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenPrintInstr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr
 add r13 16 r13
 ; RPN'ized expression: "( operandval , operand GenPrintOperand ) "
 ; Expanded expression: " (@20) *(4)  (@16) *(4)  GenPrintOperand ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 20 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 16 r14 r4
 ; ,
 ; GenPrintOperand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintOperand
 add r13 16 r13
 ; RPN'ized expression: "( GenPrintNewLine ) "
 ; Expanded expression: " GenPrintNewLine ()0 "
 ; (
 ; GenPrintNewLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintNewLine
 add r13 16 r13
Label_1014:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenPrintInstr2Operands : (
 ; prm     instr : int
 ; prm     instrval : int
 ; prm     operand1 : int
 ; prm     operand1val : int
 ; prm     operand2 : int
 ; prm     operand2val : int
 ;     ) void
.code
; .globl GenPrintInstr2Operands
GenPrintInstr2Operands:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     instr : (@8) : int
 ; loc     instrval : (@12) : int
 ; loc     operand1 : (@16) : int
 ; loc     operand1val : (@20) : int
 ; loc     operand2 : (@24) : int
 ; loc     operand2val : (@28) : int
 ; if
 ; RPN'ized expression: "operand2 128 == operand2val 0 == && instr 69 == instr 70 == || && "
 ; Expanded expression: "(@24) *(4) 128 == [sh&&->1020] (@28) *(4) 0 == &&[1020] _Bool [sh&&->1018] (@8) *(4) 69 == [sh||->1019] (@8) *(4) 70 == ||[1019] _Bool &&[1018] "
 ; local ofs
 ; * (read dereference)
 read 24 r14 r2
 ; 128
 ; ==
 load32 128 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1020
 ; local ofs
 ; * (read dereference)
 read 28 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1020:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1018
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 69
 ; ==
 load32 69 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1019
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 70
 ; ==
 load32 70 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1019:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1018:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1016
 ; return
 jump Label_1015
Label_1016:
 ; RPN'ized expression: "( instrval , instr GenPrintInstr ) "
 ; Expanded expression: " (@12) *(4)  (@8) *(4)  GenPrintInstr ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenPrintInstr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr
 add r13 16 r13
 ; RPN'ized expression: "( operand1val , operand1 GenPrintOperand ) "
 ; Expanded expression: " (@20) *(4)  (@16) *(4)  GenPrintOperand ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 20 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 16 r14 r4
 ; ,
 ; GenPrintOperand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintOperand
 add r13 16 r13
 ; RPN'ized expression: "( GenPrintOperandSeparator ) "
 ; Expanded expression: " GenPrintOperandSeparator ()0 "
 ; (
 ; GenPrintOperandSeparator
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintOperandSeparator
 add r13 16 r13
 ; RPN'ized expression: "( operand2val , operand2 GenPrintOperand ) "
 ; Expanded expression: " (@28) *(4)  (@24) *(4)  GenPrintOperand ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 28 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 24 r14 r4
 ; ,
 ; GenPrintOperand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintOperand
 add r13 16 r13
 ; RPN'ized expression: "( GenPrintNewLine ) "
 ; Expanded expression: " GenPrintNewLine ()0 "
 ; (
 ; GenPrintNewLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintNewLine
 add r13 16 r13
Label_1015:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenPrintInstr3Operands : (
 ; prm     instr : int
 ; prm     instrval : int
 ; prm     operand1 : int
 ; prm     operand1val : int
 ; prm     operand2 : int
 ; prm     operand2val : int
 ; prm     operand3 : int
 ; prm     operand3val : int
 ;     ) void
.code
; .globl GenPrintInstr3Operands
GenPrintInstr3Operands:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     instr : (@8) : int
 ; loc     instrval : (@12) : int
 ; loc     operand1 : (@16) : int
 ; loc     operand1val : (@20) : int
 ; loc     operand2 : (@24) : int
 ; loc     operand2val : (@28) : int
 ; loc     operand3 : (@32) : int
 ; loc     operand3val : (@36) : int
 ; if
 ; RPN'ized expression: "operand3 128 == operand3val 0 == && instr 69 == instr 70 == || && operand1 operand2 == && "
 ; Expanded expression: "(@32) *(4) 128 == [sh&&->1027] (@36) *(4) 0 == &&[1027] _Bool [sh&&->1025] (@8) *(4) 69 == [sh||->1026] (@8) *(4) 70 == ||[1026] _Bool &&[1025] _Bool [sh&&->1024] (@16) *(4) (@24) *(4) == &&[1024] "
 ; local ofs
 ; * (read dereference)
 read 32 r14 r2
 ; 128
 ; ==
 load32 128 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1027
 ; local ofs
 ; * (read dereference)
 read 36 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1027:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1025
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 69
 ; ==
 load32 69 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1026
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 70
 ; ==
 load32 70 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1026:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1025:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1024
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; local ofs
 ; * (read dereference)
 read 24 r14 r8
 ; ==
 xor r2 r8 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1024:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1022
 ; return
 jump Label_1021
Label_1022:
 ; if
 ; RPN'ized expression: "operand2 128 == operand2val 0 < && "
 ; Expanded expression: "(@24) *(4) 128 == [sh&&->1030] (@28) *(4) 0 < &&[1030] "
 ; local ofs
 ; * (read dereference)
 read 24 r14 r2
 ; 128
 ; ==
 load32 128 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1030
 ; local ofs
 ; * (read dereference)
 read 28 r14 r2
 ; 0
 ; <
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1030:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1028
 ; {
 ; if
 ; RPN'ized expression: "instr 69 == "
 ; Expanded expression: "(@8) *(4) 69 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 69
 ; ==
 load32 69 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1031
 ; {
 ; RPN'ized expression: "instr 70 = "
 ; Expanded expression: "(@8) 70 =(4) "
 ; 70
 load32 70 r2
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "operand2val operand2val -u = "
 ; Expanded expression: "(@28) (@28) *(4) -u =(4) "
 ; local ofs
 ; * (read dereference)
 read 28 r14 r2
 ; -u
 sub r0 r2 r2
 ; local ofs
 ; = (write dereference)
 write 28 r14 r2
 ; }
 jump Label_1032
Label_1031:
 ; else
 ; if
 ; RPN'ized expression: "instr 70 == "
 ; Expanded expression: "(@8) *(4) 70 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 70
 ; ==
 load32 70 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1033
 ; {
 ; RPN'ized expression: "instr 69 = "
 ; Expanded expression: "(@8) 69 =(4) "
 ; 69
 load32 69 r2
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "operand2val operand2val -u = "
 ; Expanded expression: "(@28) (@28) *(4) -u =(4) "
 ; local ofs
 ; * (read dereference)
 read 28 r14 r2
 ; -u
 sub r0 r2 r2
 ; local ofs
 ; = (write dereference)
 write 28 r14 r2
 ; }
Label_1033:
Label_1032:
 ; }
Label_1028:
 ; RPN'ized expression: "( instrval , instr GenPrintInstr ) "
 ; Expanded expression: " (@12) *(4)  (@8) *(4)  GenPrintInstr ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenPrintInstr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr
 add r13 16 r13
 ; RPN'ized expression: "( operand1val , operand1 GenPrintOperand ) "
 ; Expanded expression: " (@20) *(4)  (@16) *(4)  GenPrintOperand ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 20 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 16 r14 r4
 ; ,
 ; GenPrintOperand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintOperand
 add r13 16 r13
 ; RPN'ized expression: "( GenPrintOperandSeparator ) "
 ; Expanded expression: " GenPrintOperandSeparator ()0 "
 ; (
 ; GenPrintOperandSeparator
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintOperandSeparator
 add r13 16 r13
 ; RPN'ized expression: "( operand2val , operand2 GenPrintOperand ) "
 ; Expanded expression: " (@28) *(4)  (@24) *(4)  GenPrintOperand ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 28 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 24 r14 r4
 ; ,
 ; GenPrintOperand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintOperand
 add r13 16 r13
 ; RPN'ized expression: "( GenPrintOperandSeparator ) "
 ; Expanded expression: " GenPrintOperandSeparator ()0 "
 ; (
 ; GenPrintOperandSeparator
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintOperandSeparator
 add r13 16 r13
 ; RPN'ized expression: "( operand3val , operand3 GenPrintOperand ) "
 ; Expanded expression: " (@36) *(4)  (@32) *(4)  GenPrintOperand ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 36 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 32 r14 r4
 ; ,
 ; GenPrintOperand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintOperand
 add r13 16 r13
 ; RPN'ized expression: "( GenPrintNewLine ) "
 ; Expanded expression: " GenPrintNewLine ()0 "
 ; (
 ; GenPrintNewLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintNewLine
 add r13 16 r13
Label_1021:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenExtendRegIfNeeded : (
 ; prm     reg : int
 ; prm     opSz : int
 ;     ) void
.code
; .globl GenExtendRegIfNeeded
GenExtendRegIfNeeded:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     reg : (@8) : int
 ; loc     opSz : (@12) : int
 ; if
 ; RPN'ized expression: "opSz 1 -u == "
 ; Expanded expression: "(@12) *(4) -1 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; -1
 ; ==
 load32 -1 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1036
 ; {
 ; }
 jump Label_1037
Label_1036:
 ; else
 ; if
 ; RPN'ized expression: "opSz 1 == "
 ; Expanded expression: "(@12) *(4) 1 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1038
 ; {
 ; RPN'ized expression: "( 0 , reg , 255 , 128 , 0 , reg , 0 , 67 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  (@8) *(4)  255  128  0  (@8) *(4)  0  67  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; 255
 sub r13 4 r13
 write 0 r13 r2
 load32 255 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 67
 load32 67 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; }
 jump Label_1039
Label_1038:
 ; else
 ; if
 ; RPN'ized expression: "opSz 2 -u == "
 ; Expanded expression: "(@12) *(4) -2 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; -2
 ; ==
 load32 -2 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1040
 ; {
 ; }
 jump Label_1041
Label_1040:
 ; else
 ; if
 ; RPN'ized expression: "opSz 2 == "
 ; Expanded expression: "(@12) *(4) 2 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1042
 ; {
 ; RPN'ized expression: "( 0 , reg , 16 , 128 , 0 , reg , 0 , 71 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  (@8) *(4)  16  128  0  (@8) *(4)  0  71  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; 16
 sub r13 4 r13
 write 0 r13 r2
 load32 16 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 71
 load32 71 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( 0 , reg , 16 , 128 , 0 , reg , 0 , 72 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  (@8) *(4)  16  128  0  (@8) *(4)  0  72  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; 16
 sub r13 4 r13
 write 0 r13 r2
 load32 16 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 72
 load32 72 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; }
Label_1042:
Label_1041:
Label_1039:
Label_1037:
Label_1035:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenJumpUncond : (
 ; prm     label : int
 ;     ) void
.code
; .globl GenJumpUncond
GenJumpUncond:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     label : (@8) : int
 ; RPN'ized expression: "( label , 130 , 0 , 54 GenPrintInstr1Operand ) "
 ; Expanded expression: " (@8) *(4)  130  0  54  GenPrintInstr1Operand ()16 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r7
 ; ,
 ; 130
 load32 130 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 54
 load32 54 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
Label_1044:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenWreg : int
 ; glb GenJumpIfEqual : (
 ; prm     val : int
 ; prm     label : int
 ;     ) void
.code
; .globl GenJumpIfEqual
GenJumpIfEqual:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     val : (@8) : int
 ; loc     label : (@12) : int
 ; RPN'ized expression: "( 0 , 12 , val , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  12  (@8) *(4)  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 12
 sub r13 4 r13
 write 0 r13 r2
 load32 12 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 2 , 128 , 0 , 12 , 0 , GenWreg , 0 , 61 GenPrintInstr3Operands ) "
 ; Expanded expression: " 2  128  0  12  0  GenWreg *(4)  0  61  GenPrintInstr3Operands ()32 "
 ; (
 ; 2
 load32 2 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; 12
 sub r13 4 r13
 write 0 r13 r2
 load32 12 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 61
 load32 61 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( label , 130 , 0 , 54 GenPrintInstr1Operand ) "
 ; Expanded expression: " (@12) *(4)  130  0  54  GenPrintInstr1Operand ()16 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r7
 ; ,
 ; 130
 load32 130 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 54
 load32 54 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
Label_1045:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenJumpIfZero : (
 ; prm     label : int
 ;     ) void
.code
; .globl GenJumpIfZero
GenJumpIfZero:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     label : (@8) : int

.rdata
Label_1047:
.dw 32 59 32 74 117 109 112 73 102 90 101 114 111 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1047 printf2 ) "
 ; Expanded expression: " L1047  printf2 ()4 "
 ; (
 ; 1047
 addr2reg Label_1047 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "( 2 , 128 , 0 , 0 , 0 , GenWreg , 0 , 61 GenPrintInstr3Operands ) "
 ; Expanded expression: " 2  128  0  0  0  GenWreg *(4)  0  61  GenPrintInstr3Operands ()32 "
 ; (
 ; 2
 load32 2 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 61
 load32 61 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( label , 130 , 0 , 54 GenPrintInstr1Operand ) "
 ; Expanded expression: " (@8) *(4)  130  0  54  GenPrintInstr1Operand ()16 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r7
 ; ,
 ; 130
 load32 130 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 54
 load32 54 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
Label_1046:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenJumpIfNotZero : (
 ; prm     label : int
 ;     ) void
.code
; .globl GenJumpIfNotZero
GenJumpIfNotZero:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     label : (@8) : int

.rdata
Label_1049:
.dw 32 59 32 74 117 109 112 73 102 78 111 116 90 101 114 111 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1049 printf2 ) "
 ; Expanded expression: " L1049  printf2 ()4 "
 ; (
 ; 1049
 addr2reg Label_1049 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "( 2 , 128 , 0 , 0 , 0 , GenWreg , 0 , 60 GenPrintInstr3Operands ) "
 ; Expanded expression: " 2  128  0  0  0  GenWreg *(4)  0  60  GenPrintInstr3Operands ()32 "
 ; (
 ; 2
 load32 2 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 60
 load32 60 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( label , 130 , 0 , 54 GenPrintInstr1Operand ) "
 ; Expanded expression: " (@8) *(4)  130  0  54  GenPrintInstr1Operand ()16 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r7
 ; ,
 ; 130
 load32 130 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 54
 load32 54 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
Label_1048:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenPrologPos : struct fpos_t_
.bss
; .align 2
; .globl GenPrologPos
GenPrologPos:
; .space 4
.dw 0 0 0 0

 ; glb GenLeaf : int
.bss
; .align 2
; .globl GenLeaf
GenLeaf:
; .space 4
.dw 0 0 0 0

 ; glb GenWriteFrameSize : (void) void
.code
; .globl GenWriteFrameSize
GenWriteFrameSize:
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     size : (@-4) : unsigned
 ; RPN'ized expression: "size 8 CurFxnMinLocalOfs - = "
 ; Expanded expression: "(@-4) 8 CurFxnMinLocalOfs *(4) - =(4) "
 ; 8
 load32 8 r2
 ; CurFxnMinLocalOfs
 ; * (read dereference)
 addr2reg CurFxnMinLocalOfs r1
 read 0 r1 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2

.rdata
Label_1051:
.dw 32 115 117 98 32 114 49 51 32 37 49 48 117 32 114 49 51 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( size , L1051 printf2 ) "
 ; Expanded expression: " (@-4) *(4)  L1051  printf2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; ,
 ; 1051
 addr2reg Label_1051 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13

.rdata
Label_1052:
.dw 32 119 114 105 116 101 32 37 49 48 117 32 114 49 51 32 114 49 52 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( size 8 - , L1052 printf2 ) "
 ; Expanded expression: " (@-4) *(4) 8 -  L1052  printf2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; 8
 ; -
 sub r5 8 r5
 ; ,
 ; 1052
 addr2reg Label_1052 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13

.rdata
Label_1053:
.dw 32 97 100 100 32 114 49 51 32 37 49 48 117 32 114 49 52 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( size 8 - , L1053 printf2 ) "
 ; Expanded expression: " (@-4) *(4) 8 -  L1053  printf2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; 8
 ; -
 sub r5 8 r5
 ; ,
 ; 1053
 addr2reg Label_1053 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13

.rdata
Label_1054:
.dw 32 37 99 32 119 114 105 116 101 32 52 32 114 49 52 32 114 49 53 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( GenLeaf 32 59 ? , L1054 printf2 ) "
 ; Expanded expression: " GenLeaf *(4) [sh||->1055] 32 goto &&[1055] 59 &&[1056]  L1054  printf2 ()8 "
 ; (
 ; GenLeaf
 ; * (read dereference)
 addr2reg GenLeaf r1
 read 0 r1 r5
 ; short-circuit ||
 ; JumpIfNotZero
 beq r5 r0 2
 jump Label_1055
 ; 32
 load32 32 r5
 ; sh-circ-goto goto
 jump Label_1056
 ; short-circuit && target
Label_1055:
 ; 59
 load32 59 r5
 ; short-circuit && target
Label_1056:
 ; ,
 ; 1054
 addr2reg Label_1054 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_1050:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb GenUpdateFrameSize : (void) void
.code
; .globl GenUpdateFrameSize
GenUpdateFrameSize:
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     pos : (@-4) : struct fpos_t_
 ; RPN'ized expression: "( pos &u , OutFile fgetpos ) "
 ; Expanded expression: " (@-4)  OutFile *(4)  fgetpos ()8 "
 ; (
 ; local ofs
 sub r14 4 r5
 ; ,
 ; OutFile
 ; * (read dereference)
 addr2reg OutFile r1
 read 0 r1 r4
 ; ,
 ; fgetpos
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump fgetpos
 add r13 16 r13
 ; RPN'ized expression: "( GenPrologPos &u , OutFile fsetpos ) "
 ; Expanded expression: " GenPrologPos  OutFile *(4)  fsetpos ()8 "
 ; (
 ; GenPrologPos
 addr2reg GenPrologPos r5
 ; ,
 ; OutFile
 ; * (read dereference)
 addr2reg OutFile r1
 read 0 r1 r4
 ; ,
 ; fsetpos
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump fsetpos
 add r13 16 r13
 ; RPN'ized expression: "( GenWriteFrameSize ) "
 ; Expanded expression: " GenWriteFrameSize ()0 "
 ; (
 ; GenWriteFrameSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteFrameSize
 add r13 16 r13
 ; RPN'ized expression: "( pos &u , OutFile fsetpos ) "
 ; Expanded expression: " (@-4)  OutFile *(4)  fsetpos ()8 "
 ; (
 ; local ofs
 sub r14 4 r5
 ; ,
 ; OutFile
 ; * (read dereference)
 addr2reg OutFile r1
 read 0 r1 r4
 ; ,
 ; fsetpos
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump fsetpos
 add r13 16 r13
Label_1057:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb GenFxnProlog : (void) void
.code
; .globl GenFxnProlog
GenFxnProlog:
 sub r13         16 r13
 write          8 r13 r14
 add r13          8 r14
   write 4 r14 r15
 ; if
 ; RPN'ized expression: "CurFxnParamCntMin CurFxnParamCntMax && "
 ; Expanded expression: "CurFxnParamCntMin *(4) _Bool [sh&&->1061] CurFxnParamCntMax *(4) _Bool &&[1061] "
 ; CurFxnParamCntMin
 ; * (read dereference)
 addr2reg CurFxnParamCntMin r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1061
 ; CurFxnParamCntMax
 ; * (read dereference)
 addr2reg CurFxnParamCntMax r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1061:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1059
 ; {
 ; loc         i : (@-4) : int
 ; loc         cnt : (@-8) : int
 ; RPN'ized expression: "cnt CurFxnParamCntMax = "
 ; Expanded expression: "(@-8) CurFxnParamCntMax *(4) =(4) "
 ; CurFxnParamCntMax
 ; * (read dereference)
 addr2reg CurFxnParamCntMax r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "cnt 4 > "
 ; Expanded expression: "(@-8) *(4) 4 > "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 4
 ; >
 load32 5 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_1062
 ; RPN'ized expression: "cnt 4 = "
 ; Expanded expression: "(@-8) 4 =(4) "
 ; 4
 load32 4 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
Label_1062:
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_1064:
 ; RPN'ized expression: "i cnt < "
 ; Expanded expression: "(@-4) *(4) (@-8) *(4) < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_1067
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; RPN'ized expression: "( 0 , 4 i + , 4 i * , 45 , 0 , 50 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  4 (@-4) *(4) +  4 (@-4) *(4) *  45  0  50  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -4 r14 r2
 ; 4
 ; +
 add r2 4 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r7
 ; 2
 ; <<
 shiftl r7 2 r7
 ; ,
 ; 45
 load32 45 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 50
 load32 50 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
Label_1065:
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_1064
Label_1067:
 ; }
Label_1059:
 ; RPN'ized expression: "GenLeaf 1 = "
 ; Expanded expression: "GenLeaf 1 =(4) "
 ; 1
 load32 1 r2
 ; GenLeaf
 ; = (write dereference)
 addr2reg GenLeaf r1
 write 0 r1 r2
 ; RPN'ized expression: "( GenPrologPos &u , OutFile fgetpos ) "
 ; Expanded expression: " GenPrologPos  OutFile *(4)  fgetpos ()8 "
 ; (
 ; GenPrologPos
 addr2reg GenPrologPos r5
 ; ,
 ; OutFile
 ; * (read dereference)
 addr2reg OutFile r1
 read 0 r1 r4
 ; ,
 ; fgetpos
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump fgetpos
 add r13 16 r13
 ; RPN'ized expression: "( GenWriteFrameSize ) "
 ; Expanded expression: " GenWriteFrameSize ()0 "
 ; (
 ; GenWriteFrameSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteFrameSize
 add r13 16 r13
Label_1058:
 read 4 r14 r15
 read 0 r14 r14
 add r13 16 r13
 jumpr 0 r15

 ; glb GenGrowStack : (
 ; prm     size : int
 ;     ) void
.code
; .globl GenGrowStack
GenGrowStack:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     size : (@8) : int
 ; if
 ; RPN'ized expression: "size 0 == "
 ; Expanded expression: "(@8) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1069
 ; return
 jump Label_1068
Label_1069:
 ; if
 ; RPN'ized expression: "size 0 > "
 ; Expanded expression: "(@8) *(4) 0 > "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; >
 bgts r2 r0 2
 jump Label_1071
 ; {
 ; RPN'ized expression: "( 0 , 13 , size , 128 , 0 , 13 , 0 , 70 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  13  (@8) *(4)  128  0  13  0  70  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 13
 sub r13 4 r13
 write 0 r13 r2
 load32 13 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 13
 load32 13 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 70
 load32 70 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; }
 jump Label_1072
Label_1071:
 ; else
 ; {
 ; RPN'ized expression: "( 0 , 13 , size -u , 128 , 0 , 13 , 0 , 69 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  13  (@8) *(4) -u  128  0  13  0  69  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 13
 sub r13 4 r13
 write 0 r13 r2
 load32 13 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; -u
 sub r0 r2 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 13
 load32 13 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 69
 load32 69 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; }
Label_1072:
Label_1068:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenFxnEpilog : (void) void
.code
; .globl GenFxnEpilog
GenFxnEpilog:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; RPN'ized expression: "( GenUpdateFrameSize ) "
 ; Expanded expression: " GenUpdateFrameSize ()0 "
 ; (
 ; GenUpdateFrameSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenUpdateFrameSize
 add r13 16 r13
 ; if
 ; RPN'ized expression: "GenLeaf 0 == "
 ; Expanded expression: "GenLeaf *(4) 0 == "
 ; GenLeaf
 ; * (read dereference)
 addr2reg GenLeaf r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1074
 ; RPN'ized expression: "( 0 , 15 , 4 , 46 , 0 , 49 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  15  4  46  0  49  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 15
 sub r13 4 r13
 write 0 r13 r2
 load32 15 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 4
 load32 4 r7
 ; ,
 ; 46
 load32 46 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 49
 load32 49 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
Label_1074:
 ; RPN'ized expression: "( 0 , 14 , 0 , 46 , 0 , 49 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  14  0  46  0  49  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 14
 sub r13 4 r13
 write 0 r13 r2
 load32 14 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 46
 load32 46 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 49
 load32 49 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 0 , 13 , 8 CurFxnMinLocalOfs - , 128 , 0 , 13 , 0 , 69 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  13  8 CurFxnMinLocalOfs *(4) -  128  0  13  0  69  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 13
 sub r13 4 r13
 write 0 r13 r2
 load32 13 r2
 ; ,
 ; 8
 sub r13 4 r13
 write 0 r13 r2
 load32 8 r2
 ; CurFxnMinLocalOfs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg CurFxnMinLocalOfs r1
 read 0 r1 r2
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r2 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 13
 load32 13 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 69
 load32 69 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( 0 , 15 , 0 , 128 , 0 , 56 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  15  0  128  0  56  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 15
 sub r13 4 r13
 write 0 r13 r2
 load32 15 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 56
 load32 56 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
Label_1073:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenMaxLocalsSize : (void) int
.code
; .globl GenMaxLocalsSize
GenMaxLocalsSize:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
 ; write 4 r14 r15
 ; return
 ; RPN'ized expression: "2147483647 "
 ; Expanded expression: "2147483647 "
 ; Expression value: 2147483647
 ; 2147483647
 load32 2147483647 r2
Label_1076:
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenGetBinaryOperatorInstr : (
 ; prm     tok : int
 ;     ) int
.code
; .globl GenGetBinaryOperatorInstr
GenGetBinaryOperatorInstr:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     tok : (@8) : int
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 jump Label_1079
 ; {
 ; case
 ; RPN'ized expression: "83 "
 ; Expanded expression: "83 "
 ; Expression value: 83
Label_1080:
 ; case
 ; RPN'ized expression: "68 "
 ; Expanded expression: "68 "
 ; Expression value: 68
Label_1081:
 ; case
 ; RPN'ized expression: "43 "
 ; Expanded expression: "43 "
 ; Expression value: 43
Label_1082:
 ; return
 ; RPN'ized expression: "69 "
 ; Expanded expression: "69 "
 ; Expression value: 69
 ; 69
 load32 69 r2
 jump Label_1077
 ; case
 ; RPN'ized expression: "84 "
 ; Expanded expression: "84 "
 ; Expression value: 84
Label_1083:
 ; case
 ; RPN'ized expression: "69 "
 ; Expanded expression: "69 "
 ; Expression value: 69
Label_1084:
 ; case
 ; RPN'ized expression: "45 "
 ; Expanded expression: "45 "
 ; Expression value: 45
Label_1085:
 ; return
 ; RPN'ized expression: "70 "
 ; Expanded expression: "70 "
 ; Expression value: 70
 ; 70
 load32 70 r2
 jump Label_1077
 ; case
 ; RPN'ized expression: "38 "
 ; Expanded expression: "38 "
 ; Expression value: 38
Label_1086:
 ; case
 ; RPN'ized expression: "72 "
 ; Expanded expression: "72 "
 ; Expression value: 72
Label_1087:
 ; return
 ; RPN'ized expression: "67 "
 ; Expanded expression: "67 "
 ; Expression value: 67
 ; 67
 load32 67 r2
 jump Label_1077
 ; case
 ; RPN'ized expression: "94 "
 ; Expanded expression: "94 "
 ; Expression value: 94
Label_1088:
 ; case
 ; RPN'ized expression: "73 "
 ; Expanded expression: "73 "
 ; Expression value: 73
Label_1089:
 ; return
 ; RPN'ized expression: "68 "
 ; Expanded expression: "68 "
 ; Expression value: 68
 ; 68
 load32 68 r2
 jump Label_1077
 ; case
 ; RPN'ized expression: "124 "
 ; Expanded expression: "124 "
 ; Expression value: 124
Label_1090:
 ; case
 ; RPN'ized expression: "74 "
 ; Expanded expression: "74 "
 ; Expression value: 74
Label_1091:
 ; return
 ; RPN'ized expression: "66 "
 ; Expanded expression: "66 "
 ; Expression value: 66
 ; 66
 load32 66 r2
 jump Label_1077
 ; case
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
Label_1092:
 ; case
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
Label_1093:
 ; case
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
Label_1094:
 ; case
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
Label_1095:
 ; case
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
Label_1096:
 ; case
 ; RPN'ized expression: "9 "
 ; Expanded expression: "9 "
 ; Expression value: 9
Label_1097:
 ; case
 ; RPN'ized expression: "85 "
 ; Expanded expression: "85 "
 ; Expression value: 85
Label_1098:
 ; case
 ; RPN'ized expression: "86 "
 ; Expanded expression: "86 "
 ; Expression value: 86
Label_1099:
 ; case
 ; RPN'ized expression: "87 "
 ; Expanded expression: "87 "
 ; Expression value: 87
Label_1100:
 ; case
 ; RPN'ized expression: "88 "
 ; Expanded expression: "88 "
 ; Expression value: 88
Label_1101:
 ; return
 ; RPN'ized expression: "75 "
 ; Expanded expression: "75 "
 ; Expression value: 75
 ; 75
 load32 75 r2
 jump Label_1077
 ; case
 ; RPN'ized expression: "42 "
 ; Expanded expression: "42 "
 ; Expression value: 42
Label_1102:
 ; case
 ; RPN'ized expression: "65 "
 ; Expanded expression: "65 "
 ; Expression value: 65
Label_1103:
 ; return
 ; RPN'ized expression: "73 "
 ; Expanded expression: "73 "
 ; Expression value: 73
 ; 73
 load32 73 r2
 jump Label_1077
 ; case
 ; RPN'ized expression: "47 "
 ; Expanded expression: "47 "
 ; Expression value: 47
Label_1104:
 ; case
 ; RPN'ized expression: "37 "
 ; Expanded expression: "37 "
 ; Expression value: 37
Label_1105:
 ; case
 ; RPN'ized expression: "66 "
 ; Expanded expression: "66 "
 ; Expression value: 66
Label_1106:
 ; case
 ; RPN'ized expression: "67 "
 ; Expanded expression: "67 "
 ; Expression value: 67
Label_1107:

.rdata
Label_1108:
.dw 68 73 86 73 83 73 79 78 47 77 79 68 32 105 115 32 110 111 116 32 115 117 112 112 111 114 116 101 100 33 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1108 printf ) "
 ; Expanded expression: " L1108  printf ()4 "
 ; (
 ; 1108
 addr2reg Label_1108 r4
 ; ,
 ; printf
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf
 add r13 16 r13
 ; return
 ; RPN'ized expression: "48 "
 ; Expanded expression: "48 "
 ; Expression value: 48
 ; 48
 load32 48 r2
 jump Label_1077
 ; case
 ; RPN'ized expression: "29 "
 ; Expanded expression: "29 "
 ; Expression value: 29
Label_1109:
 ; case
 ; RPN'ized expression: "30 "
 ; Expanded expression: "30 "
 ; Expression value: 30
Label_1110:
 ; case
 ; RPN'ized expression: "64 "
 ; Expanded expression: "64 "
 ; Expression value: 64
Label_1111:
 ; case
 ; RPN'ized expression: "75 "
 ; Expanded expression: "75 "
 ; Expression value: 75
Label_1112:

.rdata
Label_1113:
.dw 68 73 86 73 83 73 79 78 47 77 79 68 32 105 115 32 110 111 116 32 115 117 112 112 111 114 116 101 100 33 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1113 printf ) "
 ; Expanded expression: " L1113  printf ()4 "
 ; (
 ; 1113
 addr2reg Label_1113 r4
 ; ,
 ; printf
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf
 add r13 16 r13
 ; return
 ; RPN'ized expression: "48 "
 ; Expanded expression: "48 "
 ; Expression value: 48
 ; 48
 load32 48 r2
 jump Label_1077
 ; case
 ; RPN'ized expression: "4 "
 ; Expanded expression: "4 "
 ; Expression value: 4
Label_1114:
 ; case
 ; RPN'ized expression: "70 "
 ; Expanded expression: "70 "
 ; Expression value: 70
Label_1115:
 ; return
 ; RPN'ized expression: "71 "
 ; Expanded expression: "71 "
 ; Expression value: 71
 ; 71
 load32 71 r2
 jump Label_1077
 ; case
 ; RPN'ized expression: "5 "
 ; Expanded expression: "5 "
 ; Expression value: 5
Label_1116:
 ; case
 ; RPN'ized expression: "71 "
 ; Expanded expression: "71 "
 ; Expression value: 71
Label_1117:
 ; return
 ; RPN'ized expression: "72 "
 ; Expanded expression: "72 "
 ; Expression value: 72
 ; 72
 load32 72 r2
 jump Label_1077
 ; case
 ; RPN'ized expression: "28 "
 ; Expanded expression: "28 "
 ; Expression value: 28
Label_1118:
 ; case
 ; RPN'ized expression: "31 "
 ; Expanded expression: "31 "
 ; Expression value: 31
Label_1119:
 ; return
 ; RPN'ized expression: "72 "
 ; Expanded expression: "72 "
 ; Expression value: 72
 ; 72
 load32 72 r2
 jump Label_1077
 ; default
Label_1120:
 ; RPN'ized expression: "( 101 errorInternal ) "
 ; Expanded expression: " 101  errorInternal ()4 "
 ; (
 ; 101
 load32 101 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
 jump Label_1077
 ; }
 jump Label_1078
Label_1079:
 load32 83 r12
 bne r2 r12 2
 jump Label_1080
 load32 68 r12
 bne r2 r12 2
 jump Label_1081
 load32 43 r12
 bne r2 r12 2
 jump Label_1082
 load32 84 r12
 bne r2 r12 2
 jump Label_1083
 load32 69 r12
 bne r2 r12 2
 jump Label_1084
 load32 45 r12
 bne r2 r12 2
 jump Label_1085
 load32 38 r12
 bne r2 r12 2
 jump Label_1086
 load32 72 r12
 bne r2 r12 2
 jump Label_1087
 load32 94 r12
 bne r2 r12 2
 jump Label_1088
 load32 73 r12
 bne r2 r12 2
 jump Label_1089
 load32 124 r12
 bne r2 r12 2
 jump Label_1090
 load32 74 r12
 bne r2 r12 2
 jump Label_1091
 load32 60 r12
 bne r2 r12 2
 jump Label_1092
 load32 62 r12
 bne r2 r12 2
 jump Label_1093
 load32 10 r12
 bne r2 r12 2
 jump Label_1094
 load32 11 r12
 bne r2 r12 2
 jump Label_1095
 load32 8 r12
 bne r2 r12 2
 jump Label_1096
 load32 9 r12
 bne r2 r12 2
 jump Label_1097
 load32 85 r12
 bne r2 r12 2
 jump Label_1098
 load32 86 r12
 bne r2 r12 2
 jump Label_1099
 load32 87 r12
 bne r2 r12 2
 jump Label_1100
 load32 88 r12
 bne r2 r12 2
 jump Label_1101
 load32 42 r12
 bne r2 r12 2
 jump Label_1102
 load32 65 r12
 bne r2 r12 2
 jump Label_1103
 load32 47 r12
 bne r2 r12 2
 jump Label_1104
 load32 37 r12
 bne r2 r12 2
 jump Label_1105
 load32 66 r12
 bne r2 r12 2
 jump Label_1106
 load32 67 r12
 bne r2 r12 2
 jump Label_1107
 load32 29 r12
 bne r2 r12 2
 jump Label_1109
 load32 30 r12
 bne r2 r12 2
 jump Label_1110
 load32 64 r12
 bne r2 r12 2
 jump Label_1111
 load32 75 r12
 bne r2 r12 2
 jump Label_1112
 load32 4 r12
 bne r2 r12 2
 jump Label_1114
 load32 70 r12
 bne r2 r12 2
 jump Label_1115
 load32 5 r12
 bne r2 r12 2
 jump Label_1116
 load32 71 r12
 bne r2 r12 2
 jump Label_1117
 load32 28 r12
 bne r2 r12 2
 jump Label_1118
 load32 31 r12
 bne r2 r12 2
 jump Label_1119
 jump Label_1120
Label_1078:
Label_1077:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenPreIdentAccess : (
 ; prm     label : int
 ;     ) void
.code
; .globl GenPreIdentAccess
GenPreIdentAccess:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     label : (@8) : int

.rdata
Label_1122:
.dw 59 32 46 115 101 116 32 110 111 97 116 10 32 108 117 105 32 114 49 44 32 37 37 104 105 40 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1122 printf2 ) "
 ; Expanded expression: " L1122  printf2 ()4 "
 ; (
 ; 1122
 addr2reg Label_1122 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "( IdentTable label + GenPrintLabel ) "
 ; Expanded expression: " IdentTable (@8) *(4) +  GenPrintLabel ()4 "
 ; (
 ; IdentTable
 addr2reg IdentTable r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read 8 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; GenPrintLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintLabel
 add r13 16 r13

.rdata
Label_1123:
.dw 41 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1123 puts2 ) "
 ; Expanded expression: " L1123  puts2 ()4 "
 ; (
 ; 1123
 addr2reg Label_1123 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
Label_1121:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenPostIdentAccess : (void) void
.code
; .globl GenPostIdentAccess
GenPostIdentAccess:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15

.rdata
Label_1125:
.dw 59 32 46 115 101 116 32 97 116 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1125 puts2 ) "
 ; Expanded expression: " L1125  puts2 ()4 "
 ; (
 ; 1125
 addr2reg Label_1125 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
Label_1124:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenReadIdent : (
 ; prm     regDst : int
 ; prm     opSz : int
 ; prm     label : int
 ;     ) void
.code
; .globl GenReadIdent
GenReadIdent:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     regDst : (@8) : int
 ; loc     opSz : (@12) : int
 ; loc     label : (@16) : int
 ; RPN'ized expression: "( 0 , 1 , label , 129 , 0 , 76 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  1  (@16) *(4)  129  0  76  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 1
 sub r13 4 r13
 write 0 r13 r2
 load32 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read 16 r14 r7
 ; ,
 ; 129
 load32 129 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 76
 load32 76 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 0 , regDst , 0 , 1 , 0 , 128 , 0 , 49 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  (@8) *(4)  0  1  0  128  0  49  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; 1
 sub r13 4 r13
 write 0 r13 r2
 load32 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 49
 load32 49 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
Label_1126:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenReadLocal : (
 ; prm     regDst : int
 ; prm     opSz : int
 ; prm     ofs : int
 ;     ) void
.code
; .globl GenReadLocal
GenReadLocal:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     regDst : (@8) : int
 ; loc     opSz : (@12) : int
 ; loc     ofs : (@16) : int
 ; loc     instr : (@-4) : int
 ; RPN'ized expression: "instr 49 = "
 ; Expanded expression: "(@-4) 49 =(4) "
 ; 49
 load32 49 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "( 0 , regDst , ofs , 46 , 0 , instr GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  (@8) *(4)  (@16) *(4)  46  0  (@-4) *(4)  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read 16 r14 r7
 ; ,
 ; 46
 load32 46 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
Label_1127:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb GenReadIndirect : (
 ; prm     regDst : int
 ; prm     regSrc : int
 ; prm     opSz : int
 ;     ) void
.code
; .globl GenReadIndirect
GenReadIndirect:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     regDst : (@8) : int
 ; loc     regSrc : (@12) : int
 ; loc     opSz : (@16) : int
 ; loc     instr : (@-4) : int
 ; RPN'ized expression: "instr 49 = "
 ; Expanded expression: "(@-4) 49 =(4) "
 ; 49
 load32 49 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "( 0 , regDst , 0 , regSrc 32 + , 0 , instr GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  (@8) *(4)  0  (@12) *(4) 32 +  0  (@-4) *(4)  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r6
 ; 32
 ; +
 add r6 32 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
Label_1128:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb GenWriteIdent : (
 ; prm     regSrc : int
 ; prm     opSz : int
 ; prm     label : int
 ;     ) void
.code
; .globl GenWriteIdent
GenWriteIdent:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     regSrc : (@8) : int
 ; loc     opSz : (@12) : int
 ; loc     label : (@16) : int
 ; RPN'ized expression: "( 0 , 1 , label , 129 , 0 , 76 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  1  (@16) *(4)  129  0  76  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 1
 sub r13 4 r13
 write 0 r13 r2
 load32 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read 16 r14 r7
 ; ,
 ; 129
 load32 129 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 76
 load32 76 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 0 , regSrc , 0 , 1 , 0 , 128 , 0 , 50 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  (@8) *(4)  0  1  0  128  0  50  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; 1
 sub r13 4 r13
 write 0 r13 r2
 load32 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 50
 load32 50 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
Label_1129:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenWriteLocal : (
 ; prm     regSrc : int
 ; prm     opSz : int
 ; prm     ofs : int
 ;     ) void
.code
; .globl GenWriteLocal
GenWriteLocal:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     regSrc : (@8) : int
 ; loc     opSz : (@12) : int
 ; loc     ofs : (@16) : int
 ; loc     instr : (@-4) : int
 ; RPN'ized expression: "instr 50 = "
 ; Expanded expression: "(@-4) 50 =(4) "
 ; 50
 load32 50 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "( 0 , regSrc , ofs , 46 , 0 , instr GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  (@8) *(4)  (@16) *(4)  46  0  (@-4) *(4)  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read 16 r14 r7
 ; ,
 ; 46
 load32 46 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
Label_1130:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb GenWriteIndirect : (
 ; prm     regDst : int
 ; prm     regSrc : int
 ; prm     opSz : int
 ;     ) void
.code
; .globl GenWriteIndirect
GenWriteIndirect:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     regDst : (@8) : int
 ; loc     regSrc : (@12) : int
 ; loc     opSz : (@16) : int
 ; loc     instr : (@-4) : int
 ; RPN'ized expression: "instr 50 = "
 ; Expanded expression: "(@-4) 50 =(4) "
 ; 50
 load32 50 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "( 0 , regSrc , 0 , regDst 32 + , 0 , instr GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  (@12) *(4)  0  (@8) *(4) 32 +  0  (@-4) *(4)  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 12 r14 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r6
 ; 32
 ; +
 add r6 32 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
Label_1131:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb GenIncDecIdent : (
 ; prm     regDst : int
 ; prm     opSz : int
 ; prm     label : int
 ; prm     tok : int
 ;     ) void
.code
; .globl GenIncDecIdent
GenIncDecIdent:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     regDst : (@8) : int
 ; loc     opSz : (@12) : int
 ; loc     label : (@16) : int
 ; loc     tok : (@20) : int
 ; loc     instr : (@-4) : int
 ; RPN'ized expression: "instr 69 = "
 ; Expanded expression: "(@-4) 69 =(4) "
 ; 69
 load32 69 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "tok 12 != "
 ; Expanded expression: "(@20) *(4) 12 != "
 ; local ofs
 ; * (read dereference)
 read 20 r14 r2
 ; 12
 ; !=
 load32 12 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_1133
 ; RPN'ized expression: "instr 70 = "
 ; Expanded expression: "(@-4) 70 =(4) "
 ; 70
 load32 70 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
Label_1133:
 ; RPN'ized expression: "( label , opSz , regDst GenReadIdent ) "
 ; Expanded expression: " (@16) *(4)  (@12) *(4)  (@8) *(4)  GenReadIdent ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenReadIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenReadIdent
 add r13 16 r13
 ; RPN'ized expression: "( 0 , regDst , 1 , 128 , 0 , regDst , 0 , instr GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  (@8) *(4)  1  128  0  (@8) *(4)  0  (@-4) *(4)  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; 1
 sub r13 4 r13
 write 0 r13 r2
 load32 1 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( label , opSz , regDst GenWriteIdent ) "
 ; Expanded expression: " (@16) *(4)  (@12) *(4)  (@8) *(4)  GenWriteIdent ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenWriteIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteIdent
 add r13 16 r13
 ; RPN'ized expression: "( opSz , regDst GenExtendRegIfNeeded ) "
 ; Expanded expression: " (@12) *(4)  (@8) *(4)  GenExtendRegIfNeeded ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenExtendRegIfNeeded
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExtendRegIfNeeded
 add r13 16 r13
Label_1132:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb GenIncDecLocal : (
 ; prm     regDst : int
 ; prm     opSz : int
 ; prm     ofs : int
 ; prm     tok : int
 ;     ) void
.code
; .globl GenIncDecLocal
GenIncDecLocal:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     regDst : (@8) : int
 ; loc     opSz : (@12) : int
 ; loc     ofs : (@16) : int
 ; loc     tok : (@20) : int
 ; loc     instr : (@-4) : int
 ; RPN'ized expression: "instr 69 = "
 ; Expanded expression: "(@-4) 69 =(4) "
 ; 69
 load32 69 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "tok 12 != "
 ; Expanded expression: "(@20) *(4) 12 != "
 ; local ofs
 ; * (read dereference)
 read 20 r14 r2
 ; 12
 ; !=
 load32 12 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_1136
 ; RPN'ized expression: "instr 70 = "
 ; Expanded expression: "(@-4) 70 =(4) "
 ; 70
 load32 70 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
Label_1136:
 ; RPN'ized expression: "( ofs , opSz , regDst GenReadLocal ) "
 ; Expanded expression: " (@16) *(4)  (@12) *(4)  (@8) *(4)  GenReadLocal ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenReadLocal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenReadLocal
 add r13 16 r13
 ; RPN'ized expression: "( 0 , regDst , 1 , 128 , 0 , regDst , 0 , instr GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  (@8) *(4)  1  128  0  (@8) *(4)  0  (@-4) *(4)  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; 1
 sub r13 4 r13
 write 0 r13 r2
 load32 1 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( ofs , opSz , regDst GenWriteLocal ) "
 ; Expanded expression: " (@16) *(4)  (@12) *(4)  (@8) *(4)  GenWriteLocal ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenWriteLocal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteLocal
 add r13 16 r13
 ; RPN'ized expression: "( opSz , regDst GenExtendRegIfNeeded ) "
 ; Expanded expression: " (@12) *(4)  (@8) *(4)  GenExtendRegIfNeeded ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenExtendRegIfNeeded
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExtendRegIfNeeded
 add r13 16 r13
Label_1135:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb GenIncDecIndirect : (
 ; prm     regDst : int
 ; prm     regSrc : int
 ; prm     opSz : int
 ; prm     tok : int
 ;     ) void
.code
; .globl GenIncDecIndirect
GenIncDecIndirect:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     regDst : (@8) : int
 ; loc     regSrc : (@12) : int
 ; loc     opSz : (@16) : int
 ; loc     tok : (@20) : int
 ; loc     instr : (@-4) : int
 ; RPN'ized expression: "instr 69 = "
 ; Expanded expression: "(@-4) 69 =(4) "
 ; 69
 load32 69 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "tok 12 != "
 ; Expanded expression: "(@20) *(4) 12 != "
 ; local ofs
 ; * (read dereference)
 read 20 r14 r2
 ; 12
 ; !=
 load32 12 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_1139
 ; RPN'ized expression: "instr 70 = "
 ; Expanded expression: "(@-4) 70 =(4) "
 ; 70
 load32 70 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
Label_1139:
 ; RPN'ized expression: "( opSz , regSrc , regDst GenReadIndirect ) "
 ; Expanded expression: " (@16) *(4)  (@12) *(4)  (@8) *(4)  GenReadIndirect ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenReadIndirect
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenReadIndirect
 add r13 16 r13
 ; RPN'ized expression: "( 0 , regDst , 1 , 128 , 0 , regDst , 0 , instr GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  (@8) *(4)  1  128  0  (@8) *(4)  0  (@-4) *(4)  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; 1
 sub r13 4 r13
 write 0 r13 r2
 load32 1 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( opSz , regDst , regSrc GenWriteIndirect ) "
 ; Expanded expression: " (@16) *(4)  (@8) *(4)  (@12) *(4)  GenWriteIndirect ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; GenWriteIndirect
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteIndirect
 add r13 16 r13
 ; RPN'ized expression: "( opSz , regDst GenExtendRegIfNeeded ) "
 ; Expanded expression: " (@16) *(4)  (@8) *(4)  GenExtendRegIfNeeded ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenExtendRegIfNeeded
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExtendRegIfNeeded
 add r13 16 r13
Label_1138:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb GenPostIncDecIdent : (
 ; prm     regDst : int
 ; prm     opSz : int
 ; prm     label : int
 ; prm     tok : int
 ;     ) void
.code
; .globl GenPostIncDecIdent
GenPostIncDecIdent:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     regDst : (@8) : int
 ; loc     opSz : (@12) : int
 ; loc     label : (@16) : int
 ; loc     tok : (@20) : int
 ; loc     instr : (@-4) : int
 ; RPN'ized expression: "instr 69 = "
 ; Expanded expression: "(@-4) 69 =(4) "
 ; 69
 load32 69 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "tok 81 != "
 ; Expanded expression: "(@20) *(4) 81 != "
 ; local ofs
 ; * (read dereference)
 read 20 r14 r2
 ; 81
 ; !=
 load32 81 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_1142
 ; RPN'ized expression: "instr 70 = "
 ; Expanded expression: "(@-4) 70 =(4) "
 ; 70
 load32 70 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
Label_1142:
 ; RPN'ized expression: "( label , opSz , regDst GenReadIdent ) "
 ; Expanded expression: " (@16) *(4)  (@12) *(4)  (@8) *(4)  GenReadIdent ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenReadIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenReadIdent
 add r13 16 r13
 ; RPN'ized expression: "( 0 , regDst , 1 , 128 , 0 , regDst , 0 , instr GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  (@8) *(4)  1  128  0  (@8) *(4)  0  (@-4) *(4)  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; 1
 sub r13 4 r13
 write 0 r13 r2
 load32 1 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( label , opSz , regDst GenWriteIdent ) "
 ; Expanded expression: " (@16) *(4)  (@12) *(4)  (@8) *(4)  GenWriteIdent ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenWriteIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteIdent
 add r13 16 r13
 ; RPN'ized expression: "( 0 , regDst , 1 -u , 128 , 0 , regDst , 0 , instr GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  (@8) *(4)  -1  128  0  (@8) *(4)  0  (@-4) *(4)  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; -1
 sub r13 4 r13
 write 0 r13 r2
 load32 -1 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( opSz , regDst GenExtendRegIfNeeded ) "
 ; Expanded expression: " (@12) *(4)  (@8) *(4)  GenExtendRegIfNeeded ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenExtendRegIfNeeded
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExtendRegIfNeeded
 add r13 16 r13
Label_1141:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb GenPostIncDecLocal : (
 ; prm     regDst : int
 ; prm     opSz : int
 ; prm     ofs : int
 ; prm     tok : int
 ;     ) void
.code
; .globl GenPostIncDecLocal
GenPostIncDecLocal:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     regDst : (@8) : int
 ; loc     opSz : (@12) : int
 ; loc     ofs : (@16) : int
 ; loc     tok : (@20) : int
 ; loc     instr : (@-4) : int
 ; RPN'ized expression: "instr 69 = "
 ; Expanded expression: "(@-4) 69 =(4) "
 ; 69
 load32 69 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "tok 81 != "
 ; Expanded expression: "(@20) *(4) 81 != "
 ; local ofs
 ; * (read dereference)
 read 20 r14 r2
 ; 81
 ; !=
 load32 81 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_1145
 ; RPN'ized expression: "instr 70 = "
 ; Expanded expression: "(@-4) 70 =(4) "
 ; 70
 load32 70 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
Label_1145:
 ; RPN'ized expression: "( ofs , opSz , regDst GenReadLocal ) "
 ; Expanded expression: " (@16) *(4)  (@12) *(4)  (@8) *(4)  GenReadLocal ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenReadLocal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenReadLocal
 add r13 16 r13
 ; RPN'ized expression: "( 0 , regDst , 1 , 128 , 0 , regDst , 0 , instr GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  (@8) *(4)  1  128  0  (@8) *(4)  0  (@-4) *(4)  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; 1
 sub r13 4 r13
 write 0 r13 r2
 load32 1 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( ofs , opSz , regDst GenWriteLocal ) "
 ; Expanded expression: " (@16) *(4)  (@12) *(4)  (@8) *(4)  GenWriteLocal ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenWriteLocal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteLocal
 add r13 16 r13
 ; RPN'ized expression: "( 0 , regDst , 1 -u , 128 , 0 , regDst , 0 , instr GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  (@8) *(4)  -1  128  0  (@8) *(4)  0  (@-4) *(4)  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; -1
 sub r13 4 r13
 write 0 r13 r2
 load32 -1 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( opSz , regDst GenExtendRegIfNeeded ) "
 ; Expanded expression: " (@12) *(4)  (@8) *(4)  GenExtendRegIfNeeded ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenExtendRegIfNeeded
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExtendRegIfNeeded
 add r13 16 r13
Label_1144:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb GenPostIncDecIndirect : (
 ; prm     regDst : int
 ; prm     regSrc : int
 ; prm     opSz : int
 ; prm     tok : int
 ;     ) void
.code
; .globl GenPostIncDecIndirect
GenPostIncDecIndirect:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     regDst : (@8) : int
 ; loc     regSrc : (@12) : int
 ; loc     opSz : (@16) : int
 ; loc     tok : (@20) : int
 ; loc     instr : (@-4) : int
 ; RPN'ized expression: "instr 69 = "
 ; Expanded expression: "(@-4) 69 =(4) "
 ; 69
 load32 69 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "tok 81 != "
 ; Expanded expression: "(@20) *(4) 81 != "
 ; local ofs
 ; * (read dereference)
 read 20 r14 r2
 ; 81
 ; !=
 load32 81 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_1148
 ; RPN'ized expression: "instr 70 = "
 ; Expanded expression: "(@-4) 70 =(4) "
 ; 70
 load32 70 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
Label_1148:
 ; RPN'ized expression: "( opSz , regSrc , regDst GenReadIndirect ) "
 ; Expanded expression: " (@16) *(4)  (@12) *(4)  (@8) *(4)  GenReadIndirect ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenReadIndirect
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenReadIndirect
 add r13 16 r13
 ; RPN'ized expression: "( 0 , regDst , 1 , 128 , 0 , regDst , 0 , instr GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  (@8) *(4)  1  128  0  (@8) *(4)  0  (@-4) *(4)  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; 1
 sub r13 4 r13
 write 0 r13 r2
 load32 1 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( opSz , regDst , regSrc GenWriteIndirect ) "
 ; Expanded expression: " (@16) *(4)  (@8) *(4)  (@12) *(4)  GenWriteIndirect ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; GenWriteIndirect
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteIndirect
 add r13 16 r13
 ; RPN'ized expression: "( 0 , regDst , 1 -u , 128 , 0 , regDst , 0 , instr GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  (@8) *(4)  -1  128  0  (@8) *(4)  0  (@-4) *(4)  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; -1
 sub r13 4 r13
 write 0 r13 r2
 load32 -1 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( opSz , regDst GenExtendRegIfNeeded ) "
 ; Expanded expression: " (@16) *(4)  (@8) *(4)  GenExtendRegIfNeeded ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenExtendRegIfNeeded
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExtendRegIfNeeded
 add r13 16 r13
Label_1147:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb CanUseTempRegs : int
.bss
; .align 2
; .globl CanUseTempRegs
CanUseTempRegs:
; .space 4
.dw 0 0 0 0

 ; glb TempsUsed : int
.bss
; .align 2
; .globl TempsUsed
TempsUsed:
; .space 4
.dw 0 0 0 0

 ; glb GenWreg : int
.data
; .align 2
; .globl GenWreg
GenWreg:
 ; =
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 .dw 2 2 2 2

 ; glb GenLreg : int
.bss
; .align 2
; .globl GenLreg
GenLreg:
; .space 4
.dw 0 0 0 0

 ; glb GenRreg : int
.bss
; .align 2
; .globl GenRreg
GenRreg:
; .space 4
.dw 0 0 0 0

 ; glb GenWregInc : (
 ; prm     inc : int
 ;     ) void
.code
; .globl GenWregInc
GenWregInc:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
 ; write 4 r14 r15
 ; loc     inc : (@8) : int
 ; if
 ; RPN'ized expression: "inc 0 > "
 ; Expanded expression: "(@8) *(4) 0 > "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; >
 bgts r2 r0 2
 jump Label_1151
 ; {
 ; if
 ; RPN'ized expression: "GenWreg 2 == "
 ; Expanded expression: "GenWreg *(4) 2 == "
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1153
 ; RPN'ized expression: "GenWreg 8 = "
 ; Expanded expression: "GenWreg 8 =(4) "
 ; 8
 load32 8 r2
 ; GenWreg
 ; = (write dereference)
 addr2reg GenWreg r1
 write 0 r1 r2
 jump Label_1154
Label_1153:
 ; else
 ; RPN'ized expression: "GenWreg ++p "
 ; Expanded expression: "GenWreg ++p(4) "
 ; GenWreg
 ; ++p
 addr2reg GenWreg r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg GenWreg r1
 write 0 r1 r2
 sub r2 1 r2
Label_1154:
 ; }
 jump Label_1152
Label_1151:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "GenWreg 8 == "
 ; Expanded expression: "GenWreg *(4) 8 == "
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; 8
 ; ==
 load32 8 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1155
 ; RPN'ized expression: "GenWreg 2 = "
 ; Expanded expression: "GenWreg 2 =(4) "
 ; 2
 load32 2 r2
 ; GenWreg
 ; = (write dereference)
 addr2reg GenWreg r1
 write 0 r1 r2
 jump Label_1156
Label_1155:
 ; else
 ; RPN'ized expression: "GenWreg --p "
 ; Expanded expression: "GenWreg --p(4) "
 ; GenWreg
 ; --p
 addr2reg GenWreg r1
 read 0 r1 r2
 sub r2 1 r2
 addr2reg GenWreg r1
 write 0 r1 r2
 add r2 1 r2
Label_1156:
 ; }
Label_1152:
Label_1150:
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenPushReg : (void) void
.code
; .globl GenPushReg
GenPushReg:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; if
 ; RPN'ized expression: "CanUseTempRegs TempsUsed 3 < && "
 ; Expanded expression: "CanUseTempRegs *(4) _Bool [sh&&->1160] TempsUsed *(4) 3 < &&[1160] "
 ; CanUseTempRegs
 ; * (read dereference)
 addr2reg CanUseTempRegs r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1160
 ; TempsUsed
 ; * (read dereference)
 addr2reg TempsUsed r1
 read 0 r1 r2
 ; 3
 ; <
 load32 3 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1160:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1158
 ; {
 ; RPN'ized expression: "( 1 GenWregInc ) "
 ; Expanded expression: " 1  GenWregInc ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; GenWregInc
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWregInc
 add r13 16 r13
 ; RPN'ized expression: "TempsUsed ++p "
 ; Expanded expression: "TempsUsed ++p(4) "
 ; TempsUsed
 ; ++p
 addr2reg TempsUsed r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg TempsUsed r1
 write 0 r1 r2
 sub r2 1 r2
 ; return
 jump Label_1157
 ; }
Label_1158:
 ; RPN'ized expression: "( 0 , 13 , 4 , 128 , 0 , 13 , 0 , 70 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  13  4  128  0  13  0  70  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 13
 sub r13 4 r13
 write 0 r13 r2
 load32 13 r2
 ; ,
 ; 4
 sub r13 4 r13
 write 0 r13 r2
 load32 4 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 13
 load32 13 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 70
 load32 70 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( 0 , GenWreg , 0 , 45 , 0 , 50 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  45  0  50  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 45
 load32 45 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 50
 load32 50 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "TempsUsed ++p "
 ; Expanded expression: "TempsUsed ++p(4) "
 ; TempsUsed
 ; ++p
 addr2reg TempsUsed r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg TempsUsed r1
 write 0 r1 r2
 sub r2 1 r2
Label_1157:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenPopReg : (void) void
.code
; .globl GenPopReg
GenPopReg:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; RPN'ized expression: "TempsUsed --p "
 ; Expanded expression: "TempsUsed --p(4) "
 ; TempsUsed
 ; --p
 addr2reg TempsUsed r1
 read 0 r1 r2
 sub r2 1 r2
 addr2reg TempsUsed r1
 write 0 r1 r2
 add r2 1 r2
 ; if
 ; RPN'ized expression: "CanUseTempRegs TempsUsed 3 < && "
 ; Expanded expression: "CanUseTempRegs *(4) _Bool [sh&&->1164] TempsUsed *(4) 3 < &&[1164] "
 ; CanUseTempRegs
 ; * (read dereference)
 addr2reg CanUseTempRegs r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1164
 ; TempsUsed
 ; * (read dereference)
 addr2reg TempsUsed r1
 read 0 r1 r2
 ; 3
 ; <
 load32 3 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1164:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1162
 ; {
 ; RPN'ized expression: "GenRreg GenWreg = "
 ; Expanded expression: "GenRreg GenWreg *(4) =(4) "
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; GenRreg
 ; = (write dereference)
 addr2reg GenRreg r1
 write 0 r1 r2
 ; RPN'ized expression: "( 1 -u GenWregInc ) "
 ; Expanded expression: " -1  GenWregInc ()4 "
 ; (
 ; -1
 load32 -1 r4
 ; ,
 ; GenWregInc
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWregInc
 add r13 16 r13
 ; RPN'ized expression: "GenLreg GenWreg = "
 ; Expanded expression: "GenLreg GenWreg *(4) =(4) "
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; GenLreg
 ; = (write dereference)
 addr2reg GenLreg r1
 write 0 r1 r2
 ; return
 jump Label_1161
 ; }
Label_1162:
 ; RPN'ized expression: "( 0 , 11 , 0 , 45 , 0 , 49 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  11  0  45  0  49  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 11
 sub r13 4 r13
 write 0 r13 r2
 load32 11 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 45
 load32 45 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 49
 load32 49 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 0 , 13 , 4 , 128 , 0 , 13 , 0 , 69 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  13  4  128  0  13  0  69  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 13
 sub r13 4 r13
 write 0 r13 r2
 load32 13 r2
 ; ,
 ; 4
 sub r13 4 r13
 write 0 r13 r2
 load32 4 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 13
 load32 13 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 69
 load32 69 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "GenLreg 11 = "
 ; Expanded expression: "GenLreg 11 =(4) "
 ; 11
 load32 11 r2
 ; GenLreg
 ; = (write dereference)
 addr2reg GenLreg r1
 write 0 r1 r2
 ; RPN'ized expression: "GenRreg GenWreg = "
 ; Expanded expression: "GenRreg GenWreg *(4) =(4) "
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; GenRreg
 ; = (write dereference)
 addr2reg GenRreg r1
 write 0 r1 r2
Label_1161:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenPrep : (
 ; prm     idx : * int
 ;     ) void
.code
; .globl GenPrep
GenPrep:
 write 0 r13 r4
 sub r13         32 r13
 write         24 r13 r14
 add r13         24 r14
   write 4 r14 r15
 ; loc     idx : (@8) : * int
 ; loc     tok : (@-4) : int
 ; loc     oldIdxRight : (@-8) : int
 ; loc     oldIdxLeft : (@-12) : int
 ; loc     t0 : (@-16) : int
 ; loc     t1 : (@-20) : int
 ; if
 ; RPN'ized expression: "idx *u 0 < "
 ; Expanded expression: "(@8) *(4) *(4) 0 < "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; <
 bgts r0 r2 2
 jump Label_1166
 ; RPN'ized expression: "( 100 errorInternal ) "
 ; Expanded expression: " 100  errorInternal ()4 "
 ; (
 ; 100
 load32 100 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
Label_1166:
 ; RPN'ized expression: "tok stack idx *u + *u 0 + *u = "
 ; Expanded expression: "(@-4) stack (@8) *(4) *(4) 8 * + 0 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "oldIdxRight idx *u -- = "
 ; Expanded expression: "(@-8) (@8) *(4) --(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; --
 or r0 r2 r11
 read 0 r11 r2
 sub r2 1 r2
 write 0 r11 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 jump Label_1169
 ; {
 ; case
 ; RPN'ized expression: "29 "
 ; Expanded expression: "29 "
 ; Expression value: 29
Label_1170:
 ; case
 ; RPN'ized expression: "30 "
 ; Expanded expression: "30 "
 ; Expression value: 30
Label_1171:
 ; case
 ; RPN'ized expression: "64 "
 ; Expanded expression: "64 "
 ; Expression value: 64
Label_1172:
 ; case
 ; RPN'ized expression: "75 "
 ; Expanded expression: "75 "
 ; Expression value: 75
Label_1173:
 ; if
 ; RPN'ized expression: "stack oldIdxRight + *u 0 + *u 1 == stack oldIdxRight + *u 0 + *u 2 == || "
 ; Expanded expression: "stack (@-8) *(4) 8 * + 0 + *(4) 1 == [sh||->1176] stack (@-8) *(4) 8 * + 0 + *(4) 2 == ||[1176] "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1176
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1176:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1174
 ; {
 ; loc             m : (@-24) : unsigned
 ; RPN'ized expression: "m ( stack oldIdxRight + *u 1 + *u truncUint ) = "
 ; Expanded expression: "(@-24)  stack (@-8) *(4) 8 * + 4 + *(4)  truncUint ()4 =(4) "
 ; (
 ; stack
 addr2reg stack r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -8 r14 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; 4
 ; +
 add r4 4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; if
 ; RPN'ized expression: "m m m 1 - & 0 == && "
 ; Expanded expression: "(@-24) *(4) _Bool [sh&&->1179] (@-24) *(4) (@-24) *(4) 1 - & 0 == &&[1179] "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1179
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; local ofs
 ; * (read dereference)
 read -24 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; &
 and r2 r8 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1179:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1177
 ; {
 ; if
 ; RPN'ized expression: "tok 30 == tok 75 == || "
 ; Expanded expression: "(@-4) *(4) 30 == [sh||->1182] (@-4) *(4) 75 == ||[1182] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 30
 ; ==
 load32 30 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1182
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 75
 ; ==
 load32 75 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1182:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1180
 ; {
 ; loc                     <something> : int
 ; RPN'ized expression: "stack oldIdxRight + *u 1 + *u m 1 - (something1183) = "
 ; Expanded expression: "stack (@-8) *(4) 8 * + 4 + (@-24) *(4) 1 - =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -24 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "tok tok 30 == 72 38 ? = "
 ; Expanded expression: "(@-4) (@-4) *(4) 30 == [sh||->1184] 72 goto &&[1184] 38 &&[1185] =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 30
 ; ==
 load32 30 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1184
 ; 72
 load32 72 r2
 ; sh-circ-goto goto
 jump Label_1185
 ; short-circuit && target
Label_1184:
 ; 38
 load32 38 r2
 ; short-circuit && target
Label_1185:
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; }
 jump Label_1181
Label_1180:
 ; else
 ; {
 ; RPN'ized expression: "t1 0 = "
 ; Expanded expression: "(@-20) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -20 r14 r0
 ; while
 ; RPN'ized expression: "m 1 >>= "
 ; Expanded expression: "(@-24) 1 >>=u(4) "
Label_1186:
 ; 1
 load32 1 r2
 ; local ofs
 ; >>=u
 read -24 r14 r12
 shiftr r12 r2 r2
 write -24 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1187
 ; RPN'ized expression: "t1 ++p "
 ; Expanded expression: "(@-20) ++p(4) "
 ; local ofs
 ; ++p
 read -20 r14 r2
 add r2 1 r2
 write -20 r14 r2
 sub r2 1 r2
 jump Label_1186
Label_1187:
 ; RPN'ized expression: "stack oldIdxRight + *u 1 + *u t1 = "
 ; Expanded expression: "stack (@-8) *(4) 8 * + 4 + (@-20) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -20 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "tok tok 29 == 31 28 ? = "
 ; Expanded expression: "(@-4) (@-4) *(4) 29 == [sh||->1188] 31 goto &&[1188] 28 &&[1189] =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 29
 ; ==
 load32 29 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1188
 ; 31
 load32 31 r2
 ; sh-circ-goto goto
 jump Label_1189
 ; short-circuit && target
Label_1188:
 ; 28
 load32 28 r2
 ; short-circuit && target
Label_1189:
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; }
Label_1181:
 ; RPN'ized expression: "stack oldIdxRight 1 + + *u 0 + *u tok = "
 ; Expanded expression: "stack (@-8) *(4) 1 + 8 * + 0 + (@-4) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
Label_1177:
 ; }
Label_1174:
 ; }
 jump Label_1168
Label_1169:
 load32 29 r12
 bne r2 r12 2
 jump Label_1170
 load32 30 r12
 bne r2 r12 2
 jump Label_1171
 load32 64 r12
 bne r2 r12 2
 jump Label_1172
 load32 75 r12
 bne r2 r12 2
 jump Label_1173
Label_1168:
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 jump Label_1191
 ; {
 ; case
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
Label_1192:
 ; RPN'ized expression: "stack oldIdxRight 1 + + *u 0 + *u 1 = "
 ; Expanded expression: "stack (@-8) *(4) 1 + 8 * + 0 + 1 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; case
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
Label_1193:
 ; case
 ; RPN'ized expression: "259 "
 ; Expanded expression: "259 "
 ; Expression value: 259
Label_1194:
 ; case
 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
Label_1195:
 ; case
 ; RPN'ized expression: "89 "
 ; Expanded expression: "89 "
 ; Expression value: 89
Label_1196:
 ; break
 jump Label_1190
 ; case
 ; RPN'ized expression: "83 "
 ; Expanded expression: "83 "
 ; Expression value: 83
Label_1197:
 ; case
 ; RPN'ized expression: "84 "
 ; Expanded expression: "84 "
 ; Expression value: 84
Label_1198:
 ; case
 ; RPN'ized expression: "45 "
 ; Expanded expression: "45 "
 ; Expression value: 45
Label_1199:
 ; case
 ; RPN'ized expression: "47 "
 ; Expanded expression: "47 "
 ; Expression value: 47
Label_1200:
 ; case
 ; RPN'ized expression: "37 "
 ; Expanded expression: "37 "
 ; Expression value: 37
Label_1201:
 ; case
 ; RPN'ized expression: "29 "
 ; Expanded expression: "29 "
 ; Expression value: 29
Label_1202:
 ; case
 ; RPN'ized expression: "30 "
 ; Expanded expression: "30 "
 ; Expression value: 30
Label_1203:
 ; case
 ; RPN'ized expression: "4 "
 ; Expanded expression: "4 "
 ; Expression value: 4
Label_1204:
 ; case
 ; RPN'ized expression: "5 "
 ; Expanded expression: "5 "
 ; Expression value: 5
Label_1205:
 ; case
 ; RPN'ized expression: "28 "
 ; Expanded expression: "28 "
 ; Expression value: 28
Label_1206:
 ; case
 ; RPN'ized expression: "6 "
 ; Expanded expression: "6 "
 ; Expression value: 6
Label_1207:
 ; case
 ; RPN'ized expression: "7 "
 ; Expanded expression: "7 "
 ; Expression value: 7
Label_1208:
 ; case
 ; RPN'ized expression: "48 "
 ; Expanded expression: "48 "
 ; Expression value: 48
Label_1209:
 ; RPN'ized expression: "( idx GenPrep ) "
 ; Expanded expression: " (@8) *(4)  GenPrep ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenPrep
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrep
 add r13 16 r13
 ; case
 ; RPN'ized expression: "90 "
 ; Expanded expression: "90 "
 ; Expression value: 90
Label_1210:
 ; case
 ; RPN'ized expression: "21 "
 ; Expanded expression: "21 "
 ; Expression value: 21
Label_1211:
 ; case
 ; RPN'ized expression: "78 "
 ; Expanded expression: "78 "
 ; Expression value: 78
Label_1212:
 ; case
 ; RPN'ized expression: "12 "
 ; Expanded expression: "12 "
 ; Expression value: 12
Label_1213:
 ; case
 ; RPN'ized expression: "13 "
 ; Expanded expression: "13 "
 ; Expression value: 13
Label_1214:
 ; case
 ; RPN'ized expression: "81 "
 ; Expanded expression: "81 "
 ; Expression value: 81
Label_1215:
 ; case
 ; RPN'ized expression: "82 "
 ; Expanded expression: "82 "
 ; Expression value: 82
Label_1216:
 ; case
 ; RPN'ized expression: "126 "
 ; Expanded expression: "126 "
 ; Expression value: 126
Label_1217:
 ; case
 ; RPN'ized expression: "79 "
 ; Expanded expression: "79 "
 ; Expression value: 79
Label_1218:
 ; case
 ; RPN'ized expression: "80 "
 ; Expanded expression: "80 "
 ; Expression value: 80
Label_1219:
 ; case
 ; RPN'ized expression: "120 "
 ; Expanded expression: "120 "
 ; Expression value: 120
Label_1220:
 ; case
 ; RPN'ized expression: "17 "
 ; Expanded expression: "17 "
 ; Expression value: 17
Label_1221:
 ; case
 ; RPN'ized expression: "129 "
 ; Expanded expression: "129 "
 ; Expression value: 129
Label_1222:
 ; case
 ; RPN'ized expression: "128 "
 ; Expanded expression: "128 "
 ; Expression value: 128
Label_1223:
 ; case
 ; RPN'ized expression: "100 "
 ; Expanded expression: "100 "
 ; Expression value: 100
Label_1224:
 ; case
 ; RPN'ized expression: "130 "
 ; Expanded expression: "130 "
 ; Expression value: 130
Label_1225:
 ; RPN'ized expression: "( idx GenPrep ) "
 ; Expanded expression: " (@8) *(4)  GenPrep ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenPrep
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrep
 add r13 16 r13
 ; break
 jump Label_1190
 ; case
 ; RPN'ized expression: "61 "
 ; Expanded expression: "61 "
 ; Expression value: 61
Label_1226:
 ; if
 ; RPN'ized expression: "oldIdxRight 1 + sp 1 - == stack oldIdxRight + *u 0 + *u 1 == stack oldIdxRight + *u 0 + *u 2 == || && ( stack oldIdxRight + *u 1 + *u truncUint ) 0 == && "
 ; Expanded expression: "(@-8) *(4) 1 + sp *(4) 1 - == [sh&&->1230] stack (@-8) *(4) 8 * + 0 + *(4) 1 == [sh||->1231] stack (@-8) *(4) 8 * + 0 + *(4) 2 == ||[1231] _Bool &&[1230] _Bool [sh&&->1229]  stack (@-8) *(4) 8 * + 4 + *(4)  truncUint ()4 0 == &&[1229] "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; sp
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; 1
 ; -
 sub r2 1 r2
 ; ==
 read 0 r13 r11
 add r13 4 r13
 xor r11 r2 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1230
 ; stack
 addr2reg stack r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -8 r14 r2
 ; 3
 ; <<
 shiftl r2 3 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1231
 ; stack
 addr2reg stack r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -8 r14 r2
 ; 3
 ; <<
 shiftl r2 3 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1231:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1230:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1229
 ; (
 ; stack
 addr2reg stack r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -8 r14 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; 4
 ; +
 add r4 4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1229:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1227
 ; {
 ; RPN'ized expression: "stack oldIdxRight + *u 0 + *u 259 = "
 ; Expanded expression: "stack (@-8) *(4) 8 * + 0 + 259 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 259
 load32 259 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "stack oldIdxRight 1 + + *u 0 + *u 258 = "
 ; Expanded expression: "stack (@-8) *(4) 1 + 8 * + 0 + 258 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 258
 load32 258 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
Label_1227:
 ; case
 ; RPN'ized expression: "68 "
 ; Expanded expression: "68 "
 ; Expression value: 68
Label_1232:
 ; case
 ; RPN'ized expression: "69 "
 ; Expanded expression: "69 "
 ; Expression value: 69
Label_1233:
 ; case
 ; RPN'ized expression: "65 "
 ; Expanded expression: "65 "
 ; Expression value: 65
Label_1234:
 ; case
 ; RPN'ized expression: "66 "
 ; Expanded expression: "66 "
 ; Expression value: 66
Label_1235:
 ; case
 ; RPN'ized expression: "64 "
 ; Expanded expression: "64 "
 ; Expression value: 64
Label_1236:
 ; case
 ; RPN'ized expression: "67 "
 ; Expanded expression: "67 "
 ; Expression value: 67
Label_1237:
 ; case
 ; RPN'ized expression: "75 "
 ; Expanded expression: "75 "
 ; Expression value: 75
Label_1238:
 ; case
 ; RPN'ized expression: "70 "
 ; Expanded expression: "70 "
 ; Expression value: 70
Label_1239:
 ; case
 ; RPN'ized expression: "71 "
 ; Expanded expression: "71 "
 ; Expression value: 71
Label_1240:
 ; case
 ; RPN'ized expression: "31 "
 ; Expanded expression: "31 "
 ; Expression value: 31
Label_1241:
 ; case
 ; RPN'ized expression: "72 "
 ; Expanded expression: "72 "
 ; Expression value: 72
Label_1242:
 ; case
 ; RPN'ized expression: "73 "
 ; Expanded expression: "73 "
 ; Expression value: 73
Label_1243:
 ; case
 ; RPN'ized expression: "74 "
 ; Expanded expression: "74 "
 ; Expression value: 74
Label_1244:
 ; RPN'ized expression: "( idx GenPrep ) "
 ; Expanded expression: " (@8) *(4)  GenPrep ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenPrep
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrep
 add r13 16 r13
 ; RPN'ized expression: "oldIdxLeft idx *u = "
 ; Expanded expression: "(@-12) (@8) *(4) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; RPN'ized expression: "( idx GenPrep ) "
 ; Expanded expression: " (@8) *(4)  GenPrep ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenPrep
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrep
 add r13 16 r13
 ; if
 ; RPN'ized expression: "t0 stack oldIdxLeft + *u 0 + *u = 16 == t0 89 == || "
 ; Expanded expression: "(@-16) stack (@-12) *(4) 8 * + 0 + *(4) =(4) 16 == [sh||->1247] (@-16) *(4) 89 == ||[1247] "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1247
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 89
 ; ==
 load32 89 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1247:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1245
 ; {
 ; RPN'ized expression: "t1 stack oldIdxLeft + *u 1 + *u = "
 ; Expanded expression: "(@-20) stack (@-12) *(4) 8 * + 4 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; RPN'ized expression: "( oldIdxRight oldIdxLeft - stack 0 + *u sizeof * , stack oldIdxLeft 1 + + *u , stack oldIdxLeft + *u memmove ) "
 ; Expanded expression: " (@-8) *(4) (@-12) *(4) - 8u *  stack (@-12) *(4) 1 + 8 * +  stack (@-12) *(4) 8 * +  memmove ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -12 r14 r6
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r6 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; ,
 ; stack
 addr2reg stack r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -12 r14 r5
 ; 1
 ; +
 add r5 1 r5
 ; 3
 ; <<
 shiftl r5 3 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; stack
 addr2reg stack r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -12 r14 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; memmove
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memmove
 add r13 16 r13
 ; RPN'ized expression: "stack oldIdxRight + *u 0 + *u t0 16 == 257 256 ? = "
 ; Expanded expression: "stack (@-8) *(4) 8 * + 0 + (@-16) *(4) 16 == [sh||->1248] 257 goto &&[1248] 256 &&[1249] =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 16
 ; ==
 load32 16 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; short-circuit ||
 ; JumpIfNotZero
 beq r8 r0 2
 jump Label_1248
 ; 257
 load32 257 r8
 ; sh-circ-goto goto
 jump Label_1249
 ; short-circuit && target
Label_1248:
 ; 256
 load32 256 r8
 ; short-circuit && target
Label_1249:
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "stack oldIdxRight + *u 1 + *u t1 = "
 ; Expanded expression: "stack (@-8) *(4) 8 * + 4 + (@-20) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -20 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
Label_1245:
 ; break
 jump Label_1190
 ; case
 ; RPN'ized expression: "43 "
 ; Expanded expression: "43 "
 ; Expression value: 43
Label_1250:
 ; case
 ; RPN'ized expression: "42 "
 ; Expanded expression: "42 "
 ; Expression value: 42
Label_1251:
 ; case
 ; RPN'ized expression: "38 "
 ; Expanded expression: "38 "
 ; Expression value: 38
Label_1252:
 ; case
 ; RPN'ized expression: "94 "
 ; Expanded expression: "94 "
 ; Expression value: 94
Label_1253:
 ; case
 ; RPN'ized expression: "124 "
 ; Expanded expression: "124 "
 ; Expression value: 124
Label_1254:
 ; case
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
Label_1255:
 ; case
 ; RPN'ized expression: "9 "
 ; Expanded expression: "9 "
 ; Expression value: 9
Label_1256:
 ; case
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
Label_1257:
 ; case
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
Label_1258:
 ; case
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
Label_1259:
 ; case
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
Label_1260:
 ; case
 ; RPN'ized expression: "85 "
 ; Expanded expression: "85 "
 ; Expression value: 85
Label_1261:
 ; case
 ; RPN'ized expression: "86 "
 ; Expanded expression: "86 "
 ; Expression value: 86
Label_1262:
 ; case
 ; RPN'ized expression: "87 "
 ; Expanded expression: "87 "
 ; Expression value: 87
Label_1263:
 ; case
 ; RPN'ized expression: "88 "
 ; Expanded expression: "88 "
 ; Expression value: 88
Label_1264:
 ; RPN'ized expression: "( idx GenPrep ) "
 ; Expanded expression: " (@8) *(4)  GenPrep ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenPrep
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrep
 add r13 16 r13
 ; RPN'ized expression: "oldIdxLeft idx *u = "
 ; Expanded expression: "(@-12) (@8) *(4) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; RPN'ized expression: "( idx GenPrep ) "
 ; Expanded expression: " (@8) *(4)  GenPrep ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenPrep
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrep
 add r13 16 r13
 ; RPN'ized expression: "t1 stack oldIdxRight + *u 0 + *u = "
 ; Expanded expression: "(@-20) stack (@-8) *(4) 8 * + 0 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; RPN'ized expression: "t0 stack oldIdxLeft + *u 0 + *u = "
 ; Expanded expression: "(@-16) stack (@-12) *(4) 8 * + 0 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; if
 ; RPN'ized expression: "t1 1 != t0 1 == && "
 ; Expanded expression: "(@-20) *(4) 1 != [sh&&->1267] (@-16) *(4) 1 == &&[1267] "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; 1
 ; !=
 load32 1 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1267
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1267:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1265
 ; {
 ; loc             xor : (@-24) : int
 ; RPN'ized expression: "t1 stack oldIdxLeft + *u 1 + *u = "
 ; Expanded expression: "(@-20) stack (@-12) *(4) 8 * + 4 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; RPN'ized expression: "( oldIdxRight oldIdxLeft - stack 0 + *u sizeof * , stack oldIdxLeft 1 + + *u , stack oldIdxLeft + *u memmove ) "
 ; Expanded expression: " (@-8) *(4) (@-12) *(4) - 8u *  stack (@-12) *(4) 1 + 8 * +  stack (@-12) *(4) 8 * +  memmove ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -12 r14 r6
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r6 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; ,
 ; stack
 addr2reg stack r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -12 r14 r5
 ; 1
 ; +
 add r5 1 r5
 ; 3
 ; <<
 shiftl r5 3 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; stack
 addr2reg stack r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -12 r14 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; memmove
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memmove
 add r13 16 r13
 ; RPN'ized expression: "stack oldIdxRight + *u 0 + *u t0 = "
 ; Expanded expression: "stack (@-8) *(4) 8 * + 0 + (@-16) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "stack oldIdxRight + *u 1 + *u t1 = "
 ; Expanded expression: "stack (@-8) *(4) 8 * + 4 + (@-20) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -20 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 jump Label_1269
 ; {
 ; case
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
Label_1270:
 ; case
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
Label_1271:
 ; RPN'ized expression: "xor 60 62 ^ = "
 ; Expanded expression: "(@-24) 2 =(4) "
 ; 2
 load32 2 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; break
 jump Label_1268
 ; case
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
Label_1272:
 ; case
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
Label_1273:
 ; RPN'ized expression: "xor 10 11 ^ = "
 ; Expanded expression: "(@-24) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; break
 jump Label_1268
 ; case
 ; RPN'ized expression: "85 "
 ; Expanded expression: "85 "
 ; Expression value: 85
Label_1274:
 ; case
 ; RPN'ized expression: "86 "
 ; Expanded expression: "86 "
 ; Expression value: 86
Label_1275:
 ; RPN'ized expression: "xor 85 86 ^ = "
 ; Expanded expression: "(@-24) 3 =(4) "
 ; 3
 load32 3 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; break
 jump Label_1268
 ; case
 ; RPN'ized expression: "87 "
 ; Expanded expression: "87 "
 ; Expression value: 87
Label_1276:
 ; case
 ; RPN'ized expression: "88 "
 ; Expanded expression: "88 "
 ; Expression value: 88
Label_1277:
 ; RPN'ized expression: "xor 87 88 ^ = "
 ; Expanded expression: "(@-24) 15 =(4) "
 ; 15
 load32 15 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; break
 jump Label_1268
 ; default
Label_1278:
 ; RPN'ized expression: "xor 0 = "
 ; Expanded expression: "(@-24) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -24 r14 r0
 ; break
 jump Label_1268
 ; }
 jump Label_1268
Label_1269:
 load32 60 r12
 bne r2 r12 2
 jump Label_1270
 load32 62 r12
 bne r2 r12 2
 jump Label_1271
 load32 10 r12
 bne r2 r12 2
 jump Label_1272
 load32 11 r12
 bne r2 r12 2
 jump Label_1273
 load32 85 r12
 bne r2 r12 2
 jump Label_1274
 load32 86 r12
 bne r2 r12 2
 jump Label_1275
 load32 87 r12
 bne r2 r12 2
 jump Label_1276
 load32 88 r12
 bne r2 r12 2
 jump Label_1277
 jump Label_1278
Label_1268:
 ; RPN'ized expression: "tok xor ^= "
 ; Expanded expression: "(@-4) (@-24) *(4) ^=(4) "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; local ofs
 ; ^=
 read -4 r14 r12
 xor r12 r2 r2
 write -4 r14 r2
 ; }
Label_1265:
 ; if
 ; RPN'ized expression: "stack oldIdxRight + *u 0 + *u 1 == "
 ; Expanded expression: "stack (@-8) *(4) 8 * + 0 + *(4) 1 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1279
 ; {
 ; loc             m : (@-24) : unsigned
 ; RPN'ized expression: "m ( stack oldIdxRight + *u 1 + *u truncUint ) = "
 ; Expanded expression: "(@-24)  stack (@-8) *(4) 8 * + 4 + *(4)  truncUint ()4 =(4) "
 ; (
 ; stack
 addr2reg stack r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -8 r14 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; 4
 ; +
 add r4 4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 jump Label_1282
 ; {
 ; case
 ; RPN'ized expression: "42 "
 ; Expanded expression: "42 "
 ; Expression value: 42
Label_1283:
 ; if
 ; RPN'ized expression: "m m m 1 - & 0 == && "
 ; Expanded expression: "(@-24) *(4) _Bool [sh&&->1286] (@-24) *(4) (@-24) *(4) 1 - & 0 == &&[1286] "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1286
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; local ofs
 ; * (read dereference)
 read -24 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; &
 and r2 r8 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1286:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1284
 ; {
 ; RPN'ized expression: "t1 0 = "
 ; Expanded expression: "(@-20) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -20 r14 r0
 ; while
 ; RPN'ized expression: "m 1 >>= "
 ; Expanded expression: "(@-24) 1 >>=u(4) "
Label_1287:
 ; 1
 load32 1 r2
 ; local ofs
 ; >>=u
 read -24 r14 r12
 shiftr r12 r2 r2
 write -24 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1288
 ; RPN'ized expression: "t1 ++p "
 ; Expanded expression: "(@-20) ++p(4) "
 ; local ofs
 ; ++p
 read -20 r14 r2
 add r2 1 r2
 write -20 r14 r2
 sub r2 1 r2
 jump Label_1287
Label_1288:
 ; RPN'ized expression: "stack oldIdxRight + *u 1 + *u t1 = "
 ; Expanded expression: "stack (@-8) *(4) 8 * + 4 + (@-20) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -20 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "tok 4 = "
 ; Expanded expression: "(@-4) 4 =(4) "
 ; 4
 load32 4 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; }
Label_1284:
 ; break
 jump Label_1281
 ; case
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
Label_1289:
 ; if
 ; RPN'ized expression: "m 2147483647 == "
 ; Expanded expression: "(@-24) *(4) 2147483647 == "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 2147483647
 ; ==
 load32 2147483647 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1290
 ; {
 ; RPN'ized expression: "stack oldIdxRight + *u 1 + *u 0 = "
 ; Expanded expression: "stack (@-8) *(4) 8 * + 4 + 0 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; 0
 ; =
 write 0 r2 r0
 ; RPN'ized expression: "tok 88 = "
 ; Expanded expression: "(@-4) 88 =(4) "
 ; 88
 load32 88 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; }
Label_1290:
 ; break
 jump Label_1281
 ; case
 ; RPN'ized expression: "87 "
 ; Expanded expression: "87 "
 ; Expression value: 87
Label_1292:
 ; if
 ; RPN'ized expression: "m 4294967295u == "
 ; Expanded expression: "(@-24) *(4) 4294967295u == "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; -1
 ; ==
 load32 -1 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1293
 ; {
 ; RPN'ized expression: "stack oldIdxRight + *u 1 + *u 0 = "
 ; Expanded expression: "stack (@-8) *(4) 8 * + 4 + 0 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; 0
 ; =
 write 0 r2 r0
 ; RPN'ized expression: "tok 88 = "
 ; Expanded expression: "(@-4) 88 =(4) "
 ; 88
 load32 88 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; }
Label_1293:
 ; break
 jump Label_1281
 ; case
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
Label_1295:
 ; if
 ; RPN'ized expression: "m 2147483647 == "
 ; Expanded expression: "(@-24) *(4) 2147483647 == "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 2147483647
 ; ==
 load32 2147483647 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1296
 ; {
 ; RPN'ized expression: "stack oldIdxRight + *u 1 + *u 0 = "
 ; Expanded expression: "stack (@-8) *(4) 8 * + 4 + 0 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; 0
 ; =
 write 0 r2 r0
 ; RPN'ized expression: "tok 38 = "
 ; Expanded expression: "(@-4) 38 =(4) "
 ; 38
 load32 38 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; }
Label_1296:
 ; break
 jump Label_1281
 ; case
 ; RPN'ized expression: "86 "
 ; Expanded expression: "86 "
 ; Expression value: 86
Label_1298:
 ; if
 ; RPN'ized expression: "m 4294967295u == "
 ; Expanded expression: "(@-24) *(4) 4294967295u == "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; -1
 ; ==
 load32 -1 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1299
 ; {
 ; RPN'ized expression: "stack oldIdxRight + *u 1 + *u 0 = "
 ; Expanded expression: "stack (@-8) *(4) 8 * + 4 + 0 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; 0
 ; =
 write 0 r2 r0
 ; RPN'ized expression: "tok 38 = "
 ; Expanded expression: "(@-4) 38 =(4) "
 ; 38
 load32 38 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; }
Label_1299:
 ; break
 jump Label_1281
 ; }
 jump Label_1281
Label_1282:
 load32 42 r12
 bne r2 r12 2
 jump Label_1283
 load32 10 r12
 bne r2 r12 2
 jump Label_1289
 load32 87 r12
 bne r2 r12 2
 jump Label_1292
 load32 62 r12
 bne r2 r12 2
 jump Label_1295
 load32 86 r12
 bne r2 r12 2
 jump Label_1298
Label_1281:
 ; }
Label_1279:
 ; RPN'ized expression: "stack oldIdxRight 1 + + *u 0 + *u tok = "
 ; Expanded expression: "stack (@-8) *(4) 1 + 8 * + 0 + (@-4) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; break
 jump Label_1190
 ; case
 ; RPN'ized expression: "41 "
 ; Expanded expression: "41 "
 ; Expression value: 41
Label_1301:
 ; while
 ; RPN'ized expression: "stack idx *u + *u 0 + *u 40 != "
 ; Expanded expression: "stack (@8) *(4) *(4) 8 * + 0 + *(4) 40 != "
Label_1302:
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 40
 ; !=
 load32 40 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_1303
 ; {
 ; RPN'ized expression: "( idx GenPrep ) "
 ; Expanded expression: " (@8) *(4)  GenPrep ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenPrep
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrep
 add r13 16 r13
 ; if
 ; RPN'ized expression: "stack idx *u + *u 0 + *u 44 == "
 ; Expanded expression: "stack (@8) *(4) *(4) 8 * + 0 + *(4) 44 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 44
 ; ==
 load32 44 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1304
 ; RPN'ized expression: "idx *u -- "
 ; Expanded expression: "(@8) *(4) --(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; --
 or r0 r2 r11
 read 0 r11 r2
 sub r2 1 r2
 write 0 r11 r2
Label_1304:
 ; }
 jump Label_1302
Label_1303:
 ; RPN'ized expression: "idx *u -- "
 ; Expanded expression: "(@8) *(4) --(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; --
 or r0 r2 r11
 read 0 r11 r2
 sub r2 1 r2
 write 0 r11 r2
 ; break
 jump Label_1190
 ; default
Label_1306:
 ; RPN'ized expression: "( 101 errorInternal ) "
 ; Expanded expression: " 101  errorInternal ()4 "
 ; (
 ; 101
 load32 101 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
 ; }
 jump Label_1190
Label_1191:
 load32 2 r12
 bne r2 r12 2
 jump Label_1192
 load32 1 r12
 bne r2 r12 2
 jump Label_1193
 load32 259 r12
 bne r2 r12 2
 jump Label_1194
 load32 16 r12
 bne r2 r12 2
 jump Label_1195
 load32 89 r12
 bne r2 r12 2
 jump Label_1196
 load32 83 r12
 bne r2 r12 2
 jump Label_1197
 load32 84 r12
 bne r2 r12 2
 jump Label_1198
 load32 45 r12
 bne r2 r12 2
 jump Label_1199
 load32 47 r12
 bne r2 r12 2
 jump Label_1200
 load32 37 r12
 bne r2 r12 2
 jump Label_1201
 load32 29 r12
 bne r2 r12 2
 jump Label_1202
 load32 30 r12
 bne r2 r12 2
 jump Label_1203
 load32 4 r12
 bne r2 r12 2
 jump Label_1204
 load32 5 r12
 bne r2 r12 2
 jump Label_1205
 load32 28 r12
 bne r2 r12 2
 jump Label_1206
 load32 6 r12
 bne r2 r12 2
 jump Label_1207
 load32 7 r12
 bne r2 r12 2
 jump Label_1208
 load32 48 r12
 bne r2 r12 2
 jump Label_1209
 load32 90 r12
 bne r2 r12 2
 jump Label_1210
 load32 21 r12
 bne r2 r12 2
 jump Label_1211
 load32 78 r12
 bne r2 r12 2
 jump Label_1212
 load32 12 r12
 bne r2 r12 2
 jump Label_1213
 load32 13 r12
 bne r2 r12 2
 jump Label_1214
 load32 81 r12
 bne r2 r12 2
 jump Label_1215
 load32 82 r12
 bne r2 r12 2
 jump Label_1216
 load32 126 r12
 bne r2 r12 2
 jump Label_1217
 load32 79 r12
 bne r2 r12 2
 jump Label_1218
 load32 80 r12
 bne r2 r12 2
 jump Label_1219
 load32 120 r12
 bne r2 r12 2
 jump Label_1220
 load32 17 r12
 bne r2 r12 2
 jump Label_1221
 load32 129 r12
 bne r2 r12 2
 jump Label_1222
 load32 128 r12
 bne r2 r12 2
 jump Label_1223
 load32 100 r12
 bne r2 r12 2
 jump Label_1224
 load32 130 r12
 bne r2 r12 2
 jump Label_1225
 load32 61 r12
 bne r2 r12 2
 jump Label_1226
 load32 68 r12
 bne r2 r12 2
 jump Label_1232
 load32 69 r12
 bne r2 r12 2
 jump Label_1233
 load32 65 r12
 bne r2 r12 2
 jump Label_1234
 load32 66 r12
 bne r2 r12 2
 jump Label_1235
 load32 64 r12
 bne r2 r12 2
 jump Label_1236
 load32 67 r12
 bne r2 r12 2
 jump Label_1237
 load32 75 r12
 bne r2 r12 2
 jump Label_1238
 load32 70 r12
 bne r2 r12 2
 jump Label_1239
 load32 71 r12
 bne r2 r12 2
 jump Label_1240
 load32 31 r12
 bne r2 r12 2
 jump Label_1241
 load32 72 r12
 bne r2 r12 2
 jump Label_1242
 load32 73 r12
 bne r2 r12 2
 jump Label_1243
 load32 74 r12
 bne r2 r12 2
 jump Label_1244
 load32 43 r12
 bne r2 r12 2
 jump Label_1250
 load32 42 r12
 bne r2 r12 2
 jump Label_1251
 load32 38 r12
 bne r2 r12 2
 jump Label_1252
 load32 94 r12
 bne r2 r12 2
 jump Label_1253
 load32 124 r12
 bne r2 r12 2
 jump Label_1254
 load32 8 r12
 bne r2 r12 2
 jump Label_1255
 load32 9 r12
 bne r2 r12 2
 jump Label_1256
 load32 60 r12
 bne r2 r12 2
 jump Label_1257
 load32 62 r12
 bne r2 r12 2
 jump Label_1258
 load32 10 r12
 bne r2 r12 2
 jump Label_1259
 load32 11 r12
 bne r2 r12 2
 jump Label_1260
 load32 85 r12
 bne r2 r12 2
 jump Label_1261
 load32 86 r12
 bne r2 r12 2
 jump Label_1262
 load32 87 r12
 bne r2 r12 2
 jump Label_1263
 load32 88 r12
 bne r2 r12 2
 jump Label_1264
 load32 41 r12
 bne r2 r12 2
 jump Label_1301
 jump Label_1306
Label_1190:
Label_1165:
 read 4 r14 r15
 read 0 r14 r14
 add r13 32 r13
 jumpr 0 r15

 ; RPN'ized expression: "6 "
 ; Expanded expression: "6 "
 ; Expression value: 6
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; RPN'ized expression: "3 "
 ; Expanded expression: "3 "
 ; Expression value: 3
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb CmpBlocks : [6u] [2u] [3u] [2u] char
.data
; .globl CmpBlocks
CmpBlocks:
 ; =
.dw 107 
; .space 1
.dw 0
.dw 109 
; .space 1
.dw 0
.dw 105 
; .space 1
.dw 0
.dw 102 
; .space 1
.dw 0
.dw 109 99 
.dw 105 99 
.dw 108 
; .space 1
.dw 0
.dw 110 
; .space 1
.dw 0
.dw 106 115 
.dw 103 
; .space 1
.dw 0
.dw 110 99 
.dw 106 100 
.dw 111 
; .space 1
.dw 0
.dw 110 115 
.dw 106 
; .space 1
.dw 0
.dw 104 
; .space 1
.dw 0
.dw 110 100 
.dw 106 99 
.dw 107 115 
.dw 109 115 
.dw 105 115 
.dw 101 
; .space 1
.dw 0
.dw 109 100 
.dw 105 100 
.dw 113 
; .space 1
.dw 0
.dw 116 113 
.dw 114 113 
.dw 100 
; .space 1
.dw 0
.dw 116 100 
.dw 98 
; .space 1
.dw 0
.dw 112 
; .space 1
.dw 0
.dw 116 112 
.dw 114 112 
.dw 99 
; .space 1
.dw 0
.dw 116 99 
.dw 97 
; .space 1
.dw 0

 ; glb GenCmp : (
 ; prm     idx : * int
 ; prm     op : int
 ;     ) void
.code
; .globl GenCmp
GenCmp:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         36 r13
 write         28 r13 r14
 add r13         28 r14
   write 4 r14 r15
 ; loc     idx : (@8) : * int
 ; loc     op : (@12) : int
 ; loc     constness : (@-4) : int
 ; RPN'ized expression: "constness stack idx *u 1 - + *u 0 + *u 1 == 2 stack idx *u 1 - + *u 1 + *u 0 != ? = "
 ; Expanded expression: "(@-4) stack (@8) *(4) *(4) 1 - 8 * + 0 + *(4) 1 == [sh||->1308] 2 goto &&[1308] stack (@8) *(4) *(4) 1 - 8 * + 4 + *(4) 0 != &&[1309] =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1308
 ; 2
 load32 2 r2
 ; sh-circ-goto goto
 jump Label_1309
 ; short-circuit && target
Label_1308:
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; !=
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1309:
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc     constval : (@-8) : int
 ; RPN'ized expression: "constval constness 1 == 0 ( stack idx *u 1 - + *u 1 + *u truncInt ) ? = "
 ; Expanded expression: "(@-8) (@-4) *(4) 1 == [sh||->1310] 0 goto &&[1310]  stack (@8) *(4) *(4) 1 - 8 * + 4 + *(4)  truncInt ()4 &&[1311] =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1310
 ; 0
 load32 0 r2
 ; sh-circ-goto goto
 jump Label_1311
 ; short-circuit && target
Label_1310:
 ; (
 ; stack
 addr2reg stack r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read 8 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; 1
 ; -
 sub r4 1 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; 4
 ; +
 add r4 4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; short-circuit && target
Label_1311:
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; loc     condbranch : (@-12) : int
 ; RPN'ized expression: "condbranch idx *u 1 + sp < 0 stack idx *u 1 + + *u 0 + *u 22 == stack idx *u 1 + + *u 0 + *u 76 == 2 * + ? = "
 ; Expanded expression: "(@-12) (@8) *(4) *(4) 1 + sp *(4) < [sh||->1312] 0 goto &&[1312] stack (@8) *(4) *(4) 1 + 8 * + 0 + *(4) 22 == stack (@8) *(4) *(4) 1 + 8 * + 0 + *(4) 76 == 2 * + &&[1313] =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; +
 add r2 1 r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1312
 ; 0
 load32 0 r2
 ; sh-circ-goto goto
 jump Label_1313
 ; short-circuit && target
Label_1312:
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 1
 ; +
 add r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 22
 ; ==
 load32 22 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; stack
 addr2reg stack r8
 ; local ofs
 ; * (read dereference)
 read 8 r14 r9
 ; * (read dereference)
 read 0 r9 r9
 ; 1
 ; +
 add r9 1 r9
 ; 3
 ; <<
 shiftl r9 3 r9
 ; +
 add r8 r9 r8
 ; 0
 ; +
 add r8 0 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 76
 ; ==
 load32 76 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; 1
 ; <<
 shiftl r8 1 r8
 ; +
 add r2 r8 r2
 ; short-circuit && target
Label_1313:
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; loc     unsign : (@-16) : int
 ; RPN'ized expression: "unsign op 4 >> = "
 ; Expanded expression: "(@-16) (@12) *(4) 4 >> =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 4
 ; >>
 shiftr r2 4 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; loc     label : (@-20) : int
 ; RPN'ized expression: "label condbranch 0 stack idx *u 1 + + *u 1 + *u ? = "
 ; Expanded expression: "(@-20) (@-12) *(4) [sh||->1314] 0 goto &&[1314] stack (@8) *(4) *(4) 1 + 8 * + 4 + *(4) &&[1315] =(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1314
 ; 0
 load32 0 r2
 ; sh-circ-goto goto
 jump Label_1315
 ; short-circuit && target
Label_1314:
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 1
 ; +
 add r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; short-circuit && target
Label_1315:
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; loc     p : (@-24) : * char
 ; loc     i : (@-28) : int
 ; RPN'ized expression: "op 15 &= "
 ; Expanded expression: "(@12) 15 &=(4) "
 ; 15
 load32 15 r2
 ; local ofs
 ; &=
 read 12 r14 r12
 and r12 r2 r2
 write 12 r14 r2
 ; if
 ; RPN'ized expression: "constness 2 == "
 ; Expanded expression: "(@-4) *(4) 2 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1316
 ; RPN'ized expression: "( GenPopReg ) "
 ; Expanded expression: " GenPopReg ()0 "
 ; (
 ; GenPopReg
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPopReg
 add r13 16 r13
Label_1316:
 ; if
 ; RPN'ized expression: "condbranch op 4 < && constness 0 == && unsign && "
 ; Expanded expression: "(@-12) *(4) _Bool [sh&&->1322] (@12) *(4) 4 < &&[1322] _Bool [sh&&->1321] (@-4) *(4) 0 == &&[1321] _Bool [sh&&->1320] (@-16) *(4) _Bool &&[1320] "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1322
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 4
 ; <
 load32 4 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1322:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1321
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1321:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1320
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1320:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1318
 ; {
 ; if
 ; RPN'ized expression: "op 2 == "
 ; Expanded expression: "(@12) *(4) 2 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1323
 ; RPN'ized expression: "op 5 = "
 ; Expanded expression: "(@12) 5 =(4) "
 ; 5
 load32 5 r2
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 jump Label_1324
Label_1323:
 ; else
 ; RPN'ized expression: "constness 1 = "
 ; Expanded expression: "(@-4) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
Label_1324:
 ; }
Label_1318:
 ; RPN'ized expression: "p CmpBlocks op + *u condbranch 0 != + *u constness + *u = "
 ; Expanded expression: "(@-24) CmpBlocks (@12) *(4) 12 * + (@-12) *(4) 0 != 6 * + (@-4) *(4) 2 * + =(4) "
 ; CmpBlocks
 addr2reg CmpBlocks r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; 12
 load32 12 r9
 ; *
 mult r8 r9 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 0
 ; !=
 bges r0 r8 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; 6
 load32 6 r9
 ; *
 mult r8 r9 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; <<
 shiftl r8 1 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-28) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -28 r14 r0
Label_1325:
 ; RPN'ized expression: "i 2 < "
 ; Expanded expression: "(@-28) *(4) 2 < "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 2
 ; <
 load32 2 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_1328
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-28) ++p(4) "
 ; {
 ; switch
 ; RPN'ized expression: "p i + *u "
 ; Expanded expression: "(@-24) *(4) (@-28) *(4) + *(-1) "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; local ofs
 ; * (read dereference)
 read -28 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_1330
 ; {
 ; case
 ; RPN'ized expression: "97 "
 ; Expanded expression: "97 "
 ; Expression value: 97
Label_1331:
 ; RPN'ized expression: "condbranch 3 ^= "
 ; Expanded expression: "(@-12) 3 ^=(4) "
 ; 3
 load32 3 r2
 ; local ofs
 ; ^=
 read -12 r14 r12
 xor r12 r2 r2
 write -12 r14 r2
 ; case
 ; RPN'ized expression: "98 "
 ; Expanded expression: "98 "
 ; Expression value: 98
Label_1332:
 ; RPN'ized expression: "( 2 , 128 , 0 , GenRreg , 0 , GenLreg , 0 , condbranch 1 == 60 61 ? GenPrintInstr3Operands ) "
 ; Expanded expression: " 2  128  0  GenRreg *(4)  0  GenLreg *(4)  0  (@-12) *(4) 1 == [sh||->1333] 60 goto &&[1333] 61 &&[1334]  GenPrintInstr3Operands ()32 "
 ; (
 ; 2
 load32 2 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenRreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenRreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenLreg
 ; * (read dereference)
 addr2reg GenLreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; 1
 ; ==
 load32 1 r1
 xor r4 r1 r4
 load32 1 r1
 bges r4 r1 3
 load32 1 r4
 jumpo 2
 load32 0 r4
 ; short-circuit ||
 ; JumpIfNotZero
 beq r4 r0 2
 jump Label_1333
 ; 60
 load32 60 r4
 ; sh-circ-goto goto
 jump Label_1334
 ; short-circuit && target
Label_1333:
 ; 61
 load32 61 r4
 ; short-circuit && target
Label_1334:
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( label , 130 , 0 , 54 GenPrintInstr1Operand ) "
 ; Expanded expression: " (@-20) *(4)  130  0  54  GenPrintInstr1Operand ()16 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r7
 ; ,
 ; 130
 load32 130 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 54
 load32 54 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
 ; break
 jump Label_1329
 ; case
 ; RPN'ized expression: "99 "
 ; Expanded expression: "99 "
 ; Expression value: 99
Label_1335:
 ; RPN'ized expression: "condbranch 3 ^= "
 ; Expanded expression: "(@-12) 3 ^=(4) "
 ; 3
 load32 3 r2
 ; local ofs
 ; ^=
 read -12 r14 r12
 xor r12 r2 r2
 write -12 r14 r2
 ; case
 ; RPN'ized expression: "100 "
 ; Expanded expression: "100 "
 ; Expression value: 100
Label_1336:
 ; RPN'ized expression: "( 2 , 128 , 0 , 0 , 0 , GenWreg , 0 , condbranch 1 == 60 61 ? GenPrintInstr3Operands ) "
 ; Expanded expression: " 2  128  0  0  0  GenWreg *(4)  0  (@-12) *(4) 1 == [sh||->1337] 60 goto &&[1337] 61 &&[1338]  GenPrintInstr3Operands ()32 "
 ; (
 ; 2
 load32 2 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; 1
 ; ==
 load32 1 r1
 xor r4 r1 r4
 load32 1 r1
 bges r4 r1 3
 load32 1 r4
 jumpo 2
 load32 0 r4
 ; short-circuit ||
 ; JumpIfNotZero
 beq r4 r0 2
 jump Label_1337
 ; 60
 load32 60 r4
 ; sh-circ-goto goto
 jump Label_1338
 ; short-circuit && target
Label_1337:
 ; 61
 load32 61 r4
 ; short-circuit && target
Label_1338:
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( label , 130 , 0 , 54 GenPrintInstr1Operand ) "
 ; Expanded expression: " (@-20) *(4)  130  0  54  GenPrintInstr1Operand ()16 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r7
 ; ,
 ; 130
 load32 130 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 54
 load32 54 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
 ; break
 jump Label_1329
 ; case
 ; RPN'ized expression: "101 "
 ; Expanded expression: "101 "
 ; Expression value: 101
Label_1339:
 ; RPN'ized expression: "condbranch 3 ^= "
 ; Expanded expression: "(@-12) 3 ^=(4) "
 ; 3
 load32 3 r2
 ; local ofs
 ; ^=
 read -12 r14 r12
 xor r12 r2 r2
 write -12 r14 r2
 ; case
 ; RPN'ized expression: "102 "
 ; Expanded expression: "102 "
 ; Expression value: 102
Label_1340:
 ; if
 ; RPN'ized expression: "condbranch 1 == "
 ; Expanded expression: "(@-12) *(4) 1 == "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1341
 ; {
 ; RPN'ized expression: "( 2 , 128 , 0 , 0 , 0 , GenWreg , 0 , 63 GenPrintInstr3Operands ) "
 ; Expanded expression: " 2  128  0  0  0  GenWreg *(4)  0  63  GenPrintInstr3Operands ()32 "
 ; (
 ; 2
 load32 2 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 63
 load32 63 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; }
 jump Label_1342
Label_1341:
 ; else
 ; {
 ; RPN'ized expression: "( 2 , 128 , 0 , GenWreg , 0 , 0 , 0 , 62 GenPrintInstr3Operands ) "
 ; Expanded expression: " 2  128  0  GenWreg *(4)  0  0  0  62  GenPrintInstr3Operands ()32 "
 ; (
 ; 2
 load32 2 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 0
 load32 0 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 62
 load32 62 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; }
Label_1342:
 ; RPN'ized expression: "( label , 130 , 0 , 54 GenPrintInstr1Operand ) "
 ; Expanded expression: " (@-20) *(4)  130  0  54  GenPrintInstr1Operand ()16 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r7
 ; ,
 ; 130
 load32 130 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 54
 load32 54 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
 ; break
 jump Label_1329
 ; case
 ; RPN'ized expression: "103 "
 ; Expanded expression: "103 "
 ; Expression value: 103
Label_1343:
 ; RPN'ized expression: "condbranch 3 ^= "
 ; Expanded expression: "(@-12) 3 ^=(4) "
 ; 3
 load32 3 r2
 ; local ofs
 ; ^=
 read -12 r14 r12
 xor r12 r2 r2
 write -12 r14 r2
 ; case
 ; RPN'ized expression: "104 "
 ; Expanded expression: "104 "
 ; Expression value: 104
Label_1344:
 ; if
 ; RPN'ized expression: "condbranch 1 == "
 ; Expanded expression: "(@-12) *(4) 1 == "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1345
 ; {
 ; RPN'ized expression: "( 2 , 128 , 0 , GenWreg , 0 , 0 , 0 , 63 GenPrintInstr3Operands ) "
 ; Expanded expression: " 2  128  0  GenWreg *(4)  0  0  0  63  GenPrintInstr3Operands ()32 "
 ; (
 ; 2
 load32 2 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 0
 load32 0 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 63
 load32 63 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; }
 jump Label_1346
Label_1345:
 ; else
 ; {
 ; RPN'ized expression: "( 2 , 128 , 0 , 0 , 0 , GenWreg , 0 , 62 GenPrintInstr3Operands ) "
 ; Expanded expression: " 2  128  0  0  0  GenWreg *(4)  0  62  GenPrintInstr3Operands ()32 "
 ; (
 ; 2
 load32 2 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 62
 load32 62 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; }
Label_1346:
 ; RPN'ized expression: "( label , 130 , 0 , 54 GenPrintInstr1Operand ) "
 ; Expanded expression: " (@-20) *(4)  130  0  54  GenPrintInstr1Operand ()16 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r7
 ; ,
 ; 130
 load32 130 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 54
 load32 54 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
 ; break
 jump Label_1329
 ; case
 ; RPN'ized expression: "105 "
 ; Expanded expression: "105 "
 ; Expression value: 105
Label_1347:
 ; RPN'ized expression: "( 3 , 128 , 0 , GenRreg , 0 , GenLreg , 0 , 63 GenPrintInstr3Operands ) "
 ; Expanded expression: " 3  128  0  GenRreg *(4)  0  GenLreg *(4)  0  63  GenPrintInstr3Operands ()32 "
 ; (
 ; 3
 load32 3 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenRreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenRreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenLreg
 ; * (read dereference)
 addr2reg GenLreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 63
 load32 63 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( 0 , GenWreg , 1 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  1  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 1
 load32 1 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 2 , 128 , 0 , 55 GenPrintInstr1Operand ) "
 ; Expanded expression: " 2  128  0  55  GenPrintInstr1Operand ()16 "
 ; (
 ; 2
 load32 2 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 55
 load32 55 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
 ; RPN'ized expression: "( 0 , GenWreg , 0 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; break
 jump Label_1329
 ; case
 ; RPN'ized expression: "106 "
 ; Expanded expression: "106 "
 ; Expression value: 106
Label_1348:
 ; RPN'ized expression: "( 3 , 128 , 0 , GenLreg , 0 , GenRreg , 0 , 63 GenPrintInstr3Operands ) "
 ; Expanded expression: " 3  128  0  GenLreg *(4)  0  GenRreg *(4)  0  63  GenPrintInstr3Operands ()32 "
 ; (
 ; 3
 load32 3 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenLreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenLreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenRreg
 ; * (read dereference)
 addr2reg GenRreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 63
 load32 63 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( 0 , GenWreg , 1 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  1  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 1
 load32 1 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 2 , 128 , 0 , 55 GenPrintInstr1Operand ) "
 ; Expanded expression: " 2  128  0  55  GenPrintInstr1Operand ()16 "
 ; (
 ; 2
 load32 2 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 55
 load32 55 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
 ; RPN'ized expression: "( 0 , GenWreg , 0 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; break
 jump Label_1329
 ; case
 ; RPN'ized expression: "107 "
 ; Expanded expression: "107 "
 ; Expression value: 107
Label_1349:
 ; RPN'ized expression: "( 3 , 128 , 0 , 0 , 0 , GenWreg , 0 , 63 GenPrintInstr3Operands ) "
 ; Expanded expression: " 3  128  0  0  0  GenWreg *(4)  0  63  GenPrintInstr3Operands ()32 "
 ; (
 ; 3
 load32 3 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 63
 load32 63 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( 0 , GenWreg , 1 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  1  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 1
 load32 1 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 2 , 128 , 0 , 55 GenPrintInstr1Operand ) "
 ; Expanded expression: " 2  128  0  55  GenPrintInstr1Operand ()16 "
 ; (
 ; 2
 load32 2 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 55
 load32 55 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
 ; RPN'ized expression: "( 0 , GenWreg , 0 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; break
 jump Label_1329
 ; case
 ; RPN'ized expression: "108 "
 ; Expanded expression: "108 "
 ; Expression value: 108
Label_1350:
 ; RPN'ized expression: "( 0 , 11 , 1 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  11  1  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 11
 sub r13 4 r13
 write 0 r13 r2
 load32 11 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 1
 load32 1 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 3 , 128 , 0 , 11 , 0 , GenWreg , 0 , 63 GenPrintInstr3Operands ) "
 ; Expanded expression: " 3  128  0  11  0  GenWreg *(4)  0  63  GenPrintInstr3Operands ()32 "
 ; (
 ; 3
 load32 3 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; 11
 sub r13 4 r13
 write 0 r13 r2
 load32 11 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 63
 load32 63 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( 0 , GenWreg , 1 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  1  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 1
 load32 1 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 2 , 128 , 0 , 55 GenPrintInstr1Operand ) "
 ; Expanded expression: " 2  128  0  55  GenPrintInstr1Operand ()16 "
 ; (
 ; 2
 load32 2 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 55
 load32 55 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
 ; RPN'ized expression: "( 0 , GenWreg , 0 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; break
 jump Label_1329
 ; case
 ; RPN'ized expression: "110 "
 ; Expanded expression: "110 "
 ; Expression value: 110
Label_1351:
 ; RPN'ized expression: "constval ++p "
 ; Expanded expression: "(@-8) ++p(4) "
 ; local ofs
 ; ++p
 read -8 r14 r2
 add r2 1 r2
 write -8 r14 r2
 sub r2 1 r2
 ; case
 ; RPN'ized expression: "109 "
 ; Expanded expression: "109 "
 ; Expression value: 109
Label_1352:
 ; RPN'ized expression: "( 0 , 11 , constval , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  11  (@-8) *(4)  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 11
 sub r13 4 r13
 write 0 r13 r2
 load32 11 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 3 , 128 , 0 , 11 , 0 , GenWreg , 0 , 63 GenPrintInstr3Operands ) "
 ; Expanded expression: " 3  128  0  11  0  GenWreg *(4)  0  63  GenPrintInstr3Operands ()32 "
 ; (
 ; 3
 load32 3 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; 11
 sub r13 4 r13
 write 0 r13 r2
 load32 11 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 63
 load32 63 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( 0 , GenWreg , 1 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  1  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 1
 load32 1 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 2 , 128 , 0 , 55 GenPrintInstr1Operand ) "
 ; Expanded expression: " 2  128  0  55  GenPrintInstr1Operand ()16 "
 ; (
 ; 2
 load32 2 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 55
 load32 55 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
 ; RPN'ized expression: "( 0 , GenWreg , 0 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; break
 jump Label_1329
 ; case
 ; RPN'ized expression: "111 "
 ; Expanded expression: "111 "
 ; Expression value: 111
Label_1353:
 ; RPN'ized expression: "( 3 , 128 , 0 , GenWreg , 0 , 0 , 0 , 63 GenPrintInstr3Operands ) "
 ; Expanded expression: " 3  128  0  GenWreg *(4)  0  0  0  63  GenPrintInstr3Operands ()32 "
 ; (
 ; 3
 load32 3 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 0
 load32 0 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 63
 load32 63 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( 0 , GenWreg , 1 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  1  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 1
 load32 1 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 2 , 128 , 0 , 55 GenPrintInstr1Operand ) "
 ; Expanded expression: " 2  128  0  55  GenPrintInstr1Operand ()16 "
 ; (
 ; 2
 load32 2 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 55
 load32 55 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
 ; RPN'ized expression: "( 0 , GenWreg , 0 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; break
 jump Label_1329
 ; case
 ; RPN'ized expression: "112 "
 ; Expanded expression: "112 "
 ; Expression value: 112
Label_1354:
 ; RPN'ized expression: "( 3 , 128 , 0 , GenWreg , 0 , 0 , 0 , 63 GenPrintInstr3Operands ) "
 ; Expanded expression: " 3  128  0  GenWreg *(4)  0  0  0  63  GenPrintInstr3Operands ()32 "
 ; (
 ; 3
 load32 3 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 0
 load32 0 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 63
 load32 63 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( 0 , GenWreg , 1 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  1  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 1
 load32 1 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 2 , 128 , 0 , 55 GenPrintInstr1Operand ) "
 ; Expanded expression: " 2  128  0  55  GenPrintInstr1Operand ()16 "
 ; (
 ; 2
 load32 2 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 55
 load32 55 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
 ; RPN'ized expression: "( 0 , GenWreg , 0 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; break
 jump Label_1329
 ; case
 ; RPN'ized expression: "113 "
 ; Expanded expression: "113 "
 ; Expression value: 113
Label_1355:
 ; RPN'ized expression: "( 0 , 1 , 1 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  1  1  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 1
 sub r13 4 r13
 write 0 r13 r2
 load32 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 1
 load32 1 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 3 , 128 , 0 , 1 , 0 , GenWreg , 0 , 63 GenPrintInstr3Operands ) "
 ; Expanded expression: " 3  128  0  1  0  GenWreg *(4)  0  63  GenPrintInstr3Operands ()32 "
 ; (
 ; 3
 load32 3 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; 1
 sub r13 4 r13
 write 0 r13 r2
 load32 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 63
 load32 63 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( 0 , GenWreg , 1 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  1  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 1
 load32 1 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 2 , 128 , 0 , 55 GenPrintInstr1Operand ) "
 ; Expanded expression: " 2  128  0  55  GenPrintInstr1Operand ()16 "
 ; (
 ; 2
 load32 2 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 55
 load32 55 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
 ; RPN'ized expression: "( 0 , GenWreg , 0 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; break
 jump Label_1329
 ; case
 ; RPN'ized expression: "114 "
 ; Expanded expression: "114 "
 ; Expression value: 114
Label_1356:
 ; RPN'ized expression: "( 0 , GenWreg , 0 , GenRreg , 0 , GenLreg , 0 , 68 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  GenRreg *(4)  0  GenLreg *(4)  0  68  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenRreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenRreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenLreg
 ; * (read dereference)
 addr2reg GenLreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 68
 load32 68 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; break
 jump Label_1329
 ; case
 ; RPN'ized expression: "115 "
 ; Expanded expression: "115 "
 ; Expression value: 115
Label_1357:
 ; RPN'ized expression: "( 0 , 1 , 1 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  1  1  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 1
 sub r13 4 r13
 write 0 r13 r2
 load32 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 1
 load32 1 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 0 , GenWreg , 0 , 1 , 0 , GenWreg , 0 , 68 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  1  0  GenWreg *(4)  0  68  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; 1
 sub r13 4 r13
 write 0 r13 r2
 load32 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 68
 load32 68 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; break
 jump Label_1329
 ; case
 ; RPN'ized expression: "116 "
 ; Expanded expression: "116 "
 ; Expression value: 116
Label_1358:
 ; RPN'ized expression: "( 0 , 1 , constval , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  1  (@-8) *(4)  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 1
 sub r13 4 r13
 write 0 r13 r2
 load32 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 0 , GenWreg , 0 , 1 , 0 , GenWreg , 0 , 68 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  1  0  GenWreg *(4)  0  68  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; 1
 sub r13 4 r13
 write 0 r13 r2
 load32 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 68
 load32 68 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; break
 jump Label_1329
 ; }
 jump Label_1329
Label_1330:
 load32 97 r12
 bne r2 r12 2
 jump Label_1331
 load32 98 r12
 bne r2 r12 2
 jump Label_1332
 load32 99 r12
 bne r2 r12 2
 jump Label_1335
 load32 100 r12
 bne r2 r12 2
 jump Label_1336
 load32 101 r12
 bne r2 r12 2
 jump Label_1339
 load32 102 r12
 bne r2 r12 2
 jump Label_1340
 load32 103 r12
 bne r2 r12 2
 jump Label_1343
 load32 104 r12
 bne r2 r12 2
 jump Label_1344
 load32 105 r12
 bne r2 r12 2
 jump Label_1347
 load32 106 r12
 bne r2 r12 2
 jump Label_1348
 load32 107 r12
 bne r2 r12 2
 jump Label_1349
 load32 108 r12
 bne r2 r12 2
 jump Label_1350
 load32 110 r12
 bne r2 r12 2
 jump Label_1351
 load32 109 r12
 bne r2 r12 2
 jump Label_1352
 load32 111 r12
 bne r2 r12 2
 jump Label_1353
 load32 112 r12
 bne r2 r12 2
 jump Label_1354
 load32 113 r12
 bne r2 r12 2
 jump Label_1355
 load32 114 r12
 bne r2 r12 2
 jump Label_1356
 load32 115 r12
 bne r2 r12 2
 jump Label_1357
 load32 116 r12
 bne r2 r12 2
 jump Label_1358
Label_1329:
 ; }
Label_1326:
 ; local ofs
 ; ++p
 read -28 r14 r2
 add r2 1 r2
 write -28 r14 r2
 sub r2 1 r2
 jump Label_1325
Label_1328:
 ; RPN'ized expression: "idx *u condbranch 0 != += "
 ; Expanded expression: "(@8) *(4) (@-12) *(4) 0 != +=(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 0
 ; !=
 bges r0 r8 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; +=
 or r0 r2 r12
 read 0 r2 r2
 add r2 r8 r2
 write 0 r12 r2
Label_1307:
 read 4 r14 r15
 read 0 r14 r14
 add r13 36 r13
 jumpr 0 r15

 ; glb GenIsCmp : (
 ; prm     t : int
 ;     ) int
.code
; .globl GenIsCmp
GenIsCmp:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
 ; write 4 r14 r15
 ; loc     t : (@8) : int
 ; return
 ; RPN'ized expression: "t 60 == t 62 == || t 11 == || t 10 == || t 85 == || t 86 == || t 88 == || t 87 == || t 8 == || t 9 == || "
 ; Expanded expression: "(@8) *(4) 60 == [sh||->1368] (@8) *(4) 62 == ||[1368] _Bool [sh||->1367] (@8) *(4) 11 == ||[1367] _Bool [sh||->1366] (@8) *(4) 10 == ||[1366] _Bool [sh||->1365] (@8) *(4) 85 == ||[1365] _Bool [sh||->1364] (@8) *(4) 86 == ||[1364] _Bool [sh||->1363] (@8) *(4) 88 == ||[1363] _Bool [sh||->1362] (@8) *(4) 87 == ||[1362] _Bool [sh||->1361] (@8) *(4) 8 == ||[1361] _Bool [sh||->1360] (@8) *(4) 9 == ||[1360] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 60
 ; ==
 load32 60 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1368
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 62
 ; ==
 load32 62 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1368:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1367
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 11
 ; ==
 load32 11 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1367:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1366
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 10
 ; ==
 load32 10 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1366:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1365
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 85
 ; ==
 load32 85 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1365:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1364
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 86
 ; ==
 load32 86 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1364:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1363
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 88
 ; ==
 load32 88 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1363:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1362
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 87
 ; ==
 load32 87 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1362:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1361
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 8
 ; ==
 load32 8 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1361:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1360
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 9
 ; ==
 load32 9 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1360:
Label_1359:
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenExpr0 : (void) void
.code
; .globl GenExpr0
GenExpr0:
 sub r13         52 r13
 write         44 r13 r14
 add r13         44 r14
   write 4 r14 r15
 ; loc     i : (@-4) : int
 ; loc     gotUnary : (@-8) : int
 ; RPN'ized expression: "gotUnary 0 = "
 ; Expanded expression: "(@-8) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -8 r14 r0
 ; loc     maxCallDepth : (@-12) : int
 ; RPN'ized expression: "maxCallDepth 0 = "
 ; Expanded expression: "(@-12) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -12 r14 r0
 ; loc     callDepth : (@-16) : int
 ; RPN'ized expression: "callDepth 0 = "
 ; Expanded expression: "(@-16) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -16 r14 r0
 ; loc     paramOfs : (@-20) : int
 ; RPN'ized expression: "paramOfs 0 = "
 ; Expanded expression: "(@-20) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -20 r14 r0
 ; loc     t : (@-24) : int
 ; RPN'ized expression: "t sp 1 - = "
 ; Expanded expression: "(@-24) sp *(4) 1 - =(4) "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; 1
 ; -
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; if
 ; RPN'ized expression: "stack t + *u 0 + *u 22 == stack t + *u 0 + *u 76 == || stack t + *u 0 + *u 20 == || "
 ; Expanded expression: "stack (@-24) *(4) 8 * + 0 + *(4) 22 == [sh||->1373] stack (@-24) *(4) 8 * + 0 + *(4) 76 == ||[1373] _Bool [sh||->1372] stack (@-24) *(4) 8 * + 0 + *(4) 20 == ||[1372] "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -24 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 22
 ; ==
 load32 22 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1373
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -24 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 76
 ; ==
 load32 76 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1373:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1372
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -24 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 20
 ; ==
 load32 20 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1372:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1370
 ; RPN'ized expression: "t --p "
 ; Expanded expression: "(@-24) --p(4) "
 ; local ofs
 ; --p
 read -24 r14 r2
 sub r2 1 r2
 write -24 r14 r2
 add r2 1 r2
Label_1370:
 ; RPN'ized expression: "( t &u GenPrep ) "
 ; Expanded expression: " (@-24)  GenPrep ()4 "
 ; (
 ; local ofs
 sub r14 24 r4
 ; ,
 ; GenPrep
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrep
 add r13 16 r13
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_1374:
 ; RPN'ized expression: "i sp < "
 ; Expanded expression: "(@-4) *(4) sp *(4) < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_1377
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; if
 ; RPN'ized expression: "stack i + *u 0 + *u 40 == "
 ; Expanded expression: "stack (@-4) *(4) 8 * + 0 + *(4) 40 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1378
 ; {
 ; if
 ; RPN'ized expression: "callDepth ++ maxCallDepth > "
 ; Expanded expression: "(@-16) ++(4) (@-12) *(4) > "
 ; local ofs
 ; ++
 read -16 r14 r2
 add r2 1 r2
 write -16 r14 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; >
 bges r8 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_1380
 ; RPN'ized expression: "maxCallDepth callDepth = "
 ; Expanded expression: "(@-12) (@-16) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
Label_1380:
 ; }
 jump Label_1379
Label_1378:
 ; else
 ; if
 ; RPN'ized expression: "stack i + *u 0 + *u 41 == "
 ; Expanded expression: "stack (@-4) *(4) 8 * + 0 + *(4) 41 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1382
 ; {
 ; RPN'ized expression: "callDepth --p "
 ; Expanded expression: "(@-16) --p(4) "
 ; local ofs
 ; --p
 read -16 r14 r2
 sub r2 1 r2
 write -16 r14 r2
 add r2 1 r2
 ; }
Label_1382:
Label_1379:
Label_1375:
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_1374
Label_1377:
 ; RPN'ized expression: "CanUseTempRegs maxCallDepth 0 == = "
 ; Expanded expression: "CanUseTempRegs (@-12) *(4) 0 == =(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; CanUseTempRegs
 ; = (write dereference)
 addr2reg CanUseTempRegs r1
 write 0 r1 r2
 ; RPN'ized expression: "TempsUsed 0 = "
 ; Expanded expression: "TempsUsed 0 =(4) "
 ; 0
 ; TempsUsed
 ; =
 addr2reg TempsUsed r1
 write 0 r1 r0
 ; if
 ; RPN'ized expression: "GenWreg 2 != "
 ; Expanded expression: "GenWreg *(4) 2 != "
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; 2
 ; !=
 load32 2 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_1384
 ; RPN'ized expression: "( 102 errorInternal ) "
 ; Expanded expression: " 102  errorInternal ()4 "
 ; (
 ; 102
 load32 102 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
Label_1384:
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_1386:
 ; RPN'ized expression: "i sp < "
 ; Expanded expression: "(@-4) *(4) sp *(4) < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_1389
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; {
 ; loc         tok : (@-28) : int
 ; RPN'ized expression: "tok stack i + *u 0 + *u = "
 ; Expanded expression: "(@-28) stack (@-4) *(4) 8 * + 0 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -28 r14 r2
 ; loc         v : (@-32) : int
 ; RPN'ized expression: "v stack i + *u 1 + *u = "
 ; Expanded expression: "(@-32) stack (@-4) *(4) 8 * + 4 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-28) *(4) "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 jump Label_1391
 ; {
 ; case
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
Label_1392:

.rdata
Label_1393:
.dw 32 59 32 37 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( v truncInt ) , L1393 printf2 ) "
 ; Expanded expression: "  (@-32) *(4)  truncInt ()4  L1393  printf2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; ,
 ; truncInt
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; ,
 ; 1393
 sub r13 4 r13
 write 0 r13 r2
 addr2reg Label_1393 r2
 ; ,
 ; printf2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_1390
 ; case
 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
Label_1394:
 ; case
 ; RPN'ized expression: "256 "
 ; Expanded expression: "256 "
 ; Expression value: 256
Label_1395:

.rdata
Label_1396:
.dw 32 59 32 37 115 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( IdentTable v + , L1396 printf2 ) "
 ; Expanded expression: " IdentTable (@-32) *(4) +  L1396  printf2 ()8 "
 ; (
 ; IdentTable
 addr2reg IdentTable r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -32 r14 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; 1396
 addr2reg Label_1396 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_1390
 ; case
 ; RPN'ized expression: "89 "
 ; Expanded expression: "89 "
 ; Expression value: 89
Label_1397:
 ; case
 ; RPN'ized expression: "257 "
 ; Expanded expression: "257 "
 ; Expression value: 257
Label_1398:

.rdata
Label_1399:
.dw 32 59 32 108 111 99 97 108 32 111 102 115 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1399 printf2 ) "
 ; Expanded expression: " L1399  printf2 ()4 "
 ; (
 ; 1399
 addr2reg Label_1399 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_1390
 ; case
 ; RPN'ized expression: "41 "
 ; Expanded expression: "41 "
 ; Expression value: 41
Label_1400:

.rdata
Label_1401:
.dw 32 59 32 41 32 102 120 110 32 99 97 108 108 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1401 printf2 ) "
 ; Expanded expression: " L1401  printf2 ()4 "
 ; (
 ; 1401
 addr2reg Label_1401 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_1390
 ; case
 ; RPN'ized expression: "78 "
 ; Expanded expression: "78 "
 ; Expression value: 78
Label_1402:

.rdata
Label_1403:
.dw 32 59 32 42 32 40 114 101 97 100 32 100 101 114 101 102 101 114 101 110 99 101 41 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1403 printf2 ) "
 ; Expanded expression: " L1403  printf2 ()4 "
 ; (
 ; 1403
 addr2reg Label_1403 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_1390
 ; case
 ; RPN'ized expression: "61 "
 ; Expanded expression: "61 "
 ; Expression value: 61
Label_1404:

.rdata
Label_1405:
.dw 32 59 32 61 32 40 119 114 105 116 101 32 100 101 114 101 102 101 114 101 110 99 101 41 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1405 printf2 ) "
 ; Expanded expression: " L1405  printf2 ()4 "
 ; (
 ; 1405
 addr2reg Label_1405 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_1390
 ; case
 ; RPN'ized expression: "90 "
 ; Expanded expression: "90 "
 ; Expression value: 90
Label_1406:

.rdata
Label_1407:
.dw 32 59 32 115 104 111 114 116 45 99 105 114 99 117 105 116 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1407 printf2 ) "
 ; Expanded expression: " L1407  printf2 ()4 "
 ; (
 ; 1407
 addr2reg Label_1407 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_1390
 ; case
 ; RPN'ized expression: "21 "
 ; Expanded expression: "21 "
 ; Expression value: 21
Label_1408:

.rdata
Label_1409:
.dw 32 59 32 115 104 45 99 105 114 99 45 103 111 116 111 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1409 printf2 ) "
 ; Expanded expression: " L1409  printf2 ()4 "
 ; (
 ; 1409
 addr2reg Label_1409 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_1390
 ; case
 ; RPN'ized expression: "6 "
 ; Expanded expression: "6 "
 ; Expression value: 6
Label_1410:

.rdata
Label_1411:
.dw 32 59 32 115 104 111 114 116 45 99 105 114 99 117 105 116 32 38 38 32 116 97 114 103 101 116 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1411 printf2 ) "
 ; Expanded expression: " L1411  printf2 ()4 "
 ; (
 ; 1411
 addr2reg Label_1411 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_1390
 ; case
 ; RPN'ized expression: "7 "
 ; Expanded expression: "7 "
 ; Expression value: 7
Label_1412:

.rdata
Label_1413:
.dw 32 59 32 115 104 111 114 116 45 99 105 114 99 117 105 116 32 124 124 32 116 97 114 103 101 116 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1413 printf2 ) "
 ; Expanded expression: " L1413  printf2 ()4 "
 ; (
 ; 1413
 addr2reg Label_1413 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_1390
 ; case
 ; RPN'ized expression: "22 "
 ; Expanded expression: "22 "
 ; Expression value: 22
Label_1414:
 ; case
 ; RPN'ized expression: "76 "
 ; Expanded expression: "76 "
 ; Expression value: 76
Label_1415:
 ; case
 ; RPN'ized expression: "20 "
 ; Expanded expression: "20 "
 ; Expression value: 20
Label_1416:
 ; break
 jump Label_1390
 ; case
 ; RPN'ized expression: "259 "
 ; Expanded expression: "259 "
 ; Expression value: 259
Label_1417:

.rdata
Label_1418:
.dw 32 59 32 48 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1418 printf2 ) "
 ; Expanded expression: " L1418  printf2 ()4 "
 ; (
 ; 1418
 addr2reg Label_1418 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_1390
 ; case
 ; RPN'ized expression: "258 "
 ; Expanded expression: "258 "
 ; Expression value: 258
Label_1419:

.rdata
Label_1420:
.dw 32 59 32 61 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1420 printf2 ) "
 ; Expanded expression: " L1420  printf2 ()4 "
 ; (
 ; 1420
 addr2reg Label_1420 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_1390
 ; default
Label_1421:

.rdata
Label_1422:
.dw 32 59 32 37 115 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( tok GetTokenName ) , L1422 printf2 ) "
 ; Expanded expression: "  (@-28) *(4)  GetTokenName ()4  L1422  printf2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; ,
 ; GetTokenName
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump GetTokenName
 add r13 16 r13
 ; ,
 ; 1422
 sub r13 4 r13
 write 0 r13 r2
 addr2reg Label_1422 r2
 ; ,
 ; printf2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_1390
 ; }
 jump Label_1390
Label_1391:
 load32 1 r12
 bne r2 r12 2
 jump Label_1392
 load32 16 r12
 bne r2 r12 2
 jump Label_1394
 load32 256 r12
 bne r2 r12 2
 jump Label_1395
 load32 89 r12
 bne r2 r12 2
 jump Label_1397
 load32 257 r12
 bne r2 r12 2
 jump Label_1398
 load32 41 r12
 bne r2 r12 2
 jump Label_1400
 load32 78 r12
 bne r2 r12 2
 jump Label_1402
 load32 61 r12
 bne r2 r12 2
 jump Label_1404
 load32 90 r12
 bne r2 r12 2
 jump Label_1406
 load32 21 r12
 bne r2 r12 2
 jump Label_1408
 load32 6 r12
 bne r2 r12 2
 jump Label_1410
 load32 7 r12
 bne r2 r12 2
 jump Label_1412
 load32 22 r12
 bne r2 r12 2
 jump Label_1414
 load32 76 r12
 bne r2 r12 2
 jump Label_1415
 load32 20 r12
 bne r2 r12 2
 jump Label_1416
 load32 259 r12
 bne r2 r12 2
 jump Label_1417
 load32 258 r12
 bne r2 r12 2
 jump Label_1419
 jump Label_1421
Label_1390:
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-28) *(4) "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 jump Label_1424
 ; {
 ; case
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
Label_1425:
 ; if
 ; RPN'ized expression: "i 1 + sp < t stack i 1 + + *u 0 + *u = 43 == t 45 == || t 38 == || t 94 == || t 124 == || t 4 == || t 5 == || t 28 == || ( t GenIsCmp ) || && 0 == "
 ; Expanded expression: "(@-4) *(4) 1 + sp *(4) < [sh&&->1428] (@-24) stack (@-4) *(4) 1 + 8 * + 0 + *(4) =(4) 43 == [sh||->1436] (@-24) *(4) 45 == ||[1436] _Bool [sh||->1435] (@-24) *(4) 38 == ||[1435] _Bool [sh||->1434] (@-24) *(4) 94 == ||[1434] _Bool [sh||->1433] (@-24) *(4) 124 == ||[1433] _Bool [sh||->1432] (@-24) *(4) 4 == ||[1432] _Bool [sh||->1431] (@-24) *(4) 5 == ||[1431] _Bool [sh||->1430] (@-24) *(4) 28 == ||[1430] _Bool [sh||->1429]  (@-24) *(4)  GenIsCmp ()4 _Bool ||[1429] _Bool &&[1428] 0 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; sp
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; <
 read 0 r13 r11
 add r13 4 r13
 bges r11 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1428
 ; stack
 addr2reg stack r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; 3
 ; <<
 shiftl r2 3 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; 43
 ; ==
 load32 43 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1436
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 45
 ; ==
 load32 45 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1436:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1435
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 38
 ; ==
 load32 38 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1435:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1434
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 94
 ; ==
 load32 94 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1434:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1433
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 124
 ; ==
 load32 124 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1433:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1432
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 4
 ; ==
 load32 4 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1432:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1431
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 5
 ; ==
 load32 5 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1431:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1430
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 28
 ; ==
 load32 28 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1430:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1429
 ; (
 ; local ofs
 ; * (read dereference)
 read -24 r14 r4
 ; ,
 ; GenIsCmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenIsCmp
 add r13 16 r13
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_1429:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1428:
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1426
 ; {
 ; if
 ; RPN'ized expression: "gotUnary "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1437
 ; RPN'ized expression: "( GenPushReg ) "
 ; Expanded expression: " GenPushReg ()0 "
 ; (
 ; GenPushReg
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPushReg
 add r13 16 r13
Label_1437:
 ; RPN'ized expression: "( 0 , GenWreg , v , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  (@-32) *(4)  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -32 r14 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; }
Label_1426:
 ; RPN'ized expression: "gotUnary 1 = "
 ; Expanded expression: "(@-8) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
Label_1439:
 ; if
 ; RPN'ized expression: "gotUnary "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1440
 ; RPN'ized expression: "( GenPushReg ) "
 ; Expanded expression: " GenPushReg ()0 "
 ; (
 ; GenPushReg
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPushReg
 add r13 16 r13
Label_1440:
 ; if
 ; RPN'ized expression: "i 1 + sp < t stack i 1 + + *u 0 + *u = 41 == t 78 == || t 12 == || t 13 == || t 81 == || t 82 == || && 0 == "
 ; Expanded expression: "(@-4) *(4) 1 + sp *(4) < [sh&&->1444] (@-24) stack (@-4) *(4) 1 + 8 * + 0 + *(4) =(4) 41 == [sh||->1449] (@-24) *(4) 78 == ||[1449] _Bool [sh||->1448] (@-24) *(4) 12 == ||[1448] _Bool [sh||->1447] (@-24) *(4) 13 == ||[1447] _Bool [sh||->1446] (@-24) *(4) 81 == ||[1446] _Bool [sh||->1445] (@-24) *(4) 82 == ||[1445] _Bool &&[1444] 0 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1444
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1449
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 78
 ; ==
 load32 78 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1449:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1448
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 12
 ; ==
 load32 12 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1448:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1447
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 13
 ; ==
 load32 13 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1447:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1446
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 81
 ; ==
 load32 81 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1446:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1445
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 82
 ; ==
 load32 82 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1445:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1444:
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1442
 ; {
 ; RPN'ized expression: "( 0 , GenWreg , v , 129 , 0 , 76 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  (@-32) *(4)  129  0  76  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -32 r14 r7
 ; ,
 ; 129
 load32 129 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 76
 load32 76 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; }
Label_1442:
 ; RPN'ized expression: "gotUnary 1 = "
 ; Expanded expression: "(@-8) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "89 "
 ; Expanded expression: "89 "
 ; Expression value: 89
Label_1450:
 ; if
 ; RPN'ized expression: "gotUnary "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1451
 ; RPN'ized expression: "( GenPushReg ) "
 ; Expanded expression: " GenPushReg ()0 "
 ; (
 ; GenPushReg
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPushReg
 add r13 16 r13
Label_1451:
 ; if
 ; RPN'ized expression: "i 1 + sp < t stack i 1 + + *u 0 + *u = 78 == t 12 == || t 13 == || t 81 == || t 82 == || && 0 == "
 ; Expanded expression: "(@-4) *(4) 1 + sp *(4) < [sh&&->1455] (@-24) stack (@-4) *(4) 1 + 8 * + 0 + *(4) =(4) 78 == [sh||->1459] (@-24) *(4) 12 == ||[1459] _Bool [sh||->1458] (@-24) *(4) 13 == ||[1458] _Bool [sh||->1457] (@-24) *(4) 81 == ||[1457] _Bool [sh||->1456] (@-24) *(4) 82 == ||[1456] _Bool &&[1455] 0 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1455
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; 78
 ; ==
 load32 78 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1459
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 12
 ; ==
 load32 12 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1459:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1458
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 13
 ; ==
 load32 13 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1458:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1457
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 81
 ; ==
 load32 81 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1457:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1456
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 82
 ; ==
 load32 82 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1456:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1455:
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1453
 ; {
 ; RPN'ized expression: "( 0 , GenWreg , v , 128 , 0 , 14 , 0 , 69 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  (@-32) *(4)  128  0  14  0  69  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -32 r14 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 14
 load32 14 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 69
 load32 69 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; }
Label_1453:
 ; RPN'ized expression: "gotUnary 1 = "
 ; Expanded expression: "(@-8) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "40 "
 ; Expanded expression: "40 "
 ; Expression value: 40
Label_1460:
 ; if
 ; RPN'ized expression: "gotUnary "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1461
 ; RPN'ized expression: "( GenPushReg ) "
 ; Expanded expression: " GenPushReg ()0 "
 ; (
 ; GenPushReg
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPushReg
 add r13 16 r13
Label_1461:
 ; RPN'ized expression: "gotUnary 0 = "
 ; Expanded expression: "(@-8) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -8 r14 r0
 ; if
 ; RPN'ized expression: "maxCallDepth 1 != v 16 < && "
 ; Expanded expression: "(@-12) *(4) 1 != [sh&&->1465] (@-32) *(4) 16 < &&[1465] "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 1
 ; !=
 load32 1 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1465
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 16
 ; <
 load32 16 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1465:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1463
 ; RPN'ized expression: "( 16 v - GenGrowStack ) "
 ; Expanded expression: " 16 (@-32) *(4) -  GenGrowStack ()4 "
 ; (
 ; 16
 load32 16 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -32 r14 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; GenGrowStack
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenGrowStack
 add r13 16 r13
Label_1463:
 ; RPN'ized expression: "paramOfs v 4 - = "
 ; Expanded expression: "(@-20) (@-32) *(4) 4 - =(4) "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 4
 ; -
 sub r2 4 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; if
 ; RPN'ized expression: "maxCallDepth 1 == paramOfs 0 >= && paramOfs 12 <= && "
 ; Expanded expression: "(@-12) *(4) 1 == [sh&&->1469] (@-20) *(4) 0 >= &&[1469] _Bool [sh&&->1468] (@-20) *(4) 12 <= &&[1468] "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1469
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit && target
Label_1469:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1468
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; 12
 ; <=
 load32 13 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1468:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1466
 ; {
 ; RPN'ized expression: "GenWreg 4 ( 4 , paramOfs division ) + = "
 ; Expanded expression: "GenWreg 4  4  (@-20) *(4)  division ()8 + =(4) "
 ; (
 ; 4
 load32 4 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -20 r14 r4
 ; ,
 ; division
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump division
 add r13 16 r13
 ; 4
 ; +
 add r2 4 r2
 ; GenWreg
 ; = (write dereference)
 addr2reg GenWreg r1
 write 0 r1 r2
 ; }
Label_1466:
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "44 "
 ; Expanded expression: "44 "
 ; Expression value: 44
Label_1470:
 ; if
 ; RPN'ized expression: "maxCallDepth 1 == "
 ; Expanded expression: "(@-12) *(4) 1 == "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1471
 ; {
 ; if
 ; RPN'ized expression: "paramOfs 16 == "
 ; Expanded expression: "(@-20) *(4) 16 == "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1473
 ; {
 ; RPN'ized expression: "( GenPushReg ) "
 ; Expanded expression: " GenPushReg ()0 "
 ; (
 ; GenPushReg
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPushReg
 add r13 16 r13
 ; RPN'ized expression: "gotUnary 0 = "
 ; Expanded expression: "(@-8) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -8 r14 r0
 ; RPN'ized expression: "GenWreg 7 = "
 ; Expanded expression: "GenWreg 7 =(4) "
 ; 7
 load32 7 r2
 ; GenWreg
 ; = (write dereference)
 addr2reg GenWreg r1
 write 0 r1 r2
 ; }
Label_1473:
 ; if
 ; RPN'ized expression: "paramOfs 0 >= paramOfs 12 <= && "
 ; Expanded expression: "(@-20) *(4) 0 >= [sh&&->1477] (@-20) *(4) 12 <= &&[1477] "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1477
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; 12
 ; <=
 load32 13 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1477:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1475
 ; {
 ; if
 ; RPN'ized expression: "paramOfs "
 ; Expanded expression: "(@-20) *(4) "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1478
 ; RPN'ized expression: "GenWreg --p "
 ; Expanded expression: "GenWreg --p(4) "
 ; GenWreg
 ; --p
 addr2reg GenWreg r1
 read 0 r1 r2
 sub r2 1 r2
 addr2reg GenWreg r1
 write 0 r1 r2
 add r2 1 r2
 jump Label_1479
Label_1478:
 ; else
 ; RPN'ized expression: "GenWreg 2 = "
 ; Expanded expression: "GenWreg 2 =(4) "
 ; 2
 load32 2 r2
 ; GenWreg
 ; = (write dereference)
 addr2reg GenWreg r1
 write 0 r1 r2
Label_1479:
 ; RPN'ized expression: "gotUnary 0 = "
 ; Expanded expression: "(@-8) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -8 r14 r0
 ; }
Label_1475:
 ; RPN'ized expression: "paramOfs 4 -= "
 ; Expanded expression: "(@-20) 4 -=(4) "
 ; 4
 load32 4 r2
 ; local ofs
 ; -=
 read -20 r14 r12
 sub r12 r2 r2
 write -20 r14 r2
 ; }
Label_1471:
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "41 "
 ; Expanded expression: "41 "
 ; Expression value: 41
Label_1480:
 ; RPN'ized expression: "GenLeaf 0 = "
 ; Expanded expression: "GenLeaf 0 =(4) "
 ; 0
 ; GenLeaf
 ; =
 addr2reg GenLeaf r1
 write 0 r1 r0
 ; if
 ; RPN'ized expression: "maxCallDepth 1 != "
 ; Expanded expression: "(@-12) *(4) 1 != "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 1
 ; !=
 load32 1 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_1481
 ; {
 ; if
 ; RPN'ized expression: "v 4 >= "
 ; Expanded expression: "(@-32) *(4) 4 >= "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 4
 ; >=
 load32 4 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_1483
 ; RPN'ized expression: "( 0 , 4 , 0 , 45 , 0 , 49 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  4  0  45  0  49  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 4
 sub r13 4 r13
 write 0 r13 r2
 load32 4 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 45
 load32 45 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 49
 load32 49 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
Label_1483:
 ; if
 ; RPN'ized expression: "v 8 >= "
 ; Expanded expression: "(@-32) *(4) 8 >= "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 8
 ; >=
 load32 8 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_1485
 ; RPN'ized expression: "( 0 , 5 , 4 , 45 , 0 , 49 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  5  4  45  0  49  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 5
 sub r13 4 r13
 write 0 r13 r2
 load32 5 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 4
 load32 4 r7
 ; ,
 ; 45
 load32 45 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 49
 load32 49 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
Label_1485:
 ; if
 ; RPN'ized expression: "v 12 >= "
 ; Expanded expression: "(@-32) *(4) 12 >= "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 12
 ; >=
 load32 12 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_1487
 ; RPN'ized expression: "( 0 , 6 , 8 , 45 , 0 , 49 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  6  8  45  0  49  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 6
 sub r13 4 r13
 write 0 r13 r2
 load32 6 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 8
 load32 8 r7
 ; ,
 ; 45
 load32 45 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 49
 load32 49 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
Label_1487:
 ; if
 ; RPN'ized expression: "v 16 >= "
 ; Expanded expression: "(@-32) *(4) 16 >= "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 16
 ; >=
 load32 16 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_1489
 ; RPN'ized expression: "( 0 , 7 , 12 , 45 , 0 , 49 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  7  12  45  0  49  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 7
 sub r13 4 r13
 write 0 r13 r2
 load32 7 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 12
 load32 12 r7
 ; ,
 ; 45
 load32 45 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 49
 load32 49 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
Label_1489:
 ; }
 jump Label_1482
Label_1481:
 ; else
 ; {
 ; RPN'ized expression: "( 16 GenGrowStack ) "
 ; Expanded expression: " 16  GenGrowStack ()4 "
 ; (
 ; 16
 load32 16 r4
 ; ,
 ; GenGrowStack
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenGrowStack
 add r13 16 r13
 ; }
Label_1482:
 ; if
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 16 == "
 ; Expanded expression: "stack (@-4) *(4) 1 - 8 * + 0 + *(4) 16 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1491
 ; {
 ; RPN'ized expression: "( 0 , 15 , 0 , 64 GenPrintInstr1Operand ) "
 ; Expanded expression: " 0  15  0  64  GenPrintInstr1Operand ()16 "
 ; (
 ; 0
 load32 0 r7
 ; ,
 ; 15
 load32 15 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 64
 load32 64 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
 ; RPN'ized expression: "( 0 , 15 , 3 , 128 , 0 , 15 , 0 , 69 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  15  3  128  0  15  0  69  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 15
 sub r13 4 r13
 write 0 r13 r2
 load32 15 r2
 ; ,
 ; 3
 sub r13 4 r13
 write 0 r13 r2
 load32 3 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 15
 load32 15 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 69
 load32 69 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( stack i 1 - + *u 1 + *u , 129 , 0 , 54 GenPrintInstr1Operand ) "
 ; Expanded expression: " stack (@-4) *(4) 1 - 8 * + 4 + *(4)  129  0  54  GenPrintInstr1Operand ()16 "
 ; (
 ; stack
 addr2reg stack r7
 ; local ofs
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 read -4 r14 r7
 ; 1
 ; -
 sub r7 1 r7
 ; 3
 ; <<
 shiftl r7 3 r7
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r7 r7
 ; 4
 ; +
 add r7 4 r7
 ; * (read dereference)
 read 0 r7 r7
 ; ,
 ; 129
 load32 129 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 54
 load32 54 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
 ; }
 jump Label_1492
Label_1491:
 ; else
 ; {
 ; RPN'ized expression: "( 0 , 15 , 0 , 64 GenPrintInstr1Operand ) "
 ; Expanded expression: " 0  15  0  64  GenPrintInstr1Operand ()16 "
 ; (
 ; 0
 load32 0 r7
 ; ,
 ; 15
 load32 15 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 64
 load32 64 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
 ; RPN'ized expression: "( 0 , 15 , 3 , 128 , 0 , 15 , 0 , 69 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  15  3  128  0  15  0  69  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 15
 sub r13 4 r13
 write 0 r13 r2
 load32 15 r2
 ; ,
 ; 3
 sub r13 4 r13
 write 0 r13 r2
 load32 3 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 15
 load32 15 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 69
 load32 69 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( 0 , GenWreg , 0 , 128 , 0 , 56 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  128  0  56  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 56
 load32 56 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; }
Label_1492:
 ; if
 ; RPN'ized expression: "v 16 < "
 ; Expanded expression: "(@-32) *(4) 16 < "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 16
 ; <
 load32 16 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_1493
 ; RPN'ized expression: "v 16 = "
 ; Expanded expression: "(@-32) 16 =(4) "
 ; 16
 load32 16 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
Label_1493:
 ; RPN'ized expression: "( v -u GenGrowStack ) "
 ; Expanded expression: " (@-32) *(4) -u  GenGrowStack ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r4
 ; -u
 sub r0 r4 r4
 ; ,
 ; GenGrowStack
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenGrowStack
 add r13 16 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "78 "
 ; Expanded expression: "78 "
 ; Expression value: 78
Label_1495:
 ; if
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 16 == "
 ; Expanded expression: "stack (@-4) *(4) 1 - 8 * + 0 + *(4) 16 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1496
 ; RPN'ized expression: "( stack i 1 - + *u 1 + *u , v , GenWreg GenReadIdent ) "
 ; Expanded expression: " stack (@-4) *(4) 1 - 8 * + 4 + *(4)  (@-32) *(4)  GenWreg *(4)  GenReadIdent ()12 "
 ; (
 ; stack
 addr2reg stack r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; 1
 ; -
 sub r6 1 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenReadIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenReadIdent
 add r13 16 r13
 jump Label_1497
Label_1496:
 ; else
 ; if
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 89 == "
 ; Expanded expression: "stack (@-4) *(4) 1 - 8 * + 0 + *(4) 89 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 89
 ; ==
 load32 89 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1498
 ; RPN'ized expression: "( stack i 1 - + *u 1 + *u , v , GenWreg GenReadLocal ) "
 ; Expanded expression: " stack (@-4) *(4) 1 - 8 * + 4 + *(4)  (@-32) *(4)  GenWreg *(4)  GenReadLocal ()12 "
 ; (
 ; stack
 addr2reg stack r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; 1
 ; -
 sub r6 1 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenReadLocal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenReadLocal
 add r13 16 r13
 jump Label_1499
Label_1498:
 ; else
 ; RPN'ized expression: "( v , GenWreg , GenWreg GenReadIndirect ) "
 ; Expanded expression: " (@-32) *(4)  GenWreg *(4)  GenWreg *(4)  GenReadIndirect ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r6
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenReadIndirect
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenReadIndirect
 add r13 16 r13
Label_1499:
Label_1497:
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "79 "
 ; Expanded expression: "79 "
 ; Expression value: 79
Label_1500:
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "126 "
 ; Expanded expression: "126 "
 ; Expression value: 126
Label_1501:
 ; RPN'ized expression: "( 0 , GenWreg , 0 , GenWreg , 0 , GenWreg , 0 , 66 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  GenWreg *(4)  0  GenWreg *(4)  0  66  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 66
 load32 66 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( 0 , GenWreg , 0 , GenWreg , 0 , 74 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  GenWreg *(4)  0  74  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 74
 load32 74 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "80 "
 ; Expanded expression: "80 "
 ; Expression value: 80
Label_1502:
 ; RPN'ized expression: "( 0 , GenWreg , 0 , GenWreg , 0 , 0 , 0 , 70 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  GenWreg *(4)  0  0  0  70  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 0
 load32 0 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 70
 load32 70 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "43 "
 ; Expanded expression: "43 "
 ; Expression value: 43
Label_1503:
 ; case
 ; RPN'ized expression: "45 "
 ; Expanded expression: "45 "
 ; Expression value: 45
Label_1504:
 ; case
 ; RPN'ized expression: "42 "
 ; Expanded expression: "42 "
 ; Expression value: 42
Label_1505:
 ; case
 ; RPN'ized expression: "38 "
 ; Expanded expression: "38 "
 ; Expression value: 38
Label_1506:
 ; case
 ; RPN'ized expression: "94 "
 ; Expanded expression: "94 "
 ; Expression value: 94
Label_1507:
 ; case
 ; RPN'ized expression: "124 "
 ; Expanded expression: "124 "
 ; Expression value: 124
Label_1508:
 ; case
 ; RPN'ized expression: "4 "
 ; Expanded expression: "4 "
 ; Expression value: 4
Label_1509:
 ; case
 ; RPN'ized expression: "5 "
 ; Expanded expression: "5 "
 ; Expression value: 5
Label_1510:
 ; case
 ; RPN'ized expression: "28 "
 ; Expanded expression: "28 "
 ; Expression value: 28
Label_1511:
 ; if
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 1 == tok 42 != && "
 ; Expanded expression: "stack (@-4) *(4) 1 - 8 * + 0 + *(4) 1 == [sh&&->1514] (@-28) *(4) 42 != &&[1514] "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1514
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 42
 ; !=
 load32 42 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1514:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1512
 ; {
 ; loc                 instr : (@-36) : int
 ; RPN'ized expression: "instr ( tok GenGetBinaryOperatorInstr ) = "
 ; Expanded expression: "(@-36)  (@-28) *(4)  GenGetBinaryOperatorInstr ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -28 r14 r4
 ; ,
 ; GenGetBinaryOperatorInstr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenGetBinaryOperatorInstr
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; RPN'ized expression: "( 0 , GenWreg , stack i 1 - + *u 1 + *u , 128 , 0 , GenWreg , 0 , instr GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  stack (@-4) *(4) 1 - 8 * + 4 + *(4)  128  0  GenWreg *(4)  0  (@-36) *(4)  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 ; stack
 sub r13 4 r13
 write 0 r13 r2
 addr2reg stack r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; -
 sub r2 1 r2
 ; 3
 ; <<
 shiftl r2 3 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; }
 jump Label_1513
Label_1512:
 ; else
 ; {
 ; loc                 instr : (@-36) : int
 ; RPN'ized expression: "instr ( tok GenGetBinaryOperatorInstr ) = "
 ; Expanded expression: "(@-36)  (@-28) *(4)  GenGetBinaryOperatorInstr ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -28 r14 r4
 ; ,
 ; GenGetBinaryOperatorInstr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenGetBinaryOperatorInstr
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; RPN'ized expression: "( GenPopReg ) "
 ; Expanded expression: " GenPopReg ()0 "
 ; (
 ; GenPopReg
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPopReg
 add r13 16 r13
 ; RPN'ized expression: "( 0 , GenWreg , 0 , GenRreg , 0 , GenLreg , 0 , instr GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  GenRreg *(4)  0  GenLreg *(4)  0  (@-36) *(4)  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenRreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenRreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenLreg
 ; * (read dereference)
 addr2reg GenLreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; }
Label_1513:
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "47 "
 ; Expanded expression: "47 "
 ; Expression value: 47
Label_1515:
 ; case
 ; RPN'ized expression: "29 "
 ; Expanded expression: "29 "
 ; Expression value: 29
Label_1516:
 ; case
 ; RPN'ized expression: "37 "
 ; Expanded expression: "37 "
 ; Expression value: 37
Label_1517:
 ; case
 ; RPN'ized expression: "30 "
 ; Expanded expression: "30 "
 ; Expression value: 30
Label_1518:
 ; {

.rdata
Label_1519:
.dw 68 73 86 73 83 73 79 78 47 77 79 68 32 105 115 32 110 111 116 32 115 117 112 112 111 114 116 101 100 33 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1519 printf ) "
 ; Expanded expression: " L1519  printf ()4 "
 ; (
 ; 1519
 addr2reg Label_1519 r4
 ; ,
 ; printf
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf
 add r13 16 r13
 ; }
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "12 "
 ; Expanded expression: "12 "
 ; Expression value: 12
Label_1520:
 ; case
 ; RPN'ized expression: "13 "
 ; Expanded expression: "13 "
 ; Expression value: 13
Label_1521:
 ; if
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 16 == "
 ; Expanded expression: "stack (@-4) *(4) 1 - 8 * + 0 + *(4) 16 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1522
 ; {
 ; RPN'ized expression: "( tok , stack i 1 - + *u 1 + *u , v , GenWreg GenIncDecIdent ) "
 ; Expanded expression: " (@-28) *(4)  stack (@-4) *(4) 1 - 8 * + 4 + *(4)  (@-32) *(4)  GenWreg *(4)  GenIncDecIdent ()16 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -28 r14 r7
 ; ,
 ; stack
 addr2reg stack r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; 1
 ; -
 sub r6 1 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenIncDecIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenIncDecIdent
 add r13 16 r13
 ; }
 jump Label_1523
Label_1522:
 ; else
 ; if
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 89 == "
 ; Expanded expression: "stack (@-4) *(4) 1 - 8 * + 0 + *(4) 89 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 89
 ; ==
 load32 89 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1524
 ; {
 ; RPN'ized expression: "( tok , stack i 1 - + *u 1 + *u , v , GenWreg GenIncDecLocal ) "
 ; Expanded expression: " (@-28) *(4)  stack (@-4) *(4) 1 - 8 * + 4 + *(4)  (@-32) *(4)  GenWreg *(4)  GenIncDecLocal ()16 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -28 r14 r7
 ; ,
 ; stack
 addr2reg stack r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; 1
 ; -
 sub r6 1 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenIncDecLocal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenIncDecLocal
 add r13 16 r13
 ; }
 jump Label_1525
Label_1524:
 ; else
 ; {
 ; RPN'ized expression: "( 0 , 11 , 0 , GenWreg , 0 , 0 , 0 , 66 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  11  0  GenWreg *(4)  0  0  0  66  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 11
 sub r13 4 r13
 write 0 r13 r2
 load32 11 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 0
 load32 0 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 66
 load32 66 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( tok , v , 11 , GenWreg GenIncDecIndirect ) "
 ; Expanded expression: " (@-28) *(4)  (@-32) *(4)  11  GenWreg *(4)  GenIncDecIndirect ()16 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -28 r14 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r6
 ; ,
 ; 11
 load32 11 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenIncDecIndirect
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenIncDecIndirect
 add r13 16 r13
 ; }
Label_1525:
Label_1523:
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "81 "
 ; Expanded expression: "81 "
 ; Expression value: 81
Label_1526:
 ; case
 ; RPN'ized expression: "82 "
 ; Expanded expression: "82 "
 ; Expression value: 82
Label_1527:
 ; if
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 16 == "
 ; Expanded expression: "stack (@-4) *(4) 1 - 8 * + 0 + *(4) 16 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1528
 ; {
 ; RPN'ized expression: "( tok , stack i 1 - + *u 1 + *u , v , GenWreg GenPostIncDecIdent ) "
 ; Expanded expression: " (@-28) *(4)  stack (@-4) *(4) 1 - 8 * + 4 + *(4)  (@-32) *(4)  GenWreg *(4)  GenPostIncDecIdent ()16 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -28 r14 r7
 ; ,
 ; stack
 addr2reg stack r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; 1
 ; -
 sub r6 1 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenPostIncDecIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPostIncDecIdent
 add r13 16 r13
 ; }
 jump Label_1529
Label_1528:
 ; else
 ; if
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 89 == "
 ; Expanded expression: "stack (@-4) *(4) 1 - 8 * + 0 + *(4) 89 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 89
 ; ==
 load32 89 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1530
 ; {
 ; RPN'ized expression: "( tok , stack i 1 - + *u 1 + *u , v , GenWreg GenPostIncDecLocal ) "
 ; Expanded expression: " (@-28) *(4)  stack (@-4) *(4) 1 - 8 * + 4 + *(4)  (@-32) *(4)  GenWreg *(4)  GenPostIncDecLocal ()16 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -28 r14 r7
 ; ,
 ; stack
 addr2reg stack r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; 1
 ; -
 sub r6 1 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenPostIncDecLocal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPostIncDecLocal
 add r13 16 r13
 ; }
 jump Label_1531
Label_1530:
 ; else
 ; {
 ; RPN'ized expression: "( 0 , 11 , 0 , GenWreg , 0 , 0 , 0 , 66 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  11  0  GenWreg *(4)  0  0  0  66  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 11
 sub r13 4 r13
 write 0 r13 r2
 load32 11 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 0
 load32 0 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 66
 load32 66 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( tok , v , 11 , GenWreg GenPostIncDecIndirect ) "
 ; Expanded expression: " (@-28) *(4)  (@-32) *(4)  11  GenWreg *(4)  GenPostIncDecIndirect ()16 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -28 r14 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r6
 ; ,
 ; 11
 load32 11 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenPostIncDecIndirect
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPostIncDecIndirect
 add r13 16 r13
 ; }
Label_1531:
Label_1529:
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "83 "
 ; Expanded expression: "83 "
 ; Expression value: 83
Label_1532:
 ; case
 ; RPN'ized expression: "84 "
 ; Expanded expression: "84 "
 ; Expression value: 84
Label_1533:
 ; {
 ; loc                 instr : (@-36) : int
 ; RPN'ized expression: "instr ( tok GenGetBinaryOperatorInstr ) = "
 ; Expanded expression: "(@-36)  (@-28) *(4)  GenGetBinaryOperatorInstr ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -28 r14 r4
 ; ,
 ; GenGetBinaryOperatorInstr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenGetBinaryOperatorInstr
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; RPN'ized expression: "( GenPopReg ) "
 ; Expanded expression: " GenPopReg ()0 "
 ; (
 ; GenPopReg
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPopReg
 add r13 16 r13
 ; if
 ; RPN'ized expression: "GenWreg GenLreg == "
 ; Expanded expression: "GenWreg *(4) GenLreg *(4) == "
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; GenLreg
 ; * (read dereference)
 addr2reg GenLreg r1
 read 0 r1 r8
 ; ==
 beq r2 r8 2
 jump Label_1534
 ; {
 ; RPN'ized expression: "( 0 , 12 , 0 , GenLreg , 0 , 0 , 0 , 66 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  12  0  GenLreg *(4)  0  0  0  66  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 12
 sub r13 4 r13
 write 0 r13 r2
 load32 12 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenLreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenLreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 0
 load32 0 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 66
 load32 66 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( v , 12 , GenWreg GenReadIndirect ) "
 ; Expanded expression: " (@-32) *(4)  12  GenWreg *(4)  GenReadIndirect ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r6
 ; ,
 ; 12
 load32 12 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenReadIndirect
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenReadIndirect
 add r13 16 r13
 ; RPN'ized expression: "( 0 , 11 , 0 , GenRreg , 0 , GenWreg , 0 , instr GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  11  0  GenRreg *(4)  0  GenWreg *(4)  0  (@-36) *(4)  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 11
 sub r13 4 r13
 write 0 r13 r2
 load32 11 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenRreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenRreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( v , 11 , 12 GenWriteIndirect ) "
 ; Expanded expression: " (@-32) *(4)  11  12  GenWriteIndirect ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r6
 ; ,
 ; 11
 load32 11 r5
 ; ,
 ; 12
 load32 12 r4
 ; ,
 ; GenWriteIndirect
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteIndirect
 add r13 16 r13
 ; }
 jump Label_1535
Label_1534:
 ; else
 ; {
 ; RPN'ized expression: "( 0 , 12 , 0 , GenRreg , 0 , 0 , 0 , 66 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  12  0  GenRreg *(4)  0  0  0  66  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 12
 sub r13 4 r13
 write 0 r13 r2
 load32 12 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenRreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenRreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 0
 load32 0 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 66
 load32 66 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( v , GenLreg , GenWreg GenReadIndirect ) "
 ; Expanded expression: " (@-32) *(4)  GenLreg *(4)  GenWreg *(4)  GenReadIndirect ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r6
 ; ,
 ; GenLreg
 ; * (read dereference)
 addr2reg GenLreg r1
 read 0 r1 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenReadIndirect
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenReadIndirect
 add r13 16 r13
 ; RPN'ized expression: "( 0 , 12 , 0 , 12 , 0 , GenWreg , 0 , instr GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  12  0  12  0  GenWreg *(4)  0  (@-36) *(4)  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 12
 sub r13 4 r13
 write 0 r13 r2
 load32 12 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; 12
 sub r13 4 r13
 write 0 r13 r2
 load32 12 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( v , 12 , GenLreg GenWriteIndirect ) "
 ; Expanded expression: " (@-32) *(4)  12  GenLreg *(4)  GenWriteIndirect ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r6
 ; ,
 ; 12
 load32 12 r5
 ; ,
 ; GenLreg
 ; * (read dereference)
 addr2reg GenLreg r1
 read 0 r1 r4
 ; ,
 ; GenWriteIndirect
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteIndirect
 add r13 16 r13
 ; }
Label_1535:
 ; }
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "68 "
 ; Expanded expression: "68 "
 ; Expression value: 68
Label_1536:
 ; case
 ; RPN'ized expression: "69 "
 ; Expanded expression: "69 "
 ; Expression value: 69
Label_1537:
 ; case
 ; RPN'ized expression: "65 "
 ; Expanded expression: "65 "
 ; Expression value: 65
Label_1538:
 ; case
 ; RPN'ized expression: "72 "
 ; Expanded expression: "72 "
 ; Expression value: 72
Label_1539:
 ; case
 ; RPN'ized expression: "73 "
 ; Expanded expression: "73 "
 ; Expression value: 73
Label_1540:
 ; case
 ; RPN'ized expression: "74 "
 ; Expanded expression: "74 "
 ; Expression value: 74
Label_1541:
 ; case
 ; RPN'ized expression: "70 "
 ; Expanded expression: "70 "
 ; Expression value: 70
Label_1542:
 ; case
 ; RPN'ized expression: "71 "
 ; Expanded expression: "71 "
 ; Expression value: 71
Label_1543:
 ; case
 ; RPN'ized expression: "31 "
 ; Expanded expression: "31 "
 ; Expression value: 31
Label_1544:
 ; if
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 257 == stack i 1 - + *u 0 + *u 256 == || "
 ; Expanded expression: "stack (@-4) *(4) 1 - 8 * + 0 + *(4) 257 == [sh||->1547] stack (@-4) *(4) 1 - 8 * + 0 + *(4) 256 == ||[1547] "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 257
 ; ==
 load32 257 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1547
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 256
 ; ==
 load32 256 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1547:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1545
 ; {
 ; loc                 instr : (@-36) : int
 ; RPN'ized expression: "instr ( tok GenGetBinaryOperatorInstr ) = "
 ; Expanded expression: "(@-36)  (@-28) *(4)  GenGetBinaryOperatorInstr ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -28 r14 r4
 ; ,
 ; GenGetBinaryOperatorInstr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenGetBinaryOperatorInstr
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; if
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 257 == "
 ; Expanded expression: "stack (@-4) *(4) 1 - 8 * + 0 + *(4) 257 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 257
 ; ==
 load32 257 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1548
 ; RPN'ized expression: "( stack i 1 - + *u 1 + *u , v , 12 GenReadLocal ) "
 ; Expanded expression: " stack (@-4) *(4) 1 - 8 * + 4 + *(4)  (@-32) *(4)  12  GenReadLocal ()12 "
 ; (
 ; stack
 addr2reg stack r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; 1
 ; -
 sub r6 1 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; 12
 load32 12 r4
 ; ,
 ; GenReadLocal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenReadLocal
 add r13 16 r13
 jump Label_1549
Label_1548:
 ; else
 ; RPN'ized expression: "( stack i 1 - + *u 1 + *u , v , 12 GenReadIdent ) "
 ; Expanded expression: " stack (@-4) *(4) 1 - 8 * + 4 + *(4)  (@-32) *(4)  12  GenReadIdent ()12 "
 ; (
 ; stack
 addr2reg stack r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; 1
 ; -
 sub r6 1 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; 12
 load32 12 r4
 ; ,
 ; GenReadIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenReadIdent
 add r13 16 r13
Label_1549:
 ; RPN'ized expression: "( 0 , GenWreg , 0 , GenWreg , 0 , 12 , 0 , instr GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  GenWreg *(4)  0  12  0  (@-36) *(4)  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 12
 load32 12 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; if
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 257 == "
 ; Expanded expression: "stack (@-4) *(4) 1 - 8 * + 0 + *(4) 257 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 257
 ; ==
 load32 257 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1550
 ; RPN'ized expression: "( stack i 1 - + *u 1 + *u , v , GenWreg GenWriteLocal ) "
 ; Expanded expression: " stack (@-4) *(4) 1 - 8 * + 4 + *(4)  (@-32) *(4)  GenWreg *(4)  GenWriteLocal ()12 "
 ; (
 ; stack
 addr2reg stack r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; 1
 ; -
 sub r6 1 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenWriteLocal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteLocal
 add r13 16 r13
 jump Label_1551
Label_1550:
 ; else
 ; RPN'ized expression: "( stack i 1 - + *u 1 + *u , v , GenWreg GenWriteIdent ) "
 ; Expanded expression: " stack (@-4) *(4) 1 - 8 * + 4 + *(4)  (@-32) *(4)  GenWreg *(4)  GenWriteIdent ()12 "
 ; (
 ; stack
 addr2reg stack r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; 1
 ; -
 sub r6 1 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenWriteIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteIdent
 add r13 16 r13
Label_1551:
 ; }
 jump Label_1546
Label_1545:
 ; else
 ; {
 ; loc                 instr : (@-36) : int
 ; RPN'ized expression: "instr ( tok GenGetBinaryOperatorInstr ) = "
 ; Expanded expression: "(@-36)  (@-28) *(4)  GenGetBinaryOperatorInstr ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -28 r14 r4
 ; ,
 ; GenGetBinaryOperatorInstr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenGetBinaryOperatorInstr
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; loc                 lsaved : (@-40) : int
 ; loc                 rsaved : (@-44) : int
 ; RPN'ized expression: "( GenPopReg ) "
 ; Expanded expression: " GenPopReg ()0 "
 ; (
 ; GenPopReg
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPopReg
 add r13 16 r13
 ; if
 ; RPN'ized expression: "GenWreg GenLreg == "
 ; Expanded expression: "GenWreg *(4) GenLreg *(4) == "
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; GenLreg
 ; * (read dereference)
 addr2reg GenLreg r1
 read 0 r1 r8
 ; ==
 beq r2 r8 2
 jump Label_1552
 ; {
 ; RPN'ized expression: "( 0 , 12 , 0 , GenLreg , 0 , 0 , 0 , 66 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  12  0  GenLreg *(4)  0  0  0  66  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 12
 sub r13 4 r13
 write 0 r13 r2
 load32 12 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenLreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenLreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 0
 load32 0 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 66
 load32 66 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "lsaved 12 = "
 ; Expanded expression: "(@-40) 12 =(4) "
 ; 12
 load32 12 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; RPN'ized expression: "rsaved GenRreg = "
 ; Expanded expression: "(@-44) GenRreg *(4) =(4) "
 ; GenRreg
 ; * (read dereference)
 addr2reg GenRreg r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; }
 jump Label_1553
Label_1552:
 ; else
 ; {
 ; RPN'ized expression: "( 0 , 12 , 0 , GenRreg , 0 , 0 , 0 , 66 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  12  0  GenRreg *(4)  0  0  0  66  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 12
 sub r13 4 r13
 write 0 r13 r2
 load32 12 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenRreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenRreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 0
 load32 0 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 66
 load32 66 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "rsaved 12 = "
 ; Expanded expression: "(@-44) 12 =(4) "
 ; 12
 load32 12 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; RPN'ized expression: "lsaved GenLreg = "
 ; Expanded expression: "(@-40) GenLreg *(4) =(4) "
 ; GenLreg
 ; * (read dereference)
 addr2reg GenLreg r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; }
Label_1553:
 ; RPN'ized expression: "( v , GenLreg , GenWreg GenReadIndirect ) "
 ; Expanded expression: " (@-32) *(4)  GenLreg *(4)  GenWreg *(4)  GenReadIndirect ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r6
 ; ,
 ; GenLreg
 ; * (read dereference)
 addr2reg GenLreg r1
 read 0 r1 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenReadIndirect
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenReadIndirect
 add r13 16 r13
 ; RPN'ized expression: "( 0 , GenWreg , 0 , rsaved , 0 , GenWreg , 0 , instr GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  (@-44) *(4)  0  GenWreg *(4)  0  (@-36) *(4)  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -44 r14 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( v , GenWreg , lsaved GenWriteIndirect ) "
 ; Expanded expression: " (@-32) *(4)  GenWreg *(4)  (@-40) *(4)  GenWriteIndirect ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r6
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; ,
 ; GenWriteIndirect
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteIndirect
 add r13 16 r13
 ; }
Label_1546:
 ; RPN'ized expression: "( v , GenWreg GenExtendRegIfNeeded ) "
 ; Expanded expression: " (@-32) *(4)  GenWreg *(4)  GenExtendRegIfNeeded ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenExtendRegIfNeeded
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExtendRegIfNeeded
 add r13 16 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "66 "
 ; Expanded expression: "66 "
 ; Expression value: 66
Label_1554:
 ; case
 ; RPN'ized expression: "64 "
 ; Expanded expression: "64 "
 ; Expression value: 64
Label_1555:
 ; case
 ; RPN'ized expression: "67 "
 ; Expanded expression: "67 "
 ; Expression value: 67
Label_1556:
 ; case
 ; RPN'ized expression: "75 "
 ; Expanded expression: "75 "
 ; Expression value: 75
Label_1557:
 ; if
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 257 == stack i 1 - + *u 0 + *u 256 == || "
 ; Expanded expression: "stack (@-4) *(4) 1 - 8 * + 0 + *(4) 257 == [sh||->1560] stack (@-4) *(4) 1 - 8 * + 0 + *(4) 256 == ||[1560] "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 257
 ; ==
 load32 257 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1560
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 256
 ; ==
 load32 256 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1560:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1558
 ; {
 ; if
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 257 == "
 ; Expanded expression: "stack (@-4) *(4) 1 - 8 * + 0 + *(4) 257 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 257
 ; ==
 load32 257 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1561
 ; RPN'ized expression: "( stack i 1 - + *u 1 + *u , v , 12 GenReadLocal ) "
 ; Expanded expression: " stack (@-4) *(4) 1 - 8 * + 4 + *(4)  (@-32) *(4)  12  GenReadLocal ()12 "
 ; (
 ; stack
 addr2reg stack r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; 1
 ; -
 sub r6 1 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; 12
 load32 12 r4
 ; ,
 ; GenReadLocal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenReadLocal
 add r13 16 r13
 jump Label_1562
Label_1561:
 ; else
 ; RPN'ized expression: "( stack i 1 - + *u 1 + *u , v , 12 GenReadIdent ) "
 ; Expanded expression: " stack (@-4) *(4) 1 - 8 * + 4 + *(4)  (@-32) *(4)  12  GenReadIdent ()12 "
 ; (
 ; stack
 addr2reg stack r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; 1
 ; -
 sub r6 1 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; 12
 load32 12 r4
 ; ,
 ; GenReadIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenReadIdent
 add r13 16 r13
Label_1562:
 ; if
 ; RPN'ized expression: "tok 66 == tok 67 == || "
 ; Expanded expression: "(@-28) *(4) 66 == [sh||->1565] (@-28) *(4) 67 == ||[1565] "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 66
 ; ==
 load32 66 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1565
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 67
 ; ==
 load32 67 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1565:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1563
 ; {

.rdata
Label_1566:
.dw 68 73 86 73 83 73 79 78 47 77 79 68 32 105 115 32 110 111 116 32 115 117 112 112 111 114 116 101 100 33 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1566 printf ) "
 ; Expanded expression: " L1566  printf ()4 "
 ; (
 ; 1566
 addr2reg Label_1566 r4
 ; ,
 ; printf
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf
 add r13 16 r13
 ; }
 jump Label_1564
Label_1563:
 ; else
 ; {

.rdata
Label_1567:
.dw 68 73 86 73 83 73 79 78 47 77 79 68 32 105 115 32 110 111 116 32 115 117 112 112 111 114 116 101 100 33 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1567 printf ) "
 ; Expanded expression: " L1567  printf ()4 "
 ; (
 ; 1567
 addr2reg Label_1567 r4
 ; ,
 ; printf
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf
 add r13 16 r13
 ; }
Label_1564:
 ; if
 ; RPN'ized expression: "tok 67 == tok 75 == || "
 ; Expanded expression: "(@-28) *(4) 67 == [sh||->1570] (@-28) *(4) 75 == ||[1570] "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 67
 ; ==
 load32 67 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1570
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 75
 ; ==
 load32 75 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1570:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1568
 ; {

.rdata
Label_1571:
.dw 68 73 86 73 83 73 79 78 47 77 79 68 32 105 115 32 110 111 116 32 115 117 112 112 111 114 116 101 100 33 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1571 printf ) "
 ; Expanded expression: " L1571  printf ()4 "
 ; (
 ; 1571
 addr2reg Label_1571 r4
 ; ,
 ; printf
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf
 add r13 16 r13
 ; }
 jump Label_1569
Label_1568:
 ; else
 ; {

.rdata
Label_1572:
.dw 68 73 86 73 83 73 79 78 47 77 79 68 32 105 115 32 110 111 116 32 115 117 112 112 111 114 116 101 100 33 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1572 printf ) "
 ; Expanded expression: " L1572  printf ()4 "
 ; (
 ; 1572
 addr2reg Label_1572 r4
 ; ,
 ; printf
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf
 add r13 16 r13
 ; }
Label_1569:
 ; if
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 257 == "
 ; Expanded expression: "stack (@-4) *(4) 1 - 8 * + 0 + *(4) 257 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 257
 ; ==
 load32 257 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1573
 ; RPN'ized expression: "( stack i 1 - + *u 1 + *u , v , GenWreg GenWriteLocal ) "
 ; Expanded expression: " stack (@-4) *(4) 1 - 8 * + 4 + *(4)  (@-32) *(4)  GenWreg *(4)  GenWriteLocal ()12 "
 ; (
 ; stack
 addr2reg stack r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; 1
 ; -
 sub r6 1 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenWriteLocal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteLocal
 add r13 16 r13
 jump Label_1574
Label_1573:
 ; else
 ; RPN'ized expression: "( stack i 1 - + *u 1 + *u , v , GenWreg GenWriteIdent ) "
 ; Expanded expression: " stack (@-4) *(4) 1 - 8 * + 4 + *(4)  (@-32) *(4)  GenWreg *(4)  GenWriteIdent ()12 "
 ; (
 ; stack
 addr2reg stack r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; 1
 ; -
 sub r6 1 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenWriteIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteIdent
 add r13 16 r13
Label_1574:
 ; }
 jump Label_1559
Label_1558:
 ; else
 ; {
 ; loc                 lsaved : (@-36) : int
 ; loc                 rsaved : (@-40) : int
 ; RPN'ized expression: "( GenPopReg ) "
 ; Expanded expression: " GenPopReg ()0 "
 ; (
 ; GenPopReg
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPopReg
 add r13 16 r13
 ; if
 ; RPN'ized expression: "GenWreg GenLreg == "
 ; Expanded expression: "GenWreg *(4) GenLreg *(4) == "
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; GenLreg
 ; * (read dereference)
 addr2reg GenLreg r1
 read 0 r1 r8
 ; ==
 beq r2 r8 2
 jump Label_1575
 ; {
 ; RPN'ized expression: "( 0 , 12 , 0 , GenLreg , 0 , 0 , 0 , 66 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  12  0  GenLreg *(4)  0  0  0  66  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 12
 sub r13 4 r13
 write 0 r13 r2
 load32 12 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenLreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenLreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 0
 load32 0 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 66
 load32 66 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "lsaved 12 = "
 ; Expanded expression: "(@-36) 12 =(4) "
 ; 12
 load32 12 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; RPN'ized expression: "rsaved GenRreg = "
 ; Expanded expression: "(@-40) GenRreg *(4) =(4) "
 ; GenRreg
 ; * (read dereference)
 addr2reg GenRreg r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; }
 jump Label_1576
Label_1575:
 ; else
 ; {
 ; RPN'ized expression: "( 0 , 12 , 0 , GenRreg , 0 , 0 , 0 , 66 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  12  0  GenRreg *(4)  0  0  0  66  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 12
 sub r13 4 r13
 write 0 r13 r2
 load32 12 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenRreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenRreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 0
 load32 0 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 66
 load32 66 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "rsaved 12 = "
 ; Expanded expression: "(@-40) 12 =(4) "
 ; 12
 load32 12 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; RPN'ized expression: "lsaved GenLreg = "
 ; Expanded expression: "(@-36) GenLreg *(4) =(4) "
 ; GenLreg
 ; * (read dereference)
 addr2reg GenLreg r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; }
Label_1576:
 ; RPN'ized expression: "( v , GenLreg , GenWreg GenReadIndirect ) "
 ; Expanded expression: " (@-32) *(4)  GenLreg *(4)  GenWreg *(4)  GenReadIndirect ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r6
 ; ,
 ; GenLreg
 ; * (read dereference)
 addr2reg GenLreg r1
 read 0 r1 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenReadIndirect
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenReadIndirect
 add r13 16 r13
 ; if
 ; RPN'ized expression: "tok 66 == tok 67 == || "
 ; Expanded expression: "(@-28) *(4) 66 == [sh||->1579] (@-28) *(4) 67 == ||[1579] "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 66
 ; ==
 load32 66 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1579
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 67
 ; ==
 load32 67 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1579:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1577
 ; {

.rdata
Label_1580:
.dw 68 73 86 73 83 73 79 78 47 77 79 68 32 105 115 32 110 111 116 32 115 117 112 112 111 114 116 101 100 33 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1580 printf ) "
 ; Expanded expression: " L1580  printf ()4 "
 ; (
 ; 1580
 addr2reg Label_1580 r4
 ; ,
 ; printf
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf
 add r13 16 r13
 ; }
 jump Label_1578
Label_1577:
 ; else
 ; {

.rdata
Label_1581:
.dw 68 73 86 73 83 73 79 78 47 77 79 68 32 105 115 32 110 111 116 32 115 117 112 112 111 114 116 101 100 33 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1581 printf ) "
 ; Expanded expression: " L1581  printf ()4 "
 ; (
 ; 1581
 addr2reg Label_1581 r4
 ; ,
 ; printf
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf
 add r13 16 r13
 ; }
Label_1578:
 ; if
 ; RPN'ized expression: "tok 67 == tok 75 == || "
 ; Expanded expression: "(@-28) *(4) 67 == [sh||->1584] (@-28) *(4) 75 == ||[1584] "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 67
 ; ==
 load32 67 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1584
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 75
 ; ==
 load32 75 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1584:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1582
 ; {

.rdata
Label_1585:
.dw 68 73 86 73 83 73 79 78 47 77 79 68 32 105 115 32 110 111 116 32 115 117 112 112 111 114 116 101 100 33 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1585 printf ) "
 ; Expanded expression: " L1585  printf ()4 "
 ; (
 ; 1585
 addr2reg Label_1585 r4
 ; ,
 ; printf
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf
 add r13 16 r13
 ; }
 jump Label_1583
Label_1582:
 ; else
 ; {

.rdata
Label_1586:
.dw 68 73 86 73 83 73 79 78 47 77 79 68 32 105 115 32 110 111 116 32 115 117 112 112 111 114 116 101 100 33 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1586 printf ) "
 ; Expanded expression: " L1586  printf ()4 "
 ; (
 ; 1586
 addr2reg Label_1586 r4
 ; ,
 ; printf
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf
 add r13 16 r13
 ; }
Label_1583:
 ; RPN'ized expression: "( v , GenWreg , lsaved GenWriteIndirect ) "
 ; Expanded expression: " (@-32) *(4)  GenWreg *(4)  (@-36) *(4)  GenWriteIndirect ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r6
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; GenWriteIndirect
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteIndirect
 add r13 16 r13
 ; }
Label_1559:
 ; RPN'ized expression: "( v , GenWreg GenExtendRegIfNeeded ) "
 ; Expanded expression: " (@-32) *(4)  GenWreg *(4)  GenExtendRegIfNeeded ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenExtendRegIfNeeded
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExtendRegIfNeeded
 add r13 16 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "61 "
 ; Expanded expression: "61 "
 ; Expression value: 61
Label_1587:
 ; if
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 257 == "
 ; Expanded expression: "stack (@-4) *(4) 1 - 8 * + 0 + *(4) 257 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 257
 ; ==
 load32 257 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1588
 ; {
 ; RPN'ized expression: "( stack i 1 - + *u 1 + *u , v , GenWreg GenWriteLocal ) "
 ; Expanded expression: " stack (@-4) *(4) 1 - 8 * + 4 + *(4)  (@-32) *(4)  GenWreg *(4)  GenWriteLocal ()12 "
 ; (
 ; stack
 addr2reg stack r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; 1
 ; -
 sub r6 1 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenWriteLocal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteLocal
 add r13 16 r13
 ; }
 jump Label_1589
Label_1588:
 ; else
 ; if
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 256 == "
 ; Expanded expression: "stack (@-4) *(4) 1 - 8 * + 0 + *(4) 256 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 256
 ; ==
 load32 256 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1590
 ; {
 ; RPN'ized expression: "( stack i 1 - + *u 1 + *u , v , GenWreg GenWriteIdent ) "
 ; Expanded expression: " stack (@-4) *(4) 1 - 8 * + 4 + *(4)  (@-32) *(4)  GenWreg *(4)  GenWriteIdent ()12 "
 ; (
 ; stack
 addr2reg stack r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; 1
 ; -
 sub r6 1 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenWriteIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteIdent
 add r13 16 r13
 ; }
 jump Label_1591
Label_1590:
 ; else
 ; {
 ; RPN'ized expression: "( GenPopReg ) "
 ; Expanded expression: " GenPopReg ()0 "
 ; (
 ; GenPopReg
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPopReg
 add r13 16 r13
 ; RPN'ized expression: "( v , GenRreg , GenLreg GenWriteIndirect ) "
 ; Expanded expression: " (@-32) *(4)  GenRreg *(4)  GenLreg *(4)  GenWriteIndirect ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r6
 ; ,
 ; GenRreg
 ; * (read dereference)
 addr2reg GenRreg r1
 read 0 r1 r5
 ; ,
 ; GenLreg
 ; * (read dereference)
 addr2reg GenLreg r1
 read 0 r1 r4
 ; ,
 ; GenWriteIndirect
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteIndirect
 add r13 16 r13
 ; if
 ; RPN'ized expression: "GenWreg GenRreg != "
 ; Expanded expression: "GenWreg *(4) GenRreg *(4) != "
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; GenRreg
 ; * (read dereference)
 addr2reg GenRreg r1
 read 0 r1 r8
 ; !=
 bne r2 r8 2
 jump Label_1592
 ; RPN'ized expression: "( 0 , GenWreg , 0 , GenRreg , 0 , 0 , 0 , 66 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  GenRreg *(4)  0  0  0  66  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; GenRreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenRreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 0
 load32 0 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 66
 load32 66 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
Label_1592:
 ; }
Label_1591:
Label_1589:
 ; RPN'ized expression: "( v , GenWreg GenExtendRegIfNeeded ) "
 ; Expanded expression: " (@-32) *(4)  GenWreg *(4)  GenExtendRegIfNeeded ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenExtendRegIfNeeded
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExtendRegIfNeeded
 add r13 16 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "258 "
 ; Expanded expression: "258 "
 ; Expression value: 258
Label_1594:
 ; if
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 257 == "
 ; Expanded expression: "stack (@-4) *(4) 1 - 8 * + 0 + *(4) 257 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 257
 ; ==
 load32 257 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1595
 ; {
 ; RPN'ized expression: "( stack i 1 - + *u 1 + *u , v , 0 GenWriteLocal ) "
 ; Expanded expression: " stack (@-4) *(4) 1 - 8 * + 4 + *(4)  (@-32) *(4)  0  GenWriteLocal ()12 "
 ; (
 ; stack
 addr2reg stack r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; 1
 ; -
 sub r6 1 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; 0
 load32 0 r4
 ; ,
 ; GenWriteLocal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteLocal
 add r13 16 r13
 ; }
 jump Label_1596
Label_1595:
 ; else
 ; if
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 256 == "
 ; Expanded expression: "stack (@-4) *(4) 1 - 8 * + 0 + *(4) 256 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 256
 ; ==
 load32 256 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1597
 ; {
 ; RPN'ized expression: "( stack i 1 - + *u 1 + *u , v , 0 GenWriteIdent ) "
 ; Expanded expression: " stack (@-4) *(4) 1 - 8 * + 4 + *(4)  (@-32) *(4)  0  GenWriteIdent ()12 "
 ; (
 ; stack
 addr2reg stack r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read -4 r14 r6
 ; 1
 ; -
 sub r6 1 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; 0
 load32 0 r4
 ; ,
 ; GenWriteIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteIdent
 add r13 16 r13
 ; }
 jump Label_1598
Label_1597:
 ; else
 ; {
 ; RPN'ized expression: "( v , 0 , GenWreg GenWriteIndirect ) "
 ; Expanded expression: " (@-32) *(4)  0  GenWreg *(4)  GenWriteIndirect ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r4
 ; ,
 ; GenWriteIndirect
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWriteIndirect
 add r13 16 r13
 ; }
Label_1598:
Label_1596:
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
Label_1599:
 ; RPN'ized expression: "( 0 , i &u GenCmp ) "
 ; Expanded expression: " 0  (@-4)  GenCmp ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 sub r14 4 r4
 ; ,
 ; GenCmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenCmp
 add r13 16 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
Label_1600:
 ; RPN'ized expression: "( 1 , i &u GenCmp ) "
 ; Expanded expression: " 1  (@-4)  GenCmp ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 sub r14 4 r4
 ; ,
 ; GenCmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenCmp
 add r13 16 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
Label_1601:
 ; RPN'ized expression: "( 2 , i &u GenCmp ) "
 ; Expanded expression: " 2  (@-4)  GenCmp ()8 "
 ; (
 ; 2
 load32 2 r5
 ; ,
 ; local ofs
 sub r14 4 r4
 ; ,
 ; GenCmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenCmp
 add r13 16 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
Label_1602:
 ; RPN'ized expression: "( 3 , i &u GenCmp ) "
 ; Expanded expression: " 3  (@-4)  GenCmp ()8 "
 ; (
 ; 3
 load32 3 r5
 ; ,
 ; local ofs
 sub r14 4 r4
 ; ,
 ; GenCmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenCmp
 add r13 16 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "85 "
 ; Expanded expression: "85 "
 ; Expression value: 85
Label_1603:
 ; RPN'ized expression: "( 16 , i &u GenCmp ) "
 ; Expanded expression: " 16  (@-4)  GenCmp ()8 "
 ; (
 ; 16
 load32 16 r5
 ; ,
 ; local ofs
 sub r14 4 r4
 ; ,
 ; GenCmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenCmp
 add r13 16 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "87 "
 ; Expanded expression: "87 "
 ; Expression value: 87
Label_1604:
 ; RPN'ized expression: "( 17 , i &u GenCmp ) "
 ; Expanded expression: " 17  (@-4)  GenCmp ()8 "
 ; (
 ; 17
 load32 17 r5
 ; ,
 ; local ofs
 sub r14 4 r4
 ; ,
 ; GenCmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenCmp
 add r13 16 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "86 "
 ; Expanded expression: "86 "
 ; Expression value: 86
Label_1605:
 ; RPN'ized expression: "( 18 , i &u GenCmp ) "
 ; Expanded expression: " 18  (@-4)  GenCmp ()8 "
 ; (
 ; 18
 load32 18 r5
 ; ,
 ; local ofs
 sub r14 4 r4
 ; ,
 ; GenCmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenCmp
 add r13 16 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "88 "
 ; Expanded expression: "88 "
 ; Expression value: 88
Label_1606:
 ; RPN'ized expression: "( 19 , i &u GenCmp ) "
 ; Expanded expression: " 19  (@-4)  GenCmp ()8 "
 ; (
 ; 19
 load32 19 r5
 ; ,
 ; local ofs
 sub r14 4 r4
 ; ,
 ; GenCmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenCmp
 add r13 16 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
Label_1607:
 ; RPN'ized expression: "( 4 , i &u GenCmp ) "
 ; Expanded expression: " 4  (@-4)  GenCmp ()8 "
 ; (
 ; 4
 load32 4 r5
 ; ,
 ; local ofs
 sub r14 4 r4
 ; ,
 ; GenCmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenCmp
 add r13 16 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "9 "
 ; Expanded expression: "9 "
 ; Expression value: 9
Label_1608:
 ; RPN'ized expression: "( 5 , i &u GenCmp ) "
 ; Expanded expression: " 5  (@-4)  GenCmp ()8 "
 ; (
 ; 5
 load32 5 r5
 ; ,
 ; local ofs
 sub r14 4 r4
 ; ,
 ; GenCmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenCmp
 add r13 16 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "120 "
 ; Expanded expression: "120 "
 ; Expression value: 120
Label_1609:
 ; RPN'ized expression: "( 3 , 128 , 0 , 0 , 0 , GenWreg , 0 , 62 GenPrintInstr3Operands ) "
 ; Expanded expression: " 3  128  0  0  0  GenWreg *(4)  0  62  GenPrintInstr3Operands ()32 "
 ; (
 ; 3
 load32 3 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 62
 load32 62 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( 0 , GenWreg , 0 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  0  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; RPN'ized expression: "( 2 , 128 , 0 , 55 GenPrintInstr1Operand ) "
 ; Expanded expression: " 2  128  0  55  GenPrintInstr1Operand ()16 "
 ; (
 ; 2
 load32 2 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 55
 load32 55 r4
 ; ,
 ; GenPrintInstr1Operand
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr1Operand
 add r13 16 r13
 ; RPN'ized expression: "( 0 , GenWreg , 1 , 128 , 0 , 58 GenPrintInstr2Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  1  128  0  58  GenPrintInstr2Operands ()24 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 1
 load32 1 r7
 ; ,
 ; 128
 load32 128 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 58
 load32 58 r4
 ; ,
 ; GenPrintInstr2Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr2Operands
 add r13 24 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "128 "
 ; Expanded expression: "128 "
 ; Expression value: 128
Label_1610:
 ; RPN'ized expression: "( 0 , GenWreg , 24 , 128 , 0 , GenWreg , 0 , 71 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  24  128  0  GenWreg *(4)  0  71  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 ; 24
 sub r13 4 r13
 write 0 r13 r2
 load32 24 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 71
 load32 71 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( 0 , GenWreg , 24 , 128 , 0 , GenWreg , 0 , 72 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  24  128  0  GenWreg *(4)  0  72  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 ; 24
 sub r13 4 r13
 write 0 r13 r2
 load32 24 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 72
 load32 72 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "129 "
 ; Expanded expression: "129 "
 ; Expression value: 129
Label_1611:
 ; RPN'ized expression: "( 0 , GenWreg , 255 , 128 , 0 , GenWreg , 0 , 67 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  255  128  0  GenWreg *(4)  0  67  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 ; 255
 sub r13 4 r13
 write 0 r13 r2
 load32 255 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 67
 load32 67 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "100 "
 ; Expanded expression: "100 "
 ; Expression value: 100
Label_1612:
 ; RPN'ized expression: "( 0 , GenWreg , 16 , 128 , 0 , GenWreg , 0 , 71 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  16  128  0  GenWreg *(4)  0  71  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 ; 16
 sub r13 4 r13
 write 0 r13 r2
 load32 16 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 71
 load32 71 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( 0 , GenWreg , 16 , 128 , 0 , GenWreg , 0 , 72 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  16  128  0  GenWreg *(4)  0  72  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 ; 16
 sub r13 4 r13
 write 0 r13 r2
 load32 16 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 72
 load32 72 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "130 "
 ; Expanded expression: "130 "
 ; Expression value: 130
Label_1613:
 ; RPN'ized expression: "( 0 , GenWreg , 16 , 128 , 0 , GenWreg , 0 , 71 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  16  128  0  GenWreg *(4)  0  71  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 ; 16
 sub r13 4 r13
 write 0 r13 r2
 load32 16 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 71
 load32 71 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; RPN'ized expression: "( 0 , GenWreg , 16 , 128 , 0 , GenWreg , 0 , 72 GenPrintInstr3Operands ) "
 ; Expanded expression: " 0  GenWreg *(4)  16  128  0  GenWreg *(4)  0  72  GenPrintInstr3Operands ()32 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; GenWreg
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; ,
 ; 16
 sub r13 4 r13
 write 0 r13 r2
 load32 16 r2
 ; ,
 ; 128
 sub r13 4 r13
 write 0 r13 r2
 load32 128 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 0
 load32 0 r7
 ; ,
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 72
 load32 72 r4
 ; ,
 ; GenPrintInstr3Operands
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintInstr3Operands
 add r13 32 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "90 "
 ; Expanded expression: "90 "
 ; Expression value: 90
Label_1614:
 ; if
 ; RPN'ized expression: "v 0 >= "
 ; Expanded expression: "(@-32) *(4) 0 >= "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 0
 ; >=
 bges r2 r0 2
 jump Label_1615

.rdata
Label_1617:
.dw 38 38 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1617 printf2 ) "
 ; Expanded expression: " L1617  printf2 ()4 "
 ; (
 ; 1617
 addr2reg Label_1617 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 jump Label_1616
Label_1615:
 ; else

.rdata
Label_1618:
.dw 124 124 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1618 printf2 ) "
 ; Expanded expression: " L1618  printf2 ()4 "
 ; (
 ; 1618
 addr2reg Label_1618 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_1616:
 ; if
 ; RPN'ized expression: "v 0 >= "
 ; Expanded expression: "(@-32) *(4) 0 >= "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 0
 ; >=
 bges r2 r0 2
 jump Label_1619
 ; RPN'ized expression: "( v GenJumpIfZero ) "
 ; Expanded expression: " (@-32) *(4)  GenJumpIfZero ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r4
 ; ,
 ; GenJumpIfZero
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpIfZero
 add r13 16 r13
 jump Label_1620
Label_1619:
 ; else
 ; RPN'ized expression: "( v -u GenJumpIfNotZero ) "
 ; Expanded expression: " (@-32) *(4) -u  GenJumpIfNotZero ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r4
 ; -u
 sub r0 r4 r4
 ; ,
 ; GenJumpIfNotZero
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpIfNotZero
 add r13 16 r13
Label_1620:
 ; RPN'ized expression: "gotUnary 0 = "
 ; Expanded expression: "(@-8) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -8 r14 r0
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "21 "
 ; Expanded expression: "21 "
 ; Expression value: 21
Label_1621:

.rdata
Label_1622:
.dw 103 111 116 111 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1622 printf2 ) "
 ; Expanded expression: " L1622  printf2 ()4 "
 ; (
 ; 1622
 addr2reg Label_1622 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "( v GenJumpUncond ) "
 ; Expanded expression: " (@-32) *(4)  GenJumpUncond ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r4
 ; ,
 ; GenJumpUncond
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpUncond
 add r13 16 r13
 ; RPN'ized expression: "gotUnary 0 = "
 ; Expanded expression: "(@-8) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -8 r14 r0
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "6 "
 ; Expanded expression: "6 "
 ; Expression value: 6
Label_1623:
 ; case
 ; RPN'ized expression: "7 "
 ; Expanded expression: "7 "
 ; Expression value: 7
Label_1624:
 ; RPN'ized expression: "( v GenNumLabel ) "
 ; Expanded expression: " (@-32) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "17 "
 ; Expanded expression: "17 "
 ; Expression value: 17
Label_1625:
 ; RPN'ized expression: "gotUnary 0 = "
 ; Expanded expression: "(@-8) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -8 r14 r0
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "256 "
 ; Expanded expression: "256 "
 ; Expression value: 256
Label_1626:
 ; case
 ; RPN'ized expression: "257 "
 ; Expanded expression: "257 "
 ; Expression value: 257
Label_1627:
 ; case
 ; RPN'ized expression: "48 "
 ; Expanded expression: "48 "
 ; Expression value: 48
Label_1628:
 ; case
 ; RPN'ized expression: "20 "
 ; Expanded expression: "20 "
 ; Expression value: 20
Label_1629:
 ; case
 ; RPN'ized expression: "259 "
 ; Expanded expression: "259 "
 ; Expression value: 259
Label_1630:
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "22 "
 ; Expanded expression: "22 "
 ; Expression value: 22
Label_1631:
 ; RPN'ized expression: "( stack i + *u 1 + *u GenJumpIfNotZero ) "
 ; Expanded expression: " stack (@-4) *(4) 8 * + 4 + *(4)  GenJumpIfNotZero ()4 "
 ; (
 ; stack
 addr2reg stack r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; 4
 ; +
 add r4 4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; GenJumpIfNotZero
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpIfNotZero
 add r13 16 r13
 ; break
 jump Label_1423
 ; case
 ; RPN'ized expression: "76 "
 ; Expanded expression: "76 "
 ; Expression value: 76
Label_1632:
 ; RPN'ized expression: "( stack i + *u 1 + *u GenJumpIfZero ) "
 ; Expanded expression: " stack (@-4) *(4) 8 * + 4 + *(4)  GenJumpIfZero ()4 "
 ; (
 ; stack
 addr2reg stack r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; 4
 ; +
 add r4 4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; GenJumpIfZero
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpIfZero
 add r13 16 r13
 ; break
 jump Label_1423
 ; default
Label_1633:
 ; RPN'ized expression: "( 103 errorInternal ) "
 ; Expanded expression: " 103  errorInternal ()4 "
 ; (
 ; 103
 load32 103 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
 ; break
 jump Label_1423
 ; }
 jump Label_1423
Label_1424:
 load32 1 r12
 bne r2 r12 2
 jump Label_1425
 load32 16 r12
 bne r2 r12 2
 jump Label_1439
 load32 89 r12
 bne r2 r12 2
 jump Label_1450
 load32 40 r12
 bne r2 r12 2
 jump Label_1460
 load32 44 r12
 bne r2 r12 2
 jump Label_1470
 load32 41 r12
 bne r2 r12 2
 jump Label_1480
 load32 78 r12
 bne r2 r12 2
 jump Label_1495
 load32 79 r12
 bne r2 r12 2
 jump Label_1500
 load32 126 r12
 bne r2 r12 2
 jump Label_1501
 load32 80 r12
 bne r2 r12 2
 jump Label_1502
 load32 43 r12
 bne r2 r12 2
 jump Label_1503
 load32 45 r12
 bne r2 r12 2
 jump Label_1504
 load32 42 r12
 bne r2 r12 2
 jump Label_1505
 load32 38 r12
 bne r2 r12 2
 jump Label_1506
 load32 94 r12
 bne r2 r12 2
 jump Label_1507
 load32 124 r12
 bne r2 r12 2
 jump Label_1508
 load32 4 r12
 bne r2 r12 2
 jump Label_1509
 load32 5 r12
 bne r2 r12 2
 jump Label_1510
 load32 28 r12
 bne r2 r12 2
 jump Label_1511
 load32 47 r12
 bne r2 r12 2
 jump Label_1515
 load32 29 r12
 bne r2 r12 2
 jump Label_1516
 load32 37 r12
 bne r2 r12 2
 jump Label_1517
 load32 30 r12
 bne r2 r12 2
 jump Label_1518
 load32 12 r12
 bne r2 r12 2
 jump Label_1520
 load32 13 r12
 bne r2 r12 2
 jump Label_1521
 load32 81 r12
 bne r2 r12 2
 jump Label_1526
 load32 82 r12
 bne r2 r12 2
 jump Label_1527
 load32 83 r12
 bne r2 r12 2
 jump Label_1532
 load32 84 r12
 bne r2 r12 2
 jump Label_1533
 load32 68 r12
 bne r2 r12 2
 jump Label_1536
 load32 69 r12
 bne r2 r12 2
 jump Label_1537
 load32 65 r12
 bne r2 r12 2
 jump Label_1538
 load32 72 r12
 bne r2 r12 2
 jump Label_1539
 load32 73 r12
 bne r2 r12 2
 jump Label_1540
 load32 74 r12
 bne r2 r12 2
 jump Label_1541
 load32 70 r12
 bne r2 r12 2
 jump Label_1542
 load32 71 r12
 bne r2 r12 2
 jump Label_1543
 load32 31 r12
 bne r2 r12 2
 jump Label_1544
 load32 66 r12
 bne r2 r12 2
 jump Label_1554
 load32 64 r12
 bne r2 r12 2
 jump Label_1555
 load32 67 r12
 bne r2 r12 2
 jump Label_1556
 load32 75 r12
 bne r2 r12 2
 jump Label_1557
 load32 61 r12
 bne r2 r12 2
 jump Label_1587
 load32 258 r12
 bne r2 r12 2
 jump Label_1594
 load32 60 r12
 bne r2 r12 2
 jump Label_1599
 load32 10 r12
 bne r2 r12 2
 jump Label_1600
 load32 62 r12
 bne r2 r12 2
 jump Label_1601
 load32 11 r12
 bne r2 r12 2
 jump Label_1602
 load32 85 r12
 bne r2 r12 2
 jump Label_1603
 load32 87 r12
 bne r2 r12 2
 jump Label_1604
 load32 86 r12
 bne r2 r12 2
 jump Label_1605
 load32 88 r12
 bne r2 r12 2
 jump Label_1606
 load32 8 r12
 bne r2 r12 2
 jump Label_1607
 load32 9 r12
 bne r2 r12 2
 jump Label_1608
 load32 120 r12
 bne r2 r12 2
 jump Label_1609
 load32 128 r12
 bne r2 r12 2
 jump Label_1610
 load32 129 r12
 bne r2 r12 2
 jump Label_1611
 load32 100 r12
 bne r2 r12 2
 jump Label_1612
 load32 130 r12
 bne r2 r12 2
 jump Label_1613
 load32 90 r12
 bne r2 r12 2
 jump Label_1614
 load32 21 r12
 bne r2 r12 2
 jump Label_1621
 load32 6 r12
 bne r2 r12 2
 jump Label_1623
 load32 7 r12
 bne r2 r12 2
 jump Label_1624
 load32 17 r12
 bne r2 r12 2
 jump Label_1625
 load32 256 r12
 bne r2 r12 2
 jump Label_1626
 load32 257 r12
 bne r2 r12 2
 jump Label_1627
 load32 48 r12
 bne r2 r12 2
 jump Label_1628
 load32 20 r12
 bne r2 r12 2
 jump Label_1629
 load32 259 r12
 bne r2 r12 2
 jump Label_1630
 load32 22 r12
 bne r2 r12 2
 jump Label_1631
 load32 76 r12
 bne r2 r12 2
 jump Label_1632
 jump Label_1633
Label_1423:
 ; }
Label_1387:
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_1386
Label_1389:
 ; if
 ; RPN'ized expression: "GenWreg 2 != "
 ; Expanded expression: "GenWreg *(4) 2 != "
 ; GenWreg
 ; * (read dereference)
 addr2reg GenWreg r1
 read 0 r1 r2
 ; 2
 ; !=
 load32 2 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_1634
 ; RPN'ized expression: "( 104 errorInternal ) "
 ; Expanded expression: " 104  errorInternal ()4 "
 ; (
 ; 104
 load32 104 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
Label_1634:
Label_1369:
 read 4 r14 r15
 read 0 r14 r14
 add r13 52 r13
 jumpr 0 r15

 ; glb GenDumpChar : (
 ; prm     ch : int
 ;     ) void
.code
; .globl GenDumpChar
GenDumpChar:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     ch : (@8) : int
 ; if
 ; RPN'ized expression: "ch 0 < "
 ; Expanded expression: "(@8) *(4) 0 < "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; <
 bgts r0 r2 2
 jump Label_1637
 ; {
 ; if
 ; RPN'ized expression: "TokenStringLen "
 ; Expanded expression: "TokenStringLen *(4) "
 ; TokenStringLen
 ; * (read dereference)
 addr2reg TokenStringLen r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1639

.rdata
Label_1641:
.dw 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1641 printf2 ) "
 ; Expanded expression: " L1641  printf2 ()4 "
 ; (
 ; 1641
 addr2reg Label_1641 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_1639:
 ; return
 jump Label_1636
 ; }
Label_1637:
 ; if
 ; RPN'ized expression: "TokenStringLen 0 == "
 ; Expanded expression: "TokenStringLen *(4) 0 == "
 ; TokenStringLen
 ; * (read dereference)
 addr2reg TokenStringLen r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1642
 ; {
 ; RPN'ized expression: "( GenStartAsciiString ) "
 ; Expanded expression: " GenStartAsciiString ()0 "
 ; (
 ; GenStartAsciiString
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartAsciiString
 add r13 16 r13
 ; }
Label_1642:

.rdata
Label_1644:
.dw 37 100 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ch , L1644 printf2 ) "
 ; Expanded expression: " (@8) *(4)  L1644  printf2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 1644
 addr2reg Label_1644 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_1636:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenExpr : (void) void
.code
; .globl GenExpr
GenExpr:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; RPN'ized expression: "( GenExpr0 ) "
 ; Expanded expression: " GenExpr0 ()0 "
 ; (
 ; GenExpr0
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExpr0
 add r13 16 r13
Label_1645:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GenFin : (void) void
.code
; .globl GenFin
GenFin:
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; if
 ; RPN'ized expression: "StructCpyLabel "
 ; Expanded expression: "StructCpyLabel *(4) "
 ; StructCpyLabel
 ; * (read dereference)
 addr2reg StructCpyLabel r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1647
 ; {
 ; loc         lbl : (@-4) : int
 ; RPN'ized expression: "lbl LabelCnt ++p = "
 ; Expanded expression: "(@-4) LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "( CodeHeaderFooter 0 + *u puts2 ) "
 ; Expanded expression: " CodeHeaderFooter 0 + *(4)  puts2 ()4 "
 ; (
 ; CodeHeaderFooter
 addr2reg CodeHeaderFooter r4
 ; 0
 ; +
 add r4 0 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
 ; RPN'ized expression: "( StructCpyLabel GenNumLabel ) "
 ; Expanded expression: " StructCpyLabel *(4)  GenNumLabel ()4 "
 ; (
 ; StructCpyLabel
 ; * (read dereference)
 addr2reg StructCpyLabel r1
 read 0 r1 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13

.rdata
Label_1649:
.dw 32 111 114 32 114 48 32 114 54 32 114 50 10 
.dw 32 111 114 32 114 48 32 114 54 32 114 51 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1649 puts2 ) "
 ; Expanded expression: " L1649  puts2 ()4 "
 ; (
 ; 1649
 addr2reg Label_1649 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
 ; RPN'ized expression: "( lbl GenNumLabel ) "
 ; Expanded expression: " (@-4) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13

.rdata
Label_1650:
.dw 32 114 101 97 100 32 48 32 114 53 32 114 54 10 
.dw 32 97 100 100 32 114 53 32 49 32 114 53 10 
.dw 32 115 117 98 32 114 52 32 49 32 114 52 10 
.dw 32 119 114 105 116 101 32 48 32 114 51 32 114 54 10 
.dw 32 97 100 100 32 114 51 32 49 32 114 51 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1650 puts2 ) "
 ; Expanded expression: " L1650  puts2 ()4 "
 ; (
 ; 1650
 addr2reg Label_1650 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13

.rdata
Label_1651:
.dw 98 101 113 32 114 52 32 114 48 32 50 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1651 printf2 ) "
 ; Expanded expression: " L1651  printf2 ()4 "
 ; (
 ; 1651
 addr2reg Label_1651 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13

.rdata
Label_1652:
.dw 106 117 109 112 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1652 printf2 ) "
 ; Expanded expression: " L1652  printf2 ()4 "
 ; (
 ; 1652
 addr2reg Label_1652 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "( lbl GenPrintNumLabel ) "
 ; Expanded expression: " (@-4) *(4)  GenPrintNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenPrintNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintNumLabel
 add r13 16 r13

.rdata
Label_1653:
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1653 puts2 ) "
 ; Expanded expression: " L1653  puts2 ()4 "
 ; (
 ; 1653
 addr2reg Label_1653 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13

.rdata
Label_1654:
.dw 32 106 117 109 112 114 32 48 32 114 49 53 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1654 puts2 ) "
 ; Expanded expression: " L1654  puts2 ()4 "
 ; (
 ; 1654
 addr2reg Label_1654 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
 ; RPN'ized expression: "( CodeHeaderFooter 1 + *u puts2 ) "
 ; Expanded expression: " CodeHeaderFooter 4 + *(4)  puts2 ()4 "
 ; (
 ; CodeHeaderFooter
 addr2reg CodeHeaderFooter r4
 ; 4
 ; +
 add r4 4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
 ; }
Label_1647:
 ; if
 ; RPN'ized expression: "compileUserBDOS "
 ; Expanded expression: "compileUserBDOS *(4) "
 ; compileUserBDOS
 ; * (read dereference)
 addr2reg compileUserBDOS r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1655
 ; {

.rdata
Label_1657:
.dw 46 99 111 100 101 10 
.dw 59 32 69 78 68 32 79 70 32 67 79 77 80 73 76 69 68 32 67 32 67 79 68 69 10 
.dw 10 
.dw 59 32 73 110 116 101 114 114 117 112 116 32 104 97 110 100 108 101 114 115 32 102 111 114 32 66 68 79 83 32 117 115 101 114 32 112 114 111 103 114 97 109 10 
.dw 59 32 72 97 115 32 115 111 109 101 32 97 100 109 105 110 105 115 116 114 97 116 105 111 110 32 98 101 102 111 114 101 32 106 117 109 112 105 110 103 32 116 111 32 76 97 98 101 108 95 105 110 116 91 73 68 93 10 
.dw 59 32 84 111 32 112 114 101 118 101 110 116 32 105 110 116 101 114 102 101 114 105 110 103 32 119 105 116 104 32 111 116 104 101 114 32 115 116 97 99 107 115 44 32 116 104 101 121 32 104 97 118 101 32 116 104 101 105 114 32 111 119 110 32 115 116 97 99 107 10 
.dw 59 32 66 101 99 97 117 115 101 32 116 104 105 115 32 105 115 32 97 32 66 68 79 83 32 117 115 101 114 32 112 114 111 103 114 97 109 44 32 116 104 101 32 105 110 116 101 114 114 117 112 116 115 32 97 114 101 32 99 97 108 108 101 100 32 102 114 111 109 32 116 104 101 32 66 68 79 83 32 105 110 116 101 114 114 117 112 116 32 104 97 110 100 108 101 114 115 10 
.dw 59 32 84 104 101 114 101 102 111 114 101 44 32 105 116 32 115 104 111 117 108 100 32 114 101 116 117 114 110 32 116 111 32 116 104 97 116 32 105 110 116 101 114 114 117 112 116 32 104 97 110 100 108 101 114 32 97 110 100 32 110 111 116 32 117 115 101 32 114 101 116 105 10 
.dw 10 
.dw 73 110 116 49 58 10 
.dw 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 120 55 66 70 70 70 70 32 114 49 51 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 117 115 101 114 32 105 110 116 32 115 116 97 99 107 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 32 114 49 52 32 32 32 32 32 32 32 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 98 97 115 101 32 112 111 105 110 116 101 114 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 97 100 100 114 50 114 101 103 32 82 101 116 117 114 110 95 73 110 116 101 114 114 117 112 116 32 114 49 32 59 32 103 101 116 32 97 100 100 114 101 115 115 32 111 102 32 114 101 116 117 114 110 32 102 117 110 99 116 105 111 110 10 
.dw 32 32 32 32 111 114 32 114 48 32 114 49 32 114 49 53 32 32 32 32 32 32 32 32 32 32 32 32 59 32 99 111 112 121 32 114 101 116 117 114 110 32 97 100 100 114 32 116 111 32 114 49 53 10 
.dw 32 32 32 32 106 117 109 112 32 105 110 116 49 32 32 32 32 32 32 32 32 32 59 32 106 117 109 112 32 116 111 32 105 110 116 101 114 114 117 112 116 32 104 97 110 100 108 101 114 32 111 102 32 67 32 112 114 111 103 114 97 109 10 
.dw 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 114 101 116 117 114 110 32 116 111 32 116 104 101 32 97 100 100 114 101 115 115 32 119 101 32 106 117 115 116 32 112 117 116 32 111 110 32 116 104 101 32 115 116 97 99 107 10 
.dw 32 32 32 32 104 97 108 116 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 110 111 116 32 103 101 116 32 104 101 114 101 10 
.dw 10 
.dw 10 
.dw 73 110 116 50 58 10 
.dw 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 120 55 66 70 70 70 70 32 114 49 51 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 117 115 101 114 32 105 110 116 32 115 116 97 99 107 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 32 114 49 52 32 32 32 32 32 32 32 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 98 97 115 101 32 112 111 105 110 116 101 114 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 97 100 100 114 50 114 101 103 32 82 101 116 117 114 110 95 73 110 116 101 114 114 117 112 116 32 114 49 32 59 32 103 101 116 32 97 100 100 114 101 115 115 32 111 102 32 114 101 116 117 114 110 32 102 117 110 99 116 105 111 110 10 
.dw 32 32 32 32 111 114 32 114 48 32 114 49 32 114 49 53 32 32 32 32 32 32 32 32 32 32 32 32 59 32 99 111 112 121 32 114 101 116 117 114 110 32 97 100 100 114 32 116 111 32 114 49 53 10 
.dw 32 32 32 32 106 117 109 112 32 105 110 116 50 32 32 32 32 32 32 32 32 32 59 32 106 117 109 112 32 116 111 32 105 110 116 101 114 114 117 112 116 32 104 97 110 100 108 101 114 32 111 102 32 67 32 112 114 111 103 114 97 109 10 
.dw 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 114 101 116 117 114 110 32 116 111 32 116 104 101 32 97 100 100 114 101 115 115 32 119 101 32 106 117 115 116 32 112 117 116 32 111 110 32 116 104 101 32 115 116 97 99 107 10 
.dw 32 32 32 32 104 97 108 116 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 110 111 116 32 103 101 116 32 104 101 114 101 10 
.dw 10 
.dw 10 
.dw 73 110 116 51 58 10 
.dw 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 120 55 66 70 70 70 70 32 114 49 51 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 117 115 101 114 32 105 110 116 32 115 116 97 99 107 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 32 114 49 52 32 32 32 32 32 32 32 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 98 97 115 101 32 112 111 105 110 116 101 114 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 97 100 100 114 50 114 101 103 32 82 101 116 117 114 110 95 73 110 116 101 114 114 117 112 116 32 114 49 32 59 32 103 101 116 32 97 100 100 114 101 115 115 32 111 102 32 114 101 116 117 114 110 32 102 117 110 99 116 105 111 110 10 
.dw 32 32 32 32 111 114 32 114 48 32 114 49 32 114 49 53 32 32 32 32 32 32 32 32 32 32 32 32 59 32 99 111 112 121 32 114 101 116 117 114 110 32 97 100 100 114 32 116 111 32 114 49 53 10 
.dw 32 32 32 32 106 117 109 112 32 105 110 116 51 32 32 32 32 32 32 32 32 32 59 32 106 117 109 112 32 116 111 32 105 110 116 101 114 114 117 112 116 32 104 97 110 100 108 101 114 32 111 102 32 67 32 112 114 111 103 114 97 109 10 
.dw 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 114 101 116 117 114 110 32 116 111 32 116 104 101 32 97 100 100 114 101 115 115 32 119 101 32 106 117 115 116 32 112 117 116 32 111 110 32 116 104 101 32 115 116 97 99 107 10 
.dw 32 32 32 32 104 97 108 116 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 110 111 116 32 103 101 116 32 104 101 114 101 10 
.dw 10 
.dw 10 
.dw 73 110 116 52 58 10 
.dw 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 120 55 66 70 70 70 70 32 114 49 51 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 117 115 101 114 32 105 110 116 32 115 116 97 99 107 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 32 114 49 52 32 32 32 32 32 32 32 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 98 97 115 101 32 112 111 105 110 116 101 114 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 97 100 100 114 50 114 101 103 32 82 101 116 117 114 110 95 73 110 116 101 114 114 117 112 116 32 114 49 32 59 32 103 101 116 32 97 100 100 114 101 115 115 32 111 102 32 114 101 116 117 114 110 32 102 117 110 99 116 105 111 110 10 
.dw 32 32 32 32 111 114 32 114 48 32 114 49 32 114 49 53 32 32 32 32 32 32 32 32 32 32 32 32 59 32 99 111 112 121 32 114 101 116 117 114 110 32 97 100 100 114 32 116 111 32 114 49 53 10 
.dw 32 32 32 32 106 117 109 112 32 105 110 116 52 32 32 32 32 32 32 32 32 32 59 32 106 117 109 112 32 116 111 32 105 110 116 101 114 114 117 112 116 32 104 97 110 100 108 101 114 32 111 102 32 67 32 112 114 111 103 114 97 109 10 
.dw 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 114 101 116 117 114 110 32 116 111 32 116 104 101 32 97 100 100 114 101 115 115 32 119 101 32 106 117 115 116 32 112 117 116 32 111 110 32 116 104 101 32 115 116 97 99 107 10 
.dw 32 32 32 32 104 97 108 116 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 110 111 116 32 103 101 116 32 104 101 114 101 10 
.dw 10 
.dw 10 
.dw 59 32 70 117 110 99 116 105 111 110 32 116 104 97 116 32 105 115 32 99 97 108 108 101 100 32 97 102 116 101 114 32 97 110 121 32 105 110 116 101 114 114 117 112 116 32 104 97 110 100 108 101 114 32 102 114 111 109 32 67 32 104 97 115 32 114 101 116 117 114 110 101 100 10 
.dw 59 32 82 114 101 116 117 114 110 115 32 116 111 32 66 68 79 83 32 105 110 116 101 114 114 117 112 116 32 104 97 110 100 108 101 114 10 
.dw 82 101 116 117 114 110 95 73 110 116 101 114 114 117 112 116 58 10 
.dw 10 
.dw 32 32 32 32 59 32 82 69 84 85 82 78 10 
.dw 32 32 32 32 112 111 112 32 114 49 10 
.dw 32 32 32 32 106 117 109 112 114 32 51 32 114 49 10 
.dw 10 
.dw 32 32 32 32 104 97 108 116 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 110 111 116 32 103 101 116 32 104 101 114 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1657 printf2 ) "
 ; Expanded expression: " L1657  printf2 ()4 "
 ; (
 ; 1657
 addr2reg Label_1657 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; }
 jump Label_1656
Label_1655:
 ; else
 ; {

.rdata
Label_1658:
.dw 46 99 111 100 101 10 
.dw 59 32 69 78 68 32 79 70 32 67 79 77 80 73 76 69 68 32 67 32 67 79 68 69 10 
.dw 10 
.dw 59 32 73 110 116 101 114 114 117 112 116 32 104 97 110 100 108 101 114 115 10 
.dw 59 32 72 97 115 32 115 111 109 101 32 97 100 109 105 110 105 115 116 114 97 116 105 111 110 32 98 101 102 111 114 101 32 106 117 109 112 105 110 103 32 116 111 32 76 97 98 101 108 95 105 110 116 91 73 68 93 10 
.dw 59 32 84 111 32 112 114 101 118 101 110 116 32 105 110 116 101 114 102 101 114 105 110 103 32 119 105 116 104 32 111 116 104 101 114 32 115 116 97 99 107 115 44 32 116 104 101 121 32 104 97 118 101 32 116 104 101 105 114 32 111 119 110 32 115 116 97 99 107 10 
.dw 59 32 65 108 115 111 44 32 97 108 108 32 114 101 103 105 115 116 101 114 115 32 104 97 118 101 32 116 111 32 98 101 32 98 97 99 107 101 100 32 117 112 32 97 110 100 32 114 101 115 116 111 114 101 100 32 116 111 32 104 97 114 100 119 97 114 101 32 115 116 97 99 107 10 
.dw 59 32 65 32 114 101 116 117 114 110 32 102 117 110 99 116 105 111 110 32 104 97 115 32 116 111 32 98 101 32 112 117 116 32 111 110 32 116 104 101 32 115 116 97 99 107 32 97 115 32 119 101 108 32 116 104 97 116 32 116 104 101 32 67 32 99 111 100 101 32 105 110 116 101 114 114 117 112 116 32 104 97 110 100 108 101 114 10 
.dw 59 32 119 105 108 108 32 106 117 109 112 32 116 111 32 119 104 101 110 32 105 116 32 105 115 32 100 111 110 101 10 
.dw 10 
.dw 10 
.dw 46 99 111 100 101 10 
.dw 73 110 116 49 58 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 10 
.dw 32 32 32 32 112 117 115 104 32 114 50 10 
.dw 32 32 32 32 112 117 115 104 32 114 51 10 
.dw 32 32 32 32 112 117 115 104 32 114 52 10 
.dw 32 32 32 32 112 117 115 104 32 114 53 10 
.dw 32 32 32 32 112 117 115 104 32 114 54 10 
.dw 32 32 32 32 112 117 115 104 32 114 55 10 
.dw 32 32 32 32 112 117 115 104 32 114 56 10 
.dw 32 32 32 32 112 117 115 104 32 114 57 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 48 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 49 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 50 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 51 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 52 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 53 10 
.dw 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 120 55 70 70 70 70 70 32 114 49 51 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 40 66 68 79 83 41 32 105 110 116 32 115 116 97 99 107 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 32 114 49 52 32 32 32 32 32 32 32 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 98 97 115 101 32 112 111 105 110 116 101 114 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 97 100 100 114 50 114 101 103 32 82 101 116 117 114 110 95 73 110 116 101 114 114 117 112 116 32 114 49 32 59 32 103 101 116 32 97 100 100 114 101 115 115 32 111 102 32 114 101 116 117 114 110 32 102 117 110 99 116 105 111 110 10 
.dw 32 32 32 32 111 114 32 114 48 32 114 49 32 114 49 53 32 32 32 32 32 32 32 32 32 32 32 32 59 32 99 111 112 121 32 114 101 116 117 114 110 32 97 100 100 114 32 116 111 32 114 49 53 10 
.dw 32 32 32 32 106 117 109 112 32 105 110 116 49 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 106 117 109 112 32 116 111 32 105 110 116 101 114 114 117 112 116 32 104 97 110 100 108 101 114 32 111 102 32 67 32 112 114 111 103 114 97 109 10 
.dw 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 114 101 116 117 114 110 32 116 111 32 116 104 101 32 97 100 100 114 101 115 115 32 119 101 32 106 117 115 116 32 112 117 116 32 111 110 32 116 104 101 32 115 116 97 99 107 10 
.dw 32 32 32 32 104 97 108 116 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 110 111 116 32 103 101 116 32 104 101 114 101 10 
.dw 10 
.dw 10 
.dw 73 110 116 50 58 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 10 
.dw 32 32 32 32 112 117 115 104 32 114 50 10 
.dw 32 32 32 32 112 117 115 104 32 114 51 10 
.dw 32 32 32 32 112 117 115 104 32 114 52 10 
.dw 32 32 32 32 112 117 115 104 32 114 53 10 
.dw 32 32 32 32 112 117 115 104 32 114 54 10 
.dw 32 32 32 32 112 117 115 104 32 114 55 10 
.dw 32 32 32 32 112 117 115 104 32 114 56 10 
.dw 32 32 32 32 112 117 115 104 32 114 57 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 48 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 49 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 50 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 51 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 52 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 53 10 
.dw 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 120 55 70 70 70 70 70 32 114 49 51 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 40 66 68 79 83 41 32 105 110 116 32 115 116 97 99 107 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 32 114 49 52 32 32 32 32 32 32 32 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 98 97 115 101 32 112 111 105 110 116 101 114 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 97 100 100 114 50 114 101 103 32 82 101 116 117 114 110 95 73 110 116 101 114 114 117 112 116 32 114 49 32 59 32 103 101 116 32 97 100 100 114 101 115 115 32 111 102 32 114 101 116 117 114 110 32 102 117 110 99 116 105 111 110 10 
.dw 32 32 32 32 111 114 32 114 48 32 114 49 32 114 49 53 32 32 32 32 32 32 32 32 32 32 32 32 59 32 99 111 112 121 32 114 101 116 117 114 110 32 97 100 100 114 32 116 111 32 114 49 53 10 
.dw 32 32 32 32 106 117 109 112 32 105 110 116 50 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 106 117 109 112 32 116 111 32 105 110 116 101 114 114 117 112 116 32 104 97 110 100 108 101 114 32 111 102 32 67 32 112 114 111 103 114 97 109 10 
.dw 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 114 101 116 117 114 110 32 116 111 32 116 104 101 32 97 100 100 114 101 115 115 32 119 101 32 106 117 115 116 32 112 117 116 32 111 110 32 116 104 101 32 115 116 97 99 107 10 
.dw 32 32 32 32 104 97 108 116 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 110 111 116 32 103 101 116 32 104 101 114 101 10 
.dw 10 
.dw 10 
.dw 73 110 116 51 58 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 10 
.dw 32 32 32 32 112 117 115 104 32 114 50 10 
.dw 32 32 32 32 112 117 115 104 32 114 51 10 
.dw 32 32 32 32 112 117 115 104 32 114 52 10 
.dw 32 32 32 32 112 117 115 104 32 114 53 10 
.dw 32 32 32 32 112 117 115 104 32 114 54 10 
.dw 32 32 32 32 112 117 115 104 32 114 55 10 
.dw 32 32 32 32 112 117 115 104 32 114 56 10 
.dw 32 32 32 32 112 117 115 104 32 114 57 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 48 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 49 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 50 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 51 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 52 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 53 10 
.dw 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 120 55 70 70 70 70 70 32 114 49 51 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 40 66 68 79 83 41 32 105 110 116 32 115 116 97 99 107 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 32 114 49 52 32 32 32 32 32 32 32 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 98 97 115 101 32 112 111 105 110 116 101 114 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 97 100 100 114 50 114 101 103 32 82 101 116 117 114 110 95 73 110 116 101 114 114 117 112 116 32 114 49 32 59 32 103 101 116 32 97 100 100 114 101 115 115 32 111 102 32 114 101 116 117 114 110 32 102 117 110 99 116 105 111 110 10 
.dw 32 32 32 32 111 114 32 114 48 32 114 49 32 114 49 53 32 32 32 32 32 32 32 32 32 32 32 32 59 32 99 111 112 121 32 114 101 116 117 114 110 32 97 100 100 114 32 116 111 32 114 49 53 10 
.dw 32 32 32 32 106 117 109 112 32 105 110 116 51 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 106 117 109 112 32 116 111 32 105 110 116 101 114 114 117 112 116 32 104 97 110 100 108 101 114 32 111 102 32 67 32 112 114 111 103 114 97 109 10 
.dw 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 114 101 116 117 114 110 32 116 111 32 116 104 101 32 97 100 100 114 101 115 115 32 119 101 32 106 117 115 116 32 112 117 116 32 111 110 32 116 104 101 32 115 116 97 99 107 10 
.dw 32 32 32 32 104 97 108 116 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 110 111 116 32 103 101 116 32 104 101 114 101 10 
.dw 10 
.dw 10 
.dw 73 110 116 52 58 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 10 
.dw 32 32 32 32 112 117 115 104 32 114 50 10 
.dw 32 32 32 32 112 117 115 104 32 114 51 10 
.dw 32 32 32 32 112 117 115 104 32 114 52 10 
.dw 32 32 32 32 112 117 115 104 32 114 53 10 
.dw 32 32 32 32 112 117 115 104 32 114 54 10 
.dw 32 32 32 32 112 117 115 104 32 114 55 10 
.dw 32 32 32 32 112 117 115 104 32 114 56 10 
.dw 32 32 32 32 112 117 115 104 32 114 57 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 48 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 49 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 50 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 51 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 52 10 
.dw 32 32 32 32 112 117 115 104 32 114 49 53 10 
.dw 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 120 55 70 70 70 70 70 32 114 49 51 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 40 66 68 79 83 41 32 105 110 116 32 115 116 97 99 107 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 32 114 49 52 32 32 32 32 32 32 32 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 98 97 115 101 32 112 111 105 110 116 101 114 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 97 100 100 114 50 114 101 103 32 82 101 116 117 114 110 95 73 110 116 101 114 114 117 112 116 32 114 49 32 59 32 103 101 116 32 97 100 100 114 101 115 115 32 111 102 32 114 101 116 117 114 110 32 102 117 110 99 116 105 111 110 10 
.dw 32 32 32 32 111 114 32 114 48 32 114 49 32 114 49 53 32 32 32 32 32 32 32 32 32 32 32 32 59 32 99 111 112 121 32 114 101 116 117 114 110 32 97 100 100 114 32 116 111 32 114 49 53 10 
.dw 32 32 32 32 106 117 109 112 32 105 110 116 52 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 106 117 109 112 32 116 111 32 105 110 116 101 114 114 117 112 116 32 104 97 110 100 108 101 114 32 111 102 32 67 32 112 114 111 103 114 97 109 10 
.dw 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 114 101 116 117 114 110 32 116 111 32 116 104 101 32 97 100 100 114 101 115 115 32 119 101 32 106 117 115 116 32 112 117 116 32 111 110 32 116 104 101 32 115 116 97 99 107 10 
.dw 32 32 32 32 104 97 108 116 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 110 111 116 32 103 101 116 32 104 101 114 101 10 
.dw 10 
.dw 10 
.dw 59 32 70 117 110 99 116 105 111 110 32 116 104 97 116 32 105 115 32 99 97 108 108 101 100 32 97 102 116 101 114 32 97 110 121 32 105 110 116 101 114 114 117 112 116 32 104 97 110 100 108 101 114 32 102 114 111 109 32 67 32 104 97 115 32 114 101 116 117 114 110 101 100 10 
.dw 59 32 82 101 115 116 111 114 101 115 32 97 108 108 32 114 101 103 105 115 116 101 114 115 32 97 110 100 32 105 115 115 117 101 115 32 82 69 84 73 32 105 110 115 116 114 117 99 116 105 111 110 32 116 111 32 99 111 110 116 105 110 117 101 32 102 114 111 109 32 111 114 105 103 105 110 97 108 32 99 111 100 101 10 
.dw 82 101 116 117 114 110 95 73 110 116 101 114 114 117 112 116 58 10 
.dw 32 32 32 32 112 111 112 32 114 49 53 10 
.dw 32 32 32 32 112 111 112 32 114 49 52 10 
.dw 32 32 32 32 112 111 112 32 114 49 51 10 
.dw 32 32 32 32 112 111 112 32 114 49 50 10 
.dw 32 32 32 32 112 111 112 32 114 49 49 10 
.dw 32 32 32 32 112 111 112 32 114 49 48 10 
.dw 32 32 32 32 112 111 112 32 114 57 10 
.dw 32 32 32 32 112 111 112 32 114 56 10 
.dw 32 32 32 32 112 111 112 32 114 55 10 
.dw 32 32 32 32 112 111 112 32 114 54 10 
.dw 32 32 32 32 112 111 112 32 114 53 10 
.dw 32 32 32 32 112 111 112 32 114 52 10 
.dw 32 32 32 32 112 111 112 32 114 51 10 
.dw 32 32 32 32 112 111 112 32 114 50 10 
.dw 32 32 32 32 112 111 112 32 114 49 10 
.dw 10 
.dw 32 32 32 32 114 101 116 105 32 32 32 32 32 32 32 32 59 32 114 101 116 117 114 110 32 102 114 111 109 32 105 110 116 101 114 114 114 117 112 116 10 
.dw 10 
.dw 32 32 32 32 104 97 108 116 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 110 111 116 32 103 101 116 32 104 101 114 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1658 printf2 ) "
 ; Expanded expression: " L1658  printf2 ()4 "
 ; (
 ; 1658
 addr2reg Label_1658 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; }
Label_1656:
 ; if
 ; RPN'ized expression: "compileOS "
 ; Expanded expression: "compileOS *(4) "
 ; compileOS
 ; * (read dereference)
 addr2reg compileOS r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1659
 ; {

.rdata
Label_1661:
.dw 46 99 111 100 101 10 
.dw 10 59 32 83 121 115 99 97 108 108 32 104 97 110 100 108 101 114 32 102 111 114 32 79 83 10 
.dw 59 32 66 101 99 97 117 115 101 32 116 104 105 115 32 105 115 32 110 111 116 32 99 97 108 108 101 100 32 100 117 114 105 110 103 32 97 110 32 105 110 116 101 114 114 117 112 116 44 32 119 101 32 117 115 101 32 97 32 100 105 102 102 101 114 101 110 116 32 115 116 97 99 107 10 
.dw 59 32 32 108 111 99 97 116 101 100 32 97 116 32 116 104 101 32 101 110 100 32 111 102 32 66 68 79 83 32 104 101 97 112 10 
.dw 10 
.dw 83 121 115 99 97 108 108 58 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 120 51 70 70 70 70 70 32 114 49 51 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 115 121 115 99 97 108 108 32 115 116 97 99 107 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 108 111 97 100 51 50 32 48 32 114 49 52 32 32 32 32 32 32 32 32 32 32 32 32 59 32 105 110 105 116 105 97 108 105 122 101 32 98 97 115 101 32 112 111 105 110 116 101 114 32 97 100 100 114 101 115 115 10 
.dw 32 32 32 32 97 100 100 114 50 114 101 103 32 82 101 116 117 114 110 95 83 121 115 99 97 108 108 32 114 49 32 59 32 103 101 116 32 97 100 100 114 101 115 115 32 111 102 32 114 101 116 117 114 110 32 102 117 110 99 116 105 111 110 10 
.dw 32 32 32 32 111 114 32 114 48 32 114 49 32 114 49 53 32 32 32 32 32 32 32 32 32 32 32 32 59 32 99 111 112 121 32 114 101 116 117 114 110 32 97 100 100 114 32 116 111 32 114 49 53 10 
.dw 32 32 32 32 106 117 109 112 32 115 121 115 99 97 108 108 32 32 32 32 32 32 59 32 106 117 109 112 32 116 111 32 115 121 115 99 97 108 108 32 104 97 110 100 108 101 114 32 111 102 32 67 32 112 114 111 103 114 97 109 10 
.dw 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 114 101 116 117 114 110 32 116 111 32 116 104 101 32 97 100 100 114 101 115 115 32 119 101 32 106 117 115 116 32 112 117 116 32 111 110 32 116 104 101 32 115 116 97 99 107 10 
.dw 32 32 32 32 104 97 108 116 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 110 111 116 32 103 101 116 32 104 101 114 101 10 
.dw 10 
.dw 82 101 116 117 114 110 95 83 121 115 99 97 108 108 58 10 
.dw 32 32 32 32 112 111 112 32 114 49 10 
.dw 32 32 32 32 106 117 109 112 114 32 51 32 114 49 10 
.dw 10 
.dw 32 32 32 32 104 97 108 116 32 32 32 32 32 32 32 32 59 32 115 104 111 117 108 100 32 110 111 116 32 103 101 116 32 104 101 114 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1661 printf2 ) "
 ; Expanded expression: " L1661  printf2 ()4 "
 ; (
 ; 1661
 addr2reg Label_1661 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; }
Label_1659:
Label_1646:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb push2 : (
 ; prm     v : int
 ; prm     v2 : int
 ;     ) void
.code
; .globl push2
push2:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     v : (@8) : int
 ; loc     v2 : (@12) : int
 ; if
 ; RPN'ized expression: "sp 129 >= "
 ; Expanded expression: "sp *(4) 129 >= "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; 129
 ; >=
 load32 129 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_1663
 ; RPN'ized expression: "( errorLongExpr ) "
 ; Expanded expression: " errorLongExpr ()0 "
 ; (
 ; errorLongExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorLongExpr
 add r13 16 r13
Label_1663:
 ; RPN'ized expression: "stack sp + *u 0 + *u v = "
 ; Expanded expression: "stack sp *(4) 8 * + 0 + (@8) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "stack sp ++p + *u 1 + *u v2 = "
 ; Expanded expression: "stack sp ++p(4) 8 * + 4 + (@12) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; sp
 ; ++p
 addr2reg sp r1
 read 0 r1 r8
 add r8 1 r8
 addr2reg sp r1
 write 0 r1 r8
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_1662:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb push : (
 ; prm     v : int
 ;     ) void
.code
; .globl push
push:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     v : (@8) : int
 ; RPN'ized expression: "( 0 , v push2 ) "
 ; Expanded expression: " 0  (@8) *(4)  push2 ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; push2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
Label_1665:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb stacktop : () int
.code
; .globl stacktop
stacktop:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; if
 ; RPN'ized expression: "sp 0 == "
 ; Expanded expression: "sp *(4) 0 == "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1667
 ; RPN'ized expression: "( 3 errorInternal ) "
 ; Expanded expression: " 3  errorInternal ()4 "
 ; (
 ; 3
 load32 3 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
Label_1667:
 ; return
 ; RPN'ized expression: "stack sp 1 - + *u 0 + *u "
 ; Expanded expression: "stack sp *(4) 1 - 8 * + 0 + *(4) "
 ; stack
 addr2reg stack r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
Label_1666:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb pop2 : (
 ; prm     v2 : * int
 ;     ) int
.code
; .globl pop2
pop2:
 write 0 r13 r4
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     v2 : (@8) : * int
 ; loc     v : (@-4) : int
 ; RPN'ized expression: "v ( stacktop ) = "
 ; Expanded expression: "(@-4)  stacktop ()0 =(4) "
 ; (
 ; stacktop
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump stacktop
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "v2 *u stack sp 1 - + *u 1 + *u = "
 ; Expanded expression: "(@8) *(4) stack sp *(4) 1 - 8 * + 4 + *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; stack
 addr2reg stack r8
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r9
 ; 1
 ; -
 sub r9 1 r9
 ; 3
 ; <<
 shiftl r9 3 r9
 ; +
 add r8 r9 r8
 ; 4
 ; +
 add r8 4 r8
 ; * (read dereference)
 read 0 r8 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "sp --p "
 ; Expanded expression: "sp --p(4) "
 ; sp
 ; --p
 addr2reg sp r1
 read 0 r1 r2
 sub r2 1 r2
 addr2reg sp r1
 write 0 r1 r2
 add r2 1 r2
 ; return
 ; RPN'ized expression: "v "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
Label_1669:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb pop : () int
.code
; .globl pop
pop:
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     v2 : (@-4) : int
 ; return
 ; RPN'ized expression: "( v2 &u pop2 ) "
 ; Expanded expression: " (@-4)  pop2 ()4 "
 ; (
 ; local ofs
 sub r14 4 r4
 ; ,
 ; pop2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump pop2
 add r13 16 r13
Label_1670:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb ins2 : (
 ; prm     pos : int
 ; prm     v : int
 ; prm     v2 : int
 ;     ) void
.code
; .globl ins2
ins2:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     pos : (@8) : int
 ; loc     v : (@12) : int
 ; loc     v2 : (@16) : int
 ; if
 ; RPN'ized expression: "sp 129 >= "
 ; Expanded expression: "sp *(4) 129 >= "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; 129
 ; >=
 load32 129 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_1672
 ; RPN'ized expression: "( errorLongExpr ) "
 ; Expanded expression: " errorLongExpr ()0 "
 ; (
 ; errorLongExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorLongExpr
 add r13 16 r13
Label_1672:
 ; RPN'ized expression: "( stack 0 + *u sizeof sp pos - * , stack pos + *u &u , stack pos 1 + + *u &u memmove ) "
 ; Expanded expression: " 8u sp *(4) (@8) *(4) - *  stack (@8) *(4) 8 * +  stack (@8) *(4) 1 + 8 * +  memmove ()12 "
 ; (
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read 8 r14 r6
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r6 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; ,
 ; stack
 addr2reg stack r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read 8 r14 r5
 ; 3
 ; <<
 shiftl r5 3 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; stack
 addr2reg stack r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read 8 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; memmove
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memmove
 add r13 16 r13
 ; RPN'ized expression: "stack pos + *u 0 + *u v = "
 ; Expanded expression: "stack (@8) *(4) 8 * + 0 + (@12) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "stack pos + *u 1 + *u v2 = "
 ; Expanded expression: "stack (@8) *(4) 8 * + 4 + (@16) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read 16 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "sp ++p "
 ; Expanded expression: "sp ++p(4) "
 ; sp
 ; ++p
 addr2reg sp r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg sp r1
 write 0 r1 r2
 sub r2 1 r2
Label_1671:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb ins : (
 ; prm     pos : int
 ; prm     v : int
 ;     ) void
.code
; .globl ins
ins:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     pos : (@8) : int
 ; loc     v : (@12) : int
 ; RPN'ized expression: "( 0 , v , pos ins2 ) "
 ; Expanded expression: " 0  (@12) *(4)  (@8) *(4)  ins2 ()12 "
 ; (
 ; 0
 load32 0 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ins2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins2
 add r13 16 r13
Label_1674:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb del : (
 ; prm     pos : int
 ; prm     cnt : int
 ;     ) void
.code
; .globl del
del:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     pos : (@8) : int
 ; loc     cnt : (@12) : int
 ; RPN'ized expression: "( stack 0 + *u sizeof sp pos cnt + - * , stack pos cnt + + *u , stack pos + *u memmove ) "
 ; Expanded expression: " 8u sp *(4) (@8) *(4) (@12) *(4) + - *  stack (@8) *(4) (@12) *(4) + 8 * +  stack (@8) *(4) 8 * +  memmove ()12 "
 ; (
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read 8 r14 r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read 12 r14 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r6 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; ,
 ; stack
 addr2reg stack r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read 8 r14 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read 12 r14 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; 3
 ; <<
 shiftl r5 3 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; stack
 addr2reg stack r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read 8 r14 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; memmove
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memmove
 add r13 16 r13
 ; RPN'ized expression: "sp cnt -= "
 ; Expanded expression: "sp (@12) *(4) -=(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; sp
 ; -=
 addr2reg sp r1
 read 0 r1 r12
 sub r12 r2 r2
 addr2reg sp r1
 write 0 r1 r2
Label_1675:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb pushop2 : (
 ; prm     v : int
 ; prm     v2 : int
 ;     ) void
.code
; .globl pushop2
pushop2:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     v : (@8) : int
 ; loc     v2 : (@12) : int
 ; if
 ; RPN'ized expression: "opsp 129 >= "
 ; Expanded expression: "opsp *(4) 129 >= "
 ; opsp
 ; * (read dereference)
 addr2reg opsp r1
 read 0 r1 r2
 ; 129
 ; >=
 load32 129 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_1677
 ; RPN'ized expression: "( errorLongExpr ) "
 ; Expanded expression: " errorLongExpr ()0 "
 ; (
 ; errorLongExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorLongExpr
 add r13 16 r13
Label_1677:
 ; RPN'ized expression: "opstack opsp + *u 0 + *u v = "
 ; Expanded expression: "opstack opsp *(4) 8 * + 0 + (@8) *(4) =(4) "
 ; opstack
 addr2reg opstack r2
 ; opsp
 ; * (read dereference)
 addr2reg opsp r1
 read 0 r1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "opstack opsp ++p + *u 1 + *u v2 = "
 ; Expanded expression: "opstack opsp ++p(4) 8 * + 4 + (@12) *(4) =(4) "
 ; opstack
 addr2reg opstack r2
 ; opsp
 ; ++p
 addr2reg opsp r1
 read 0 r1 r8
 add r8 1 r8
 addr2reg opsp r1
 write 0 r1 r8
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_1676:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb pushop : (
 ; prm     v : int
 ;     ) void
.code
; .globl pushop
pushop:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     v : (@8) : int
 ; RPN'ized expression: "( 0 , v pushop2 ) "
 ; Expanded expression: " 0  (@8) *(4)  pushop2 ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; pushop2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump pushop2
 add r13 16 r13
Label_1679:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb opstacktop : () int
.code
; .globl opstacktop
opstacktop:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; if
 ; RPN'ized expression: "opsp 0 == "
 ; Expanded expression: "opsp *(4) 0 == "
 ; opsp
 ; * (read dereference)
 addr2reg opsp r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1681
 ; RPN'ized expression: "( 4 errorInternal ) "
 ; Expanded expression: " 4  errorInternal ()4 "
 ; (
 ; 4
 load32 4 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
Label_1681:
 ; return
 ; RPN'ized expression: "opstack opsp 1 - + *u 0 + *u "
 ; Expanded expression: "opstack opsp *(4) 1 - 8 * + 0 + *(4) "
 ; opstack
 addr2reg opstack r2
 ; opsp
 ; * (read dereference)
 addr2reg opsp r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
Label_1680:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb popop2 : (
 ; prm     v2 : * int
 ;     ) int
.code
; .globl popop2
popop2:
 write 0 r13 r4
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     v2 : (@8) : * int
 ; loc     v : (@-4) : int
 ; RPN'ized expression: "v ( opstacktop ) = "
 ; Expanded expression: "(@-4)  opstacktop ()0 =(4) "
 ; (
 ; opstacktop
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump opstacktop
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "v2 *u opstack opsp 1 - + *u 1 + *u = "
 ; Expanded expression: "(@8) *(4) opstack opsp *(4) 1 - 8 * + 4 + *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; opstack
 addr2reg opstack r8
 ; opsp
 ; * (read dereference)
 addr2reg opsp r1
 read 0 r1 r9
 ; 1
 ; -
 sub r9 1 r9
 ; 3
 ; <<
 shiftl r9 3 r9
 ; +
 add r8 r9 r8
 ; 4
 ; +
 add r8 4 r8
 ; * (read dereference)
 read 0 r8 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "opsp --p "
 ; Expanded expression: "opsp --p(4) "
 ; opsp
 ; --p
 addr2reg opsp r1
 read 0 r1 r2
 sub r2 1 r2
 addr2reg opsp r1
 write 0 r1 r2
 add r2 1 r2
 ; return
 ; RPN'ized expression: "v "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
Label_1683:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb popop : () int
.code
; .globl popop
popop:
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     v2 : (@-4) : int
 ; return
 ; RPN'ized expression: "( v2 &u popop2 ) "
 ; Expanded expression: " (@-4)  popop2 ()4 "
 ; (
 ; local ofs
 sub r14 4 r4
 ; ,
 ; popop2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump popop2
 add r13 16 r13
Label_1684:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb isop : (
 ; prm     tok : int
 ;     ) int
.code
; .globl isop
isop:
 write 0 r13 r4
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     tok : (@8) : int
 ; loc     toks : Label_1686 : [0u] unsigned char

.data
Label_1686:
 ; =
 ; RPN'ized expression: "33 "
 ; Expanded expression: "33 "
 ; Expression value: 33
 .dw 33
 ; RPN'ized expression: "126 "
 ; Expanded expression: "126 "
 ; Expression value: 126
 .dw 126
 ; RPN'ized expression: "38 "
 ; Expanded expression: "38 "
 ; Expression value: 38
 .dw 38
 ; RPN'ized expression: "42 "
 ; Expanded expression: "42 "
 ; Expression value: 42
 .dw 42
 ; RPN'ized expression: "47 "
 ; Expanded expression: "47 "
 ; Expression value: 47
 .dw 47
 ; RPN'ized expression: "37 "
 ; Expanded expression: "37 "
 ; Expression value: 37
 .dw 37
 ; RPN'ized expression: "43 "
 ; Expanded expression: "43 "
 ; Expression value: 43
 .dw 43
 ; RPN'ized expression: "45 "
 ; Expanded expression: "45 "
 ; Expression value: 45
 .dw 45
 ; RPN'ized expression: "124 "
 ; Expanded expression: "124 "
 ; Expression value: 124
 .dw 124
 ; RPN'ized expression: "94 "
 ; Expanded expression: "94 "
 ; Expression value: 94
 .dw 94
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
 .dw 60
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
 .dw 62
 ; RPN'ized expression: "61 "
 ; Expanded expression: "61 "
 ; Expression value: 61
 .dw 61
 ; RPN'ized expression: "7 "
 ; Expanded expression: "7 "
 ; Expression value: 7
 .dw 7
 ; RPN'ized expression: "6 "
 ; Expanded expression: "6 "
 ; Expression value: 6
 .dw 6
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
 .dw 8
 ; RPN'ized expression: "9 "
 ; Expanded expression: "9 "
 ; Expression value: 9
 .dw 9
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
 .dw 10
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
 .dw 11
 ; RPN'ized expression: "4 "
 ; Expanded expression: "4 "
 ; Expression value: 4
 .dw 4
 ; RPN'ized expression: "5 "
 ; Expanded expression: "5 "
 ; Expression value: 5
 .dw 5
 ; RPN'ized expression: "12 "
 ; Expanded expression: "12 "
 ; Expression value: 12
 .dw 12
 ; RPN'ized expression: "13 "
 ; Expanded expression: "13 "
 ; Expression value: 13
 .dw 13
 ; RPN'ized expression: "27 "
 ; Expanded expression: "27 "
 ; Expression value: 27
 .dw 27
 ; RPN'ized expression: "65 "
 ; Expanded expression: "65 "
 ; Expression value: 65
 .dw 65
 ; RPN'ized expression: "66 "
 ; Expanded expression: "66 "
 ; Expression value: 66
 .dw 66
 ; RPN'ized expression: "67 "
 ; Expanded expression: "67 "
 ; Expression value: 67
 .dw 67
 ; RPN'ized expression: "68 "
 ; Expanded expression: "68 "
 ; Expression value: 68
 .dw 68
 ; RPN'ized expression: "69 "
 ; Expanded expression: "69 "
 ; Expression value: 69
 .dw 69
 ; RPN'ized expression: "70 "
 ; Expanded expression: "70 "
 ; Expression value: 70
 .dw 70
 ; RPN'ized expression: "71 "
 ; Expanded expression: "71 "
 ; Expression value: 71
 .dw 71
 ; RPN'ized expression: "72 "
 ; Expanded expression: "72 "
 ; Expression value: 72
 .dw 72
 ; RPN'ized expression: "73 "
 ; Expanded expression: "73 "
 ; Expression value: 73
 .dw 73
 ; RPN'ized expression: "74 "
 ; Expanded expression: "74 "
 ; Expression value: 74
 .dw 74
 ; RPN'ized expression: "48 "
 ; Expanded expression: "48 "
 ; Expression value: 48
 .dw 48
 ; RPN'ized expression: "63 "
 ; Expanded expression: "63 "
 ; Expression value: 63
 .dw 63

.code
 ; loc     i : (@-4) : unsigned
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_1687:
 ; RPN'ized expression: "i ( toks 0 + *u sizeof , toks sizeof division ) < "
 ; Expanded expression: "(@-4) *(4)  1u  36u  division ()8 <u "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; 1
 load32 1 r5
 ; ,
 ; 36
 load32 36 r4
 ; ,
 ; division
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump division
 add r13 16 r13
 ; <u
 read 0 r13 r11
 add r13 4 r13
 bges r11 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_1690
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; if
 ; RPN'ized expression: "toks i + *u tok == "
 ; Expanded expression: "L1686 (@-4) *(4) + *(1) (@8) *(4) == "
 ; 1686
 addr2reg Label_1686 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; ==
 beq r2 r8 2
 jump Label_1691
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_1685
Label_1691:
Label_1688:
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_1687
Label_1690:
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
Label_1685:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb isunary : (
 ; prm     tok : int
 ;     ) int
.code
; .globl isunary
isunary:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
 ; write 4 r14 r15
 ; loc     tok : (@8) : int
 ; return
 ; RPN'ized expression: "tok 33 == tok 126 == | tok 12 == | tok 13 == | tok 27 == | "
 ; Expanded expression: "(@8) *(4) 33 == (@8) *(4) 126 == | (@8) *(4) 12 == | (@8) *(4) 13 == | (@8) *(4) 27 == | "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 33
 ; ==
 load32 33 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 126
 ; ==
 load32 126 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; |
 or r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 12
 ; ==
 load32 12 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; |
 or r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 13
 ; ==
 load32 13 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; |
 or r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 27
 ; ==
 load32 27 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; |
 or r2 r8 r2
Label_1693:
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb preced : (
 ; prm     tok : int
 ;     ) int
.code
; .globl preced
preced:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
 ; write 4 r14 r15
 ; loc     tok : (@8) : int
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 jump Label_1696
 ; {
 ; case
 ; RPN'ized expression: "42 "
 ; Expanded expression: "42 "
 ; Expression value: 42
Label_1697:
 ; case
 ; RPN'ized expression: "47 "
 ; Expanded expression: "47 "
 ; Expression value: 47
Label_1698:
 ; case
 ; RPN'ized expression: "37 "
 ; Expanded expression: "37 "
 ; Expression value: 37
Label_1699:
 ; return
 ; RPN'ized expression: "13 "
 ; Expanded expression: "13 "
 ; Expression value: 13
 ; 13
 load32 13 r2
 jump Label_1694
 ; case
 ; RPN'ized expression: "43 "
 ; Expanded expression: "43 "
 ; Expression value: 43
Label_1700:
 ; case
 ; RPN'ized expression: "45 "
 ; Expanded expression: "45 "
 ; Expression value: 45
Label_1701:
 ; return
 ; RPN'ized expression: "12 "
 ; Expanded expression: "12 "
 ; Expression value: 12
 ; 12
 load32 12 r2
 jump Label_1694
 ; case
 ; RPN'ized expression: "4 "
 ; Expanded expression: "4 "
 ; Expression value: 4
Label_1702:
 ; case
 ; RPN'ized expression: "5 "
 ; Expanded expression: "5 "
 ; Expression value: 5
Label_1703:
 ; return
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
 ; 11
 load32 11 r2
 jump Label_1694
 ; case
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
Label_1704:
 ; case
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
Label_1705:
 ; case
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
Label_1706:
 ; case
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
Label_1707:
 ; return
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
 ; 10
 load32 10 r2
 jump Label_1694
 ; case
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
Label_1708:
 ; case
 ; RPN'ized expression: "9 "
 ; Expanded expression: "9 "
 ; Expression value: 9
Label_1709:
 ; return
 ; RPN'ized expression: "9 "
 ; Expanded expression: "9 "
 ; Expression value: 9
 ; 9
 load32 9 r2
 jump Label_1694
 ; case
 ; RPN'ized expression: "38 "
 ; Expanded expression: "38 "
 ; Expression value: 38
Label_1710:
 ; return
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
 ; 8
 load32 8 r2
 jump Label_1694
 ; case
 ; RPN'ized expression: "94 "
 ; Expanded expression: "94 "
 ; Expression value: 94
Label_1711:
 ; return
 ; RPN'ized expression: "7 "
 ; Expanded expression: "7 "
 ; Expression value: 7
 ; 7
 load32 7 r2
 jump Label_1694
 ; case
 ; RPN'ized expression: "124 "
 ; Expanded expression: "124 "
 ; Expression value: 124
Label_1712:
 ; return
 ; RPN'ized expression: "6 "
 ; Expanded expression: "6 "
 ; Expression value: 6
 ; 6
 load32 6 r2
 jump Label_1694
 ; case
 ; RPN'ized expression: "6 "
 ; Expanded expression: "6 "
 ; Expression value: 6
Label_1713:
 ; return
 ; RPN'ized expression: "5 "
 ; Expanded expression: "5 "
 ; Expression value: 5
 ; 5
 load32 5 r2
 jump Label_1694
 ; case
 ; RPN'ized expression: "7 "
 ; Expanded expression: "7 "
 ; Expression value: 7
Label_1714:
 ; return
 ; RPN'ized expression: "4 "
 ; Expanded expression: "4 "
 ; Expression value: 4
 ; 4
 load32 4 r2
 jump Label_1694
 ; case
 ; RPN'ized expression: "63 "
 ; Expanded expression: "63 "
 ; Expression value: 63
Label_1715:
 ; case
 ; RPN'ized expression: "58 "
 ; Expanded expression: "58 "
 ; Expression value: 58
Label_1716:
 ; return
 ; RPN'ized expression: "3 "
 ; Expanded expression: "3 "
 ; Expression value: 3
 ; 3
 load32 3 r2
 jump Label_1694
 ; case
 ; RPN'ized expression: "61 "
 ; Expanded expression: "61 "
 ; Expression value: 61
Label_1717:
 ; case
 ; RPN'ized expression: "65 "
 ; Expanded expression: "65 "
 ; Expression value: 65
Label_1718:
 ; case
 ; RPN'ized expression: "66 "
 ; Expanded expression: "66 "
 ; Expression value: 66
Label_1719:
 ; case
 ; RPN'ized expression: "67 "
 ; Expanded expression: "67 "
 ; Expression value: 67
Label_1720:
 ; case
 ; RPN'ized expression: "68 "
 ; Expanded expression: "68 "
 ; Expression value: 68
Label_1721:
 ; case
 ; RPN'ized expression: "69 "
 ; Expanded expression: "69 "
 ; Expression value: 69
Label_1722:
 ; case
 ; RPN'ized expression: "70 "
 ; Expanded expression: "70 "
 ; Expression value: 70
Label_1723:
 ; case
 ; RPN'ized expression: "71 "
 ; Expanded expression: "71 "
 ; Expression value: 71
Label_1724:
 ; case
 ; RPN'ized expression: "72 "
 ; Expanded expression: "72 "
 ; Expression value: 72
Label_1725:
 ; case
 ; RPN'ized expression: "73 "
 ; Expanded expression: "73 "
 ; Expression value: 73
Label_1726:
 ; case
 ; RPN'ized expression: "74 "
 ; Expanded expression: "74 "
 ; Expression value: 74
Label_1727:
 ; return
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; 2
 load32 2 r2
 jump Label_1694
 ; case
 ; RPN'ized expression: "48 "
 ; Expanded expression: "48 "
 ; Expression value: 48
Label_1728:
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_1694
 ; }
 jump Label_1695
Label_1696:
 load32 42 r12
 bne r2 r12 2
 jump Label_1697
 load32 47 r12
 bne r2 r12 2
 jump Label_1698
 load32 37 r12
 bne r2 r12 2
 jump Label_1699
 load32 43 r12
 bne r2 r12 2
 jump Label_1700
 load32 45 r12
 bne r2 r12 2
 jump Label_1701
 load32 4 r12
 bne r2 r12 2
 jump Label_1702
 load32 5 r12
 bne r2 r12 2
 jump Label_1703
 load32 60 r12
 bne r2 r12 2
 jump Label_1704
 load32 62 r12
 bne r2 r12 2
 jump Label_1705
 load32 10 r12
 bne r2 r12 2
 jump Label_1706
 load32 11 r12
 bne r2 r12 2
 jump Label_1707
 load32 8 r12
 bne r2 r12 2
 jump Label_1708
 load32 9 r12
 bne r2 r12 2
 jump Label_1709
 load32 38 r12
 bne r2 r12 2
 jump Label_1710
 load32 94 r12
 bne r2 r12 2
 jump Label_1711
 load32 124 r12
 bne r2 r12 2
 jump Label_1712
 load32 6 r12
 bne r2 r12 2
 jump Label_1713
 load32 7 r12
 bne r2 r12 2
 jump Label_1714
 load32 63 r12
 bne r2 r12 2
 jump Label_1715
 load32 58 r12
 bne r2 r12 2
 jump Label_1716
 load32 61 r12
 bne r2 r12 2
 jump Label_1717
 load32 65 r12
 bne r2 r12 2
 jump Label_1718
 load32 66 r12
 bne r2 r12 2
 jump Label_1719
 load32 67 r12
 bne r2 r12 2
 jump Label_1720
 load32 68 r12
 bne r2 r12 2
 jump Label_1721
 load32 69 r12
 bne r2 r12 2
 jump Label_1722
 load32 70 r12
 bne r2 r12 2
 jump Label_1723
 load32 71 r12
 bne r2 r12 2
 jump Label_1724
 load32 72 r12
 bne r2 r12 2
 jump Label_1725
 load32 73 r12
 bne r2 r12 2
 jump Label_1726
 load32 74 r12
 bne r2 r12 2
 jump Label_1727
 load32 48 r12
 bne r2 r12 2
 jump Label_1728
Label_1695:
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
Label_1694:
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb precedGEQ : (
 ; prm     lfttok : int
 ; prm     rhttok : int
 ;     ) int
.code
; .globl precedGEQ
precedGEQ:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         16 r13
 write          8 r13 r14
 add r13          8 r14
   write 4 r14 r15
 ; loc     lfttok : (@8) : int
 ; loc     rhttok : (@12) : int
 ; loc     pl : (@-4) : int
 ; RPN'ized expression: "pl ( lfttok preced ) = "
 ; Expanded expression: "(@-4)  (@8) *(4)  preced ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; preced
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump preced
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc     pr : (@-8) : int
 ; RPN'ized expression: "pr ( rhttok preced ) = "
 ; Expanded expression: "(@-8)  (@12) *(4)  preced ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; preced
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump preced
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "pl 3 == pr 3 >= && "
 ; Expanded expression: "(@-4) *(4) 3 == [sh&&->1732] (@-8) *(4) 3 >= &&[1732] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 3
 ; ==
 load32 3 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1732
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 3
 ; >=
 load32 3 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit && target
Label_1732:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1730
 ; RPN'ized expression: "pl 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_1730:
 ; if
 ; RPN'ized expression: "pl 2 == pr 2 >= && "
 ; Expanded expression: "(@-4) *(4) 2 == [sh&&->1735] (@-8) *(4) 2 >= &&[1735] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1735
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 2
 ; >=
 load32 2 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit && target
Label_1735:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1733
 ; RPN'ized expression: "pl 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_1733:
 ; return
 ; RPN'ized expression: "pl pr >= "
 ; Expanded expression: "(@-4) *(4) (@-8) *(4) >= "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; >=
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
Label_1729:
 read 4 r14 r15
 read 0 r14 r14
 add r13 16 r13
 jumpr 0 r15

 ; glb expr : (
 ; prm     tok : int
 ; prm     gotUnary : * int
 ; prm     commaSeparator : int
 ;     ) int
 ; glb lab2str : (
 ; prm     p : * char
 ; prm     n : int
 ;     ) * char
.code
; .globl lab2str
lab2str:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     p : (@8) : * char
 ; loc     n : (@12) : int
 ; do
Label_1737:
 ; {
 ; RPN'ized expression: "p -- *u 48 ( 10 , n modulo ) + = "
 ; Expanded expression: "(@8) --(4) 48  10  (@12) *(4)  modulo ()8 + =(-1) "
 ; local ofs
 ; --
 read 8 r14 r2
 sub r2 1 r2
 write 8 r14 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; 10
 load32 10 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; modulo
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump modulo
 add r13 16 r13
 ; 48
 ; +
 add r2 48 r2
 ; = (write dereference)
 read 0 r13 r11
 add r13 4 r13
 write 0 r11 r2
 ; RPN'ized expression: "n ( 10 , n division ) = "
 ; Expanded expression: "(@12)  10  (@12) *(4)  division ()8 =(4) "
 ; (
 ; 10
 load32 10 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; division
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump division
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; }
 ; while
 ; RPN'ized expression: "n "
 ; Expanded expression: "(@12) *(4) "
Label_1738:
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1737
Label_1739:
 ; return
 ; RPN'ized expression: "p "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
Label_1736:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb exprUnary : (
 ; prm     tok : int
 ; prm     gotUnary : * int
 ; prm     commaSeparator : int
 ; prm     argOfSizeOf : int
 ;     ) int
.code
; .globl exprUnary
exprUnary:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13         52 r13
 write         44 r13 r14
 add r13         44 r14
   write 4 r14 r15
 ; loc     tok : (@8) : int
 ; loc     gotUnary : (@12) : * int
 ; loc     commaSeparator : (@16) : int
 ; loc     argOfSizeOf : (@20) : int
 ; loc     sizeofLevel : Label_1741 : int

.data
; .align 2
Label_1741:
 ; =
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 .dw 0 0 0 0

.code
 ; loc     decl : (@-4) : int
 ; RPN'ized expression: "decl 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
 ; RPN'ized expression: "gotUnary *u 0 = "
 ; Expanded expression: "(@12) *(4) 0 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; =
 write 0 r2 r0
 ; if

.rdata
Label_1744:
.dw 38 42 43 45 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( tok isop ) ( tok isunary ) ( tok , L1744 strchr ) || && "
 ; Expanded expression: " (@8) *(4)  isop ()4 _Bool [sh&&->1745]  (@8) *(4)  isunary ()4 _Bool [sh||->1746]  (@8) *(4)  L1744  strchr ()8 _Bool ||[1746] _Bool &&[1745] "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; isop
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isop
 add r13 16 r13
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1745
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; isunary
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isunary
 add r13 16 r13
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1746
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 1744
 addr2reg Label_1744 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_1746:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1745:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1742
 ; {
 ; loc         lastTok : (@-8) : int
 ; RPN'ized expression: "lastTok tok = "
 ; Expanded expression: "(@-8) (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; loc         sizeofLevelInc : (@-12) : int
 ; RPN'ized expression: "sizeofLevelInc lastTok 27 == = "
 ; Expanded expression: "(@-12) (@-8) *(4) 27 == =(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 27
 ; ==
 load32 27 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; RPN'ized expression: "sizeofLevel sizeofLevelInc += "
 ; Expanded expression: "L1741 (@-12) *(4) +=(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 1741
 ; +=
 addr2reg Label_1741 r1
 read 0 r1 r12
 add r12 r2 r2
 addr2reg Label_1741 r1
 write 0 r1 r2
 ; RPN'ized expression: "tok ( sizeofLevelInc , commaSeparator , gotUnary , ( GetToken ) exprUnary ) = "
 ; Expanded expression: "(@8)  (@-12) *(4)  (@16) *(4)  (@12) *(4)   GetToken ()0  exprUnary ()16 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 16 r14 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 12 r14 r2
 ; ,
 ; (
 sub r13 4 r13
 write 0 r13 r2
 sub r13 16 r13
 ; GetToken
 ; ) fxn call
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; ,
 ; exprUnary
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 read 8 r13 r6
 read 12 r13 r7
 savpc r15
 add r15 3 r15
 jump exprUnary
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "sizeofLevel sizeofLevelInc -= "
 ; Expanded expression: "L1741 (@-12) *(4) -=(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 1741
 ; -=
 addr2reg Label_1741 r1
 read 0 r1 r12
 sub r12 r2 r2
 addr2reg Label_1741 r1
 write 0 r1 r2
 ; if
 ; RPN'ized expression: "gotUnary *u 0 == "
 ; Expanded expression: "(@12) *(4) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1747
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_1747:
 ; switch
 ; RPN'ized expression: "lastTok "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_1750
 ; {
 ; case
 ; RPN'ized expression: "38 "
 ; Expanded expression: "38 "
 ; Expression value: 38
Label_1751:
 ; RPN'ized expression: "( 77 push ) "
 ; Expanded expression: " 77  push ()4 "
 ; (
 ; 77
 load32 77 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; break
 jump Label_1749
 ; case
 ; RPN'ized expression: "42 "
 ; Expanded expression: "42 "
 ; Expression value: 42
Label_1752:
 ; RPN'ized expression: "( 78 push ) "
 ; Expanded expression: " 78  push ()4 "
 ; (
 ; 78
 load32 78 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; break
 jump Label_1749
 ; case
 ; RPN'ized expression: "43 "
 ; Expanded expression: "43 "
 ; Expression value: 43
Label_1753:
 ; RPN'ized expression: "( 79 push ) "
 ; Expanded expression: " 79  push ()4 "
 ; (
 ; 79
 load32 79 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; break
 jump Label_1749
 ; case
 ; RPN'ized expression: "45 "
 ; Expanded expression: "45 "
 ; Expression value: 45
Label_1754:
 ; RPN'ized expression: "( 80 push ) "
 ; Expanded expression: " 80  push ()4 "
 ; (
 ; 80
 load32 80 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; break
 jump Label_1749
 ; case
 ; RPN'ized expression: "33 "
 ; Expanded expression: "33 "
 ; Expression value: 33
Label_1755:
 ; RPN'ized expression: "( 1 push ) "
 ; Expanded expression: " 1  push ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; RPN'ized expression: "( 8 push ) "
 ; Expanded expression: " 8  push ()4 "
 ; (
 ; 8
 load32 8 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; break
 jump Label_1749
 ; default
Label_1756:
 ; RPN'ized expression: "( lastTok push ) "
 ; Expanded expression: " (@-8) *(4)  push ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; break
 jump Label_1749
 ; }
 jump Label_1749
Label_1750:
 load32 38 r12
 bne r2 r12 2
 jump Label_1751
 load32 42 r12
 bne r2 r12 2
 jump Label_1752
 load32 43 r12
 bne r2 r12 2
 jump Label_1753
 load32 45 r12
 bne r2 r12 2
 jump Label_1754
 load32 33 r12
 bne r2 r12 2
 jump Label_1755
 jump Label_1756
Label_1749:
 ; }
 jump Label_1743
Label_1742:
 ; else
 ; {
 ; loc         inspos : (@-8) : int
 ; RPN'ized expression: "inspos sp = "
 ; Expanded expression: "(@-8) sp *(4) =(4) "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "tok 1 == tok 2 == || "
 ; Expanded expression: "(@8) *(4) 1 == [sh||->1759] (@8) *(4) 2 == ||[1759] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1759
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1759:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1757
 ; {
 ; RPN'ized expression: "( TokenValueInt , tok push2 ) "
 ; Expanded expression: " TokenValueInt *(4)  (@8) *(4)  push2 ()8 "
 ; (
 ; TokenValueInt
 ; * (read dereference)
 addr2reg TokenValueInt r1
 read 0 r1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; push2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; RPN'ized expression: "gotUnary *u 1 = "
 ; Expanded expression: "(@12) *(4) 1 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 jump Label_1758
Label_1757:
 ; else
 ; if
 ; RPN'ized expression: "tok 3 == "
 ; Expanded expression: "(@8) *(4) 3 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 3
 ; ==
 load32 3 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1760
 ; {
 ; loc             lbl : (@-12) : int
 ; RPN'ized expression: "lbl LabelCnt ++p = "
 ; Expanded expression: "(@-12) LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; loc             id : (@-16) : int
 ; loc             ltok : (@-20) : int
 ; RPN'ized expression: "ltok tok = "
 ; Expanded expression: "(@-20) (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; loc             wide : (@-24) : int
 ; RPN'ized expression: "wide 0 = "
 ; Expanded expression: "(@-24) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -24 r14 r0
 ; loc             chsz : (@-28) : unsigned
 ; RPN'ized expression: "chsz 1 = "
 ; Expanded expression: "(@-28) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -28 r14 r2
 ; loc             sz : (@-32) : unsigned
 ; RPN'ized expression: "sz chsz = "
 ; Expanded expression: "(@-32) (@-28) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; if
 ; RPN'ized expression: "sizeofLevel 0 == "
 ; Expanded expression: "L1741 *(4) 0 == "
 ; 1741
 ; * (read dereference)
 addr2reg Label_1741 r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1762
 ; {
 ; if
 ; RPN'ized expression: "CurHeaderFooter "
 ; Expanded expression: "CurHeaderFooter *(4) "
 ; CurHeaderFooter
 ; * (read dereference)
 addr2reg CurHeaderFooter r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1764
 ; RPN'ized expression: "( CurHeaderFooter 1 + *u puts2 ) "
 ; Expanded expression: " CurHeaderFooter *(4) 4 + *(4)  puts2 ()4 "
 ; (
 ; CurHeaderFooter
 ; * (read dereference)
 addr2reg CurHeaderFooter r1
 read 0 r1 r4
 ; 4
 ; +
 add r4 4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
Label_1764:
 ; RPN'ized expression: "( RoDataHeaderFooter 0 + *u puts2 ) "
 ; Expanded expression: " RoDataHeaderFooter 0 + *(4)  puts2 ()4 "
 ; (
 ; RoDataHeaderFooter
 addr2reg RoDataHeaderFooter r4
 ; 0
 ; +
 add r4 0 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
 ; RPN'ized expression: "( lbl GenNumLabel ) "
 ; Expanded expression: " (@-12) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; }
Label_1762:
 ; do
Label_1766:
 ; {
 ; RPN'ized expression: "( sizeofLevel 100 0 ? , wide , 34 GetString ) "
 ; Expanded expression: " L1741 *(4) [sh||->1769] 100 goto &&[1769] 0 &&[1770]  (@-24) *(4)  34  GetString ()12 "
 ; (
 ; 1741
 ; * (read dereference)
 addr2reg Label_1741 r1
 read 0 r1 r6
 ; short-circuit ||
 ; JumpIfNotZero
 beq r6 r0 2
 jump Label_1769
 ; 100
 load32 100 r6
 ; sh-circ-goto goto
 jump Label_1770
 ; short-circuit && target
Label_1769:
 ; 0
 load32 0 r6
 ; short-circuit && target
Label_1770:
 ; ,
 ; local ofs
 ; * (read dereference)
 read -24 r14 r5
 ; ,
 ; 34
 load32 34 r4
 ; ,
 ; GetString
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetString
 add r13 16 r13
 ; if
 ; RPN'ized expression: "sz TokenStringSize + sz < sz TokenStringSize + ( 1 -u truncUint ) >= || "
 ; Expanded expression: "(@-32) *(4) TokenStringSize *(4) + (@-32) *(4) <u [sh||->1773] (@-32) *(4) TokenStringSize *(4) +  -1  truncUint ()4 >=u ||[1773] "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; TokenStringSize
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg TokenStringSize r1
 read 0 r1 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -32 r14 r2
 ; <u
 read 0 r13 r11
 add r13 4 r13
 bges r11 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1773
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; TokenStringSize
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg TokenStringSize r1
 read 0 r1 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; -1
 load32 -1 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; >=u
 read 0 r13 r11
 add r13 4 r13
 bges r11 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit || target
Label_1773:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1771
 ; RPN'ized expression: "( errorStrLen ) "
 ; Expanded expression: " errorStrLen ()0 "
 ; (
 ; errorStrLen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorStrLen
 add r13 16 r13
Label_1771:
 ; RPN'ized expression: "sz TokenStringSize += "
 ; Expanded expression: "(@-32) TokenStringSize *(4) +=(4) "
 ; TokenStringSize
 ; * (read dereference)
 addr2reg TokenStringSize r1
 read 0 r1 r2
 ; local ofs
 ; +=
 read -32 r14 r12
 add r12 r2 r2
 write -32 r14 r2
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 ; while
 ; RPN'ized expression: "tok ltok == "
 ; Expanded expression: "(@8) *(4) (@-20) *(4) == "
Label_1767:
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; * (read dereference)
 read -20 r14 r8
 ; ==
 bne r2 r8 2
 jump Label_1766
Label_1768:
 ; if
 ; RPN'ized expression: "sizeofLevel 0 == "
 ; Expanded expression: "L1741 *(4) 0 == "
 ; 1741
 ; * (read dereference)
 addr2reg Label_1741 r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1774
 ; {
 ; RPN'ized expression: "( 0 , chsz GenZeroData ) "
 ; Expanded expression: " 0  (@-28) *(4)  GenZeroData ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -28 r14 r4
 ; ,
 ; GenZeroData
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenZeroData
 add r13 16 r13
 ; RPN'ized expression: "( RoDataHeaderFooter 1 + *u puts2 ) "
 ; Expanded expression: " RoDataHeaderFooter 4 + *(4)  puts2 ()4 "
 ; (
 ; RoDataHeaderFooter
 addr2reg RoDataHeaderFooter r4
 ; 4
 ; +
 add r4 4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "CurHeaderFooter "
 ; Expanded expression: "CurHeaderFooter *(4) "
 ; CurHeaderFooter
 ; * (read dereference)
 addr2reg CurHeaderFooter r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1776
 ; RPN'ized expression: "( CurHeaderFooter 0 + *u puts2 ) "
 ; Expanded expression: " CurHeaderFooter *(4) 0 + *(4)  puts2 ()4 "
 ; (
 ; CurHeaderFooter
 ; * (read dereference)
 addr2reg CurHeaderFooter r1
 read 0 r1 r4
 ; 0
 ; +
 add r4 0 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
Label_1776:
 ; }
Label_1774:
 ; RPN'ized expression: "( id ( lbl AddNumericIdent ) = , 16 PushSyntax2 ) "
 ; Expanded expression: " (@-16)  (@-12) *(4)  AddNumericIdent ()4 =(4)  16  PushSyntax2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; ,
 ; AddNumericIdent
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump AddNumericIdent
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; ,
 ; 16
 sub r13 4 r13
 write 0 r13 r2
 load32 16 r2
 ; ,
 ; PushSyntax2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
 ; RPN'ized expression: "( 91 PushSyntax ) "
 ; Expanded expression: " 91  PushSyntax ()4 "
 ; (
 ; 91
 load32 91 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; RPN'ized expression: "( ( chsz , sz division ) , 2 PushSyntax2 ) "
 ; Expanded expression: "  (@-28) *(4)  (@-32) *(4)  division ()8  2  PushSyntax2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 8 r13
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -32 r14 r2
 ; ,
 ; division
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump division
 add r13 16 r13
 ; ,
 ; 2
 sub r13 4 r13
 write 0 r13 r2
 load32 2 r2
 ; ,
 ; PushSyntax2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
 ; RPN'ized expression: "( 93 PushSyntax ) "
 ; Expanded expression: " 93  PushSyntax ()4 "
 ; (
 ; 93
 load32 93 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; RPN'ized expression: "( 18 PushSyntax ) "
 ; Expanded expression: " 18  PushSyntax ()4 "
 ; (
 ; 18
 load32 18 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; RPN'ized expression: "( id , 16 push2 ) "
 ; Expanded expression: " (@-16) *(4)  16  push2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -16 r14 r5
 ; ,
 ; 16
 load32 16 r4
 ; ,
 ; push2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; RPN'ized expression: "gotUnary *u 1 = "
 ; Expanded expression: "(@12) *(4) 1 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
 jump Label_1761
Label_1760:
 ; else
 ; if
 ; RPN'ized expression: "tok 16 == "
 ; Expanded expression: "(@8) *(4) 16 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1778
 ; {
 ; RPN'ized expression: "( ( TokenIdentName AddIdent ) , tok push2 ) "
 ; Expanded expression: "  TokenIdentName  AddIdent ()4  (@8) *(4)  push2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; TokenIdentName
 addr2reg TokenIdentName r2
 ; ,
 ; AddIdent
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump AddIdent
 add r13 16 r13
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; push2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; RPN'ized expression: "gotUnary *u 1 = "
 ; Expanded expression: "(@12) *(4) 1 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 jump Label_1779
Label_1778:
 ; else
 ; if
 ; RPN'ized expression: "tok 40 == "
 ; Expanded expression: "(@8) *(4) 40 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1780
 ; {
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "decl ( 1 , tok TokenStartsDeclaration ) = "
 ; Expanded expression: "(@-4)  1  (@8) *(4)  TokenStartsDeclaration ()8 =(4) "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; TokenStartsDeclaration
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump TokenStartsDeclaration
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "decl "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1782
 ; {
 ; loc                 synPtr : (@-12) : int
 ; loc                 lbl : (@-16) : int
 ; RPN'ized expression: "lbl LabelCnt ++p = "
 ; Expanded expression: "(@-16) LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "1 2 8 lbl sizeof * + 3 / + L1784 sizeof + 1 - "
 ; Expanded expression: "23u "
 ; Expression value: 23u
 ; loc                 s : (@-40) : [23u] char
 ; loc                 p : (@-44) : * char
 ; RPN'ized expression: "p s s sizeof + = "
 ; Expanded expression: "(@-44) (@-17) =(4) "
 ; local ofs
 sub r14 17 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; RPN'ized expression: "tok ( 0 , argOfSizeOf 0 == , 0 , tok ParseDecl ) = "
 ; Expanded expression: "(@8)  0  (@20) *(4) 0 ==  0  (@8) *(4)  ParseDecl ()16 =(4) "
 ; (
 ; 0
 load32 0 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 20 r14 r6
 ; 0
 ; ==
 load32 1 r1
 bges r6 r1 3
 load32 1 r6
 jumpo 2
 load32 0 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseDecl
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 41 != "
 ; Expanded expression: "(@8) *(4) 41 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 41
 ; !=
 load32 41 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_1785
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_1785:

.rdata
Label_1787:
.dw 60 115 111 109 101 116 104 105 110 103 62 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "synPtr ( L1787 FindSymbol ) = "
 ; Expanded expression: "(@-12)  L1787  FindSymbol ()4 =(4) "
 ; (
 ; 1787
 addr2reg Label_1787 r4
 ; ,
 ; FindSymbol
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump FindSymbol
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; RPN'ized expression: "p -- *u 0 = "
 ; Expanded expression: "(@-44) --(4) 0 =(-1) "
 ; local ofs
 ; --
 read -44 r14 r2
 sub r2 1 r2
 write -44 r14 r2
 ; 0
 ; =
 write 0 r2 r0

.rdata
Label_1788:
.dw 41 62 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p -- *u L1788 argOfSizeOf + *u = "
 ; Expanded expression: "(@-44) --(4) L1788 (@20) *(4) + *(-1) =(-1) "
 ; local ofs
 ; --
 read -44 r14 r2
 sub r2 1 r2
 write -44 r14 r2
 ; 1788
 addr2reg Label_1788 r8
 ; local ofs
 ; * (read dereference)
 read 20 r14 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "p ( lbl , p lab2str ) = "
 ; Expanded expression: "(@-44)  (@-16) *(4)  (@-44) *(4)  lab2str ()8 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -16 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -44 r14 r4
 ; ,
 ; lab2str
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump lab2str
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; RPN'ized expression: "p L1789 sizeof 2 - 1 - -= "
 ; Expanded expression: "(@-44) 9u -=(4) "
 ; 9
 load32 9 r2
 ; local ofs
 ; -=
 read -44 r14 r12
 sub r12 r2 r2
 write -44 r14 r2

.rdata
Label_1790:
.dw 115 111 109 101 116 104 105 110 103 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L1791 sizeof 1 - , L1790 , p memcpy ) "
 ; Expanded expression: " 9u  L1790  (@-44) *(4)  memcpy ()12 "
 ; (
 ; 9
 load32 9 r6
 ; ,
 ; 1790
 addr2reg Label_1790 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -44 r14 r4
 ; ,
 ; memcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memcpy
 add r13 16 r13

.rdata
Label_1792:
.dw 40 60 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "p -- *u L1792 argOfSizeOf + *u = "
 ; Expanded expression: "(@-44) --(4) L1792 (@20) *(4) + *(-1) =(-1) "
 ; local ofs
 ; --
 read -44 r14 r2
 sub r2 1 r2
 write -44 r14 r2
 ; 1792
 addr2reg Label_1792 r8
 ; local ofs
 ; * (read dereference)
 read 20 r14 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "SyntaxStack1 synPtr + *u ( p AddIdent ) = "
 ; Expanded expression: "SyntaxStack1 (@-12) *(4) 4 * +  (@-44) *(4)  AddIdent ()4 =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -12 r14 r2
 ; 2
 ; <<
 shiftl r2 2 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -44 r14 r4
 ; ,
 ; AddIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump AddIdent
 add r13 16 r13
 ; = (write dereference)
 read 0 r13 r11
 add r13 4 r13
 write 0 r11 r2
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "argOfSizeOf "
 ; Expanded expression: "(@20) *(4) "
 ; local ofs
 ; * (read dereference)
 read 20 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1793
 ; {
 ; RPN'ized expression: "gotUnary *u 1 = "
 ; Expanded expression: "(@12) *(4) 1 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
 jump Label_1794
Label_1793:
 ; else
 ; {
 ; RPN'ized expression: "decl 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
 ; RPN'ized expression: "tok ( 0 , commaSeparator , gotUnary , tok exprUnary ) = "
 ; Expanded expression: "(@8)  0  (@16) *(4)  (@12) *(4)  (@8) *(4)  exprUnary ()16 =(4) "
 ; (
 ; 0
 load32 0 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprUnary
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprUnary
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "gotUnary *u 0 == "
 ; Expanded expression: "(@12) *(4) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1795
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_1795:
 ; }
Label_1794:
 ; RPN'ized expression: "( SyntaxStack1 synPtr + *u , 16 push2 ) "
 ; Expanded expression: " SyntaxStack1 (@-12) *(4) 4 * + *(4)  16  push2 ()8 "
 ; (
 ; SyntaxStack1
 addr2reg SyntaxStack1 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -12 r14 r5
 ; 2
 ; <<
 shiftl r5 2 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 16
 load32 16 r4
 ; ,
 ; push2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; }
 jump Label_1783
Label_1782:
 ; else
 ; {
 ; RPN'ized expression: "tok ( 0 , gotUnary , tok expr ) = "
 ; Expanded expression: "(@8)  0  (@12) *(4)  (@8) *(4)  expr ()12 =(4) "
 ; (
 ; 0
 load32 0 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; expr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump expr
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 41 != "
 ; Expanded expression: "(@8) *(4) 41 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 41
 ; !=
 load32 41 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_1797
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_1797:
 ; if
 ; RPN'ized expression: "gotUnary *u 0 == "
 ; Expanded expression: "(@12) *(4) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1799
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_1799:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
Label_1783:
 ; }
Label_1780:
Label_1779:
Label_1761:
Label_1758:
 ; while
 ; RPN'ized expression: "gotUnary *u decl 0 == && "
 ; Expanded expression: "(@12) *(4) *(4) _Bool [sh&&->1803] (@-4) *(4) 0 == &&[1803] "
Label_1801:
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1803
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1803:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1802
 ; {
 ; if
 ; RPN'ized expression: "tok 40 == "
 ; Expanded expression: "(@8) *(4) 40 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1804
 ; {
 ; loc                 acnt : (@-12) : int
 ; RPN'ized expression: "acnt 0 = "
 ; Expanded expression: "(@-12) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -12 r14 r0
 ; RPN'ized expression: "( 40 , inspos ins ) "
 ; Expanded expression: " 40  (@-8) *(4)  ins ()8 "
 ; (
 ; 40
 load32 40 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; ins
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins
 add r13 16 r13
 ; for
Label_1806:
 ; {
 ; loc                     pos2 : (@-16) : int
 ; RPN'ized expression: "pos2 sp = "
 ; Expanded expression: "(@-16) sp *(4) =(4) "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "tok ( 1 , gotUnary , tok expr ) = "
 ; Expanded expression: "(@8)  1  (@12) *(4)  (@8) *(4)  expr ()12 =(4) "
 ; (
 ; 1
 load32 1 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; expr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump expr
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; while
 ; RPN'ized expression: "pos2 sp < "
 ; Expanded expression: "(@-16) *(4) sp *(4) < "
Label_1810:
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_1811
 ; {
 ; loc                         v : (@-20) : int
 ; loc                         v2 : (@-24) : int
 ; RPN'ized expression: "v ( v2 &u pop2 ) = "
 ; Expanded expression: "(@-20)  (@-24)  pop2 ()4 =(4) "
 ; (
 ; local ofs
 sub r14 24 r4
 ; ,
 ; pop2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump pop2
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; RPN'ized expression: "( v2 , v , inspos 1 + ins2 ) "
 ; Expanded expression: " (@-24) *(4)  (@-20) *(4)  (@-8) *(4) 1 +  ins2 ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -24 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -20 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; ,
 ; ins2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins2
 add r13 16 r13
 ; RPN'ized expression: "pos2 ++p "
 ; Expanded expression: "(@-16) ++p(4) "
 ; local ofs
 ; ++p
 read -16 r14 r2
 add r2 1 r2
 write -16 r14 r2
 sub r2 1 r2
 ; }
 jump Label_1810
Label_1811:
 ; if
 ; RPN'ized expression: "tok 44 == "
 ; Expanded expression: "(@8) *(4) 44 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 44
 ; ==
 load32 44 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1812
 ; {
 ; if
 ; RPN'ized expression: "gotUnary *u 0 == "
 ; Expanded expression: "(@12) *(4) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1814
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_1814:
 ; RPN'ized expression: "acnt ++p "
 ; Expanded expression: "(@-12) ++p(4) "
 ; local ofs
 ; ++p
 read -12 r14 r2
 add r2 1 r2
 write -12 r14 r2
 sub r2 1 r2
 ; RPN'ized expression: "( 44 , inspos 1 + ins ) "
 ; Expanded expression: " 44  (@-8) *(4) 1 +  ins ()8 "
 ; (
 ; 44
 load32 44 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; ,
 ; ins
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins
 add r13 16 r13
 ; continue
 jump Label_1806
 ; }
Label_1812:
 ; if
 ; RPN'ized expression: "tok 41 == "
 ; Expanded expression: "(@8) *(4) 41 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1816
 ; {
 ; if
 ; RPN'ized expression: "acnt gotUnary *u 0 == && "
 ; Expanded expression: "(@-12) *(4) _Bool [sh&&->1820] (@12) *(4) *(4) 0 == &&[1820] "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1820
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1820:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1818
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_1818:
 ; RPN'ized expression: "gotUnary *u 1 = "
 ; Expanded expression: "(@12) *(4) 1 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; break
 jump Label_1809
 ; }
Label_1816:
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
 ; }
 jump Label_1806
Label_1809:
 ; RPN'ized expression: "( 41 push ) "
 ; Expanded expression: " 41  push ()4 "
 ; (
 ; 41
 load32 41 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; }
 jump Label_1805
Label_1804:
 ; else
 ; if
 ; RPN'ized expression: "tok 91 == "
 ; Expanded expression: "(@8) *(4) 91 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 91
 ; ==
 load32 91 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1821
 ; {
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "tok ( 0 , gotUnary , tok expr ) = "
 ; Expanded expression: "(@8)  0  (@12) *(4)  (@8) *(4)  expr ()12 =(4) "
 ; (
 ; 0
 load32 0 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; expr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump expr
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "gotUnary *u 0 == "
 ; Expanded expression: "(@12) *(4) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1823
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_1823:
 ; if
 ; RPN'ized expression: "tok 93 != "
 ; Expanded expression: "(@8) *(4) 93 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 93
 ; !=
 load32 93 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_1825
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_1825:
 ; RPN'ized expression: "( 43 push ) "
 ; Expanded expression: " 43  push ()4 "
 ; (
 ; 43
 load32 43 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; RPN'ized expression: "( 78 push ) "
 ; Expanded expression: " 78  push ()4 "
 ; (
 ; 78
 load32 78 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; }
 jump Label_1822
Label_1821:
 ; else
 ; if
 ; RPN'ized expression: "tok 12 == "
 ; Expanded expression: "(@8) *(4) 12 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 12
 ; ==
 load32 12 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1827
 ; {
 ; RPN'ized expression: "( 81 push ) "
 ; Expanded expression: " 81  push ()4 "
 ; (
 ; 81
 load32 81 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; }
 jump Label_1828
Label_1827:
 ; else
 ; if
 ; RPN'ized expression: "tok 13 == "
 ; Expanded expression: "(@8) *(4) 13 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 13
 ; ==
 load32 13 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1829
 ; {
 ; RPN'ized expression: "( 82 push ) "
 ; Expanded expression: " 82  push ()4 "
 ; (
 ; 82
 load32 82 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; }
 jump Label_1830
Label_1829:
 ; else
 ; if
 ; RPN'ized expression: "tok 46 == tok 14 == || "
 ; Expanded expression: "(@8) *(4) 46 == [sh||->1833] (@8) *(4) 14 == ||[1833] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 46
 ; ==
 load32 46 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1833
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 14
 ; ==
 load32 14 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1833:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1831
 ; {
 ; if
 ; RPN'ized expression: "tok 46 == "
 ; Expanded expression: "(@8) *(4) 46 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 46
 ; ==
 load32 46 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1834
 ; RPN'ized expression: "( 77 push ) "
 ; Expanded expression: " 77  push ()4 "
 ; (
 ; 77
 load32 77 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
Label_1834:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 16 != "
 ; Expanded expression: "(@8) *(4) 16 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 16
 ; !=
 load32 16 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_1836
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_1836:
 ; RPN'ized expression: "( ( TokenIdentName AddIdent ) , tok push2 ) "
 ; Expanded expression: "  TokenIdentName  AddIdent ()4  (@8) *(4)  push2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; TokenIdentName
 addr2reg TokenIdentName r2
 ; ,
 ; AddIdent
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump AddIdent
 add r13 16 r13
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; push2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; RPN'ized expression: "( 14 push ) "
 ; Expanded expression: " 14  push ()4 "
 ; (
 ; 14
 load32 14 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; RPN'ized expression: "( 78 push ) "
 ; Expanded expression: " 78  push ()4 "
 ; (
 ; 78
 load32 78 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; }
 jump Label_1832
Label_1831:
 ; else
 ; {
 ; break
 jump Label_1802
 ; }
Label_1832:
Label_1830:
Label_1828:
Label_1822:
Label_1805:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 jump Label_1801
Label_1802:
 ; }
Label_1743:
 ; if
 ; RPN'ized expression: "tok 44 == commaSeparator 0 == && "
 ; Expanded expression: "(@8) *(4) 44 == [sh&&->1840] (@16) *(4) 0 == &&[1840] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 44
 ; ==
 load32 44 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1840
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1840:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1838
 ; RPN'ized expression: "tok 48 = "
 ; Expanded expression: "(@8) 48 =(4) "
 ; 48
 load32 48 r2
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
Label_1838:
 ; return
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
Label_1740:
 read 4 r14 r15
 read 0 r14 r14
 add r13 52 r13
 jumpr 0 r15

 ; glb expr : (
 ; prm     tok : int
 ; prm     gotUnary : * int
 ; prm     commaSeparator : int
 ;     ) int
.code
; .globl expr
expr:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13         24 r13
 write         16 r13 r14
 add r13         16 r14
   write 4 r14 r15
 ; loc     tok : (@8) : int
 ; loc     gotUnary : (@12) : * int
 ; loc     commaSeparator : (@16) : int
 ; RPN'ized expression: "gotUnary *u 0 = "
 ; Expanded expression: "(@12) *(4) 0 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; =
 write 0 r2 r0
 ; RPN'ized expression: "( 0 pushop ) "
 ; Expanded expression: " 0  pushop ()4 "
 ; (
 ; 0
 load32 0 r4
 ; ,
 ; pushop
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump pushop
 add r13 16 r13
 ; RPN'ized expression: "tok ( 0 , commaSeparator , gotUnary , tok exprUnary ) = "
 ; Expanded expression: "(@8)  0  (@16) *(4)  (@12) *(4)  (@8) *(4)  exprUnary ()16 =(4) "
 ; (
 ; 0
 load32 0 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprUnary
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprUnary
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; while

.rdata
Label_1844:
.dw 44 59 58 41 93 125 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "tok 0 != ( tok , L1844 strchr ) 0 == && gotUnary *u && "
 ; Expanded expression: "(@8) *(4) 0 != [sh&&->1846]  (@8) *(4)  L1844  strchr ()8 0 == &&[1846] _Bool [sh&&->1845] (@12) *(4) *(4) _Bool &&[1845] "
Label_1842:
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; !=
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1846
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 1844
 addr2reg Label_1844 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1846:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1845
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1845:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1843
 ; {
 ; if
 ; RPN'ized expression: "( tok isop ) ( tok isunary ) 0 == && "
 ; Expanded expression: " (@8) *(4)  isop ()4 _Bool [sh&&->1849]  (@8) *(4)  isunary ()4 0 == &&[1849] "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; isop
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isop
 add r13 16 r13
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1849
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; isunary
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isunary
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1849:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1847
 ; {
 ; while
 ; RPN'ized expression: "( tok , ( opstacktop ) precedGEQ ) "
 ; Expanded expression: " (@8) *(4)   opstacktop ()0  precedGEQ ()8 "
Label_1850:
 ; (
 sub r13 8 r13
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; (
 sub r13 4 r13
 write 0 r13 r2
 sub r13 16 r13
 ; opstacktop
 ; ) fxn call
 savpc r15
 add r15 3 r15
 jump opstacktop
 add r13 16 r13
 ; ,
 ; precedGEQ
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump precedGEQ
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1851
 ; {
 ; loc                 v : (@-4) : int
 ; loc                 v2 : (@-8) : int
 ; RPN'ized expression: "v ( v2 &u popop2 ) = "
 ; Expanded expression: "(@-4)  (@-8)  popop2 ()4 =(4) "
 ; (
 ; local ofs
 sub r14 8 r4
 ; ,
 ; popop2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump popop2
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "v 63 == "
 ; Expanded expression: "(@-4) *(4) 63 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 63
 ; ==
 load32 63 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1852
 ; {
 ; loc                     cnt : (@-12) : int
 ; RPN'ized expression: "cnt v2 = "
 ; Expanded expression: "(@-12) (@-8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; while
 ; RPN'ized expression: "cnt --p "
 ; Expanded expression: "(@-12) --p(4) "
Label_1854:
 ; local ofs
 ; --p
 read -12 r14 r2
 sub r2 1 r2
 write -12 r14 r2
 add r2 1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1855
 ; {
 ; RPN'ized expression: "v ( v2 &u popop2 ) = "
 ; Expanded expression: "(@-4)  (@-8)  popop2 ()4 =(4) "
 ; (
 ; local ofs
 sub r14 8 r4
 ; ,
 ; popop2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump popop2
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "( v2 , v push2 ) "
 ; Expanded expression: " (@-8) *(4)  (@-4) *(4)  push2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; push2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; }
 jump Label_1854
Label_1855:
 ; RPN'ized expression: "v 63 = "
 ; Expanded expression: "(@-4) 63 =(4) "
 ; 63
 load32 63 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "v2 0 = "
 ; Expanded expression: "(@-8) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -8 r14 r0
 ; }
Label_1852:
 ; RPN'ized expression: "( v2 , v push2 ) "
 ; Expanded expression: " (@-8) *(4)  (@-4) *(4)  push2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; push2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; }
 jump Label_1850
Label_1851:
 ; if
 ; RPN'ized expression: "tok 63 == "
 ; Expanded expression: "(@8) *(4) 63 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 63
 ; ==
 load32 63 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1856
 ; {
 ; loc                 ssp : (@-4) : int
 ; RPN'ized expression: "ssp sp = "
 ; Expanded expression: "(@-4) sp *(4) =(4) "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc                 cnt : (@-8) : int
 ; RPN'ized expression: "tok ( 0 , gotUnary , ( GetToken ) expr ) = "
 ; Expanded expression: "(@8)  0  (@12) *(4)   GetToken ()0  expr ()12 =(4) "
 ; (
 sub r13 4 r13
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 12 r14 r2
 ; ,
 ; (
 sub r13 4 r13
 write 0 r13 r2
 sub r13 16 r13
 ; GetToken
 ; ) fxn call
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; ,
 ; expr
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 read 8 r13 r6
 savpc r15
 add r15 3 r15
 jump expr
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "gotUnary *u 0 == tok 58 != || "
 ; Expanded expression: "(@12) *(4) *(4) 0 == [sh||->1860] (@8) *(4) 58 != ||[1860] "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1860
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 58
 ; !=
 load32 58 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1860:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1858
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_1858:
 ; RPN'ized expression: "cnt sp ssp - = "
 ; Expanded expression: "(@-8) sp *(4) (@-4) *(4) - =(4) "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; while
 ; RPN'ized expression: "sp ssp > "
 ; Expanded expression: "sp *(4) (@-4) *(4) > "
Label_1861:
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; >
 bges r8 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_1862
 ; {
 ; loc                     v : (@-12) : int
 ; loc                     v2 : (@-16) : int
 ; RPN'ized expression: "v ( v2 &u pop2 ) = "
 ; Expanded expression: "(@-12)  (@-16)  pop2 ()4 =(4) "
 ; (
 ; local ofs
 sub r14 16 r4
 ; ,
 ; pop2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump pop2
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; RPN'ized expression: "( v2 , v pushop2 ) "
 ; Expanded expression: " (@-16) *(4)  (@-12) *(4)  pushop2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -16 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; pushop2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump pushop2
 add r13 16 r13
 ; }
 jump Label_1861
Label_1862:
 ; RPN'ized expression: "( cnt , 63 pushop2 ) "
 ; Expanded expression: " (@-8) *(4)  63  pushop2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r5
 ; ,
 ; 63
 load32 63 r4
 ; ,
 ; pushop2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump pushop2
 add r13 16 r13
 ; }
 jump Label_1857
Label_1856:
 ; else
 ; {
 ; RPN'ized expression: "( tok pushop ) "
 ; Expanded expression: " (@8) *(4)  pushop ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; pushop
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump pushop
 add r13 16 r13
 ; }
Label_1857:
 ; RPN'ized expression: "tok ( 0 , commaSeparator , gotUnary , ( GetToken ) exprUnary ) = "
 ; Expanded expression: "(@8)  0  (@16) *(4)  (@12) *(4)   GetToken ()0  exprUnary ()16 =(4) "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 16 r14 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 12 r14 r2
 ; ,
 ; (
 sub r13 4 r13
 write 0 r13 r2
 sub r13 16 r13
 ; GetToken
 ; ) fxn call
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; ,
 ; exprUnary
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 read 8 r13 r6
 read 12 r13 r7
 savpc r15
 add r15 3 r15
 jump exprUnary
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "gotUnary *u 0 == "
 ; Expanded expression: "(@12) *(4) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1863
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_1863:
 ; continue
 jump Label_1842
 ; }
Label_1847:
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
 ; }
 jump Label_1842
Label_1843:
 ; while
 ; RPN'ized expression: "( opstacktop ) 0 != "
 ; Expanded expression: " opstacktop ()0 0 != "
Label_1865:
 ; (
 ; opstacktop
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump opstacktop
 add r13 16 r13
 ; 0
 ; !=
 bne r2 r0 2
 jump Label_1866
 ; {
 ; loc         v : (@-4) : int
 ; loc         v2 : (@-8) : int
 ; RPN'ized expression: "v ( v2 &u popop2 ) = "
 ; Expanded expression: "(@-4)  (@-8)  popop2 ()4 =(4) "
 ; (
 ; local ofs
 sub r14 8 r4
 ; ,
 ; popop2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump popop2
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "v 63 == "
 ; Expanded expression: "(@-4) *(4) 63 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 63
 ; ==
 load32 63 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1867
 ; {
 ; loc             cnt : (@-12) : int
 ; RPN'ized expression: "cnt v2 = "
 ; Expanded expression: "(@-12) (@-8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; while
 ; RPN'ized expression: "cnt --p "
 ; Expanded expression: "(@-12) --p(4) "
Label_1869:
 ; local ofs
 ; --p
 read -12 r14 r2
 sub r2 1 r2
 write -12 r14 r2
 add r2 1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1870
 ; {
 ; RPN'ized expression: "v ( v2 &u popop2 ) = "
 ; Expanded expression: "(@-4)  (@-8)  popop2 ()4 =(4) "
 ; (
 ; local ofs
 sub r14 8 r4
 ; ,
 ; popop2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump popop2
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "( v2 , v push2 ) "
 ; Expanded expression: " (@-8) *(4)  (@-4) *(4)  push2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; push2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; }
 jump Label_1869
Label_1870:
 ; RPN'ized expression: "v 63 = "
 ; Expanded expression: "(@-4) 63 =(4) "
 ; 63
 load32 63 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "v2 0 = "
 ; Expanded expression: "(@-8) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -8 r14 r0
 ; }
Label_1867:
 ; RPN'ized expression: "( v2 , v push2 ) "
 ; Expanded expression: " (@-8) *(4)  (@-4) *(4)  push2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; push2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; }
 jump Label_1865
Label_1866:
 ; RPN'ized expression: "( popop ) "
 ; Expanded expression: " popop ()0 "
 ; (
 ; popop
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump popop
 add r13 16 r13
 ; return
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
Label_1841:
 read 4 r14 r15
 read 0 r14 r14
 add r13 24 r13
 jumpr 0 r15

 ; glb isAnyPtr : (
 ; prm     ExprTypeSynPtr : int
 ;     ) int
.code
; .globl isAnyPtr
isAnyPtr:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
 ; write 4 r14 r15
 ; loc     ExprTypeSynPtr : (@8) : int
 ; if
 ; RPN'ized expression: "ExprTypeSynPtr 0 < "
 ; Expanded expression: "(@8) *(4) 0 < "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; <
 bgts r0 r2 2
 jump Label_1872
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_1871
Label_1872:
 ; switch
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr + *u "
 ; Expanded expression: "SyntaxStack0 (@8) *(4) + *(1) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_1875
 ; {
 ; case
 ; RPN'ized expression: "42 "
 ; Expanded expression: "42 "
 ; Expression value: 42
Label_1876:
 ; case
 ; RPN'ized expression: "91 "
 ; Expanded expression: "91 "
 ; Expression value: 91
Label_1877:
 ; case
 ; RPN'ized expression: "40 "
 ; Expanded expression: "40 "
 ; Expression value: 40
Label_1878:
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_1871
 ; }
 jump Label_1874
Label_1875:
 load32 42 r12
 bne r2 r12 2
 jump Label_1876
 load32 91 r12
 bne r2 r12 2
 jump Label_1877
 load32 40 r12
 bne r2 r12 2
 jump Label_1878
Label_1874:
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
Label_1871:
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb derefAnyPtr : (
 ; prm     ExprTypeSynPtr : int
 ;     ) int
.code
; .globl derefAnyPtr
derefAnyPtr:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     ExprTypeSynPtr : (@8) : int
 ; if
 ; RPN'ized expression: "ExprTypeSynPtr 0 < "
 ; Expanded expression: "(@8) *(4) 0 < "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; <
 bgts r0 r2 2
 jump Label_1880
 ; return
 ; RPN'ized expression: "ExprTypeSynPtr -u "
 ; Expanded expression: "(@8) *(4) -u "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; -u
 sub r0 r2 r2
 jump Label_1879
Label_1880:
 ; switch
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr + *u "
 ; Expanded expression: "SyntaxStack0 (@8) *(4) + *(1) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_1883
 ; {
 ; case
 ; RPN'ized expression: "42 "
 ; Expanded expression: "42 "
 ; Expression value: 42
Label_1884:
 ; return
 ; RPN'ized expression: "ExprTypeSynPtr 1 + "
 ; Expanded expression: "(@8) *(4) 1 + "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 1
 ; +
 add r2 1 r2
 jump Label_1879
 ; case
 ; RPN'ized expression: "91 "
 ; Expanded expression: "91 "
 ; Expression value: 91
Label_1885:
 ; return
 ; RPN'ized expression: "ExprTypeSynPtr 3 + "
 ; Expanded expression: "(@8) *(4) 3 + "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 3
 ; +
 add r2 3 r2
 jump Label_1879
 ; case
 ; RPN'ized expression: "40 "
 ; Expanded expression: "40 "
 ; Expression value: 40
Label_1886:
 ; return
 ; RPN'ized expression: "ExprTypeSynPtr "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 jump Label_1879
 ; }
 jump Label_1882
Label_1883:
 load32 42 r12
 bne r2 r12 2
 jump Label_1884
 load32 91 r12
 bne r2 r12 2
 jump Label_1885
 load32 40 r12
 bne r2 r12 2
 jump Label_1886
Label_1882:
 ; RPN'ized expression: "( 22 errorInternal ) "
 ; Expanded expression: " 22  errorInternal ()4 "
 ; (
 ; 22
 load32 22 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
 ; return
 ; RPN'ized expression: "1 -u "
 ; Expanded expression: "-1 "
 ; Expression value: -1
 ; -1
 load32 -1 r2
Label_1879:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb decayArray : (
 ; prm     ExprTypeSynPtr : * int
 ; prm     arithmetic : int
 ;     ) void
.code
; .globl decayArray
decayArray:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     ExprTypeSynPtr : (@8) : * int
 ; loc     arithmetic : (@12) : int
 ; if
 ; RPN'ized expression: "ExprTypeSynPtr *u 0 >= SyntaxStack0 ExprTypeSynPtr *u + *u 91 == && "
 ; Expanded expression: "(@8) *(4) *(4) 0 >= [sh&&->1890] SyntaxStack0 (@8) *(4) *(4) + *(1) 91 == &&[1890] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1890
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 91
 ; ==
 load32 91 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1890:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1888
 ; {
 ; RPN'ized expression: "ExprTypeSynPtr *u 3 += "
 ; Expanded expression: "(@8) *(4) 3 +=(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 3
 load32 3 r8
 ; +=
 or r0 r2 r12
 read 0 r2 r2
 add r2 r8 r2
 write 0 r12 r2
 ; RPN'ized expression: "ExprTypeSynPtr *u ExprTypeSynPtr *u -u = "
 ; Expanded expression: "(@8) *(4) (@8) *(4) *(4) -u =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; -u
 sub r0 r8 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
Label_1888:
 ; if
 ; RPN'ized expression: "arithmetic ( ExprTypeSynPtr *u isAnyPtr ) && "
 ; Expanded expression: "(@12) *(4) _Bool [sh&&->1893]  (@8) *(4) *(4)  isAnyPtr ()4 _Bool &&[1893] "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1893
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; isAnyPtr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isAnyPtr
 add r13 16 r13
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1893:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1891
 ; {
 ; loc         pointee : (@-4) : int
 ; RPN'ized expression: "pointee ( ExprTypeSynPtr *u derefAnyPtr ) = "
 ; Expanded expression: "(@-4)  (@8) *(4) *(4)  derefAnyPtr ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; derefAnyPtr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump derefAnyPtr
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; switch
 ; RPN'ized expression: "SyntaxStack0 pointee + *u "
 ; Expanded expression: "SyntaxStack0 (@-4) *(4) + *(1) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_1895
 ; {
 ; case
 ; RPN'ized expression: "17 "
 ; Expanded expression: "17 "
 ; Expression value: 17
Label_1896:
 ; RPN'ized expression: "( errorUnexpectedVoid ) "
 ; Expanded expression: " errorUnexpectedVoid ()0 "
 ; (
 ; errorUnexpectedVoid
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedVoid
 add r13 16 r13
 ; default
Label_1897:
 ; if
 ; RPN'ized expression: "( 0 , pointee GetDeclSize ) 0 == "
 ; Expanded expression: " 0  (@-4) *(4)  GetDeclSize ()8 0 == "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1898
 ; case
 ; RPN'ized expression: "40 "
 ; Expanded expression: "40 "
 ; Expression value: 40
Label_1900:
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_1898:
 ; }
 jump Label_1894
Label_1895:
 load32 17 r12
 bne r2 r12 2
 jump Label_1896
 load32 40 r12
 bne r2 r12 2
 jump Label_1900
 jump Label_1897
Label_1894:
 ; }
Label_1891:
Label_1887:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb lvalueCheck : (
 ; prm     ExprTypeSynPtr : int
 ; prm     pos : int
 ;     ) void
.code
; .globl lvalueCheck
lvalueCheck:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     ExprTypeSynPtr : (@8) : int
 ; loc     pos : (@12) : int
 ; if
 ; RPN'ized expression: "ExprTypeSynPtr 0 >= SyntaxStack0 ExprTypeSynPtr + *u 91 == SyntaxStack0 ExprTypeSynPtr + *u 40 == || && "
 ; Expanded expression: "(@8) *(4) 0 >= [sh&&->1904] SyntaxStack0 (@8) *(4) + *(1) 91 == [sh||->1905] SyntaxStack0 (@8) *(4) + *(1) 40 == ||[1905] _Bool &&[1904] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1904
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 91
 ; ==
 load32 91 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1905
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1905:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1904:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1902
 ; {
 ; RPN'ized expression: "( errorNotLvalue ) "
 ; Expanded expression: " errorNotLvalue ()0 "
 ; (
 ; errorNotLvalue
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorNotLvalue
 add r13 16 r13
 ; }
Label_1902:
 ; if
 ; RPN'ized expression: "stack pos + *u 0 + *u 78 != "
 ; Expanded expression: "stack (@12) *(4) 8 * + 0 + *(4) 78 != "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 78
 ; !=
 load32 78 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_1906
 ; RPN'ized expression: "( errorNotLvalue ) "
 ; Expanded expression: " errorNotLvalue ()0 "
 ; (
 ; errorNotLvalue
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorNotLvalue
 add r13 16 r13
Label_1906:
Label_1901:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb nonVoidTypeCheck : (
 ; prm     ExprTypeSynPtr : int
 ;     ) void
.code
; .globl nonVoidTypeCheck
nonVoidTypeCheck:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     ExprTypeSynPtr : (@8) : int
 ; if
 ; RPN'ized expression: "ExprTypeSynPtr 0 >= SyntaxStack0 ExprTypeSynPtr + *u 17 == && "
 ; Expanded expression: "(@8) *(4) 0 >= [sh&&->1911] SyntaxStack0 (@8) *(4) + *(1) 17 == &&[1911] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1911
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 17
 ; ==
 load32 17 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1911:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1909
 ; RPN'ized expression: "( errorUnexpectedVoid ) "
 ; Expanded expression: " errorUnexpectedVoid ()0 "
 ; (
 ; errorUnexpectedVoid
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedVoid
 add r13 16 r13
Label_1909:
Label_1908:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb scalarTypeCheck : (
 ; prm     ExprTypeSynPtr : int
 ;     ) void
.code
; .globl scalarTypeCheck
scalarTypeCheck:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     ExprTypeSynPtr : (@8) : int
 ; RPN'ized expression: "( ExprTypeSynPtr nonVoidTypeCheck ) "
 ; Expanded expression: " (@8) *(4)  nonVoidTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; nonVoidTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump nonVoidTypeCheck
 add r13 16 r13
 ; if
 ; RPN'ized expression: "ExprTypeSynPtr 0 >= SyntaxStack0 ExprTypeSynPtr + *u 144 == && "
 ; Expanded expression: "(@8) *(4) 0 >= [sh&&->1915] SyntaxStack0 (@8) *(4) + *(1) 144 == &&[1915] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1915
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 144
 ; ==
 load32 144 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1915:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1913
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_1913:
Label_1912:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb numericTypeCheck : (
 ; prm     ExprTypeSynPtr : int
 ;     ) void
.code
; .globl numericTypeCheck
numericTypeCheck:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     ExprTypeSynPtr : (@8) : int
 ; if
 ; RPN'ized expression: "ExprTypeSynPtr 0 >= "
 ; Expanded expression: "(@8) *(4) 0 >= "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; >=
 bges r2 r0 2
 jump Label_1917
 ; switch
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr + *u "
 ; Expanded expression: "SyntaxStack0 (@8) *(4) + *(1) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_1920
 ; {
 ; case
 ; RPN'ized expression: "18 "
 ; Expanded expression: "18 "
 ; Expression value: 18
Label_1921:
 ; case
 ; RPN'ized expression: "128 "
 ; Expanded expression: "128 "
 ; Expression value: 128
Label_1922:
 ; case
 ; RPN'ized expression: "129 "
 ; Expanded expression: "129 "
 ; Expression value: 129
Label_1923:
 ; case
 ; RPN'ized expression: "100 "
 ; Expanded expression: "100 "
 ; Expression value: 100
Label_1924:
 ; case
 ; RPN'ized expression: "130 "
 ; Expanded expression: "130 "
 ; Expression value: 130
Label_1925:
 ; case
 ; RPN'ized expression: "19 "
 ; Expanded expression: "19 "
 ; Expression value: 19
Label_1926:
 ; case
 ; RPN'ized expression: "101 "
 ; Expanded expression: "101 "
 ; Expression value: 101
Label_1927:
 ; return
 jump Label_1916
 ; }
 jump Label_1919
Label_1920:
 load32 18 r12
 bne r2 r12 2
 jump Label_1921
 load32 128 r12
 bne r2 r12 2
 jump Label_1922
 load32 129 r12
 bne r2 r12 2
 jump Label_1923
 load32 100 r12
 bne r2 r12 2
 jump Label_1924
 load32 130 r12
 bne r2 r12 2
 jump Label_1925
 load32 19 r12
 bne r2 r12 2
 jump Label_1926
 load32 101 r12
 bne r2 r12 2
 jump Label_1927
Label_1919:
Label_1917:
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_1916:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb anyIntTypeCheck : (
 ; prm     ExprTypeSynPtr : int
 ;     ) void
.code
; .globl anyIntTypeCheck
anyIntTypeCheck:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     ExprTypeSynPtr : (@8) : int
 ; RPN'ized expression: "( ExprTypeSynPtr numericTypeCheck ) "
 ; Expanded expression: " (@8) *(4)  numericTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; numericTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump numericTypeCheck
 add r13 16 r13
Label_1928:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb isUint : (
 ; prm     ExprTypeSynPtr : int
 ;     ) int
.code
; .globl isUint
isUint:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
 ; write 4 r14 r15
 ; loc     ExprTypeSynPtr : (@8) : int
 ; return
 ; RPN'ized expression: "ExprTypeSynPtr 0 >= SyntaxStack0 ExprTypeSynPtr + *u 101 == && "
 ; Expanded expression: "(@8) *(4) 0 >= [sh&&->1930] SyntaxStack0 (@8) *(4) + *(1) 101 == &&[1930] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1930
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 101
 ; ==
 load32 101 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1930:
Label_1929:
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb compatCheck : (
 ; prm     ExprTypeSynPtr : * int
 ; prm     TheOtherExprTypeSynPtr : int
 ; prm     ConstExpr : * int
 ; prm     lidx : int
 ; prm     ridx : int
 ;     ) void
.code
; .globl compatCheck
compatCheck:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13         36 r13
 write         28 r13 r14
 add r13         28 r14
   write 4 r14 r15
 ; loc     ExprTypeSynPtr : (@8) : * int
 ; loc     TheOtherExprTypeSynPtr : (@12) : int
 ; loc     ConstExpr : (@16) : * int
 ; loc     lidx : (@20) : int
 ; loc     ridx : (@24) : int
 ; loc     exprTypeSynPtr : (@-4) : int
 ; RPN'ized expression: "exprTypeSynPtr ExprTypeSynPtr *u = "
 ; Expanded expression: "(@-4) (@8) *(4) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc     c : (@-8) : int
 ; RPN'ized expression: "c 0 = "
 ; Expanded expression: "(@-8) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -8 r14 r0
 ; loc     lptr : (@-12) : int
 ; loc     rptr : (@-16) : int
 ; loc     lnum : (@-20) : int
 ; loc     rnum : (@-24) : int
 ; if
 ; RPN'ized expression: "exprTypeSynPtr 0 >= "
 ; Expanded expression: "(@-4) *(4) 0 >= "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; >=
 bges r2 r0 2
 jump Label_1932
 ; {
 ; switch
 ; RPN'ized expression: "SyntaxStack0 exprTypeSynPtr + *u "
 ; Expanded expression: "SyntaxStack0 (@-4) *(4) + *(1) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_1935
 ; {
 ; case
 ; RPN'ized expression: "42 "
 ; Expanded expression: "42 "
 ; Expression value: 42
Label_1936:
 ; RPN'ized expression: "exprTypeSynPtr ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 ; case
 ; RPN'ized expression: "40 "
 ; Expanded expression: "40 "
 ; Expression value: 40
Label_1937:
 ; RPN'ized expression: "exprTypeSynPtr exprTypeSynPtr -u = "
 ; Expanded expression: "(@-4) (@-4) *(4) -u =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; -u
 sub r0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; }
 jump Label_1934
Label_1935:
 load32 42 r12
 bne r2 r12 2
 jump Label_1936
 load32 40 r12
 bne r2 r12 2
 jump Label_1937
Label_1934:
 ; RPN'ized expression: "ExprTypeSynPtr *u exprTypeSynPtr = "
 ; Expanded expression: "(@8) *(4) (@-4) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
Label_1932:
 ; if
 ; RPN'ized expression: "TheOtherExprTypeSynPtr 0 >= "
 ; Expanded expression: "(@12) *(4) 0 >= "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; >=
 bges r2 r0 2
 jump Label_1938
 ; {
 ; switch
 ; RPN'ized expression: "SyntaxStack0 TheOtherExprTypeSynPtr + *u "
 ; Expanded expression: "SyntaxStack0 (@12) *(4) + *(1) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_1941
 ; {
 ; case
 ; RPN'ized expression: "42 "
 ; Expanded expression: "42 "
 ; Expression value: 42
Label_1942:
 ; RPN'ized expression: "TheOtherExprTypeSynPtr ++p "
 ; Expanded expression: "(@12) ++p(4) "
 ; local ofs
 ; ++p
 read 12 r14 r2
 add r2 1 r2
 write 12 r14 r2
 sub r2 1 r2
 ; case
 ; RPN'ized expression: "40 "
 ; Expanded expression: "40 "
 ; Expression value: 40
Label_1943:
 ; RPN'ized expression: "TheOtherExprTypeSynPtr TheOtherExprTypeSynPtr -u = "
 ; Expanded expression: "(@12) (@12) *(4) -u =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; -u
 sub r0 r2 r2
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; }
 jump Label_1940
Label_1941:
 load32 42 r12
 bne r2 r12 2
 jump Label_1942
 load32 40 r12
 bne r2 r12 2
 jump Label_1943
Label_1940:
 ; }
Label_1938:
 ; RPN'ized expression: "lptr exprTypeSynPtr 0 < = "
 ; Expanded expression: "(@-12) (@-4) *(4) 0 < =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; <
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; RPN'ized expression: "rptr TheOtherExprTypeSynPtr 0 < = "
 ; Expanded expression: "(@-16) (@12) *(4) 0 < =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; <
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "lnum lptr 0 == SyntaxStack0 exprTypeSynPtr + *u 19 == SyntaxStack0 exprTypeSynPtr + *u 101 == || && = "
 ; Expanded expression: "(@-20) (@-12) *(4) 0 == [sh&&->1944] SyntaxStack0 (@-4) *(4) + *(1) 19 == [sh||->1945] SyntaxStack0 (@-4) *(4) + *(1) 101 == ||[1945] _Bool &&[1944] =(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1944
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 19
 ; ==
 load32 19 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1945
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 101
 ; ==
 load32 101 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1945:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1944:
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; RPN'ized expression: "rnum rptr 0 == SyntaxStack0 TheOtherExprTypeSynPtr + *u 19 == SyntaxStack0 TheOtherExprTypeSynPtr + *u 101 == || && = "
 ; Expanded expression: "(@-24) (@-16) *(4) 0 == [sh&&->1946] SyntaxStack0 (@12) *(4) + *(1) 19 == [sh||->1947] SyntaxStack0 (@12) *(4) + *(1) 101 == ||[1947] _Bool &&[1946] =(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1946
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 19
 ; ==
 load32 19 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1947
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 101
 ; ==
 load32 101 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1947:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1946:
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; if
 ; RPN'ized expression: "lnum rnum && "
 ; Expanded expression: "(@-20) *(4) _Bool [sh&&->1950] (@-24) *(4) _Bool &&[1950] "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1950
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1950:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1948
 ; return
 jump Label_1931
Label_1948:
 ; if
 ; RPN'ized expression: "lptr 0 == SyntaxStack0 exprTypeSynPtr + *u 17 == && rptr 0 == && SyntaxStack0 TheOtherExprTypeSynPtr + *u 17 == && "
 ; Expanded expression: "(@-12) *(4) 0 == [sh&&->1955] SyntaxStack0 (@-4) *(4) + *(1) 17 == &&[1955] _Bool [sh&&->1954] (@-16) *(4) 0 == &&[1954] _Bool [sh&&->1953] SyntaxStack0 (@12) *(4) + *(1) 17 == &&[1953] "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1955
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 17
 ; ==
 load32 17 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1955:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1954
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1954:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1953
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 17
 ; ==
 load32 17 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1953:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1951
 ; return
 jump Label_1931
Label_1951:
 ; if
 ; RPN'ized expression: "lptr rnum ConstExpr 1 + *u && ( stack ridx + *u 1 + *u truncInt ) 0 == && rptr SyntaxStack0 TheOtherExprTypeSynPtr -u + *u 17 == && stack ridx + *u 0 + *u 1 == stack ridx + *u 0 + *u 2 == || && ( stack ridx + *u 1 + *u truncInt ) 0 == && || && "
 ; Expanded expression: "(@-12) *(4) _Bool [sh&&->1958] (@-24) *(4) _Bool [sh&&->1965] (@16) *(4) 4 + *(4) _Bool &&[1965] _Bool [sh&&->1964]  stack (@24) *(4) 8 * + 4 + *(4)  truncInt ()4 0 == &&[1964] _Bool [sh||->1959] (@-16) *(4) _Bool [sh&&->1963] SyntaxStack0 (@12) *(4) -u + *(1) 17 == &&[1963] _Bool [sh&&->1961] stack (@24) *(4) 8 * + 0 + *(4) 1 == [sh||->1962] stack (@24) *(4) 8 * + 0 + *(4) 2 == ||[1962] _Bool &&[1961] _Bool [sh&&->1960]  stack (@24) *(4) 8 * + 4 + *(4)  truncInt ()4 0 == &&[1960] _Bool ||[1959] _Bool &&[1958] "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1958
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1965
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1965:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1964
 ; (
 ; stack
 addr2reg stack r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read 24 r14 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; 4
 ; +
 add r4 4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1964:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1959
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1963
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 12 r14 r2
 ; -u
 sub r0 r2 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 17
 ; ==
 load32 17 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1963:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1961
 ; stack
 addr2reg stack r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 24 r14 r2
 ; 3
 ; <<
 shiftl r2 3 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1962
 ; stack
 addr2reg stack r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 24 r14 r2
 ; 3
 ; <<
 shiftl r2 3 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1962:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1961:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1960
 ; (
 ; stack
 addr2reg stack r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read 24 r14 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; 4
 ; +
 add r4 4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1960:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_1959:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1958:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1956
 ; return
 jump Label_1931
Label_1956:
 ; if
 ; RPN'ized expression: "rptr lnum ConstExpr 0 + *u && ( stack lidx + *u 1 + *u truncInt ) 0 == && lptr SyntaxStack0 exprTypeSynPtr -u + *u 17 == && stack lidx + *u 0 + *u 1 == stack lidx + *u 0 + *u 2 == || && ( stack lidx + *u 1 + *u truncInt ) 0 == && || && "
 ; Expanded expression: "(@-16) *(4) _Bool [sh&&->1968] (@-20) *(4) _Bool [sh&&->1975] (@16) *(4) 0 + *(4) _Bool &&[1975] _Bool [sh&&->1974]  stack (@20) *(4) 8 * + 4 + *(4)  truncInt ()4 0 == &&[1974] _Bool [sh||->1969] (@-12) *(4) _Bool [sh&&->1973] SyntaxStack0 (@-4) *(4) -u + *(1) 17 == &&[1973] _Bool [sh&&->1971] stack (@20) *(4) 8 * + 0 + *(4) 1 == [sh||->1972] stack (@20) *(4) 8 * + 0 + *(4) 2 == ||[1972] _Bool &&[1971] _Bool [sh&&->1970]  stack (@20) *(4) 8 * + 4 + *(4)  truncInt ()4 0 == &&[1970] _Bool ||[1969] _Bool &&[1968] "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1968
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1975
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1975:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1974
 ; (
 ; stack
 addr2reg stack r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read 20 r14 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; 4
 ; +
 add r4 4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1974:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1969
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1973
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -4 r14 r2
 ; -u
 sub r0 r2 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 17
 ; ==
 load32 17 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1973:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1971
 ; stack
 addr2reg stack r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 20 r14 r2
 ; 3
 ; <<
 shiftl r2 3 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_1972
 ; stack
 addr2reg stack r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 20 r14 r2
 ; 3
 ; <<
 shiftl r2 3 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_1972:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1971:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1970
 ; (
 ; stack
 addr2reg stack r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read 20 r14 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; 4
 ; +
 add r4 4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1970:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_1969:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1968:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1966
 ; {
 ; RPN'ized expression: "ExprTypeSynPtr *u TheOtherExprTypeSynPtr = "
 ; Expanded expression: "(@8) *(4) (@12) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; return
 jump Label_1931
 ; }
Label_1966:
 ; if
 ; RPN'ized expression: "lptr rptr && 0 == "
 ; Expanded expression: "(@-12) *(4) _Bool [sh&&->1978] (@-16) *(4) _Bool &&[1978] 0 == "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1978
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_1978:
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1976
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_1976:
 ; if
 ; RPN'ized expression: "SyntaxStack0 exprTypeSynPtr -u + *u 17 == "
 ; Expanded expression: "SyntaxStack0 (@-4) *(4) -u + *(1) 17 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; -u
 sub r0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 17
 ; ==
 load32 17 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1979
 ; return
 jump Label_1931
Label_1979:
 ; if
 ; RPN'ized expression: "SyntaxStack0 TheOtherExprTypeSynPtr -u + *u 17 == "
 ; Expanded expression: "SyntaxStack0 (@12) *(4) -u + *(1) 17 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; -u
 sub r0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 17
 ; ==
 load32 17 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_1981
 ; {
 ; RPN'ized expression: "ExprTypeSynPtr *u TheOtherExprTypeSynPtr = "
 ; Expanded expression: "(@8) *(4) (@12) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; return
 jump Label_1931
 ; }
Label_1981:
 ; if
 ; RPN'ized expression: "exprTypeSynPtr TheOtherExprTypeSynPtr == "
 ; Expanded expression: "(@-4) *(4) (@12) *(4) == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; ==
 beq r2 r8 2
 jump Label_1983
 ; return
 jump Label_1931
Label_1983:
 ; RPN'ized expression: "exprTypeSynPtr exprTypeSynPtr -u = "
 ; Expanded expression: "(@-4) (@-4) *(4) -u =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; -u
 sub r0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "TheOtherExprTypeSynPtr TheOtherExprTypeSynPtr -u = "
 ; Expanded expression: "(@12) (@12) *(4) -u =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; -u
 sub r0 r2 r2
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; for
Label_1985:
 ; {
 ; loc         tok : (@-28) : int
 ; RPN'ized expression: "tok SyntaxStack0 exprTypeSynPtr + *u = "
 ; Expanded expression: "(@-28) SyntaxStack0 (@-4) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -28 r14 r2
 ; if
 ; RPN'ized expression: "tok SyntaxStack0 TheOtherExprTypeSynPtr + *u != "
 ; Expanded expression: "(@-28) *(4) SyntaxStack0 (@12) *(4) + *(1) != "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; SyntaxStack0
 addr2reg SyntaxStack0 r8
 ; local ofs
 ; * (read dereference)
 read 12 r14 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; !=
 bne r2 r8 2
 jump Label_1989
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_1989:
 ; if
 ; RPN'ized expression: "tok 16 != SyntaxStack1 exprTypeSynPtr + *u SyntaxStack1 TheOtherExprTypeSynPtr + *u != && "
 ; Expanded expression: "(@-28) *(4) 16 != [sh&&->1993] SyntaxStack1 (@-4) *(4) 4 * + *(4) SyntaxStack1 (@12) *(4) 4 * + *(4) != &&[1993] "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 16
 ; !=
 load32 16 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1993
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; SyntaxStack1
 addr2reg SyntaxStack1 r8
 ; local ofs
 ; * (read dereference)
 read 12 r14 r9
 ; 2
 ; <<
 shiftl r9 2 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; !=
 xor r2 r8 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_1993:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_1991
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_1991:
 ; RPN'ized expression: "c tok 40 == tok 41 == - tok 91 == + tok 93 == - += "
 ; Expanded expression: "(@-8) (@-28) *(4) 40 == (@-28) *(4) 41 == - (@-28) *(4) 91 == + (@-28) *(4) 93 == - +=(4) "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -28 r14 r8
 ; 41
 ; ==
 load32 41 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -28 r14 r8
 ; 91
 ; ==
 load32 91 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -28 r14 r8
 ; 93
 ; ==
 load32 93 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; +=
 read -8 r14 r12
 add r12 r2 r2
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "c 0 == "
 ; Expanded expression: "(@-8) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_1994
 ; {
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-28) *(4) "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 jump Label_1997
 ; {
 ; case
 ; RPN'ized expression: "17 "
 ; Expanded expression: "17 "
 ; Expression value: 17
Label_1998:
 ; case
 ; RPN'ized expression: "18 "
 ; Expanded expression: "18 "
 ; Expression value: 18
Label_1999:
 ; case
 ; RPN'ized expression: "128 "
 ; Expanded expression: "128 "
 ; Expression value: 128
Label_2000:
 ; case
 ; RPN'ized expression: "129 "
 ; Expanded expression: "129 "
 ; Expression value: 129
Label_2001:
 ; case
 ; RPN'ized expression: "100 "
 ; Expanded expression: "100 "
 ; Expression value: 100
Label_2002:
 ; case
 ; RPN'ized expression: "130 "
 ; Expanded expression: "130 "
 ; Expression value: 130
Label_2003:
 ; case
 ; RPN'ized expression: "19 "
 ; Expanded expression: "19 "
 ; Expression value: 19
Label_2004:
 ; case
 ; RPN'ized expression: "101 "
 ; Expanded expression: "101 "
 ; Expression value: 101
Label_2005:
 ; case
 ; RPN'ized expression: "144 "
 ; Expanded expression: "144 "
 ; Expression value: 144
Label_2006:
 ; return
 jump Label_1931
 ; }
 jump Label_1996
Label_1997:
 load32 17 r12
 bne r2 r12 2
 jump Label_1998
 load32 18 r12
 bne r2 r12 2
 jump Label_1999
 load32 128 r12
 bne r2 r12 2
 jump Label_2000
 load32 129 r12
 bne r2 r12 2
 jump Label_2001
 load32 100 r12
 bne r2 r12 2
 jump Label_2002
 load32 130 r12
 bne r2 r12 2
 jump Label_2003
 load32 19 r12
 bne r2 r12 2
 jump Label_2004
 load32 101 r12
 bne r2 r12 2
 jump Label_2005
 load32 144 r12
 bne r2 r12 2
 jump Label_2006
Label_1996:
 ; }
Label_1994:
 ; RPN'ized expression: "exprTypeSynPtr ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 ; RPN'ized expression: "TheOtherExprTypeSynPtr ++p "
 ; Expanded expression: "(@12) ++p(4) "
 ; local ofs
 ; ++p
 read 12 r14 r2
 add r2 1 r2
 write 12 r14 r2
 sub r2 1 r2
 ; }
 jump Label_1985
Label_1988:
Label_1931:
 read 4 r14 r15
 read 0 r14 r14
 add r13 36 r13
 jumpr 0 r15

 ; glb shiftCountCheck : (
 ; prm     psr : * int
 ; prm     idx : int
 ; prm     ExprTypeSynPtr : int
 ;     ) void
.code
; .globl shiftCountCheck
shiftCountCheck:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     psr : (@8) : * int
 ; loc     idx : (@12) : int
 ; loc     ExprTypeSynPtr : (@16) : int
 ; loc     sr : (@-4) : int
 ; RPN'ized expression: "sr psr *u = "
 ; Expanded expression: "(@-4) (@8) *(4) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; loc     <something> : unsigned
 ; loc     <something> : int
 ; loc     <something> : unsigned
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr + *u 101 != sr 0 < && sr (something2010) 8 <something2011> sizeof * >= || sr (something2012) 8u SizeOfWord * >= || "
 ; Expanded expression: "SyntaxStack0 (@16) *(4) + *(1) 101 != [sh&&->2015] (@-4) *(4) 0 < &&[2015] _Bool [sh||->2014] (@-4) *(4) 32u >=u ||[2014] _Bool [sh||->2013] (@-4) *(4) 8u SizeOfWord *(4) * >=u ||[2013] "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 16 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 101
 ; !=
 load32 101 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2015
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; <
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2015:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2014
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 32
 ; >=u
 load32 32 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit || target
Label_2014:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2013
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; >=u
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit || target
Label_2013:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2008
 ; {

.rdata
Label_2016:
.dw 83 104 105 102 116 32 99 111 117 110 116 32 111 117 116 32 111 102 32 114 97 110 103 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2016 warning ) "
 ; Expanded expression: " L2016  warning ()4 "
 ; (
 ; 2016
 addr2reg Label_2016 r4
 ; ,
 ; warning
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump warning
 add r13 16 r13
 ; RPN'ized expression: "sr SizeOfWord 8 * 1 - &= "
 ; Expanded expression: "(@-4) SizeOfWord *(4) 8 * 1 - &=(4) "
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; 3
 ; <<
 shiftl r2 3 r2
 ; 1
 ; -
 sub r2 1 r2
 ; local ofs
 ; &=
 read -4 r14 r12
 and r12 r2 r2
 write -4 r14 r2
 ; RPN'ized expression: "psr *u sr = "
 ; Expanded expression: "(@8) *(4) (@-4) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "stack idx + *u 1 + *u sr = "
 ; Expanded expression: "stack (@12) *(4) 8 * + 4 + (@-4) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
Label_2008:
Label_2007:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb divCheckAndCalc : (
 ; prm     tok : int
 ; prm     psl : * int
 ; prm     sr : int
 ; prm     Unsigned : int
 ; prm     ConstExpr : * int
 ;     ) int
.code
; .globl divCheckAndCalc
divCheckAndCalc:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13         16 r13
 write          8 r13 r14
 add r13          8 r14
   write 4 r14 r15
 ; loc     tok : (@8) : int
 ; loc     psl : (@12) : * int
 ; loc     sr : (@16) : int
 ; loc     Unsigned : (@20) : int
 ; loc     ConstExpr : (@24) : * int
 ; loc     div0 : (@-4) : int
 ; RPN'ized expression: "div0 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
 ; loc     sl : (@-8) : int
 ; RPN'ized expression: "sl psl *u = "
 ; Expanded expression: "(@-8) (@12) *(4) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "ConstExpr 1 + *u 0 == "
 ; Expanded expression: "(@24) *(4) 4 + *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read 24 r14 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2018
 ; return
 ; RPN'ized expression: "div0 0 == "
 ; Expanded expression: "(@-4) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 jump Label_2017
Label_2018:
 ; if
 ; RPN'ized expression: "Unsigned "
 ; Expanded expression: "(@20) *(4) "
 ; local ofs
 ; * (read dereference)
 read 20 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2020
 ; {
 ; loc         <something> : int
 ; RPN'ized expression: "sl ( sl truncUint ) (something2022) = "
 ; Expanded expression: "(@-8)  (@-8) *(4)  truncUint ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; loc         <something> : int
 ; RPN'ized expression: "sr ( sr truncUint ) (something2023) = "
 ; Expanded expression: "(@16)  (@16) *(4)  truncUint ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 16 r14 r2
 ; }
 jump Label_2021
Label_2020:
 ; else
 ; {
 ; RPN'ized expression: "sl ( sl truncInt ) = "
 ; Expanded expression: "(@-8)  (@-8) *(4)  truncInt ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "sr ( sr truncInt ) = "
 ; Expanded expression: "(@16)  (@16) *(4)  truncInt ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 16 r14 r2
 ; }
Label_2021:
 ; if
 ; RPN'ized expression: "sr 0 == "
 ; Expanded expression: "(@16) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2024
 ; {
 ; RPN'ized expression: "div0 1 = "
 ; Expanded expression: "(@-4) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; }
 jump Label_2025
Label_2024:
 ; else
 ; if
 ; RPN'ized expression: "ConstExpr 0 + *u 0 == "
 ; Expanded expression: "(@24) *(4) 0 + *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read 24 r14 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2026
 ; {
 ; return
 ; RPN'ized expression: "div0 0 == "
 ; Expanded expression: "(@-4) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 jump Label_2017
 ; }
 jump Label_2027
Label_2026:
 ; else
 ; if
 ; RPN'ized expression: "Unsigned 0 == sl 2147483647 -u 1 - == sr 1 -u == && ( sr , sl division ) ( ( sr , sl division ) truncInt ) != || && "
 ; Expanded expression: "(@20) *(4) 0 == [sh&&->2030] (@-8) *(4) -2147483648 == [sh&&->2032] (@16) *(4) -1 == &&[2032] _Bool [sh||->2031]  (@16) *(4)  (@-8) *(4)  division ()8   (@16) *(4)  (@-8) *(4)  division ()8  truncInt ()4 != ||[2031] _Bool &&[2030] "
 ; local ofs
 ; * (read dereference)
 read 20 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2030
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; -2147483648
 ; ==
 load32 -2147483648 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2032
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; -1
 ; ==
 load32 -1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2032:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2031
 ; (
 sub r13 8 r13
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -8 r14 r2
 ; ,
 ; division
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump division
 add r13 16 r13
 ; (
 sub r13 4 r13
 write 0 r13 r2
 sub r13 12 r13
 ; (
 sub r13 8 r13
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -8 r14 r2
 ; ,
 ; division
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump division
 add r13 16 r13
 ; ,
 ; truncInt
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; !=
 read 0 r13 r11
 add r13 4 r13
 xor r11 r2 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2031:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_2030:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2028
 ; {
 ; RPN'ized expression: "div0 1 = "
 ; Expanded expression: "(@-4) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; }
 jump Label_2029
Label_2028:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "Unsigned "
 ; Expanded expression: "(@20) *(4) "
 ; local ofs
 ; * (read dereference)
 read 20 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2033
 ; {
 ; if
 ; RPN'ized expression: "tok 47 == "
 ; Expanded expression: "(@8) *(4) 47 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 47
 ; ==
 load32 47 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2035
 ; loc             <something> : int
 ; loc             <something> : unsigned
 ; RPN'ized expression: "sl ( sr , sl division ) (something2038) (something2037) = "
 ; Expanded expression: "(@-8)  (@16) *(4)  (@-8) *(4)  division ()8 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; division
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump division
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 jump Label_2036
Label_2035:
 ; else
 ; loc             <something> : int
 ; loc             <something> : unsigned
 ; RPN'ized expression: "sl ( sr , sl modulo ) (something2040) (something2039) = "
 ; Expanded expression: "(@-8)  (@16) *(4)  (@-8) *(4)  modulo ()8 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; modulo
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump modulo
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
Label_2036:
 ; }
 jump Label_2034
Label_2033:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "tok 47 == "
 ; Expanded expression: "(@8) *(4) 47 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 47
 ; ==
 load32 47 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2041
 ; RPN'ized expression: "sl ( sr , sl division ) = "
 ; Expanded expression: "(@-8)  (@16) *(4)  (@-8) *(4)  division ()8 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; division
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump division
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 jump Label_2042
Label_2041:
 ; else
 ; RPN'ized expression: "sl ( sr , sl modulo ) = "
 ; Expanded expression: "(@-8)  (@16) *(4)  (@-8) *(4)  modulo ()8 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; modulo
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump modulo
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
Label_2042:
 ; }
Label_2034:
 ; RPN'ized expression: "psl *u sl = "
 ; Expanded expression: "(@12) *(4) (@-8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
Label_2029:
Label_2027:
Label_2025:
 ; if
 ; RPN'ized expression: "div0 "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2043

.rdata
Label_2045:
.dw 68 105 118 105 115 105 111 110 32 98 121 32 48 32 111 114 32 100 105 118 105 115 105 111 110 32 111 118 101 114 102 108 111 119 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2045 warning ) "
 ; Expanded expression: " L2045  warning ()4 "
 ; (
 ; 2045
 addr2reg Label_2045 r4
 ; ,
 ; warning
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump warning
 add r13 16 r13
Label_2043:
 ; return
 ; RPN'ized expression: "div0 0 == "
 ; Expanded expression: "(@-4) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
Label_2017:
 read 4 r14 r15
 read 0 r14 r14
 add r13 16 r13
 jumpr 0 r15

 ; glb promoteType : (
 ; prm     ExprTypeSynPtr : * int
 ; prm     TheOtherExprTypeSynPtr : * int
 ;     ) void
.code
; .globl promoteType
promoteType:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
 ; write 4 r14 r15
 ; loc     ExprTypeSynPtr : (@8) : * int
 ; loc     TheOtherExprTypeSynPtr : (@12) : * int
 ; if
 ; RPN'ized expression: "ExprTypeSynPtr *u 0 >= "
 ; Expanded expression: "(@8) *(4) *(4) 0 >= "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; >=
 bges r2 r0 2
 jump Label_2047
 ; {
 ; switch
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr *u + *u "
 ; Expanded expression: "SyntaxStack0 (@8) *(4) *(4) + *(1) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_2050
 ; {
 ; case
 ; RPN'ized expression: "18 "
 ; Expanded expression: "18 "
 ; Expression value: 18
Label_2051:
 ; case
 ; RPN'ized expression: "100 "
 ; Expanded expression: "100 "
 ; Expression value: 100
Label_2052:
 ; case
 ; RPN'ized expression: "130 "
 ; Expanded expression: "130 "
 ; Expression value: 130
Label_2053:
 ; case
 ; RPN'ized expression: "128 "
 ; Expanded expression: "128 "
 ; Expression value: 128
Label_2054:
 ; case
 ; RPN'ized expression: "129 "
 ; Expanded expression: "129 "
 ; Expression value: 129
Label_2055:
 ; RPN'ized expression: "ExprTypeSynPtr *u 1 = "
 ; Expanded expression: "(@8) *(4) 1 =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
 jump Label_2049
Label_2050:
 load32 18 r12
 bne r2 r12 2
 jump Label_2051
 load32 100 r12
 bne r2 r12 2
 jump Label_2052
 load32 130 r12
 bne r2 r12 2
 jump Label_2053
 load32 128 r12
 bne r2 r12 2
 jump Label_2054
 load32 129 r12
 bne r2 r12 2
 jump Label_2055
Label_2049:
 ; if
 ; RPN'ized expression: "TheOtherExprTypeSynPtr *u 0 >= "
 ; Expanded expression: "(@12) *(4) *(4) 0 >= "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; >=
 bges r2 r0 2
 jump Label_2056
 ; {
 ; if
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr *u + *u 19 == SyntaxStack0 TheOtherExprTypeSynPtr *u + *u 101 == && "
 ; Expanded expression: "SyntaxStack0 (@8) *(4) *(4) + *(1) 19 == [sh&&->2060] SyntaxStack0 (@12) *(4) *(4) + *(1) 101 == &&[2060] "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 19
 ; ==
 load32 19 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2060
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 101
 ; ==
 load32 101 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2060:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2058
 ; RPN'ized expression: "ExprTypeSynPtr *u 2 = "
 ; Expanded expression: "(@8) *(4) 2 =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 2
 load32 2 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_2058:
 ; }
Label_2056:
 ; }
Label_2047:
Label_2046:
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb GetFxnInfo : (
 ; prm     ExprTypeSynPtr : int
 ; prm     MinParams : * int
 ; prm     MaxParams : * int
 ; prm     ReturnExprTypeSynPtr : * int
 ; prm     FirstParamSynPtr : * int
 ;     ) int
.code
; .globl GetFxnInfo
GetFxnInfo:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13         16 r13
 write          8 r13 r14
 add r13          8 r14
 ; write 4 r14 r15
 ; loc     ExprTypeSynPtr : (@8) : int
 ; loc     MinParams : (@12) : * int
 ; loc     MaxParams : (@16) : * int
 ; loc     ReturnExprTypeSynPtr : (@20) : * int
 ; loc     FirstParamSynPtr : (@24) : * int
 ; RPN'ized expression: "MaxParams *u MinParams *u 0 = = "
 ; Expanded expression: "(@16) *(4) (@12) *(4) 0 =(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; 0
 load32 0 r9
 ; = (write dereference)
 write 0 r8 r9
 or r0 r9 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; if
 ; RPN'ized expression: "ExprTypeSynPtr 0 < "
 ; Expanded expression: "(@8) *(4) 0 < "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; <
 bgts r0 r2 2
 jump Label_2062
 ; {
 ; RPN'ized expression: "ExprTypeSynPtr ExprTypeSynPtr -u = "
 ; Expanded expression: "(@8) (@8) *(4) -u =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; -u
 sub r0 r2 r2
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 jump Label_2063
Label_2062:
 ; else
 ; {
 ; while
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr + *u 16 == SyntaxStack0 ExprTypeSynPtr + *u 89 == || "
 ; Expanded expression: "SyntaxStack0 (@8) *(4) + *(1) 16 == [sh||->2066] SyntaxStack0 (@8) *(4) + *(1) 89 == ||[2066] "
Label_2064:
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2066
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 89
 ; ==
 load32 89 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2066:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2065
 ; RPN'ized expression: "ExprTypeSynPtr ++p "
 ; Expanded expression: "(@8) ++p(4) "
 ; local ofs
 ; ++p
 read 8 r14 r2
 add r2 1 r2
 write 8 r14 r2
 sub r2 1 r2
 jump Label_2064
Label_2065:
 ; if
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr + *u 42 == "
 ; Expanded expression: "SyntaxStack0 (@8) *(4) + *(1) 42 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 42
 ; ==
 load32 42 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2067
 ; RPN'ized expression: "ExprTypeSynPtr ++p "
 ; Expanded expression: "(@8) ++p(4) "
 ; local ofs
 ; ++p
 read 8 r14 r2
 add r2 1 r2
 write 8 r14 r2
 sub r2 1 r2
Label_2067:
 ; }
Label_2063:
 ; if
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr + *u 40 != "
 ; Expanded expression: "SyntaxStack0 (@8) *(4) + *(1) 40 != "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 40
 ; !=
 load32 40 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_2069
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
 jump Label_2061
Label_2069:
 ; RPN'ized expression: "ExprTypeSynPtr ++p "
 ; Expanded expression: "(@8) ++p(4) "
 ; local ofs
 ; ++p
 read 8 r14 r2
 add r2 1 r2
 write 8 r14 r2
 sub r2 1 r2
 ; if
 ; RPN'ized expression: "FirstParamSynPtr "
 ; Expanded expression: "(@24) *(4) "
 ; local ofs
 ; * (read dereference)
 read 24 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2071
 ; RPN'ized expression: "FirstParamSynPtr *u ExprTypeSynPtr = "
 ; Expanded expression: "(@24) *(4) (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 24 r14 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_2071:
 ; if
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr + *u 41 == "
 ; Expanded expression: "SyntaxStack0 (@8) *(4) + *(1) 41 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2073
 ; {
 ; RPN'ized expression: "MaxParams *u 32767 = "
 ; Expanded expression: "(@16) *(4) 32767 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 32767
 load32 32767 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "ReturnExprTypeSynPtr *u ExprTypeSynPtr 1 + = "
 ; Expanded expression: "(@20) *(4) (@8) *(4) 1 + =(4) "
 ; local ofs
 ; * (read dereference)
 read 20 r14 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_2061
 ; }
Label_2073:
 ; if
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr 1 + + *u 17 == "
 ; Expanded expression: "SyntaxStack0 (@8) *(4) 1 + + *(1) 17 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 17
 ; ==
 load32 17 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2075
 ; {
 ; RPN'ized expression: "ReturnExprTypeSynPtr *u ExprTypeSynPtr 3 + = "
 ; Expanded expression: "(@20) *(4) (@8) *(4) 3 + =(4) "
 ; local ofs
 ; * (read dereference)
 read 20 r14 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 3
 ; +
 add r8 3 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_2061
 ; }
Label_2075:
 ; for
Label_2077:
 ; {
 ; loc         tok : (@-4) : int
 ; RPN'ized expression: "tok SyntaxStack0 ExprTypeSynPtr + *u = "
 ; Expanded expression: "(@-4) SyntaxStack0 (@8) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "tok 16 == "
 ; Expanded expression: "(@-4) *(4) 16 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2081
 ; {
 ; if
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr 1 + + *u 15 != "
 ; Expanded expression: "SyntaxStack0 (@8) *(4) 1 + + *(1) 15 != "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 15
 ; !=
 load32 15 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_2083
 ; {
 ; RPN'ized expression: "MinParams *u ++ "
 ; Expanded expression: "(@12) *(4) ++(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; ++
 or r0 r2 r11
 read 0 r11 r2
 add r2 1 r2
 write 0 r11 r2
 ; RPN'ized expression: "MaxParams *u ++ "
 ; Expanded expression: "(@16) *(4) ++(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; ++
 or r0 r2 r11
 read 0 r11 r2
 add r2 1 r2
 write 0 r11 r2
 ; }
 jump Label_2084
Label_2083:
 ; else
 ; {
 ; RPN'ized expression: "MaxParams *u 32767 = "
 ; Expanded expression: "(@16) *(4) 32767 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 32767
 load32 32767 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
Label_2084:
 ; }
 jump Label_2082
Label_2081:
 ; else
 ; if
 ; RPN'ized expression: "tok 40 == "
 ; Expanded expression: "(@-4) *(4) 40 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2085
 ; {
 ; loc             c : (@-8) : int
 ; RPN'ized expression: "c 1 = "
 ; Expanded expression: "(@-8) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; while
 ; RPN'ized expression: "c ExprTypeSynPtr SyntaxStackCnt < && "
 ; Expanded expression: "(@-8) *(4) _Bool [sh&&->2089] (@8) *(4) SyntaxStackCnt *(4) < &&[2089] "
Label_2087:
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2089
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2089:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2088
 ; {
 ; RPN'ized expression: "tok SyntaxStack0 ExprTypeSynPtr ++ + *u = "
 ; Expanded expression: "(@-4) SyntaxStack0 (@8) ++(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; ++
 read 8 r14 r8
 add r8 1 r8
 write 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "c tok 40 == tok 41 == - += "
 ; Expanded expression: "(@-8) (@-4) *(4) 40 == (@-4) *(4) 41 == - +=(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 41
 ; ==
 load32 41 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; +=
 read -8 r14 r12
 add r12 r2 r2
 write -8 r14 r2
 ; }
 jump Label_2087
Label_2088:
 ; }
 jump Label_2086
Label_2085:
 ; else
 ; if
 ; RPN'ized expression: "tok 41 == "
 ; Expanded expression: "(@-4) *(4) 41 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2090
 ; {
 ; RPN'ized expression: "ExprTypeSynPtr ++p "
 ; Expanded expression: "(@8) ++p(4) "
 ; local ofs
 ; ++p
 read 8 r14 r2
 add r2 1 r2
 write 8 r14 r2
 sub r2 1 r2
 ; break
 jump Label_2080
 ; }
Label_2090:
Label_2086:
Label_2082:
 ; RPN'ized expression: "ExprTypeSynPtr ++p "
 ; Expanded expression: "(@8) ++p(4) "
 ; local ofs
 ; ++p
 read 8 r14 r2
 add r2 1 r2
 write 8 r14 r2
 sub r2 1 r2
 ; }
 jump Label_2077
Label_2080:
 ; RPN'ized expression: "ReturnExprTypeSynPtr *u ExprTypeSynPtr = "
 ; Expanded expression: "(@20) *(4) (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 20 r14 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
Label_2061:
 read 0 r14 r14
 add r13 16 r13
 jumpr 0 r15

 ; glb simplifyConstExpr : (
 ; prm     val : int
 ; prm     isConst : int
 ; prm     ExprTypeSynPtr : * int
 ; prm     top : int
 ; prm     bottom : int
 ;     ) void
.code
; .globl simplifyConstExpr
simplifyConstExpr:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     val : (@8) : int
 ; loc     isConst : (@12) : int
 ; loc     ExprTypeSynPtr : (@16) : * int
 ; loc     top : (@20) : int
 ; loc     bottom : (@24) : int
 ; if
 ; RPN'ized expression: "isConst 0 == stack top + *u 0 + *u 1 == || stack top + *u 0 + *u 2 == || "
 ; Expanded expression: "(@12) *(4) 0 == [sh||->2096] stack (@20) *(4) 8 * + 0 + *(4) 1 == ||[2096] _Bool [sh||->2095] stack (@20) *(4) 8 * + 0 + *(4) 2 == ||[2095] "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2096
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 20 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2096:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2095
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 20 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2095:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2093
 ; return
 jump Label_2092
Label_2093:
 ; if
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr *u + *u 101 == "
 ; Expanded expression: "SyntaxStack0 (@16) *(4) *(4) + *(1) 101 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 16 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 101
 ; ==
 load32 101 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2097
 ; RPN'ized expression: "stack top + *u 0 + *u 2 = "
 ; Expanded expression: "stack (@20) *(4) 8 * + 0 + 2 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 20 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 2
 load32 2 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 jump Label_2098
Label_2097:
 ; else
 ; RPN'ized expression: "stack top + *u 0 + *u 1 = "
 ; Expanded expression: "stack (@20) *(4) 8 * + 0 + 1 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 20 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_2098:
 ; RPN'ized expression: "stack top + *u 1 + *u val = "
 ; Expanded expression: "stack (@20) *(4) 8 * + 4 + (@8) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 20 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "( top bottom - , bottom del ) "
 ; Expanded expression: " (@20) *(4) (@24) *(4) -  (@24) *(4)  del ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 20 r14 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read 24 r14 r5
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 24 r14 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
Label_2092:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb AllocLocal : (
 ; prm     size : unsigned
 ;     ) int
.code
; .globl AllocLocal
AllocLocal:
 write 0 r13 r4
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     size : (@8) : unsigned
 ; loc     oldOfs : (@-4) : int
 ; RPN'ized expression: "oldOfs CurFxnLocalOfs = "
 ; Expanded expression: "(@-4) CurFxnLocalOfs *(4) =(4) "
 ; CurFxnLocalOfs
 ; * (read dereference)
 addr2reg CurFxnLocalOfs r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc     <something> : int
 ; RPN'ized expression: "CurFxnLocalOfs CurFxnLocalOfs size - SizeOfWord 1u - ~ & (something2100) = "
 ; Expanded expression: "CurFxnLocalOfs CurFxnLocalOfs *(4) (@8) *(4) - SizeOfWord *(4) 1u - ~ & =(4) "
 ; CurFxnLocalOfs
 ; * (read dereference)
 addr2reg CurFxnLocalOfs r1
 read 0 r1 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; -
 sub r2 r8 r2
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; ~
 or r8 r8 r8
 not r8 r8
 ; &
 and r2 r8 r2
 ; CurFxnLocalOfs
 ; = (write dereference)
 addr2reg CurFxnLocalOfs r1
 write 0 r1 r2
 ; if
 ; RPN'ized expression: "CurFxnLocalOfs oldOfs >= CurFxnLocalOfs ( CurFxnLocalOfs truncInt ) != || CurFxnLocalOfs ( GenMaxLocalsSize ) -u < || "
 ; Expanded expression: "CurFxnLocalOfs *(4) (@-4) *(4) >= [sh||->2104] CurFxnLocalOfs *(4)  CurFxnLocalOfs *(4)  truncInt ()4 != ||[2104] _Bool [sh||->2103] CurFxnLocalOfs *(4)  GenMaxLocalsSize ()0 -u < ||[2103] "
 ; CurFxnLocalOfs
 ; * (read dereference)
 addr2reg CurFxnLocalOfs r1
 read 0 r1 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -4 r14 r2
 ; >=
 read 0 r13 r11
 add r13 4 r13
 bges r11 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2104
 ; CurFxnLocalOfs
 ; * (read dereference)
 addr2reg CurFxnLocalOfs r1
 read 0 r1 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; CurFxnLocalOfs
 ; * (read dereference)
 addr2reg CurFxnLocalOfs r1
 read 0 r1 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; !=
 read 0 r13 r11
 add r13 4 r13
 xor r11 r2 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2104:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2103
 ; CurFxnLocalOfs
 ; * (read dereference)
 addr2reg CurFxnLocalOfs r1
 read 0 r1 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; GenMaxLocalsSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenMaxLocalsSize
 add r13 16 r13
 ; -u
 sub r0 r2 r2
 ; <
 read 0 r13 r11
 add r13 4 r13
 bges r11 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2103:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2101
 ; RPN'ized expression: "( errorVarSize ) "
 ; Expanded expression: " errorVarSize ()0 "
 ; (
 ; errorVarSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorVarSize
 add r13 16 r13
Label_2101:
 ; if
 ; RPN'ized expression: "CurFxnMinLocalOfs CurFxnLocalOfs > "
 ; Expanded expression: "CurFxnMinLocalOfs *(4) CurFxnLocalOfs *(4) > "
 ; CurFxnMinLocalOfs
 ; * (read dereference)
 addr2reg CurFxnMinLocalOfs r1
 read 0 r1 r2
 ; CurFxnLocalOfs
 ; * (read dereference)
 addr2reg CurFxnLocalOfs r1
 read 0 r1 r8
 ; >
 bges r8 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_2105
 ; RPN'ized expression: "CurFxnMinLocalOfs CurFxnLocalOfs = "
 ; Expanded expression: "CurFxnMinLocalOfs CurFxnLocalOfs *(4) =(4) "
 ; CurFxnLocalOfs
 ; * (read dereference)
 addr2reg CurFxnLocalOfs r1
 read 0 r1 r2
 ; CurFxnMinLocalOfs
 ; = (write dereference)
 addr2reg CurFxnMinLocalOfs r1
 write 0 r1 r2
Label_2105:
 ; return
 ; RPN'ized expression: "CurFxnLocalOfs "
 ; Expanded expression: "CurFxnLocalOfs *(4) "
 ; CurFxnLocalOfs
 ; * (read dereference)
 addr2reg CurFxnLocalOfs r1
 read 0 r1 r2
Label_2099:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb exprval : (
 ; prm     idx : * int
 ; prm     ExprTypeSynPtr : * int
 ; prm     ConstExpr : * int
 ;     ) int
.code
; .globl exprval
exprval:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13         92 r13
 write         84 r13 r14
 add r13         84 r14
   write 4 r14 r15
 ; loc     idx : (@8) : * int
 ; loc     ExprTypeSynPtr : (@12) : * int
 ; loc     ConstExpr : (@16) : * int
 ; loc     tok : (@-4) : int
 ; loc     s : (@-8) : int
 ; loc     RightExprTypeSynPtr : (@-12) : int
 ; loc     oldIdxRight : (@-16) : int
 ; loc     oldSpRight : (@-20) : int
 ; RPN'ized expression: "3 "
 ; Expanded expression: "3 "
 ; Expression value: 3
 ; loc     constExpr : (@-32) : [3u] int
 ; if
 ; RPN'ized expression: "idx *u 0 < "
 ; Expanded expression: "(@8) *(4) *(4) 0 < "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; <
 bgts r0 r2 2
 jump Label_2108
 ; RPN'ized expression: "( 5 errorInternal ) "
 ; Expanded expression: " 5  errorInternal ()4 "
 ; (
 ; 5
 load32 5 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
Label_2108:
 ; RPN'ized expression: "tok stack idx *u + *u 0 + *u = "
 ; Expanded expression: "(@-4) stack (@8) *(4) *(4) 8 * + 0 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "s stack idx *u + *u 1 + *u = "
 ; Expanded expression: "(@-8) stack (@8) *(4) *(4) 8 * + 4 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "idx *u -- "
 ; Expanded expression: "(@8) *(4) --(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; --
 or r0 r2 r11
 read 0 r11 r2
 sub r2 1 r2
 write 0 r11 r2
 ; RPN'ized expression: "oldIdxRight idx *u = "
 ; Expanded expression: "(@-16) (@8) *(4) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "oldSpRight sp = "
 ; Expanded expression: "(@-20) sp *(4) =(4) "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 jump Label_2111
 ; {
 ; case
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
Label_2112:
 ; RPN'ized expression: "ExprTypeSynPtr *u 1 = "
 ; Expanded expression: "(@12) *(4) 1 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "ConstExpr *u 1 = "
 ; Expanded expression: "(@16) *(4) 1 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; break
 jump Label_2110
 ; case
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
Label_2113:
 ; RPN'ized expression: "ExprTypeSynPtr *u 2 = "
 ; Expanded expression: "(@12) *(4) 2 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 2
 load32 2 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "ConstExpr *u 1 = "
 ; Expanded expression: "(@16) *(4) 1 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; break
 jump Label_2110
 ; case
 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
Label_2114:
 ; {
 ; loc             ident : (@-36) : * char
 ; RPN'ized expression: "ident IdentTable s + = "
 ; Expanded expression: "(@-36) IdentTable (@-8) *(4) + =(4) "
 ; IdentTable
 addr2reg IdentTable r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; loc             synPtr : (@-40) : int
 ; loc             type : (@-44) : int
 ; {
 ; RPN'ized expression: "synPtr ( ident FindSymbol ) = "
 ; Expanded expression: "(@-40)  (@-36) *(4)  FindSymbol ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; FindSymbol
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump FindSymbol
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; if
 ; RPN'ized expression: "synPtr 0 >= synPtr 1 + SyntaxStackCnt < && SyntaxStack0 synPtr 1 + + *u 16 == && "
 ; Expanded expression: "(@-40) *(4) 0 >= [sh&&->2118] (@-40) *(4) 1 + SyntaxStackCnt *(4) < &&[2118] _Bool [sh&&->2117] SyntaxStack0 (@-40) *(4) 1 + + *(1) 16 == &&[2117] "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2118
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2118:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2117
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2117:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2115
 ; {
 ; RPN'ized expression: "s stack idx *u 1 + + *u 1 + *u SyntaxStack1 synPtr ++ + *u = = "
 ; Expanded expression: "(@-8) stack (@8) *(4) *(4) 1 + 8 * + 4 + SyntaxStack1 (@-40) ++(4) 4 * + *(4) =(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 1
 ; +
 add r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; SyntaxStack1
 addr2reg SyntaxStack1 r8
 ; local ofs
 ; ++
 read -40 r14 r9
 add r9 1 r9
 write -40 r14 r9
 ; 2
 ; <<
 shiftl r9 2 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "ident IdentTable s + = "
 ; Expanded expression: "(@-36) IdentTable (@-8) *(4) + =(4) "
 ; IdentTable
 addr2reg IdentTable r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; }
Label_2115:
 ; }
 ; if
 ; RPN'ized expression: "synPtr 0 < "
 ; Expanded expression: "(@-40) *(4) 0 < "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; 0
 ; <
 bgts r0 r2 2
 jump Label_2119
 ; {
 ; if
 ; RPN'ized expression: "idx *u 2 + sp >= stack idx *u 2 + + *u 0 + *u 41 != || "
 ; Expanded expression: "(@8) *(4) *(4) 2 + sp *(4) >= [sh||->2123] stack (@8) *(4) *(4) 2 + 8 * + 0 + *(4) 41 != ||[2123] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 2
 ; +
 add r2 2 r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; >=
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2123
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 2
 ; +
 add r8 2 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 41
 ; !=
 load32 41 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2123:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2121

.rdata
Label_2124:
.dw 85 110 100 101 99 108 97 114 101 100 32 105 100 101 110 116 105 102 105 101 114 32 39 37 115 39 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ident , L2124 error ) "
 ; Expanded expression: " (@-36) *(4)  L2124  error ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r5
 ; ,
 ; 2124
 addr2reg Label_2124 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
 jump Label_2122
Label_2121:
 ; else
 ; {

.rdata
Label_2125:
.dw 67 97 108 108 32 116 111 32 117 110 100 101 99 108 97 114 101 100 32 102 117 110 99 116 105 111 110 32 39 37 115 40 41 39 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ident , L2125 warning ) "
 ; Expanded expression: " (@-36) *(4)  L2125  warning ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r5
 ; ,
 ; 2125
 addr2reg Label_2125 r4
 ; ,
 ; warning
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump warning
 add r13 16 r13
 ; RPN'ized expression: "( s , 16 PushSyntax2 ) "
 ; Expanded expression: " (@-8) *(4)  16  PushSyntax2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r5
 ; ,
 ; 16
 load32 16 r4
 ; ,
 ; PushSyntax2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
 ; RPN'ized expression: "( 40 PushSyntax ) "
 ; Expanded expression: " 40  PushSyntax ()4 "
 ; (
 ; 40
 load32 40 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; RPN'ized expression: "( 41 PushSyntax ) "
 ; Expanded expression: " 41  PushSyntax ()4 "
 ; (
 ; 41
 load32 41 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; RPN'ized expression: "( 19 PushSyntax ) "
 ; Expanded expression: " 19  PushSyntax ()4 "
 ; (
 ; 19
 load32 19 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; RPN'ized expression: "synPtr ( ident FindSymbol ) = "
 ; Expanded expression: "(@-40)  (@-36) *(4)  FindSymbol ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; FindSymbol
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump FindSymbol
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; }
Label_2122:
 ; }
Label_2119:
 ; if

.rdata
Label_2128:
.dw 40 115 111 109 101 116 104 105 110 103 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2129 sizeof 1 - 1 - , L2128 , IdentTable SyntaxStack1 synPtr + *u + strncmp ) 0 == "
 ; Expanded expression: " 10u  L2128  IdentTable SyntaxStack1 (@-40) *(4) 4 * + *(4) +  strncmp ()12 0 == "
 ; (
 ; 10
 load32 10 r6
 ; ,
 ; 2128
 addr2reg Label_2128 r5
 ; ,
 ; IdentTable
 addr2reg IdentTable r4
 ; SyntaxStack1
 sub r13 4 r13
 write 0 r13 r4
 addr2reg SyntaxStack1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -40 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; strncmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strncmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2126
 ; {
 ; loc                 castSize : (@-48) : int
 ; if
 ; RPN'ized expression: "SyntaxStack0 synPtr ++ + *u 89 == "
 ; Expanded expression: "SyntaxStack0 (@-40) ++(4) + *(1) 89 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; ++
 read -40 r14 r8
 add r8 1 r8
 write -40 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 89
 ; ==
 load32 89 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2130
 ; RPN'ized expression: "synPtr ++p "
 ; Expanded expression: "(@-40) ++p(4) "
 ; local ofs
 ; ++p
 read -40 r14 r2
 add r2 1 r2
 write -40 r14 r2
 sub r2 1 r2
Label_2130:
 ; RPN'ized expression: "s ( ConstExpr , ExprTypeSynPtr , idx exprval ) = "
 ; Expanded expression: "(@-8)  (@16) *(4)  (@12) *(4)  (@8) *(4)  exprval ()12 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "ExprTypeSynPtr *u 0 >= SyntaxStack0 ExprTypeSynPtr *u + *u 17 == SyntaxStack0 ExprTypeSynPtr *u + *u 144 == || && SyntaxStack0 synPtr + *u 17 != && "
 ; Expanded expression: "(@12) *(4) *(4) 0 >= [sh&&->2135] SyntaxStack0 (@12) *(4) *(4) + *(1) 17 == [sh||->2136] SyntaxStack0 (@12) *(4) *(4) + *(1) 144 == ||[2136] _Bool &&[2135] _Bool [sh&&->2134] SyntaxStack0 (@-40) *(4) + *(1) 17 != &&[2134] "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2135
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 17
 ; ==
 load32 17 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2136
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 144
 ; ==
 load32 144 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2136:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_2135:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2134
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 17
 ; !=
 load32 17 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2134:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2132
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_2132:
 ; if
 ; RPN'ized expression: "SyntaxStack0 synPtr + *u 40 == SyntaxStack0 synPtr + *u 91 == || SyntaxStack0 synPtr + *u 144 == || "
 ; Expanded expression: "SyntaxStack0 (@-40) *(4) + *(1) 40 == [sh||->2140] SyntaxStack0 (@-40) *(4) + *(1) 91 == ||[2140] _Bool [sh||->2139] SyntaxStack0 (@-40) *(4) + *(1) 144 == ||[2139] "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2140
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 91
 ; ==
 load32 91 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2140:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2139
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 144
 ; ==
 load32 144 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2139:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2137
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_2137:
 ; if
 ; RPN'ized expression: "ConstExpr *u 0 == stack oldIdxRight oldSpRight sp - - + *u 0 + *u 1 == stack oldIdxRight oldSpRight sp - - + *u 0 + *u 2 == || && "
 ; Expanded expression: "(@16) *(4) *(4) 0 == [sh&&->2143] stack (@-16) *(4) (@-20) *(4) sp *(4) - - 8 * + 0 + *(4) 1 == [sh||->2144] stack (@-16) *(4) (@-20) *(4) sp *(4) - - 8 * + 0 + *(4) 2 == ||[2144] _Bool &&[2143] "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2143
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2144
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2144:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_2143:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2141
 ; {
 ; RPN'ized expression: "s stack oldIdxRight oldSpRight sp - - + *u 1 + *u = "
 ; Expanded expression: "(@-8) stack (@-16) *(4) (@-20) *(4) sp *(4) - - 8 * + 4 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "ConstExpr *u 1 = "
 ; Expanded expression: "(@16) *(4) 1 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
Label_2141:
 ; RPN'ized expression: "castSize ( 1 , synPtr GetDeclSize ) = "
 ; Expanded expression: "(@-48)  1  (@-40) *(4)  GetDeclSize ()8 =(4) "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -48 r14 r2
 ; switch
 ; RPN'ized expression: "castSize "
 ; Expanded expression: "(@-48) *(4) "
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 jump Label_2146
 ; {
 ; case
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
Label_2147:
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 0 + *u 129 = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 0 + 129 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 129
 load32 129 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "s 255u &= "
 ; Expanded expression: "(@-8) 255u &=(4) "
 ; 255
 load32 255 r2
 ; local ofs
 ; &=
 read -8 r14 r12
 and r12 r2 r2
 write -8 r14 r2
 ; break
 jump Label_2145
 ; case
 ; RPN'ized expression: "1 -u "
 ; Expanded expression: "-1 "
 ; Expression value: -1
Label_2148:
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 0 + *u 128 = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 0 + 128 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 128
 load32 128 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; if
 ; RPN'ized expression: "s 255u &= 128 >= "
 ; Expanded expression: "(@-8) 255u &=(4) 128 >= "
 ; 255
 load32 255 r2
 ; local ofs
 ; &=
 read -8 r14 r12
 and r12 r2 r2
 write -8 r14 r2
 ; 128
 ; >=
 load32 128 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_2149
 ; RPN'ized expression: "s 256 -= "
 ; Expanded expression: "(@-8) 256 -=(4) "
 ; 256
 load32 256 r2
 ; local ofs
 ; -=
 read -8 r14 r12
 sub r12 r2 r2
 write -8 r14 r2
Label_2149:
 ; break
 jump Label_2145
 ; default
Label_2151:
 ; if
 ; RPN'ized expression: "castSize castSize SizeOfWord != && "
 ; Expanded expression: "(@-48) *(4) _Bool [sh&&->2154] (@-48) *(4) SizeOfWord *(4) != &&[2154] "
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2154
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r8
 ; !=
 xor r2 r8 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2154:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2152
 ; {
 ; if
 ; RPN'ized expression: "castSize 2 == "
 ; Expanded expression: "(@-48) *(4) 2 == "
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2155
 ; {
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 0 + *u 130 = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 0 + 130 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 130
 load32 130 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "s 65535u &= "
 ; Expanded expression: "(@-8) 65535u &=(4) "
 ; 65535
 load32 65535 r2
 ; local ofs
 ; &=
 read -8 r14 r12
 and r12 r2 r2
 write -8 r14 r2
 ; }
 jump Label_2156
Label_2155:
 ; else
 ; {
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 0 + *u 100 = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 0 + 100 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 100
 load32 100 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; if
 ; RPN'ized expression: "s 65535u &= 32768 >= "
 ; Expanded expression: "(@-8) 65535u &=(4) 32768 >= "
 ; 65535
 load32 65535 r2
 ; local ofs
 ; &=
 read -8 r14 r12
 and r12 r2 r2
 write -8 r14 r2
 ; 32768
 ; >=
 load32 32768 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_2157
 ; RPN'ized expression: "s 65536 -= "
 ; Expanded expression: "(@-8) 65536 -=(4) "
 ; 65536
 load32 65536 r2
 ; local ofs
 ; -=
 read -8 r14 r12
 sub r12 r2 r2
 write -8 r14 r2
Label_2157:
 ; }
Label_2156:
 ; }
 jump Label_2153
Label_2152:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "stack oldIdxRight oldSpRight sp - - + *u 0 + *u 78 == "
 ; Expanded expression: "stack (@-16) *(4) (@-20) *(4) sp *(4) - - 8 * + 0 + *(4) 78 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 78
 ; ==
 load32 78 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2159
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 0 + *u 79 = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 0 + 79 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 79
 load32 79 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_2159:
 ; }
Label_2153:
 ; break
 jump Label_2145
 ; }
 jump Label_2145
Label_2146:
 load32 1 r12
 bne r2 r12 2
 jump Label_2147
 load32 -1 r12
 bne r2 r12 2
 jump Label_2148
 jump Label_2151
Label_2145:
 ; if
 ; RPN'ized expression: "ConstExpr *u "
 ; Expanded expression: "(@16) *(4) *(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2161
 ; RPN'ized expression: "stack oldIdxRight oldSpRight sp - - + *u 1 + *u s = "
 ; Expanded expression: "stack (@-16) *(4) (@-20) *(4) sp *(4) - - 8 * + 4 + (@-8) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_2161:
 ; RPN'ized expression: "ExprTypeSynPtr *u synPtr = "
 ; Expanded expression: "(@12) *(4) (@-40) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "( idx *u 1 + , oldIdxRight 1 + oldSpRight sp - - , ExprTypeSynPtr , ConstExpr *u , s simplifyConstExpr ) "
 ; Expanded expression: " (@8) *(4) *(4) 1 +  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  (@12) *(4)  (@16) *(4) *(4)  (@-8) *(4)  simplifyConstExpr ()20 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; +
 add r2 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r7
 ; 1
 ; +
 add r7 1 r7
 ; local ofs
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 read -20 r14 r7
 ; sp
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 16 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; simplifyConstExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump simplifyConstExpr
 add r13 20 r13
 ; if
 ; RPN'ized expression: "ConstExpr *u 0 == stack oldIdxRight 1 + oldSpRight sp - - + *u 0 + *u 16 == && "
 ; Expanded expression: "(@16) *(4) *(4) 0 == [sh&&->2165] stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 0 + *(4) 16 == &&[2165] "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2165
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2165:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2163
 ; RPN'ized expression: "( 1 , oldIdxRight 1 + oldSpRight sp - - del ) "
 ; Expanded expression: " 1  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  del ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
Label_2163:
 ; switch
 ; RPN'ized expression: "SyntaxStack0 synPtr + *u "
 ; Expanded expression: "SyntaxStack0 (@-40) *(4) + *(1) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_2167
 ; {
 ; case
 ; RPN'ized expression: "18 "
 ; Expanded expression: "18 "
 ; Expression value: 18
Label_2168:
 ; case
 ; RPN'ized expression: "128 "
 ; Expanded expression: "128 "
 ; Expression value: 128
Label_2169:
 ; case
 ; RPN'ized expression: "129 "
 ; Expanded expression: "129 "
 ; Expression value: 129
Label_2170:
 ; case
 ; RPN'ized expression: "100 "
 ; Expanded expression: "100 "
 ; Expression value: 100
Label_2171:
 ; case
 ; RPN'ized expression: "130 "
 ; Expanded expression: "130 "
 ; Expression value: 130
Label_2172:
 ; case
 ; RPN'ized expression: "19 "
 ; Expanded expression: "19 "
 ; Expression value: 19
Label_2173:
 ; case
 ; RPN'ized expression: "101 "
 ; Expanded expression: "101 "
 ; Expression value: 101
Label_2174:
 ; break
 jump Label_2166
 ; default
Label_2175:
 ; RPN'ized expression: "ConstExpr *u 0 = "
 ; Expanded expression: "(@16) *(4) 0 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; =
 write 0 r2 r0
 ; break
 jump Label_2166
 ; }
 jump Label_2166
Label_2167:
 load32 18 r12
 bne r2 r12 2
 jump Label_2168
 load32 128 r12
 bne r2 r12 2
 jump Label_2169
 load32 129 r12
 bne r2 r12 2
 jump Label_2170
 load32 100 r12
 bne r2 r12 2
 jump Label_2171
 load32 130 r12
 bne r2 r12 2
 jump Label_2172
 load32 19 r12
 bne r2 r12 2
 jump Label_2173
 load32 101 r12
 bne r2 r12 2
 jump Label_2174
 jump Label_2175
Label_2166:
 ; break
 jump Label_2110
 ; }
Label_2126:
 ; RPN'ized expression: "type ( synPtr SymType ) = "
 ; Expanded expression: "(@-44)  (@-40) *(4)  SymType ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; ,
 ; SymType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump SymType
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; if
 ; RPN'ized expression: "type 4 == type 5 == || "
 ; Expanded expression: "(@-44) *(4) 4 == [sh||->2178] (@-44) *(4) 5 == ||[2178] "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; 4
 ; ==
 load32 4 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2178
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; 5
 ; ==
 load32 5 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2178:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2176
 ; {
 ; RPN'ized expression: "stack idx *u 1 + + *u 0 + *u 89 = "
 ; Expanded expression: "stack (@8) *(4) *(4) 1 + 8 * + 0 + 89 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 1
 ; +
 add r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 89
 load32 89 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "stack idx *u 1 + + *u 1 + *u SyntaxStack1 synPtr 1 + + *u = "
 ; Expanded expression: "stack (@8) *(4) *(4) 1 + 8 * + 4 + SyntaxStack1 (@-40) *(4) 1 + 4 * + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 1
 ; +
 add r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; SyntaxStack1
 addr2reg SyntaxStack1 r8
 ; local ofs
 ; * (read dereference)
 read -40 r14 r9
 ; 1
 ; +
 add r9 1 r9
 ; 2
 ; <<
 shiftl r9 2 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
Label_2176:
 ; if
 ; RPN'ized expression: "type 4 == type 2 == || "
 ; Expanded expression: "(@-44) *(4) 4 == [sh||->2181] (@-44) *(4) 2 == ||[2181] "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; 4
 ; ==
 load32 4 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2181
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2181:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2179
 ; {
 ; RPN'ized expression: "( ( 1 , synPtr GetDeclSize ) , 78 , idx *u 2 + ins2 ) "
 ; Expanded expression: "  1  (@-40) *(4)  GetDeclSize ()8  78  (@8) *(4) *(4) 2 +  ins2 ()12 "
 ; (
 sub r13 4 r13
 ; (
 sub r13 8 r13
 ; 1
 load32 1 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -40 r14 r2
 ; ,
 ; GetDeclSize
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; ,
 ; 78
 sub r13 4 r13
 write 0 r13 r2
 load32 78 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 2
 ; +
 add r2 2 r2
 ; ,
 ; ins2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 read 8 r13 r6
 savpc r15
 add r15 3 r15
 jump ins2
 add r13 16 r13
 ; }
Label_2179:
 ; while
 ; RPN'ized expression: "SyntaxStack0 synPtr + *u 16 == SyntaxStack0 synPtr + *u 89 == || "
 ; Expanded expression: "SyntaxStack0 (@-40) *(4) + *(1) 16 == [sh||->2184] SyntaxStack0 (@-40) *(4) + *(1) 89 == ||[2184] "
Label_2182:
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2184
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 89
 ; ==
 load32 89 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2184:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2183
 ; RPN'ized expression: "synPtr ++p "
 ; Expanded expression: "(@-40) ++p(4) "
 ; local ofs
 ; ++p
 read -40 r14 r2
 add r2 1 r2
 write -40 r14 r2
 sub r2 1 r2
 jump Label_2182
Label_2183:
 ; RPN'ized expression: "ExprTypeSynPtr *u synPtr = "
 ; Expanded expression: "(@12) *(4) (@-40) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
 ; RPN'ized expression: "ConstExpr *u 0 = "
 ; Expanded expression: "(@16) *(4) 0 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; =
 write 0 r2 r0
 ; break
 jump Label_2110
 ; case
 ; RPN'ized expression: "27 "
 ; Expanded expression: "27 "
 ; Expression value: 27
Label_2185:
 ; RPN'ized expression: "( ConstExpr , ExprTypeSynPtr , idx exprval ) "
 ; Expanded expression: " (@16) *(4)  (@12) *(4)  (@8) *(4)  exprval ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; RPN'ized expression: "s ( 0 , ExprTypeSynPtr *u GetDeclSize ) = "
 ; Expanded expression: "(@-8)  0  (@12) *(4) *(4)  GetDeclSize ()8 =(4) "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "s 0 == "
 ; Expanded expression: "(@-8) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2186

.rdata
Label_2188:
.dw 115 105 122 101 111 102 32 111 102 32 105 110 99 111 109 112 108 101 116 101 32 116 121 112 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2188 error ) "
 ; Expanded expression: " L2188  error ()4 "
 ; (
 ; 2188
 addr2reg Label_2188 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2186:
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 0 + *u 2 = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 0 + 2 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 2
 load32 2 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 1 + *u s = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 4 + (@-8) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "( oldIdxRight oldSpRight sp - - idx *u - , idx *u 1 + del ) "
 ; Expanded expression: " (@-16) *(4) (@-20) *(4) sp *(4) - - (@8) *(4) *(4) -  (@8) *(4) *(4) 1 +  del ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -16 r14 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -20 r14 r5
 ; sp
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r5
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r5 r5
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r5 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read 8 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; 1
 ; +
 add r4 1 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
 ; RPN'ized expression: "ExprTypeSynPtr *u 2 = "
 ; Expanded expression: "(@12) *(4) 2 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 2
 load32 2 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "ConstExpr *u 1 = "
 ; Expanded expression: "(@16) *(4) 1 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; break
 jump Label_2110
 ; case
 ; RPN'ized expression: "77 "
 ; Expanded expression: "77 "
 ; Expression value: 77
Label_2189:
 ; RPN'ized expression: "( ConstExpr , ExprTypeSynPtr , idx exprval ) "
 ; Expanded expression: " (@16) *(4)  (@12) *(4)  (@8) *(4)  exprval ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; if
 ; RPN'ized expression: "ExprTypeSynPtr *u 0 >= SyntaxStack0 ExprTypeSynPtr *u + *u 91 == SyntaxStack0 ExprTypeSynPtr *u + *u 40 == || && "
 ; Expanded expression: "(@12) *(4) *(4) 0 >= [sh&&->2192] SyntaxStack0 (@12) *(4) *(4) + *(1) 91 == [sh||->2193] SyntaxStack0 (@12) *(4) *(4) + *(1) 40 == ||[2193] _Bool &&[2192] "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2192
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 91
 ; ==
 load32 91 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2193
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2193:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_2192:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2190
 ; {
 ; RPN'ized expression: "( 1 , oldIdxRight 1 + oldSpRight sp - - del ) "
 ; Expanded expression: " 1  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  del ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
 ; }
 jump Label_2191
Label_2190:
 ; else
 ; if
 ; RPN'ized expression: "ExprTypeSynPtr *u 0 >= stack oldIdxRight oldSpRight sp - - + *u 0 + *u 78 == && "
 ; Expanded expression: "(@12) *(4) *(4) 0 >= [sh&&->2196] stack (@-16) *(4) (@-20) *(4) sp *(4) - - 8 * + 0 + *(4) 78 == &&[2196] "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2196
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 78
 ; ==
 load32 78 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2196:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2194
 ; {
 ; RPN'ized expression: "( 2 , oldIdxRight oldSpRight sp - - del ) "
 ; Expanded expression: " 2  (@-16) *(4) (@-20) *(4) sp *(4) - -  del ()8 "
 ; (
 ; 2
 load32 2 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
 ; }
 jump Label_2195
Label_2194:
 ; else
 ; RPN'ized expression: "( errorNotLvalue ) "
 ; Expanded expression: " errorNotLvalue ()0 "
 ; (
 ; errorNotLvalue
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorNotLvalue
 add r13 16 r13
Label_2195:
Label_2191:
 ; RPN'ized expression: "ExprTypeSynPtr *u ExprTypeSynPtr *u -u = "
 ; Expanded expression: "(@12) *(4) (@12) *(4) *(4) -u =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; -u
 sub r0 r8 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "ConstExpr *u 0 = "
 ; Expanded expression: "(@16) *(4) 0 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; =
 write 0 r2 r0
 ; break
 jump Label_2110
 ; case
 ; RPN'ized expression: "78 "
 ; Expanded expression: "78 "
 ; Expression value: 78
Label_2197:
 ; RPN'ized expression: "( ConstExpr , ExprTypeSynPtr , idx exprval ) "
 ; Expanded expression: " (@16) *(4)  (@12) *(4)  (@8) *(4)  exprval ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; if
 ; RPN'ized expression: "ExprTypeSynPtr *u 0 < SyntaxStack0 ExprTypeSynPtr *u + *u 42 == || "
 ; Expanded expression: "(@12) *(4) *(4) 0 < [sh||->2200] SyntaxStack0 (@12) *(4) *(4) + *(1) 42 == ||[2200] "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; <
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2200
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 42
 ; ==
 load32 42 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2200:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2198
 ; {
 ; if
 ; RPN'ized expression: "ExprTypeSynPtr *u 0 < "
 ; Expanded expression: "(@12) *(4) *(4) 0 < "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; <
 bgts r0 r2 2
 jump Label_2201
 ; RPN'ized expression: "ExprTypeSynPtr *u ExprTypeSynPtr *u -u = "
 ; Expanded expression: "(@12) *(4) (@12) *(4) *(4) -u =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; -u
 sub r0 r8 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 jump Label_2202
Label_2201:
 ; else
 ; RPN'ized expression: "ExprTypeSynPtr *u ++ "
 ; Expanded expression: "(@12) *(4) ++(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; ++
 or r0 r2 r11
 read 0 r11 r2
 add r2 1 r2
 write 0 r11 r2
Label_2202:
 ; RPN'ized expression: "( ExprTypeSynPtr *u nonVoidTypeCheck ) "
 ; Expanded expression: " (@12) *(4) *(4)  nonVoidTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; nonVoidTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump nonVoidTypeCheck
 add r13 16 r13
 ; if
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr *u + *u 144 == ( 0 , ExprTypeSynPtr *u GetDeclSize ) 0 == && "
 ; Expanded expression: "SyntaxStack0 (@12) *(4) *(4) + *(1) 144 == [sh&&->2205]  0  (@12) *(4) *(4)  GetDeclSize ()8 0 == &&[2205] "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 144
 ; ==
 load32 144 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2205
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2205:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2203
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_2203:
 ; if
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr *u + *u 91 == SyntaxStack0 ExprTypeSynPtr *u + *u 40 == || "
 ; Expanded expression: "SyntaxStack0 (@12) *(4) *(4) + *(1) 91 == [sh||->2208] SyntaxStack0 (@12) *(4) *(4) + *(1) 40 == ||[2208] "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 91
 ; ==
 load32 91 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2208
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2208:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2206
 ; RPN'ized expression: "( 1 , oldIdxRight 1 + oldSpRight sp - - del ) "
 ; Expanded expression: " 1  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  del ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
 jump Label_2207
Label_2206:
 ; else
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 1 + *u ( 1 , ExprTypeSynPtr *u GetDeclSize ) = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 4 +  1  (@12) *(4) *(4)  GetDeclSize ()8 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -16 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -20 r14 r2
 ; sp
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r2 r2
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r2 r2
 ; 3
 ; <<
 shiftl r2 3 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; 4
 ; +
 add r2 4 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; = (write dereference)
 read 0 r13 r11
 add r13 4 r13
 write 0 r11 r2
Label_2207:
 ; }
 jump Label_2199
Label_2198:
 ; else
 ; if
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr *u + *u 91 == "
 ; Expanded expression: "SyntaxStack0 (@12) *(4) *(4) + *(1) 91 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 91
 ; ==
 load32 91 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2209
 ; {
 ; RPN'ized expression: "ExprTypeSynPtr *u 3 += "
 ; Expanded expression: "(@12) *(4) 3 +=(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 3
 load32 3 r8
 ; +=
 or r0 r2 r12
 read 0 r2 r2
 add r2 r8 r2
 write 0 r12 r2
 ; if
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr *u + *u 91 == "
 ; Expanded expression: "SyntaxStack0 (@12) *(4) *(4) + *(1) 91 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 91
 ; ==
 load32 91 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2211
 ; RPN'ized expression: "( 1 , oldIdxRight 1 + oldSpRight sp - - del ) "
 ; Expanded expression: " 1  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  del ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
 jump Label_2212
Label_2211:
 ; else
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 1 + *u ( 1 , ExprTypeSynPtr *u GetDeclSize ) = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 4 +  1  (@12) *(4) *(4)  GetDeclSize ()8 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -16 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -20 r14 r2
 ; sp
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r2 r2
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r2 r2
 ; 3
 ; <<
 shiftl r2 3 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; 4
 ; +
 add r2 4 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; = (write dereference)
 read 0 r13 r11
 add r13 4 r13
 write 0 r11 r2
Label_2212:
 ; }
 jump Label_2210
Label_2209:
 ; else
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_2210:
Label_2199:
 ; RPN'ized expression: "ConstExpr *u 0 = "
 ; Expanded expression: "(@16) *(4) 0 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; =
 write 0 r2 r0
 ; break
 jump Label_2110
 ; case
 ; RPN'ized expression: "43 "
 ; Expanded expression: "43 "
 ; Expression value: 43
Label_2213:
 ; case
 ; RPN'ized expression: "45 "
 ; Expanded expression: "45 "
 ; Expression value: 45
Label_2214:
 ; {
 ; loc             ptrmask : (@-36) : int
 ; loc             oldIdxLeft : (@-40) : int
 ; loc             oldSpLeft : (@-44) : int
 ; loc             sl : (@-48) : int
 ; loc             sr : (@-52) : int
 ; loc             incSize : (@-56) : int
 ; RPN'ized expression: "sr ( constExpr 1 + *u &u , RightExprTypeSynPtr &u , idx exprval ) = "
 ; Expanded expression: "(@-52)  (@-28)  (@-12)  (@8) *(4)  exprval ()12 =(4) "
 ; (
 ; local ofs
 sub r14 28 r6
 ; ,
 ; local ofs
 sub r14 12 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -52 r14 r2
 ; RPN'ized expression: "oldIdxLeft idx *u = "
 ; Expanded expression: "(@-40) (@8) *(4) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; RPN'ized expression: "oldSpLeft sp = "
 ; Expanded expression: "(@-44) sp *(4) =(4) "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; RPN'ized expression: "sl ( constExpr 0 + *u &u , ExprTypeSynPtr , idx exprval ) = "
 ; Expanded expression: "(@-48)  (@-32)  (@12) *(4)  (@8) *(4)  exprval ()12 =(4) "
 ; (
 ; local ofs
 sub r14 32 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -48 r14 r2
 ; RPN'ized expression: "( 1 , RightExprTypeSynPtr &u decayArray ) "
 ; Expanded expression: " 1  (@-12)  decayArray ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 sub r14 12 r4
 ; ,
 ; decayArray
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump decayArray
 add r13 16 r13
 ; RPN'ized expression: "( 1 , ExprTypeSynPtr decayArray ) "
 ; Expanded expression: " 1  (@12) *(4)  decayArray ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; decayArray
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump decayArray
 add r13 16 r13
 ; RPN'ized expression: "( RightExprTypeSynPtr scalarTypeCheck ) "
 ; Expanded expression: " (@-12) *(4)  scalarTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; scalarTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump scalarTypeCheck
 add r13 16 r13
 ; RPN'ized expression: "( ExprTypeSynPtr *u scalarTypeCheck ) "
 ; Expanded expression: " (@12) *(4) *(4)  scalarTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; scalarTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump scalarTypeCheck
 add r13 16 r13
 ; RPN'ized expression: "ptrmask ( RightExprTypeSynPtr isAnyPtr ) ( ExprTypeSynPtr *u isAnyPtr ) 2 * + = "
 ; Expanded expression: "(@-36)  (@-12) *(4)  isAnyPtr ()4  (@12) *(4) *(4)  isAnyPtr ()4 2 * + =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; isAnyPtr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isAnyPtr
 add r13 16 r13
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; isAnyPtr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isAnyPtr
 add r13 16 r13
 ; 1
 ; <<
 shiftl r2 1 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; if
 ; RPN'ized expression: "ptrmask 1 == tok 43 == && "
 ; Expanded expression: "(@-36) *(4) 1 == [sh&&->2217] (@-4) *(4) 43 == &&[2217] "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2217
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 43
 ; ==
 load32 43 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2217:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2215
 ; {
 ; RPN'ized expression: "incSize ( 0 , ( RightExprTypeSynPtr derefAnyPtr ) GetDeclSize ) = "
 ; Expanded expression: "(@-56)  0   (@-12) *(4)  derefAnyPtr ()4  GetDeclSize ()8 =(4) "
 ; (
 sub r13 8 r13
 ; 0
 load32 0 r2
 ; ,
 ; (
 sub r13 4 r13
 write 0 r13 r2
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; ,
 ; derefAnyPtr
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump derefAnyPtr
 add r13 16 r13
 ; ,
 ; GetDeclSize
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -56 r14 r2
 ; if
 ; RPN'ized expression: "constExpr 0 + *u "
 ; Expanded expression: "(@-32) *(4) "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2218
 ; {
 ; loc                     <something> : int
 ; loc                     <something> : unsigned
 ; RPN'ized expression: "s sl (something2221) incSize * (something2220) = "
 ; Expanded expression: "(@-8) (@-48) *(4) (@-56) *(4) * =(4) "
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 ; local ofs
 ; * (read dereference)
 read -56 r14 r8
 ; *
 mult r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "stack oldIdxLeft oldSpLeft sp - - + *u 1 + *u s = "
 ; Expanded expression: "stack (@-40) *(4) (@-44) *(4) sp *(4) - - 8 * + 4 + (@-8) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; local ofs
 ; * (read dereference)
 read -44 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; {
 ; loc                         i : (@-60) : int
 ; RPN'ized expression: "i oldIdxRight oldSpRight sp - - = "
 ; Expanded expression: "(@-60) (@-16) *(4) (@-20) *(4) sp *(4) - - =(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; local ofs
 ; * (read dereference)
 read -20 r14 r8
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r9
 ; -
 sub r8 r9 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -60 r14 r2
 ; while
 ; RPN'ized expression: "stack i + *u 0 + *u 79 == stack i + *u 0 + *u 43 == || "
 ; Expanded expression: "stack (@-60) *(4) 8 * + 0 + *(4) 79 == [sh||->2224] stack (@-60) *(4) 8 * + 0 + *(4) 43 == ||[2224] "
Label_2222:
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -60 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 79
 ; ==
 load32 79 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2224
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -60 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 43
 ; ==
 load32 43 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2224:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2223
 ; RPN'ized expression: "i --p "
 ; Expanded expression: "(@-60) --p(4) "
 ; local ofs
 ; --p
 read -60 r14 r2
 sub r2 1 r2
 write -60 r14 r2
 add r2 1 r2
 jump Label_2222
Label_2223:
 ; if
 ; RPN'ized expression: "stack i + *u 0 + *u 1 == stack i + *u 0 + *u 2 == || stack i + *u 0 + *u 89 == || "
 ; Expanded expression: "stack (@-60) *(4) 8 * + 0 + *(4) 1 == [sh||->2228] stack (@-60) *(4) 8 * + 0 + *(4) 2 == ||[2228] _Bool [sh||->2227] stack (@-60) *(4) 8 * + 0 + *(4) 89 == ||[2227] "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -60 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2228
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -60 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2228:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2227
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -60 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 89
 ; ==
 load32 89 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2227:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2225
 ; {
 ; loc                             <something> : int
 ; loc                             <something> : unsigned
 ; RPN'ized expression: "s stack i + *u 1 + *u (something2230) s + (something2229) = "
 ; Expanded expression: "(@-8) stack (@-60) *(4) 8 * + 4 + *(4) (@-8) *(4) + =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -60 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "stack i + *u 1 + *u s = "
 ; Expanded expression: "stack (@-60) *(4) 8 * + 4 + (@-8) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -60 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "( 1 , oldIdxLeft oldSpLeft sp - - del ) "
 ; Expanded expression: " 1  (@-40) *(4) (@-44) *(4) sp *(4) - -  del ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -44 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
 ; RPN'ized expression: "( 1 , oldIdxRight oldSpRight sp - - 1 + del ) "
 ; Expanded expression: " 1  (@-16) *(4) (@-20) *(4) sp *(4) - - 1 +  del ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; 1
 ; +
 add r4 1 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
 ; }
Label_2225:
 ; }
 ; }
 jump Label_2219
Label_2218:
 ; else
 ; if
 ; RPN'ized expression: "incSize 1 != "
 ; Expanded expression: "(@-56) *(4) 1 != "
 ; local ofs
 ; * (read dereference)
 read -56 r14 r2
 ; 1
 ; !=
 load32 1 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_2231
 ; {
 ; RPN'ized expression: "( incSize , 1 , oldIdxLeft 1 + oldSpLeft sp - - ins2 ) "
 ; Expanded expression: " (@-56) *(4)  1  (@-40) *(4) 1 + (@-44) *(4) sp *(4) - -  ins2 ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -56 r14 r6
 ; ,
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -44 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; ins2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins2
 add r13 16 r13
 ; RPN'ized expression: "( 42 , oldIdxLeft 1 + oldSpLeft sp - - ins ) "
 ; Expanded expression: " 42  (@-40) *(4) 1 + (@-44) *(4) sp *(4) - -  ins ()8 "
 ; (
 ; 42
 load32 42 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -44 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; ins
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins
 add r13 16 r13
 ; }
Label_2231:
Label_2219:
 ; RPN'ized expression: "ExprTypeSynPtr *u RightExprTypeSynPtr = "
 ; Expanded expression: "(@12) *(4) (@-12) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
 jump Label_2216
Label_2215:
 ; else
 ; if
 ; RPN'ized expression: "ptrmask 2 == "
 ; Expanded expression: "(@-36) *(4) 2 == "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2233
 ; {
 ; RPN'ized expression: "incSize ( 0 , ( ExprTypeSynPtr *u derefAnyPtr ) GetDeclSize ) = "
 ; Expanded expression: "(@-56)  0   (@12) *(4) *(4)  derefAnyPtr ()4  GetDeclSize ()8 =(4) "
 ; (
 sub r13 8 r13
 ; 0
 load32 0 r2
 ; ,
 ; (
 sub r13 4 r13
 write 0 r13 r2
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; ,
 ; derefAnyPtr
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump derefAnyPtr
 add r13 16 r13
 ; ,
 ; GetDeclSize
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -56 r14 r2
 ; if
 ; RPN'ized expression: "constExpr 1 + *u "
 ; Expanded expression: "(@-28) *(4) "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2235
 ; {
 ; loc                     <something> : int
 ; loc                     <something> : unsigned
 ; RPN'ized expression: "s sr (something2238) incSize * (something2237) = "
 ; Expanded expression: "(@-8) (@-52) *(4) (@-56) *(4) * =(4) "
 ; local ofs
 ; * (read dereference)
 read -52 r14 r2
 ; local ofs
 ; * (read dereference)
 read -56 r14 r8
 ; *
 mult r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "stack oldIdxRight oldSpRight sp - - + *u 1 + *u s = "
 ; Expanded expression: "stack (@-16) *(4) (@-20) *(4) sp *(4) - - 8 * + 4 + (@-8) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; {
 ; loc                         i : (@-60) : int
 ; RPN'ized expression: "i oldIdxLeft oldSpLeft sp - - = "
 ; Expanded expression: "(@-60) (@-40) *(4) (@-44) *(4) sp *(4) - - =(4) "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; local ofs
 ; * (read dereference)
 read -44 r14 r8
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r9
 ; -
 sub r8 r9 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -60 r14 r2
 ; while
 ; RPN'ized expression: "stack i + *u 0 + *u 79 == stack i + *u 0 + *u 43 == || "
 ; Expanded expression: "stack (@-60) *(4) 8 * + 0 + *(4) 79 == [sh||->2241] stack (@-60) *(4) 8 * + 0 + *(4) 43 == ||[2241] "
Label_2239:
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -60 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 79
 ; ==
 load32 79 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2241
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -60 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 43
 ; ==
 load32 43 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2241:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2240
 ; RPN'ized expression: "i --p "
 ; Expanded expression: "(@-60) --p(4) "
 ; local ofs
 ; --p
 read -60 r14 r2
 sub r2 1 r2
 write -60 r14 r2
 add r2 1 r2
 jump Label_2239
Label_2240:
 ; if
 ; RPN'ized expression: "stack i + *u 0 + *u 1 == stack i + *u 0 + *u 2 == || stack i + *u 0 + *u 89 == || "
 ; Expanded expression: "stack (@-60) *(4) 8 * + 0 + *(4) 1 == [sh||->2245] stack (@-60) *(4) 8 * + 0 + *(4) 2 == ||[2245] _Bool [sh||->2244] stack (@-60) *(4) 8 * + 0 + *(4) 89 == ||[2244] "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -60 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2245
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -60 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2245:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2244
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -60 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 89
 ; ==
 load32 89 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2244:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2242
 ; {
 ; if
 ; RPN'ized expression: "tok 45 == "
 ; Expanded expression: "(@-4) *(4) 45 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 45
 ; ==
 load32 45 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2246
 ; loc                             <something> : int
 ; RPN'ized expression: "s s 1u - ~ (something2248) = "
 ; Expanded expression: "(@-8) (@-8) *(4) 1u - ~ =(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 1
 ; -
 sub r2 1 r2
 ; ~
 or r2 r2 r2
 not r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
Label_2246:
 ; loc                             <something> : int
 ; loc                             <something> : unsigned
 ; RPN'ized expression: "s stack i + *u 1 + *u (something2250) s + (something2249) = "
 ; Expanded expression: "(@-8) stack (@-60) *(4) 8 * + 4 + *(4) (@-8) *(4) + =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -60 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "stack i + *u 1 + *u s = "
 ; Expanded expression: "stack (@-60) *(4) 8 * + 4 + (@-8) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -60 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "( 2 , oldIdxRight oldSpRight sp - - del ) "
 ; Expanded expression: " 2  (@-16) *(4) (@-20) *(4) sp *(4) - -  del ()8 "
 ; (
 ; 2
 load32 2 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
 ; }
Label_2242:
 ; }
 ; }
 jump Label_2236
Label_2235:
 ; else
 ; if
 ; RPN'ized expression: "incSize 1 != "
 ; Expanded expression: "(@-56) *(4) 1 != "
 ; local ofs
 ; * (read dereference)
 read -56 r14 r2
 ; 1
 ; !=
 load32 1 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_2251
 ; {
 ; RPN'ized expression: "( incSize , 1 , oldIdxRight 1 + oldSpRight sp - - ins2 ) "
 ; Expanded expression: " (@-56) *(4)  1  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  ins2 ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -56 r14 r6
 ; ,
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; ins2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins2
 add r13 16 r13
 ; RPN'ized expression: "( 42 , oldIdxRight 1 + oldSpRight sp - - ins ) "
 ; Expanded expression: " 42  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  ins ()8 "
 ; (
 ; 42
 load32 42 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; ins
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins
 add r13 16 r13
 ; }
Label_2251:
Label_2236:
 ; }
 jump Label_2234
Label_2233:
 ; else
 ; if
 ; RPN'ized expression: "ptrmask 3 == tok 45 == && "
 ; Expanded expression: "(@-36) *(4) 3 == [sh&&->2255] (@-4) *(4) 45 == &&[2255] "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; 3
 ; ==
 load32 3 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2255
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 45
 ; ==
 load32 45 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2255:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2253
 ; {
 ; RPN'ized expression: "incSize ( 0 , ( ExprTypeSynPtr *u derefAnyPtr ) GetDeclSize ) = "
 ; Expanded expression: "(@-56)  0   (@12) *(4) *(4)  derefAnyPtr ()4  GetDeclSize ()8 =(4) "
 ; (
 sub r13 8 r13
 ; 0
 load32 0 r2
 ; ,
 ; (
 sub r13 4 r13
 write 0 r13 r2
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; ,
 ; derefAnyPtr
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump derefAnyPtr
 add r13 16 r13
 ; ,
 ; GetDeclSize
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -56 r14 r2
 ; if
 ; RPN'ized expression: "incSize ( 0 , ( RightExprTypeSynPtr derefAnyPtr ) GetDeclSize ) != "
 ; Expanded expression: "(@-56) *(4)  0   (@-12) *(4)  derefAnyPtr ()4  GetDeclSize ()8 != "
 ; local ofs
 ; * (read dereference)
 read -56 r14 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 sub r13 8 r13
 ; 0
 load32 0 r2
 ; ,
 ; (
 sub r13 4 r13
 write 0 r13 r2
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; ,
 ; derefAnyPtr
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump derefAnyPtr
 add r13 16 r13
 ; ,
 ; GetDeclSize
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; !=
 read 0 r13 r11
 add r13 4 r13
 bne r11 r2 2
 jump Label_2256
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_2256:
 ; if
 ; RPN'ized expression: "incSize 1 != "
 ; Expanded expression: "(@-56) *(4) 1 != "
 ; local ofs
 ; * (read dereference)
 read -56 r14 r2
 ; 1
 ; !=
 load32 1 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_2258
 ; {
 ; RPN'ized expression: "( incSize , 1 , oldIdxRight 2 + oldSpRight sp - - ins2 ) "
 ; Expanded expression: " (@-56) *(4)  1  (@-16) *(4) 2 + (@-20) *(4) sp *(4) - -  ins2 ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -56 r14 r6
 ; ,
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; 2
 ; +
 add r4 2 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; ins2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins2
 add r13 16 r13
 ; RPN'ized expression: "( 47 , oldIdxRight 2 + oldSpRight sp - - ins ) "
 ; Expanded expression: " 47  (@-16) *(4) 2 + (@-20) *(4) sp *(4) - -  ins ()8 "
 ; (
 ; 47
 load32 47 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; 2
 ; +
 add r4 2 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; ins
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins
 add r13 16 r13
 ; }
Label_2258:
 ; RPN'ized expression: "ExprTypeSynPtr *u 1 = "
 ; Expanded expression: "(@12) *(4) 1 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
 jump Label_2254
Label_2253:
 ; else
 ; if
 ; RPN'ized expression: "ptrmask "
 ; Expanded expression: "(@-36) *(4) "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2260
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_2260:
Label_2254:
Label_2234:
Label_2216:
 ; RPN'ized expression: "( RightExprTypeSynPtr &u , ExprTypeSynPtr promoteType ) "
 ; Expanded expression: " (@-12)  (@12) *(4)  promoteType ()8 "
 ; (
 ; local ofs
 sub r14 12 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; promoteType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump promoteType
 add r13 16 r13
 ; RPN'ized expression: "ConstExpr *u constExpr 0 + *u constExpr 1 + *u && = "
 ; Expanded expression: "(@16) *(4) (@-32) *(4) _Bool [sh&&->2262] (@-28) *(4) _Bool &&[2262] =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; local ofs
 ; * (read dereference)
 read -32 r14 r8
 ; _Bool
 bgts r8 r0 3
 load32 0 r8
 jumpo 2
 load32 1 r8
 ; short-circuit &&
 ; JumpIfZero
 bne r8 r0 2
 jump Label_2262
 ; local ofs
 ; * (read dereference)
 read -28 r14 r8
 ; _Bool
 bgts r8 r0 3
 load32 0 r8
 jumpo 2
 load32 1 r8
 ; short-circuit && target
Label_2262:
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; {
 ; if
 ; RPN'ized expression: "tok 43 == "
 ; Expanded expression: "(@-4) *(4) 43 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 43
 ; ==
 load32 43 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2263
 ; loc                 <something> : int
 ; loc                 <something> : unsigned
 ; RPN'ized expression: "s sl (something2266) sr + (something2265) = "
 ; Expanded expression: "(@-8) (@-48) *(4) (@-52) *(4) + =(4) "
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 ; local ofs
 ; * (read dereference)
 read -52 r14 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 jump Label_2264
Label_2263:
 ; else
 ; loc                 <something> : int
 ; loc                 <something> : unsigned
 ; RPN'ized expression: "s sl (something2268) sr - (something2267) = "
 ; Expanded expression: "(@-8) (@-48) *(4) (@-52) *(4) - =(4) "
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 ; local ofs
 ; * (read dereference)
 read -52 r14 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
Label_2264:
 ; }
 ; RPN'ized expression: "( idx *u 1 + , oldIdxRight 1 + oldSpRight sp - - , ExprTypeSynPtr , ConstExpr *u , s simplifyConstExpr ) "
 ; Expanded expression: " (@8) *(4) *(4) 1 +  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  (@12) *(4)  (@16) *(4) *(4)  (@-8) *(4)  simplifyConstExpr ()20 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; +
 add r2 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r7
 ; 1
 ; +
 add r7 1 r7
 ; local ofs
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 read -20 r14 r7
 ; sp
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 16 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; simplifyConstExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump simplifyConstExpr
 add r13 20 r13
 ; }
 ; break
 jump Label_2110
 ; case
 ; RPN'ized expression: "12 "
 ; Expanded expression: "12 "
 ; Expression value: 12
Label_2269:
 ; case
 ; RPN'ized expression: "13 "
 ; Expanded expression: "13 "
 ; Expression value: 13
Label_2270:
 ; case
 ; RPN'ized expression: "81 "
 ; Expanded expression: "81 "
 ; Expression value: 81
Label_2271:
 ; case
 ; RPN'ized expression: "82 "
 ; Expanded expression: "82 "
 ; Expression value: 82
Label_2272:
 ; {
 ; loc             incSize : (@-36) : int
 ; RPN'ized expression: "incSize 1 = "
 ; Expanded expression: "(@-36) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; loc             inc : (@-40) : int
 ; RPN'ized expression: "inc tok 12 == tok 81 == || = "
 ; Expanded expression: "(@-40) (@-4) *(4) 12 == [sh||->2273] (@-4) *(4) 81 == ||[2273] =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 12
 ; ==
 load32 12 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2273
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 81
 ; ==
 load32 81 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2273:
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; loc             post : (@-44) : int
 ; RPN'ized expression: "post tok 81 == tok 82 == || = "
 ; Expanded expression: "(@-44) (@-4) *(4) 81 == [sh||->2274] (@-4) *(4) 82 == ||[2274] =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 81
 ; ==
 load32 81 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2274
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 82
 ; ==
 load32 82 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2274:
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; loc             opSize : (@-48) : int
 ; RPN'ized expression: "( ConstExpr , ExprTypeSynPtr , idx exprval ) "
 ; Expanded expression: " (@16) *(4)  (@12) *(4)  (@8) *(4)  exprval ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; RPN'ized expression: "( oldIdxRight oldSpRight sp - - , ExprTypeSynPtr *u lvalueCheck ) "
 ; Expanded expression: " (@-16) *(4) (@-20) *(4) sp *(4) - -  (@12) *(4) *(4)  lvalueCheck ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -16 r14 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -20 r14 r5
 ; sp
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r5
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r5 r5
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; lvalueCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump lvalueCheck
 add r13 16 r13
 ; RPN'ized expression: "( 1 , ExprTypeSynPtr decayArray ) "
 ; Expanded expression: " 1  (@12) *(4)  decayArray ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; decayArray
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump decayArray
 add r13 16 r13
 ; RPN'ized expression: "( ExprTypeSynPtr *u scalarTypeCheck ) "
 ; Expanded expression: " (@12) *(4) *(4)  scalarTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; scalarTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump scalarTypeCheck
 add r13 16 r13
 ; RPN'ized expression: "opSize stack oldIdxRight oldSpRight sp - - + *u 1 + *u = "
 ; Expanded expression: "(@-48) stack (@-16) *(4) (@-20) *(4) sp *(4) - - 8 * + 4 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -48 r14 r2
 ; RPN'ized expression: "( 1 , oldIdxRight oldSpRight sp - - del ) "
 ; Expanded expression: " 1  (@-16) *(4) (@-20) *(4) sp *(4) - -  del ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
 ; if
 ; RPN'ized expression: "( ExprTypeSynPtr *u isAnyPtr ) "
 ; Expanded expression: " (@12) *(4) *(4)  isAnyPtr ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; isAnyPtr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isAnyPtr
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2275
 ; RPN'ized expression: "incSize ( 0 , ( ExprTypeSynPtr *u derefAnyPtr ) GetDeclSize ) = "
 ; Expanded expression: "(@-36)  0   (@12) *(4) *(4)  derefAnyPtr ()4  GetDeclSize ()8 =(4) "
 ; (
 sub r13 8 r13
 ; 0
 load32 0 r2
 ; ,
 ; (
 sub r13 4 r13
 write 0 r13 r2
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; ,
 ; derefAnyPtr
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump derefAnyPtr
 add r13 16 r13
 ; ,
 ; GetDeclSize
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
Label_2275:
 ; if
 ; RPN'ized expression: "incSize 1 == "
 ; Expanded expression: "(@-36) *(4) 1 == "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2277
 ; {
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 1 + *u opSize = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 4 + (@-48) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -48 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
 jump Label_2278
Label_2277:
 ; else
 ; {
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 0 + *u inc post 69 84 ? post 68 83 ? ? = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 0 + (@-40) *(4) [sh||->2279] (@-44) *(4) [sh||->2283] 69 goto &&[2283] 84 &&[2284] goto &&[2279] (@-44) *(4) [sh||->2281] 68 goto &&[2281] 83 &&[2282] &&[2280] =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; short-circuit ||
 ; JumpIfNotZero
 beq r8 r0 2
 jump Label_2279
 ; local ofs
 ; * (read dereference)
 read -44 r14 r8
 ; short-circuit ||
 ; JumpIfNotZero
 beq r8 r0 2
 jump Label_2283
 ; 69
 load32 69 r8
 ; sh-circ-goto goto
 jump Label_2284
 ; short-circuit && target
Label_2283:
 ; 84
 load32 84 r8
 ; short-circuit && target
Label_2284:
 ; sh-circ-goto goto
 jump Label_2280
 ; short-circuit && target
Label_2279:
 ; local ofs
 ; * (read dereference)
 read -44 r14 r8
 ; short-circuit ||
 ; JumpIfNotZero
 beq r8 r0 2
 jump Label_2281
 ; 68
 load32 68 r8
 ; sh-circ-goto goto
 jump Label_2282
 ; short-circuit && target
Label_2281:
 ; 83
 load32 83 r8
 ; short-circuit && target
Label_2282:
 ; short-circuit && target
Label_2280:
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 1 + *u opSize = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 4 + (@-48) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -48 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "( incSize , 1 , oldIdxRight 1 + oldSpRight sp - - ins2 ) "
 ; Expanded expression: " (@-36) *(4)  1  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  ins2 ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r6
 ; ,
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; ins2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins2
 add r13 16 r13
 ; }
Label_2278:
 ; RPN'ized expression: "ConstExpr *u 0 = "
 ; Expanded expression: "(@16) *(4) 0 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; =
 write 0 r2 r0
 ; }
 ; break
 jump Label_2110
 ; case
 ; RPN'ized expression: "61 "
 ; Expanded expression: "61 "
 ; Expression value: 61
Label_2285:
 ; {
 ; loc             oldIdxLeft : (@-36) : int
 ; loc             oldSpLeft : (@-40) : int
 ; loc             opSize : (@-44) : int
 ; loc             structs : (@-48) : int
 ; RPN'ized expression: "( constExpr 1 + *u &u , RightExprTypeSynPtr &u , idx exprval ) "
 ; Expanded expression: " (@-28)  (@-12)  (@8) *(4)  exprval ()12 "
 ; (
 ; local ofs
 sub r14 28 r6
 ; ,
 ; local ofs
 sub r14 12 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; RPN'ized expression: "oldIdxLeft idx *u = "
 ; Expanded expression: "(@-36) (@8) *(4) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; RPN'ized expression: "oldSpLeft sp = "
 ; Expanded expression: "(@-40) sp *(4) =(4) "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; RPN'ized expression: "( constExpr 0 + *u &u , ExprTypeSynPtr , idx exprval ) "
 ; Expanded expression: " (@-32)  (@12) *(4)  (@8) *(4)  exprval ()12 "
 ; (
 ; local ofs
 sub r14 32 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; RPN'ized expression: "( oldIdxLeft oldSpLeft sp - - , ExprTypeSynPtr *u lvalueCheck ) "
 ; Expanded expression: " (@-36) *(4) (@-40) *(4) sp *(4) - -  (@12) *(4) *(4)  lvalueCheck ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -40 r14 r5
 ; sp
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r5
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r5 r5
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; lvalueCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump lvalueCheck
 add r13 16 r13
 ; RPN'ized expression: "( RightExprTypeSynPtr nonVoidTypeCheck ) "
 ; Expanded expression: " (@-12) *(4)  nonVoidTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; nonVoidTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump nonVoidTypeCheck
 add r13 16 r13
 ; RPN'ized expression: "( ExprTypeSynPtr *u nonVoidTypeCheck ) "
 ; Expanded expression: " (@12) *(4) *(4)  nonVoidTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; nonVoidTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump nonVoidTypeCheck
 add r13 16 r13
 ; RPN'ized expression: "structs ExprTypeSynPtr *u 0 >= SyntaxStack0 ExprTypeSynPtr *u + *u 144 == && 2 * RightExprTypeSynPtr 0 >= SyntaxStack0 RightExprTypeSynPtr + *u 144 == && + = "
 ; Expanded expression: "(@-48) (@12) *(4) *(4) 0 >= [sh&&->2287] SyntaxStack0 (@12) *(4) *(4) + *(1) 144 == &&[2287] 2 * (@-12) *(4) 0 >= [sh&&->2286] SyntaxStack0 (@-12) *(4) + *(1) 144 == &&[2286] + =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2287
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 144
 ; ==
 load32 144 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2287:
 ; 1
 ; <<
 shiftl r2 1 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 0
 ; >=
 bges r8 r0 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 load32 1 r1
 xor r8 r1 r8
 ; short-circuit &&
 ; JumpIfZero
 bne r8 r0 2
 jump Label_2286
 ; SyntaxStack0
 addr2reg SyntaxStack0 r8
 ; local ofs
 ; * (read dereference)
 read -12 r14 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 144
 ; ==
 load32 144 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; short-circuit && target
Label_2286:
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -48 r14 r2
 ; if
 ; RPN'ized expression: "structs "
 ; Expanded expression: "(@-48) *(4) "
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2288
 ; {
 ; loc                 sz : (@-52) : int
 ; if
 ; RPN'ized expression: "structs 3 != SyntaxStack1 RightExprTypeSynPtr + *u SyntaxStack1 ExprTypeSynPtr *u + *u != || "
 ; Expanded expression: "(@-48) *(4) 3 != [sh||->2292] SyntaxStack1 (@-12) *(4) 4 * + *(4) SyntaxStack1 (@12) *(4) *(4) 4 * + *(4) != ||[2292] "
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 ; 3
 ; !=
 load32 3 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2292
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; SyntaxStack1
 addr2reg SyntaxStack1 r8
 ; local ofs
 ; * (read dereference)
 read 12 r14 r9
 ; * (read dereference)
 read 0 r9 r9
 ; 2
 ; <<
 shiftl r9 2 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; !=
 xor r2 r8 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2292:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2290
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_2290:
 ; RPN'ized expression: "stack oldIdxLeft oldSpLeft sp - - + *u 0 + *u 44 = "
 ; Expanded expression: "stack (@-36) *(4) (@-40) *(4) sp *(4) - - 8 * + 0 + 44 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r8
 ; local ofs
 ; * (read dereference)
 read -40 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 44
 load32 44 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "stack oldIdxRight oldSpRight sp - - + *u 0 + *u 44 = "
 ; Expanded expression: "stack (@-16) *(4) (@-20) *(4) sp *(4) - - 8 * + 0 + 44 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 44
 load32 44 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "sz ( 0 , RightExprTypeSynPtr GetDeclSize ) = "
 ; Expanded expression: "(@-52)  0  (@-12) *(4)  GetDeclSize ()8 =(4) "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -52 r14 r2
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 0 + *u 2 = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 0 + 2 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 2
 load32 2 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 1 + *u sz = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 4 + (@-52) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -52 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "( 44 , oldIdxRight 2 + oldSpRight sp - - ins ) "
 ; Expanded expression: " 44  (@-16) *(4) 2 + (@-20) *(4) sp *(4) - -  ins ()8 "
 ; (
 ; 44
 load32 44 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; 2
 ; +
 add r4 2 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; ins
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins
 add r13 16 r13
 ; if
 ; RPN'ized expression: "StructCpyLabel 0 == "
 ; Expanded expression: "StructCpyLabel *(4) 0 == "
 ; StructCpyLabel
 ; * (read dereference)
 addr2reg StructCpyLabel r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2293
 ; RPN'ized expression: "StructCpyLabel LabelCnt ++p = "
 ; Expanded expression: "StructCpyLabel LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; StructCpyLabel
 ; = (write dereference)
 addr2reg StructCpyLabel r1
 write 0 r1 r2
Label_2293:
 ; RPN'ized expression: "( ( StructCpyLabel AddNumericIdent ) , 16 , oldIdxRight 2 + oldSpRight sp - - ins2 ) "
 ; Expanded expression: "  StructCpyLabel *(4)  AddNumericIdent ()4  16  (@-16) *(4) 2 + (@-20) *(4) sp *(4) - -  ins2 ()12 "
 ; (
 sub r13 4 r13
 ; (
 sub r13 12 r13
 ; StructCpyLabel
 ; * (read dereference)
 addr2reg StructCpyLabel r1
 read 0 r1 r2
 ; ,
 ; AddNumericIdent
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump AddNumericIdent
 add r13 16 r13
 ; ,
 ; 16
 sub r13 4 r13
 write 0 r13 r2
 load32 16 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -16 r14 r2
 ; 2
 ; +
 add r2 2 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -20 r14 r2
 ; sp
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r2 r2
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r2 r2
 ; ,
 ; ins2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 read 8 r13 r6
 savpc r15
 add r15 3 r15
 jump ins2
 add r13 16 r13
 ; RPN'ized expression: "( SizeOfWord 3 * , 41 , oldIdxRight 2 + oldSpRight sp - - ins2 ) "
 ; Expanded expression: " SizeOfWord *(4) 3 *  41  (@-16) *(4) 2 + (@-20) *(4) sp *(4) - -  ins2 ()12 "
 ; (
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r6
 ; 3
 sub r13 4 r13
 write 0 r13 r6
 load32 3 r6
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r6 r6
 ; ,
 ; 41
 load32 41 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; 2
 ; +
 add r4 2 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; ins2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins2
 add r13 16 r13
 ; RPN'ized expression: "( 0 , 78 , oldIdxRight 2 + oldSpRight sp - - ins2 ) "
 ; Expanded expression: " 0  78  (@-16) *(4) 2 + (@-20) *(4) sp *(4) - -  ins2 ()12 "
 ; (
 ; 0
 load32 0 r6
 ; ,
 ; 78
 load32 78 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; 2
 ; +
 add r4 2 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; ins2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins2
 add r13 16 r13
 ; RPN'ized expression: "( SizeOfWord 3 * , 40 , idx *u 1 + ins2 ) "
 ; Expanded expression: " SizeOfWord *(4) 3 *  40  (@8) *(4) *(4) 1 +  ins2 ()12 "
 ; (
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r6
 ; 3
 sub r13 4 r13
 write 0 r13 r6
 load32 3 r6
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r6 r6
 ; ,
 ; 40
 load32 40 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; 1
 ; +
 add r4 1 r4
 ; ,
 ; ins2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins2
 add r13 16 r13
 ; }
 jump Label_2289
Label_2288:
 ; else
 ; {
 ; RPN'ized expression: "opSize stack oldIdxLeft oldSpLeft sp - - + *u 1 + *u = "
 ; Expanded expression: "(@-44) stack (@-36) *(4) (@-40) *(4) sp *(4) - - 8 * + 4 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r8
 ; local ofs
 ; * (read dereference)
 read -40 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 1 + *u opSize = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 4 + (@-44) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -44 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "( 1 , oldIdxLeft oldSpLeft sp - - del ) "
 ; Expanded expression: " 1  (@-36) *(4) (@-40) *(4) sp *(4) - -  del ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -40 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
 ; }
Label_2289:
 ; RPN'ized expression: "ConstExpr *u 0 = "
 ; Expanded expression: "(@16) *(4) 0 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; =
 write 0 r2 r0
 ; }
 ; break
 jump Label_2110
 ; case
 ; RPN'ized expression: "126 "
 ; Expanded expression: "126 "
 ; Expression value: 126
Label_2295:
 ; case
 ; RPN'ized expression: "79 "
 ; Expanded expression: "79 "
 ; Expression value: 79
Label_2296:
 ; case
 ; RPN'ized expression: "80 "
 ; Expanded expression: "80 "
 ; Expression value: 80
Label_2297:
 ; RPN'ized expression: "s ( ConstExpr , ExprTypeSynPtr , idx exprval ) = "
 ; Expanded expression: "(@-8)  (@16) *(4)  (@12) *(4)  (@8) *(4)  exprval ()12 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "( ExprTypeSynPtr *u numericTypeCheck ) "
 ; Expanded expression: " (@12) *(4) *(4)  numericTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; numericTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump numericTypeCheck
 add r13 16 r13
 ; RPN'ized expression: "( ExprTypeSynPtr , ExprTypeSynPtr promoteType ) "
 ; Expanded expression: " (@12) *(4)  (@12) *(4)  promoteType ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; promoteType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump promoteType
 add r13 16 r13
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 jump Label_2299
 ; {
 ; case
 ; RPN'ized expression: "126 "
 ; Expanded expression: "126 "
 ; Expression value: 126
Label_2300:
 ; RPN'ized expression: "s s ~ = "
 ; Expanded expression: "(@-8) (@-8) *(4) ~ =(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; ~
 or r2 r2 r2
 not r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; break
 jump Label_2298
 ; case
 ; RPN'ized expression: "79 "
 ; Expanded expression: "79 "
 ; Expression value: 79
Label_2301:
 ; break
 jump Label_2298
 ; case
 ; RPN'ized expression: "80 "
 ; Expanded expression: "80 "
 ; Expression value: 80
Label_2302:
 ; {
 ; loc                 <something> : int
 ; RPN'ized expression: "s s 1u - ~ (something2303) = "
 ; Expanded expression: "(@-8) (@-8) *(4) 1u - ~ =(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 1
 ; -
 sub r2 1 r2
 ; ~
 or r2 r2 r2
 not r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; }
 ; break
 jump Label_2298
 ; }
 jump Label_2298
Label_2299:
 load32 126 r12
 bne r2 r12 2
 jump Label_2300
 load32 79 r12
 bne r2 r12 2
 jump Label_2301
 load32 80 r12
 bne r2 r12 2
 jump Label_2302
Label_2298:
 ; RPN'ized expression: "( idx *u 1 + , oldIdxRight 1 + oldSpRight sp - - , ExprTypeSynPtr , ConstExpr *u , s simplifyConstExpr ) "
 ; Expanded expression: " (@8) *(4) *(4) 1 +  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  (@12) *(4)  (@16) *(4) *(4)  (@-8) *(4)  simplifyConstExpr ()20 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; +
 add r2 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r7
 ; 1
 ; +
 add r7 1 r7
 ; local ofs
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 read -20 r14 r7
 ; sp
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 16 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; simplifyConstExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump simplifyConstExpr
 add r13 20 r13
 ; break
 jump Label_2110
 ; case
 ; RPN'ized expression: "42 "
 ; Expanded expression: "42 "
 ; Expression value: 42
Label_2304:
 ; case
 ; RPN'ized expression: "47 "
 ; Expanded expression: "47 "
 ; Expression value: 47
Label_2305:
 ; case
 ; RPN'ized expression: "37 "
 ; Expanded expression: "37 "
 ; Expression value: 37
Label_2306:
 ; case
 ; RPN'ized expression: "4 "
 ; Expanded expression: "4 "
 ; Expression value: 4
Label_2307:
 ; case
 ; RPN'ized expression: "5 "
 ; Expanded expression: "5 "
 ; Expression value: 5
Label_2308:
 ; case
 ; RPN'ized expression: "38 "
 ; Expanded expression: "38 "
 ; Expression value: 38
Label_2309:
 ; case
 ; RPN'ized expression: "94 "
 ; Expanded expression: "94 "
 ; Expression value: 94
Label_2310:
 ; case
 ; RPN'ized expression: "124 "
 ; Expanded expression: "124 "
 ; Expression value: 124
Label_2311:
 ; {
 ; loc             sr : (@-36) : int
 ; loc             sl : (@-40) : int
 ; loc             Unsigned : (@-44) : int
 ; RPN'ized expression: "sr ( constExpr 1 + *u &u , RightExprTypeSynPtr &u , idx exprval ) = "
 ; Expanded expression: "(@-36)  (@-28)  (@-12)  (@8) *(4)  exprval ()12 =(4) "
 ; (
 ; local ofs
 sub r14 28 r6
 ; ,
 ; local ofs
 sub r14 12 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; RPN'ized expression: "sl ( constExpr 0 + *u &u , ExprTypeSynPtr , idx exprval ) = "
 ; Expanded expression: "(@-40)  (@-32)  (@12) *(4)  (@8) *(4)  exprval ()12 =(4) "
 ; (
 ; local ofs
 sub r14 32 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; RPN'ized expression: "( RightExprTypeSynPtr numericTypeCheck ) "
 ; Expanded expression: " (@-12) *(4)  numericTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; numericTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump numericTypeCheck
 add r13 16 r13
 ; RPN'ized expression: "( ExprTypeSynPtr *u numericTypeCheck ) "
 ; Expanded expression: " (@12) *(4) *(4)  numericTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; numericTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump numericTypeCheck
 add r13 16 r13
 ; RPN'ized expression: "ConstExpr *u constExpr 0 + *u constExpr 1 + *u && = "
 ; Expanded expression: "(@16) *(4) (@-32) *(4) _Bool [sh&&->2312] (@-28) *(4) _Bool &&[2312] =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; local ofs
 ; * (read dereference)
 read -32 r14 r8
 ; _Bool
 bgts r8 r0 3
 load32 0 r8
 jumpo 2
 load32 1 r8
 ; short-circuit &&
 ; JumpIfZero
 bne r8 r0 2
 jump Label_2312
 ; local ofs
 ; * (read dereference)
 read -28 r14 r8
 ; _Bool
 bgts r8 r0 3
 load32 0 r8
 jumpo 2
 load32 1 r8
 ; short-circuit && target
Label_2312:
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "Unsigned SyntaxStack0 ExprTypeSynPtr *u + *u 101 == SyntaxStack0 RightExprTypeSynPtr + *u 101 == || = "
 ; Expanded expression: "(@-44) SyntaxStack0 (@12) *(4) *(4) + *(1) 101 == [sh||->2313] SyntaxStack0 (@-12) *(4) + *(1) 101 == ||[2313] =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 101
 ; ==
 load32 101 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2313
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 101
 ; ==
 load32 101 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2313:
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; {
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 jump Label_2315
 ; {
 ; case
 ; RPN'ized expression: "47 "
 ; Expanded expression: "47 "
 ; Expression value: 47
Label_2316:
 ; case
 ; RPN'ized expression: "37 "
 ; Expanded expression: "37 "
 ; Expression value: 37
Label_2317:
 ; RPN'ized expression: "ConstExpr *u ( constExpr , Unsigned , sr , sl &u , tok divCheckAndCalc ) &= "
 ; Expanded expression: "(@16) *(4)  (@-32)  (@-44) *(4)  (@-36) *(4)  (@-40)  (@-4) *(4)  divCheckAndCalc ()20 &=(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 sub r14 32 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -44 r14 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read -36 r14 r6
 ; ,
 ; local ofs
 sub r14 40 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; divCheckAndCalc
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump divCheckAndCalc
 add r13 20 r13
 ; &=
 read 0 r13 r11
 add r13 4 r13
 or r0 r2 r12
 read 0 r11 r2
 and r2 r12 r2
 write 0 r11 r2
 ; if
 ; RPN'ized expression: "Unsigned "
 ; Expanded expression: "(@-44) *(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2318
 ; {
 ; if
 ; RPN'ized expression: "tok 47 == "
 ; Expanded expression: "(@-4) *(4) 47 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 47
 ; ==
 load32 47 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2320
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 0 + *u 29 = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 0 + 29 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 29
 load32 29 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 jump Label_2321
Label_2320:
 ; else
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 0 + *u 30 = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 0 + 30 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 30
 load32 30 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_2321:
 ; }
Label_2318:
 ; break
 jump Label_2314
 ; case
 ; RPN'ized expression: "42 "
 ; Expanded expression: "42 "
 ; Expression value: 42
Label_2322:
 ; loc                     <something> : int
 ; loc                     <something> : unsigned
 ; RPN'ized expression: "sl sl (something2324) sr * (something2323) = "
 ; Expanded expression: "(@-40) (@-40) *(4) (@-36) *(4) * =(4) "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r8
 ; *
 mult r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; break
 jump Label_2314
 ; case
 ; RPN'ized expression: "4 "
 ; Expanded expression: "4 "
 ; Expression value: 4
Label_2325:
 ; case
 ; RPN'ized expression: "5 "
 ; Expanded expression: "5 "
 ; Expression value: 5
Label_2326:
 ; if
 ; RPN'ized expression: "constExpr 1 + *u "
 ; Expanded expression: "(@-28) *(4) "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2327
 ; {
 ; if
 ; RPN'ized expression: "SyntaxStack0 RightExprTypeSynPtr + *u 101 != "
 ; Expanded expression: "SyntaxStack0 (@-12) *(4) + *(1) 101 != "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 101
 ; !=
 load32 101 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_2329
 ; RPN'ized expression: "sr ( sr truncInt ) = "
 ; Expanded expression: "(@-36)  (@-36) *(4)  truncInt ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 jump Label_2330
Label_2329:
 ; else
 ; loc                         <something> : int
 ; RPN'ized expression: "sr ( sr truncUint ) (something2331) = "
 ; Expanded expression: "(@-36)  (@-36) *(4)  truncUint ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
Label_2330:
 ; RPN'ized expression: "( RightExprTypeSynPtr , oldIdxRight oldSpRight sp - - , sr &u shiftCountCheck ) "
 ; Expanded expression: " (@-12) *(4)  (@-16) *(4) (@-20) *(4) sp *(4) - -  (@-36)  shiftCountCheck ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -20 r14 r5
 ; sp
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r5
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r5 r5
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r5 r5
 ; ,
 ; local ofs
 sub r14 36 r4
 ; ,
 ; shiftCountCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump shiftCountCheck
 add r13 16 r13
 ; }
Label_2327:
 ; if
 ; RPN'ized expression: "ConstExpr *u "
 ; Expanded expression: "(@16) *(4) *(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2332
 ; {
 ; if
 ; RPN'ized expression: "tok 4 == "
 ; Expanded expression: "(@-4) *(4) 4 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 4
 ; ==
 load32 4 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2334
 ; {
 ; loc                             <something> : int
 ; loc                             <something> : unsigned
 ; RPN'ized expression: "sl sl (something2337) sr << (something2336) = "
 ; Expanded expression: "(@-40) (@-40) *(4) (@-36) *(4) << =(4) "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r8
 ; <<
 shiftl r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; }
 jump Label_2335
Label_2334:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr *u + *u 101 == "
 ; Expanded expression: "SyntaxStack0 (@12) *(4) *(4) + *(1) 101 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 101
 ; ==
 load32 101 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2338
 ; {
 ; loc                                 <something> : int
 ; RPN'ized expression: "sl ( sl truncUint ) sr >> (something2340) = "
 ; Expanded expression: "(@-40)  (@-40) *(4)  truncUint ()4 (@-36) *(4) >>u =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -36 r14 r2
 ; >>u
 read 0 r13 r11
 add r13 4 r13
 shiftr r11 r2 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; }
 jump Label_2339
Label_2338:
 ; else
 ; if
 ; RPN'ized expression: "sr "
 ; Expanded expression: "(@-36) *(4) "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2341
 ; {
 ; RPN'ized expression: "sl ( sl truncInt ) = "
 ; Expanded expression: "(@-40)  (@-40) *(4)  truncInt ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; loc                                 <something> : int
 ; RPN'ized expression: "sl ( sl truncUint ) sr >> sl 0 < 0u ~ 8 SizeOfWord * sr - << * | (something2343) = "
 ; Expanded expression: "(@-40)  (@-40) *(4)  truncUint ()4 (@-36) *(4) >>u (@-40) *(4) 0 < 4294967295u 8 SizeOfWord *(4) * (@-36) *(4) - << * | =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -36 r14 r2
 ; >>u
 read 0 r13 r11
 add r13 4 r13
 shiftr r11 r2 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -40 r14 r2
 ; 0
 ; <
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; -1
 sub r13 4 r13
 write 0 r13 r2
 load32 -1 r2
 ; SizeOfWord
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; 3
 ; <<
 shiftl r2 3 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -36 r14 r2
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r2 r2
 ; <<
 read 0 r13 r11
 add r13 4 r13
 shiftl r11 r2 r2
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r2 r2
 ; |
 read 0 r13 r11
 add r13 4 r13
 or r11 r2 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; }
Label_2341:
Label_2339:
 ; }
Label_2335:
 ; }
Label_2332:
 ; if
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr *u + *u 101 == tok 5 == && "
 ; Expanded expression: "SyntaxStack0 (@12) *(4) *(4) + *(1) 101 == [sh&&->2346] (@-4) *(4) 5 == &&[2346] "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 101
 ; ==
 load32 101 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2346
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 5
 ; ==
 load32 5 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2346:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2344
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 0 + *u 28 = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 0 + 28 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 28
 load32 28 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_2344:
 ; RPN'ized expression: "RightExprTypeSynPtr 1 = "
 ; Expanded expression: "(@-12) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; break
 jump Label_2314
 ; case
 ; RPN'ized expression: "38 "
 ; Expanded expression: "38 "
 ; Expression value: 38
Label_2347:
 ; RPN'ized expression: "sl sr &= "
 ; Expanded expression: "(@-40) (@-36) *(4) &=(4) "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; local ofs
 ; &=
 read -40 r14 r12
 and r12 r2 r2
 write -40 r14 r2
 ; break
 jump Label_2314
 ; case
 ; RPN'ized expression: "94 "
 ; Expanded expression: "94 "
 ; Expression value: 94
Label_2348:
 ; RPN'ized expression: "sl sr ^= "
 ; Expanded expression: "(@-40) (@-36) *(4) ^=(4) "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; local ofs
 ; ^=
 read -40 r14 r12
 xor r12 r2 r2
 write -40 r14 r2
 ; break
 jump Label_2314
 ; case
 ; RPN'ized expression: "124 "
 ; Expanded expression: "124 "
 ; Expression value: 124
Label_2349:
 ; RPN'ized expression: "sl sr |= "
 ; Expanded expression: "(@-40) (@-36) *(4) |=(4) "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; local ofs
 ; |=
 read -40 r14 r12
 or r12 r2 r2
 write -40 r14 r2
 ; break
 jump Label_2314
 ; }
 jump Label_2314
Label_2315:
 load32 47 r12
 bne r2 r12 2
 jump Label_2316
 load32 37 r12
 bne r2 r12 2
 jump Label_2317
 load32 42 r12
 bne r2 r12 2
 jump Label_2322
 load32 4 r12
 bne r2 r12 2
 jump Label_2325
 load32 5 r12
 bne r2 r12 2
 jump Label_2326
 load32 38 r12
 bne r2 r12 2
 jump Label_2347
 load32 94 r12
 bne r2 r12 2
 jump Label_2348
 load32 124 r12
 bne r2 r12 2
 jump Label_2349
Label_2314:
 ; RPN'ized expression: "s sl = "
 ; Expanded expression: "(@-8) (@-40) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; }
 ; RPN'ized expression: "( RightExprTypeSynPtr &u , ExprTypeSynPtr promoteType ) "
 ; Expanded expression: " (@-12)  (@12) *(4)  promoteType ()8 "
 ; (
 ; local ofs
 sub r14 12 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; promoteType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump promoteType
 add r13 16 r13
 ; RPN'ized expression: "( idx *u 1 + , oldIdxRight 1 + oldSpRight sp - - , ExprTypeSynPtr , ConstExpr *u , s simplifyConstExpr ) "
 ; Expanded expression: " (@8) *(4) *(4) 1 +  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  (@12) *(4)  (@16) *(4) *(4)  (@-8) *(4)  simplifyConstExpr ()20 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; +
 add r2 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r7
 ; 1
 ; +
 add r7 1 r7
 ; local ofs
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 read -20 r14 r7
 ; sp
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 16 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; simplifyConstExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump simplifyConstExpr
 add r13 20 r13
 ; }
 ; break
 jump Label_2110
 ; case
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
Label_2350:
 ; case
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
Label_2351:
 ; case
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
Label_2352:
 ; case
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
Label_2353:
 ; case
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
Label_2354:
 ; case
 ; RPN'ized expression: "9 "
 ; Expanded expression: "9 "
 ; Expression value: 9
Label_2355:
 ; {
 ; loc             ptrmask : (@-36) : int
 ; loc             sr : (@-40) : int
 ; loc             sl : (@-44) : int
 ; RPN'ized expression: "sr ( constExpr 1 + *u &u , RightExprTypeSynPtr &u , idx exprval ) = "
 ; Expanded expression: "(@-40)  (@-28)  (@-12)  (@8) *(4)  exprval ()12 =(4) "
 ; (
 ; local ofs
 sub r14 28 r6
 ; ,
 ; local ofs
 sub r14 12 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; RPN'ized expression: "sl ( constExpr 0 + *u &u , ExprTypeSynPtr , idx exprval ) = "
 ; Expanded expression: "(@-44)  (@-32)  (@12) *(4)  (@8) *(4)  exprval ()12 =(4) "
 ; (
 ; local ofs
 sub r14 32 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; RPN'ized expression: "( RightExprTypeSynPtr scalarTypeCheck ) "
 ; Expanded expression: " (@-12) *(4)  scalarTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; scalarTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump scalarTypeCheck
 add r13 16 r13
 ; RPN'ized expression: "( ExprTypeSynPtr *u scalarTypeCheck ) "
 ; Expanded expression: " (@12) *(4) *(4)  scalarTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; scalarTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump scalarTypeCheck
 add r13 16 r13
 ; RPN'ized expression: "ptrmask ( RightExprTypeSynPtr isAnyPtr ) ( ExprTypeSynPtr *u isAnyPtr ) 2 * + = "
 ; Expanded expression: "(@-36)  (@-12) *(4)  isAnyPtr ()4  (@12) *(4) *(4)  isAnyPtr ()4 2 * + =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; isAnyPtr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isAnyPtr
 add r13 16 r13
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; isAnyPtr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isAnyPtr
 add r13 16 r13
 ; 1
 ; <<
 shiftl r2 1 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; if
 ; RPN'ized expression: "tok 8 != tok 9 != && "
 ; Expanded expression: "(@-4) *(4) 8 != [sh&&->2358] (@-4) *(4) 9 != &&[2358] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 8
 ; !=
 load32 8 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2358
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 9
 ; !=
 load32 9 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2358:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2356
 ; {
 ; if
 ; RPN'ized expression: "ptrmask 1 == ptrmask 2 == || "
 ; Expanded expression: "(@-36) *(4) 1 == [sh||->2361] (@-36) *(4) 2 == ||[2361] "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2361
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2361:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2359
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_2359:
 ; if
 ; RPN'ized expression: "ptrmask 1 & SyntaxStack0 ( RightExprTypeSynPtr derefAnyPtr ) + *u 40 == && ptrmask 2 & SyntaxStack0 ( ExprTypeSynPtr *u derefAnyPtr ) + *u 40 == && || "
 ; Expanded expression: "(@-36) *(4) 1 & _Bool [sh&&->2366] SyntaxStack0  (@-12) *(4)  derefAnyPtr ()4 + *(1) 40 == &&[2366] _Bool [sh||->2364] (@-36) *(4) 2 & _Bool [sh&&->2365] SyntaxStack0  (@12) *(4) *(4)  derefAnyPtr ()4 + *(1) 40 == &&[2365] _Bool ||[2364] "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; 1
 ; &
 and r2 1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2366
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; derefAnyPtr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump derefAnyPtr
 add r13 16 r13
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2366:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2364
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; 2
 ; &
 and r2 2 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2365
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; derefAnyPtr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump derefAnyPtr
 add r13 16 r13
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2365:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_2364:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2362
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_2362:
 ; }
 jump Label_2357
Label_2356:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "ptrmask 1 == constExpr 0 + *u ( sl truncInt ) 0 == && 0 == && ptrmask 2 == constExpr 1 + *u ( sr truncInt ) 0 == && 0 == && || "
 ; Expanded expression: "(@-36) *(4) 1 == [sh&&->2372] (@-32) *(4) _Bool [sh&&->2373]  (@-44) *(4)  truncInt ()4 0 == &&[2373] 0 == &&[2372] _Bool [sh||->2369] (@-36) *(4) 2 == [sh&&->2370] (@-28) *(4) _Bool [sh&&->2371]  (@-40) *(4)  truncInt ()4 0 == &&[2371] 0 == &&[2370] _Bool ||[2369] "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2372
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2373
 ; (
 ; local ofs
 ; * (read dereference)
 read -44 r14 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2373:
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2372:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2369
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2370
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2371
 ; (
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2371:
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2370:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_2369:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2367
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_2367:
 ; }
Label_2357:
 ; RPN'ized expression: "ConstExpr *u constExpr 0 + *u constExpr 1 + *u && = "
 ; Expanded expression: "(@16) *(4) (@-32) *(4) _Bool [sh&&->2374] (@-28) *(4) _Bool &&[2374] =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; local ofs
 ; * (read dereference)
 read -32 r14 r8
 ; _Bool
 bgts r8 r0 3
 load32 0 r8
 jumpo 2
 load32 1 r8
 ; short-circuit &&
 ; JumpIfZero
 bne r8 r0 2
 jump Label_2374
 ; local ofs
 ; * (read dereference)
 read -28 r14 r8
 ; _Bool
 bgts r8 r0 3
 load32 0 r8
 jumpo 2
 load32 1 r8
 ; short-circuit && target
Label_2374:
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; {
 ; loc                 Unsigned : (@-48) : int
 ; RPN'ized expression: "Unsigned ( ExprTypeSynPtr *u isUint ) ( RightExprTypeSynPtr isUint ) || = "
 ; Expanded expression: "(@-48)  (@12) *(4) *(4)  isUint ()4 _Bool [sh||->2375]  (@-12) *(4)  isUint ()4 _Bool ||[2375] =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; isUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isUint
 add r13 16 r13
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2375
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; isUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isUint
 add r13 16 r13
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_2375:
 ; local ofs
 ; = (write dereference)
 write -48 r14 r2
 ; if
 ; RPN'ized expression: "ConstExpr *u "
 ; Expanded expression: "(@16) *(4) *(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2376
 ; {
 ; if
 ; RPN'ized expression: "Unsigned 0 == "
 ; Expanded expression: "(@-48) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2378
 ; {
 ; RPN'ized expression: "sl ( sl truncInt ) = "
 ; Expanded expression: "(@-44)  (@-44) *(4)  truncInt ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -44 r14 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; RPN'ized expression: "sr ( sr truncInt ) = "
 ; Expanded expression: "(@-40)  (@-40) *(4)  truncInt ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 jump Label_2381
 ; {
 ; case
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
Label_2382:
 ; RPN'ized expression: "sl sl sr < = "
 ; Expanded expression: "(@-44) (@-44) *(4) (@-40) *(4) < =(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; break
 jump Label_2380
 ; case
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
Label_2383:
 ; RPN'ized expression: "sl sl sr > = "
 ; Expanded expression: "(@-44) (@-44) *(4) (@-40) *(4) > =(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; >
 bges r8 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; break
 jump Label_2380
 ; case
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
Label_2384:
 ; RPN'ized expression: "sl sl sr <= = "
 ; Expanded expression: "(@-44) (@-44) *(4) (@-40) *(4) <= =(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; <=
 bges r8 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; break
 jump Label_2380
 ; case
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
Label_2385:
 ; RPN'ized expression: "sl sl sr >= = "
 ; Expanded expression: "(@-44) (@-44) *(4) (@-40) *(4) >= =(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; >=
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; break
 jump Label_2380
 ; case
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
Label_2386:
 ; RPN'ized expression: "sl sl sr == = "
 ; Expanded expression: "(@-44) (@-44) *(4) (@-40) *(4) == =(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; ==
 xor r2 r8 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; break
 jump Label_2380
 ; case
 ; RPN'ized expression: "9 "
 ; Expanded expression: "9 "
 ; Expression value: 9
Label_2387:
 ; RPN'ized expression: "sl sl sr != = "
 ; Expanded expression: "(@-44) (@-44) *(4) (@-40) *(4) != =(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; !=
 xor r2 r8 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; break
 jump Label_2380
 ; }
 jump Label_2380
Label_2381:
 load32 60 r12
 bne r2 r12 2
 jump Label_2382
 load32 62 r12
 bne r2 r12 2
 jump Label_2383
 load32 10 r12
 bne r2 r12 2
 jump Label_2384
 load32 11 r12
 bne r2 r12 2
 jump Label_2385
 load32 8 r12
 bne r2 r12 2
 jump Label_2386
 load32 9 r12
 bne r2 r12 2
 jump Label_2387
Label_2380:
 ; }
 jump Label_2379
Label_2378:
 ; else
 ; {
 ; loc                         <something> : int
 ; RPN'ized expression: "sl ( sl truncUint ) (something2388) = "
 ; Expanded expression: "(@-44)  (@-44) *(4)  truncUint ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -44 r14 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; loc                         <something> : int
 ; RPN'ized expression: "sr ( sr truncUint ) (something2389) = "
 ; Expanded expression: "(@-40)  (@-40) *(4)  truncUint ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 jump Label_2391
 ; {
 ; case
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
Label_2392:
 ; loc                             <something> : unsigned
 ; loc                             <something> : unsigned
 ; RPN'ized expression: "sl sl (something2393) sr (something2394) < = "
 ; Expanded expression: "(@-44) (@-44) *(4) (@-40) *(4) <u =(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; <u
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; break
 jump Label_2390
 ; case
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
Label_2395:
 ; loc                             <something> : unsigned
 ; loc                             <something> : unsigned
 ; RPN'ized expression: "sl sl (something2396) sr (something2397) > = "
 ; Expanded expression: "(@-44) (@-44) *(4) (@-40) *(4) >u =(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; >u
 bges r8 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; break
 jump Label_2390
 ; case
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
Label_2398:
 ; loc                             <something> : unsigned
 ; loc                             <something> : unsigned
 ; RPN'ized expression: "sl sl (something2399) sr (something2400) <= = "
 ; Expanded expression: "(@-44) (@-44) *(4) (@-40) *(4) <=u =(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; <=u
 bges r8 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; break
 jump Label_2390
 ; case
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
Label_2401:
 ; loc                             <something> : unsigned
 ; loc                             <something> : unsigned
 ; RPN'ized expression: "sl sl (something2402) sr (something2403) >= = "
 ; Expanded expression: "(@-44) (@-44) *(4) (@-40) *(4) >=u =(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; >=u
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; break
 jump Label_2390
 ; case
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
Label_2404:
 ; RPN'ized expression: "sl sl sr == = "
 ; Expanded expression: "(@-44) (@-44) *(4) (@-40) *(4) == =(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; ==
 xor r2 r8 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; break
 jump Label_2390
 ; case
 ; RPN'ized expression: "9 "
 ; Expanded expression: "9 "
 ; Expression value: 9
Label_2405:
 ; RPN'ized expression: "sl sl sr != = "
 ; Expanded expression: "(@-44) (@-44) *(4) (@-40) *(4) != =(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; !=
 xor r2 r8 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; break
 jump Label_2390
 ; }
 jump Label_2390
Label_2391:
 load32 60 r12
 bne r2 r12 2
 jump Label_2392
 load32 62 r12
 bne r2 r12 2
 jump Label_2395
 load32 10 r12
 bne r2 r12 2
 jump Label_2398
 load32 11 r12
 bne r2 r12 2
 jump Label_2401
 load32 8 r12
 bne r2 r12 2
 jump Label_2404
 load32 9 r12
 bne r2 r12 2
 jump Label_2405
Label_2390:
 ; }
Label_2379:
 ; }
Label_2376:
 ; if
 ; RPN'ized expression: "ptrmask Unsigned || "
 ; Expanded expression: "(@-36) *(4) _Bool [sh||->2408] (@-48) *(4) _Bool ||[2408] "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2408
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_2408:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2406
 ; {
 ; loc                     t : (@-52) : int
 ; RPN'ized expression: "t tok = "
 ; Expanded expression: "(@-52) (@-4) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; local ofs
 ; = (write dereference)
 write -52 r14 r2
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 jump Label_2410
 ; {
 ; case
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
Label_2411:
 ; RPN'ized expression: "t 85 = "
 ; Expanded expression: "(@-52) 85 =(4) "
 ; 85
 load32 85 r2
 ; local ofs
 ; = (write dereference)
 write -52 r14 r2
 ; break
 jump Label_2409
 ; case
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
Label_2412:
 ; RPN'ized expression: "t 86 = "
 ; Expanded expression: "(@-52) 86 =(4) "
 ; 86
 load32 86 r2
 ; local ofs
 ; = (write dereference)
 write -52 r14 r2
 ; break
 jump Label_2409
 ; case
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
Label_2413:
 ; RPN'ized expression: "t 87 = "
 ; Expanded expression: "(@-52) 87 =(4) "
 ; 87
 load32 87 r2
 ; local ofs
 ; = (write dereference)
 write -52 r14 r2
 ; break
 jump Label_2409
 ; case
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
Label_2414:
 ; RPN'ized expression: "t 88 = "
 ; Expanded expression: "(@-52) 88 =(4) "
 ; 88
 load32 88 r2
 ; local ofs
 ; = (write dereference)
 write -52 r14 r2
 ; break
 jump Label_2409
 ; }
 jump Label_2409
Label_2410:
 load32 60 r12
 bne r2 r12 2
 jump Label_2411
 load32 62 r12
 bne r2 r12 2
 jump Label_2412
 load32 10 r12
 bne r2 r12 2
 jump Label_2413
 load32 11 r12
 bne r2 r12 2
 jump Label_2414
Label_2409:
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 0 + *u t = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 0 + (@-52) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; local ofs
 ; * (read dereference)
 read -52 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
Label_2406:
 ; }
 ; RPN'ized expression: "s sl = "
 ; Expanded expression: "(@-8) (@-44) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "ExprTypeSynPtr *u 1 = "
 ; Expanded expression: "(@12) *(4) 1 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "( idx *u 1 + , oldIdxRight 1 + oldSpRight sp - - , ExprTypeSynPtr , ConstExpr *u , s simplifyConstExpr ) "
 ; Expanded expression: " (@8) *(4) *(4) 1 +  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  (@12) *(4)  (@16) *(4) *(4)  (@-8) *(4)  simplifyConstExpr ()20 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; +
 add r2 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r7
 ; 1
 ; +
 add r7 1 r7
 ; local ofs
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 read -20 r14 r7
 ; sp
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 16 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; simplifyConstExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump simplifyConstExpr
 add r13 20 r13
 ; }
 ; break
 jump Label_2110
 ; case
 ; RPN'ized expression: "120 "
 ; Expanded expression: "120 "
 ; Expression value: 120
Label_2415:
 ; RPN'ized expression: "s ( ConstExpr , ExprTypeSynPtr , idx exprval ) = "
 ; Expanded expression: "(@-8)  (@16) *(4)  (@12) *(4)  (@8) *(4)  exprval ()12 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "( ExprTypeSynPtr *u scalarTypeCheck ) "
 ; Expanded expression: " (@12) *(4) *(4)  scalarTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; scalarTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump scalarTypeCheck
 add r13 16 r13
 ; {
 ; RPN'ized expression: "s ( s truncInt ) 0 != = "
 ; Expanded expression: "(@-8)  (@-8) *(4)  truncInt ()4 0 != =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; 0
 ; !=
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; }
 ; RPN'ized expression: "ExprTypeSynPtr *u 1 = "
 ; Expanded expression: "(@12) *(4) 1 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "( idx *u 1 + , oldIdxRight 1 + oldSpRight sp - - , ExprTypeSynPtr , ConstExpr *u , s simplifyConstExpr ) "
 ; Expanded expression: " (@8) *(4) *(4) 1 +  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  (@12) *(4)  (@16) *(4) *(4)  (@-8) *(4)  simplifyConstExpr ()20 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; +
 add r2 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r7
 ; 1
 ; +
 add r7 1 r7
 ; local ofs
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 read -20 r14 r7
 ; sp
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 16 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; simplifyConstExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump simplifyConstExpr
 add r13 20 r13
 ; break
 jump Label_2110
 ; case
 ; RPN'ized expression: "6 "
 ; Expanded expression: "6 "
 ; Expression value: 6
Label_2416:
 ; case
 ; RPN'ized expression: "7 "
 ; Expanded expression: "7 "
 ; Expression value: 7
Label_2417:
 ; {
 ; loc             sr : (@-36) : int
 ; loc             sl : (@-40) : int
 ; loc             sc : (@-44) : int
 ; RPN'ized expression: "sc LabelCnt ++p = "
 ; Expanded expression: "(@-44) LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; RPN'ized expression: "stack idx *u 1 + + *u 1 + *u sc = "
 ; Expanded expression: "stack (@8) *(4) *(4) 1 + 8 * + 4 + (@-44) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 1
 ; +
 add r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -44 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; switch
 ; RPN'ized expression: "stack idx *u + *u 0 + *u "
 ; Expanded expression: "stack (@8) *(4) *(4) 8 * + 0 + *(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_2419
 ; {
 ; case
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
Label_2420:
 ; case
 ; RPN'ized expression: "85 "
 ; Expanded expression: "85 "
 ; Expression value: 85
Label_2421:
 ; case
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
Label_2422:
 ; case
 ; RPN'ized expression: "86 "
 ; Expanded expression: "86 "
 ; Expression value: 86
Label_2423:
 ; case
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
Label_2424:
 ; case
 ; RPN'ized expression: "87 "
 ; Expanded expression: "87 "
 ; Expression value: 87
Label_2425:
 ; case
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
Label_2426:
 ; case
 ; RPN'ized expression: "88 "
 ; Expanded expression: "88 "
 ; Expression value: 88
Label_2427:
 ; case
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
Label_2428:
 ; case
 ; RPN'ized expression: "9 "
 ; Expanded expression: "9 "
 ; Expression value: 9
Label_2429:
 ; break
 jump Label_2418
 ; default
Label_2430:
 ; RPN'ized expression: "( 120 , idx *u ++ ins ) "
 ; Expanded expression: " 120  (@8) *(4) ++(4)  ins ()8 "
 ; (
 ; 120
 load32 120 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ++
 or r0 r4 r11
 read 0 r11 r4
 add r4 1 r4
 write 0 r11 r4
 ; ,
 ; ins
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins
 add r13 16 r13
 ; break
 jump Label_2418
 ; }
 jump Label_2418
Label_2419:
 load32 60 r12
 bne r2 r12 2
 jump Label_2420
 load32 85 r12
 bne r2 r12 2
 jump Label_2421
 load32 62 r12
 bne r2 r12 2
 jump Label_2422
 load32 86 r12
 bne r2 r12 2
 jump Label_2423
 load32 10 r12
 bne r2 r12 2
 jump Label_2424
 load32 87 r12
 bne r2 r12 2
 jump Label_2425
 load32 11 r12
 bne r2 r12 2
 jump Label_2426
 load32 88 r12
 bne r2 r12 2
 jump Label_2427
 load32 8 r12
 bne r2 r12 2
 jump Label_2428
 load32 9 r12
 bne r2 r12 2
 jump Label_2429
 jump Label_2430
Label_2418:
 ; RPN'ized expression: "sr ( constExpr 1 + *u &u , RightExprTypeSynPtr &u , idx exprval ) = "
 ; Expanded expression: "(@-36)  (@-28)  (@-12)  (@8) *(4)  exprval ()12 =(4) "
 ; (
 ; local ofs
 sub r14 28 r6
 ; ,
 ; local ofs
 sub r14 12 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; if
 ; RPN'ized expression: "tok 6 == "
 ; Expanded expression: "(@-4) *(4) 6 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 6
 ; ==
 load32 6 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2431
 ; RPN'ized expression: "( sc , 90 , idx *u ++ ins2 ) "
 ; Expanded expression: " (@-44) *(4)  90  (@8) *(4) ++(4)  ins2 ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -44 r14 r6
 ; ,
 ; 90
 load32 90 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ++
 or r0 r4 r11
 read 0 r11 r4
 add r4 1 r4
 write 0 r11 r4
 ; ,
 ; ins2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins2
 add r13 16 r13
 jump Label_2432
Label_2431:
 ; else
 ; RPN'ized expression: "( sc -u , 90 , idx *u ++ ins2 ) "
 ; Expanded expression: " (@-44) *(4) -u  90  (@8) *(4) ++(4)  ins2 ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -44 r14 r6
 ; -u
 sub r0 r6 r6
 ; ,
 ; 90
 load32 90 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ++
 or r0 r4 r11
 read 0 r11 r4
 add r4 1 r4
 write 0 r11 r4
 ; ,
 ; ins2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins2
 add r13 16 r13
Label_2432:
 ; switch
 ; RPN'ized expression: "stack idx *u 1 - + *u 0 + *u "
 ; Expanded expression: "stack (@8) *(4) *(4) 1 - 8 * + 0 + *(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_2434
 ; {
 ; case
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
Label_2435:
 ; case
 ; RPN'ized expression: "85 "
 ; Expanded expression: "85 "
 ; Expression value: 85
Label_2436:
 ; case
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
Label_2437:
 ; case
 ; RPN'ized expression: "86 "
 ; Expanded expression: "86 "
 ; Expression value: 86
Label_2438:
 ; case
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
Label_2439:
 ; case
 ; RPN'ized expression: "87 "
 ; Expanded expression: "87 "
 ; Expression value: 87
Label_2440:
 ; case
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
Label_2441:
 ; case
 ; RPN'ized expression: "88 "
 ; Expanded expression: "88 "
 ; Expression value: 88
Label_2442:
 ; case
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
Label_2443:
 ; case
 ; RPN'ized expression: "9 "
 ; Expanded expression: "9 "
 ; Expression value: 9
Label_2444:
 ; RPN'ized expression: "idx *u -- "
 ; Expanded expression: "(@8) *(4) --(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; --
 or r0 r2 r11
 read 0 r11 r2
 sub r2 1 r2
 write 0 r11 r2
 ; break
 jump Label_2433
 ; default
Label_2445:
 ; RPN'ized expression: "( 120 , idx *u ins ) "
 ; Expanded expression: " 120  (@8) *(4) *(4)  ins ()8 "
 ; (
 ; 120
 load32 120 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; ins
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins
 add r13 16 r13
 ; break
 jump Label_2433
 ; }
 jump Label_2433
Label_2434:
 load32 60 r12
 bne r2 r12 2
 jump Label_2435
 load32 85 r12
 bne r2 r12 2
 jump Label_2436
 load32 62 r12
 bne r2 r12 2
 jump Label_2437
 load32 86 r12
 bne r2 r12 2
 jump Label_2438
 load32 10 r12
 bne r2 r12 2
 jump Label_2439
 load32 87 r12
 bne r2 r12 2
 jump Label_2440
 load32 11 r12
 bne r2 r12 2
 jump Label_2441
 load32 88 r12
 bne r2 r12 2
 jump Label_2442
 load32 8 r12
 bne r2 r12 2
 jump Label_2443
 load32 9 r12
 bne r2 r12 2
 jump Label_2444
 jump Label_2445
Label_2433:
 ; RPN'ized expression: "sl ( constExpr 0 + *u &u , ExprTypeSynPtr , idx exprval ) = "
 ; Expanded expression: "(@-40)  (@-32)  (@12) *(4)  (@8) *(4)  exprval ()12 =(4) "
 ; (
 ; local ofs
 sub r14 32 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; if
 ; RPN'ized expression: "tok 6 == "
 ; Expanded expression: "(@-4) *(4) 6 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 6
 ; ==
 load32 6 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2446
 ; RPN'ized expression: "s sl sr && = "
 ; Expanded expression: "(@-8) (@-40) *(4) _Bool [sh&&->2448] (@-36) *(4) _Bool &&[2448] =(4) "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2448
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_2448:
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 jump Label_2447
Label_2446:
 ; else
 ; RPN'ized expression: "s sl sr || = "
 ; Expanded expression: "(@-8) (@-40) *(4) _Bool [sh||->2449] (@-36) *(4) _Bool ||[2449] =(4) "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2449
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_2449:
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
Label_2447:
 ; RPN'ized expression: "ExprTypeSynPtr *u 1 = "
 ; Expanded expression: "(@12) *(4) 1 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "ConstExpr *u constExpr 0 + *u constExpr 1 + *u && = "
 ; Expanded expression: "(@16) *(4) (@-32) *(4) _Bool [sh&&->2450] (@-28) *(4) _Bool &&[2450] =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; local ofs
 ; * (read dereference)
 read -32 r14 r8
 ; _Bool
 bgts r8 r0 3
 load32 0 r8
 jumpo 2
 load32 1 r8
 ; short-circuit &&
 ; JumpIfZero
 bne r8 r0 2
 jump Label_2450
 ; local ofs
 ; * (read dereference)
 read -28 r14 r8
 ; _Bool
 bgts r8 r0 3
 load32 0 r8
 jumpo 2
 load32 1 r8
 ; short-circuit && target
Label_2450:
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; if
 ; RPN'ized expression: "constExpr 0 + *u "
 ; Expanded expression: "(@-32) *(4) "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2451
 ; {
 ; if
 ; RPN'ized expression: "tok 6 == "
 ; Expanded expression: "(@-4) *(4) 6 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 6
 ; ==
 load32 6 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2453
 ; {
 ; if
 ; RPN'ized expression: "sl 0 == "
 ; Expanded expression: "(@-40) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2455
 ; RPN'ized expression: "ConstExpr *u 1 = s 0 = ,b "
 ; Expanded expression: "(@16) *(4) 1 =(4) void (@-8) 0 =(4) ,b "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; void
 ; 0
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; ,b
Label_2455:
 ; }
 jump Label_2454
Label_2453:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "sl "
 ; Expanded expression: "(@-40) *(4) "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2457
 ; RPN'ized expression: "ConstExpr *u s 1 = = "
 ; Expanded expression: "(@16) *(4) (@-8) 1 =(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 1
 load32 1 r8
 ; local ofs
 ; = (write dereference)
 write -8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_2457:
 ; }
Label_2454:
 ; }
Label_2451:
 ; RPN'ized expression: "( idx *u 1 + , oldIdxRight 1 + oldSpRight sp - - , ExprTypeSynPtr , ConstExpr *u , s simplifyConstExpr ) "
 ; Expanded expression: " (@8) *(4) *(4) 1 +  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  (@12) *(4)  (@16) *(4) *(4)  (@-8) *(4)  simplifyConstExpr ()20 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; +
 add r2 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r7
 ; 1
 ; +
 add r7 1 r7
 ; local ofs
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 read -20 r14 r7
 ; sp
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 16 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; simplifyConstExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump simplifyConstExpr
 add r13 20 r13
 ; }
 ; break
 jump Label_2110
 ; case
 ; RPN'ized expression: "41 "
 ; Expanded expression: "41 "
 ; Expression value: 41
Label_2459:
 ; {
 ; loc             tmpSynPtr : (@-36) : int
 ; loc             c : (@-40) : int
 ; loc             minParams : (@-44) : int
 ; loc             maxParams : (@-48) : int
 ; loc             firstParamSynPtr : (@-52) : int
 ; loc             oldIdx : (@-56) : int
 ; loc             oldSp : (@-60) : int
 ; RPN'ized expression: "( ConstExpr , ExprTypeSynPtr , idx exprval ) "
 ; Expanded expression: " (@16) *(4)  (@12) *(4)  (@8) *(4)  exprval ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; if
 ; RPN'ized expression: "( firstParamSynPtr &u , ExprTypeSynPtr , maxParams &u , minParams &u , ExprTypeSynPtr *u GetFxnInfo ) 0 == "
 ; Expanded expression: " (@-52)  (@12) *(4)  (@-48)  (@-44)  (@12) *(4) *(4)  GetFxnInfo ()20 0 == "
 ; (
 ; local ofs
 sub r14 52 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r7
 ; ,
 ; local ofs
 sub r14 48 r6
 ; ,
 ; local ofs
 sub r14 44 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; GetFxnInfo
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetFxnInfo
 add r13 20 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2460
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_2460:
 ; RPN'ized expression: "c 0 = "
 ; Expanded expression: "(@-40) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -40 r14 r0
 ; while
 ; RPN'ized expression: "stack idx *u + *u 0 + *u 40 != "
 ; Expanded expression: "stack (@8) *(4) *(4) 8 * + 0 + *(4) 40 != "
Label_2462:
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 40
 ; !=
 load32 40 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_2463
 ; {
 ; loc                 ptrmask : (@-64) : int
 ; if
 ; RPN'ized expression: "c 0 == "
 ; Expanded expression: "(@-40) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2464
 ; RPN'ized expression: "( 44 , idx *u 1 + ins ) "
 ; Expanded expression: " 44  (@8) *(4) *(4) 1 +  ins ()8 "
 ; (
 ; 44
 load32 44 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; 1
 ; +
 add r4 1 r4
 ; ,
 ; ins
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins
 add r13 16 r13
Label_2464:
 ; RPN'ized expression: "oldIdx idx *u = "
 ; Expanded expression: "(@-56) (@8) *(4) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -56 r14 r2
 ; RPN'ized expression: "oldSp sp = "
 ; Expanded expression: "(@-60) sp *(4) =(4) "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -60 r14 r2
 ; loc                 <something> : void
 ; RPN'ized expression: "oldIdx (something2466) "
 ; Expanded expression: "(@-56) *(4) "
 ; local ofs
 ; * (read dereference)
 read -56 r14 r2
 ; loc                 <something> : void
 ; RPN'ized expression: "oldSp (something2467) "
 ; Expanded expression: "(@-60) *(4) "
 ; local ofs
 ; * (read dereference)
 read -60 r14 r2
 ; RPN'ized expression: "( ConstExpr , tmpSynPtr &u , idx exprval ) "
 ; Expanded expression: " (@16) *(4)  (@-36)  (@8) *(4)  exprval ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 sub r14 36 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; if
 ; RPN'ized expression: "c maxParams >= "
 ; Expanded expression: "(@-40) *(4) (@-48) *(4) >= "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; local ofs
 ; * (read dereference)
 read -48 r14 r8
 ; >=
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_2468

.rdata
Label_2470:
.dw 84 111 111 32 109 97 110 121 32 102 117 110 99 116 105 111 110 32 97 114 103 117 109 101 110 116 115 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2470 error ) "
 ; Expanded expression: " L2470  error ()4 "
 ; (
 ; 2470
 addr2reg Label_2470 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2468:
 ; if
 ; RPN'ized expression: "c minParams < "
 ; Expanded expression: "(@-40) *(4) (@-44) *(4) < "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; local ofs
 ; * (read dereference)
 read -44 r14 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_2471
 ; {
 ; loc                     t : (@-68) : int
 ; while
 ; RPN'ized expression: "t SyntaxStack0 firstParamSynPtr + *u = 16 != "
 ; Expanded expression: "(@-68) SyntaxStack0 (@-52) *(4) + *(1) =(4) 16 != "
Label_2473:
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -52 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -68 r14 r2
 ; 16
 ; !=
 load32 16 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_2474
 ; {
 ; if
 ; RPN'ized expression: "t 40 == "
 ; Expanded expression: "(@-68) *(4) 40 == "
 ; local ofs
 ; * (read dereference)
 read -68 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2475
 ; {
 ; loc                             c : (@-72) : int
 ; RPN'ized expression: "c 1 = "
 ; Expanded expression: "(@-72) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -72 r14 r2
 ; while
 ; RPN'ized expression: "c "
 ; Expanded expression: "(@-72) *(4) "
Label_2477:
 ; local ofs
 ; * (read dereference)
 read -72 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2478
 ; {
 ; RPN'ized expression: "t SyntaxStack0 firstParamSynPtr ++ + *u = "
 ; Expanded expression: "(@-68) SyntaxStack0 (@-52) ++(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; ++
 read -52 r14 r8
 add r8 1 r8
 write -52 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -68 r14 r2
 ; RPN'ized expression: "c t 40 == t 41 == - += "
 ; Expanded expression: "(@-72) (@-68) *(4) 40 == (@-68) *(4) 41 == - +=(4) "
 ; local ofs
 ; * (read dereference)
 read -68 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -68 r14 r8
 ; 41
 ; ==
 load32 41 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; +=
 read -72 r14 r12
 add r12 r2 r2
 write -72 r14 r2
 ; }
 jump Label_2477
Label_2478:
 ; }
Label_2475:
 ; RPN'ized expression: "firstParamSynPtr ++p "
 ; Expanded expression: "(@-52) ++p(4) "
 ; local ofs
 ; ++p
 read -52 r14 r2
 add r2 1 r2
 write -52 r14 r2
 sub r2 1 r2
 ; }
 jump Label_2473
Label_2474:
 ; RPN'ized expression: "firstParamSynPtr ++p "
 ; Expanded expression: "(@-52) ++p(4) "
 ; local ofs
 ; ++p
 read -52 r14 r2
 add r2 1 r2
 write -52 r14 r2
 sub r2 1 r2
 ; }
 jump Label_2472
Label_2471:
 ; else
 ; {
 ; RPN'ized expression: "firstParamSynPtr 0 = "
 ; Expanded expression: "(@-52) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -52 r14 r0
 ; }
Label_2472:
 ; RPN'ized expression: "ptrmask ( firstParamSynPtr isAnyPtr ) 2 * ( tmpSynPtr isAnyPtr ) + = "
 ; Expanded expression: "(@-64)  (@-52) *(4)  isAnyPtr ()4 2 *  (@-36) *(4)  isAnyPtr ()4 + =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -52 r14 r4
 ; ,
 ; isAnyPtr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isAnyPtr
 add r13 16 r13
 ; 1
 ; <<
 shiftl r2 1 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; isAnyPtr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isAnyPtr
 add r13 16 r13
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; local ofs
 ; = (write dereference)
 write -64 r14 r2
 ; loc                 <something> : void
 ; RPN'ized expression: "ptrmask (something2479) "
 ; Expanded expression: "(@-64) *(4) "
 ; local ofs
 ; * (read dereference)
 read -64 r14 r2
 ; RPN'ized expression: "( tmpSynPtr scalarTypeCheck ) "
 ; Expanded expression: " (@-36) *(4)  scalarTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; scalarTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump scalarTypeCheck
 add r13 16 r13
 ; if
 ; RPN'ized expression: "c minParams < "
 ; Expanded expression: "(@-40) *(4) (@-44) *(4) < "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; local ofs
 ; * (read dereference)
 read -44 r14 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_2480
 ; {
 ; }
Label_2480:
 ; RPN'ized expression: "c ++p "
 ; Expanded expression: "(@-40) ++p(4) "
 ; local ofs
 ; ++p
 read -40 r14 r2
 add r2 1 r2
 write -40 r14 r2
 sub r2 1 r2
 ; if
 ; RPN'ized expression: "stack idx *u + *u 0 + *u 44 == "
 ; Expanded expression: "stack (@8) *(4) *(4) 8 * + 0 + *(4) 44 == "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 44
 ; ==
 load32 44 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2482
 ; RPN'ized expression: "idx *u -- "
 ; Expanded expression: "(@8) *(4) --(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; --
 or r0 r2 r11
 read 0 r11 r2
 sub r2 1 r2
 write 0 r11 r2
Label_2482:
 ; }
 jump Label_2462
Label_2463:
 ; RPN'ized expression: "idx *u -- "
 ; Expanded expression: "(@8) *(4) --(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; --
 or r0 r2 r11
 read 0 r11 r2
 sub r2 1 r2
 write 0 r11 r2
 ; if
 ; RPN'ized expression: "c minParams < "
 ; Expanded expression: "(@-40) *(4) (@-44) *(4) < "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; local ofs
 ; * (read dereference)
 read -44 r14 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_2484

.rdata
Label_2486:
.dw 84 111 111 32 102 101 119 32 102 117 110 99 116 105 111 110 32 97 114 103 117 109 101 110 116 115 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2486 error ) "
 ; Expanded expression: " L2486  error ()4 "
 ; (
 ; 2486
 addr2reg Label_2486 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2484:
 ; {
 ; loc                 i : (@-64) : int
 ; RPN'ized expression: "i oldIdxRight 1 + oldSpRight sp - - = "
 ; Expanded expression: "(@-64) (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - =(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; local ofs
 ; * (read dereference)
 read -20 r14 r8
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r9
 ; -
 sub r8 r9 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -64 r14 r2
 ; RPN'ized expression: "stack 1 idx *u + + *u 1 + *u stack i + *u 1 + *u c SizeOfWord * = = "
 ; Expanded expression: "stack 1 (@8) *(4) *(4) + 8 * + 4 + stack (@-64) *(4) 8 * + 4 + (@-40) *(4) SizeOfWord *(4) * =(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 1
 ; +
 add r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; stack
 addr2reg stack r8
 ; local ofs
 ; * (read dereference)
 read -64 r14 r9
 ; 3
 ; <<
 shiftl r9 3 r9
 ; +
 add r8 r9 r8
 ; 4
 ; +
 add r8 4 r8
 ; local ofs
 ; * (read dereference)
 read -40 r14 r9
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r10
 ; *
 mult r9 r10 r9
 ; = (write dereference)
 write 0 r8 r9
 or r0 r9 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
 ; RPN'ized expression: "ConstExpr *u 0 = "
 ; Expanded expression: "(@16) *(4) 0 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; =
 write 0 r2 r0
 ; }
 ; break
 jump Label_2110
 ; case
 ; RPN'ized expression: "48 "
 ; Expanded expression: "48 "
 ; Expression value: 48
Label_2487:
 ; {
 ; loc             oldIdxLeft : (@-36) : int
 ; loc             oldSpLeft : (@-40) : int
 ; loc             retStruct : (@-44) : int
 ; RPN'ized expression: "retStruct 0 = "
 ; Expanded expression: "(@-44) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -44 r14 r0
 ; RPN'ized expression: "s ( constExpr 1 + *u &u , RightExprTypeSynPtr &u , idx exprval ) = "
 ; Expanded expression: "(@-8)  (@-28)  (@-12)  (@8) *(4)  exprval ()12 =(4) "
 ; (
 ; local ofs
 sub r14 28 r6
 ; ,
 ; local ofs
 sub r14 12 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "oldIdxLeft idx *u = "
 ; Expanded expression: "(@-36) (@8) *(4) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; RPN'ized expression: "oldSpLeft sp = "
 ; Expanded expression: "(@-40) sp *(4) =(4) "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; RPN'ized expression: "( 17 , idx *u 1 + ins ) "
 ; Expanded expression: " 17  (@8) *(4) *(4) 1 +  ins ()8 "
 ; (
 ; 17
 load32 17 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; 1
 ; +
 add r4 1 r4
 ; ,
 ; ins
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins
 add r13 16 r13
 ; RPN'ized expression: "( constExpr 0 + *u &u , ExprTypeSynPtr , idx exprval ) "
 ; Expanded expression: " (@-32)  (@12) *(4)  (@8) *(4)  exprval ()12 "
 ; (
 ; local ofs
 sub r14 32 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; RPN'ized expression: "ConstExpr *u constExpr 0 + *u constExpr 1 + *u && = "
 ; Expanded expression: "(@16) *(4) (@-32) *(4) _Bool [sh&&->2488] (@-28) *(4) _Bool &&[2488] =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; local ofs
 ; * (read dereference)
 read -32 r14 r8
 ; _Bool
 bgts r8 r0 3
 load32 0 r8
 jumpo 2
 load32 1 r8
 ; short-circuit &&
 ; JumpIfZero
 bne r8 r0 2
 jump Label_2488
 ; local ofs
 ; * (read dereference)
 read -28 r14 r8
 ; _Bool
 bgts r8 r0 3
 load32 0 r8
 jumpo 2
 load32 1 r8
 ; short-circuit && target
Label_2488:
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "ExprTypeSynPtr *u RightExprTypeSynPtr = "
 ; Expanded expression: "(@12) *(4) (@-12) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "retStruct RightExprTypeSynPtr 0 >= SyntaxStack0 RightExprTypeSynPtr + *u 144 == && = "
 ; Expanded expression: "(@-44) (@-12) *(4) 0 >= [sh&&->2489] SyntaxStack0 (@-12) *(4) + *(1) 144 == &&[2489] =(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2489
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 144
 ; ==
 load32 144 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2489:
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; if
 ; RPN'ized expression: "ConstExpr *u "
 ; Expanded expression: "(@16) *(4) *(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2490
 ; {
 ; RPN'ized expression: "( idx *u 1 + , oldIdxRight 1 + oldSpRight sp - - , ExprTypeSynPtr , ConstExpr *u , s simplifyConstExpr ) "
 ; Expanded expression: " (@8) *(4) *(4) 1 +  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  (@12) *(4)  (@16) *(4) *(4)  (@-8) *(4)  simplifyConstExpr ()20 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; +
 add r2 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r7
 ; 1
 ; +
 add r7 1 r7
 ; local ofs
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 read -20 r14 r7
 ; sp
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 16 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; simplifyConstExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump simplifyConstExpr
 add r13 20 r13
 ; }
 jump Label_2491
Label_2490:
 ; else
 ; if
 ; RPN'ized expression: "constExpr 0 + *u "
 ; Expanded expression: "(@-32) *(4) "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2492
 ; {
 ; RPN'ized expression: "( oldIdxLeft oldSpLeft sp - - idx *u - , idx *u 1 + del ) "
 ; Expanded expression: " (@-36) *(4) (@-40) *(4) sp *(4) - - (@8) *(4) *(4) -  (@8) *(4) *(4) 1 +  del ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -40 r14 r5
 ; sp
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r5
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r5 r5
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r5 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read 8 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; 1
 ; +
 add r4 1 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
 ; if
 ; RPN'ized expression: "retStruct 0 == "
 ; Expanded expression: "(@-44) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2494
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 0 + *u 79 = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 0 + 79 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 79
 load32 79 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 jump Label_2495
Label_2494:
 ; else
 ; RPN'ized expression: "( 1 , oldIdxRight 1 + oldSpRight sp - - del ) "
 ; Expanded expression: " 1  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  del ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
Label_2495:
 ; }
 jump Label_2493
Label_2492:
 ; else
 ; if
 ; RPN'ized expression: "retStruct "
 ; Expanded expression: "(@-44) *(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2496
 ; {
 ; loc                 i : (@-48) : int
 ; RPN'ized expression: "i oldIdxRight 1 + oldSpRight sp - - = "
 ; Expanded expression: "(@-48) (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - =(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; local ofs
 ; * (read dereference)
 read -20 r14 r8
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r9
 ; -
 sub r8 r9 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -48 r14 r2
 ; RPN'ized expression: "stack i + *u 0 + *u 78 = "
 ; Expanded expression: "stack (@-48) *(4) 8 * + 0 + 78 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -48 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 78
 load32 78 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "stack i + *u 1 + *u stack i 1 - + *u 1 + *u = "
 ; Expanded expression: "stack (@-48) *(4) 8 * + 4 + stack (@-48) *(4) 1 - 8 * + 4 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -48 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; stack
 addr2reg stack r8
 ; local ofs
 ; * (read dereference)
 read -48 r14 r9
 ; 1
 ; -
 sub r9 1 r9
 ; 3
 ; <<
 shiftl r9 3 r9
 ; +
 add r8 r9 r8
 ; 4
 ; +
 add r8 4 r8
 ; * (read dereference)
 read 0 r8 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "stack i 1 - + *u 0 + *u 48 = "
 ; Expanded expression: "stack (@-48) *(4) 1 - 8 * + 0 + 48 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -48 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 48
 load32 48 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
Label_2496:
Label_2493:
Label_2491:
 ; }
 ; break
 jump Label_2110
 ; case
 ; RPN'ized expression: "65 "
 ; Expanded expression: "65 "
 ; Expression value: 65
Label_2498:
 ; case
 ; RPN'ized expression: "66 "
 ; Expanded expression: "66 "
 ; Expression value: 66
Label_2499:
 ; case
 ; RPN'ized expression: "67 "
 ; Expanded expression: "67 "
 ; Expression value: 67
Label_2500:
 ; case
 ; RPN'ized expression: "68 "
 ; Expanded expression: "68 "
 ; Expression value: 68
Label_2501:
 ; case
 ; RPN'ized expression: "69 "
 ; Expanded expression: "69 "
 ; Expression value: 69
Label_2502:
 ; case
 ; RPN'ized expression: "70 "
 ; Expanded expression: "70 "
 ; Expression value: 70
Label_2503:
 ; case
 ; RPN'ized expression: "71 "
 ; Expanded expression: "71 "
 ; Expression value: 71
Label_2504:
 ; case
 ; RPN'ized expression: "72 "
 ; Expanded expression: "72 "
 ; Expression value: 72
Label_2505:
 ; case
 ; RPN'ized expression: "73 "
 ; Expanded expression: "73 "
 ; Expression value: 73
Label_2506:
 ; case
 ; RPN'ized expression: "74 "
 ; Expanded expression: "74 "
 ; Expression value: 74
Label_2507:
 ; {
 ; loc             ptrmask : (@-36) : int
 ; loc             oldIdxLeft : (@-40) : int
 ; loc             oldSpLeft : (@-44) : int
 ; loc             incSize : (@-48) : int
 ; loc             opSize : (@-52) : int
 ; loc             Unsigned : (@-56) : int
 ; loc             sr : (@-60) : int
 ; RPN'ized expression: "sr ( constExpr 1 + *u &u , RightExprTypeSynPtr &u , idx exprval ) = "
 ; Expanded expression: "(@-60)  (@-28)  (@-12)  (@8) *(4)  exprval ()12 =(4) "
 ; (
 ; local ofs
 sub r14 28 r6
 ; ,
 ; local ofs
 sub r14 12 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -60 r14 r2
 ; RPN'ized expression: "oldIdxLeft idx *u = "
 ; Expanded expression: "(@-40) (@8) *(4) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; RPN'ized expression: "oldSpLeft sp = "
 ; Expanded expression: "(@-44) sp *(4) =(4) "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; RPN'ized expression: "( constExpr 0 + *u &u , ExprTypeSynPtr , idx exprval ) "
 ; Expanded expression: " (@-32)  (@12) *(4)  (@8) *(4)  exprval ()12 "
 ; (
 ; local ofs
 sub r14 32 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; RPN'ized expression: "( oldIdxLeft oldSpLeft sp - - , ExprTypeSynPtr *u lvalueCheck ) "
 ; Expanded expression: " (@-40) *(4) (@-44) *(4) sp *(4) - -  (@12) *(4) *(4)  lvalueCheck ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -40 r14 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -44 r14 r5
 ; sp
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r5
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r5 r5
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; lvalueCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump lvalueCheck
 add r13 16 r13
 ; RPN'ized expression: "( 1 , ExprTypeSynPtr decayArray ) "
 ; Expanded expression: " 1  (@12) *(4)  decayArray ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; decayArray
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump decayArray
 add r13 16 r13
 ; RPN'ized expression: "( RightExprTypeSynPtr scalarTypeCheck ) "
 ; Expanded expression: " (@-12) *(4)  scalarTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; scalarTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump scalarTypeCheck
 add r13 16 r13
 ; RPN'ized expression: "( ExprTypeSynPtr *u scalarTypeCheck ) "
 ; Expanded expression: " (@12) *(4) *(4)  scalarTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; scalarTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump scalarTypeCheck
 add r13 16 r13
 ; RPN'ized expression: "opSize stack oldIdxLeft oldSpLeft sp - - + *u 1 + *u = "
 ; Expanded expression: "(@-52) stack (@-40) *(4) (@-44) *(4) sp *(4) - - 8 * + 4 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; local ofs
 ; * (read dereference)
 read -44 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -52 r14 r2
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 1 + *u opSize = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 4 + (@-52) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -52 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "( 1 , oldIdxLeft oldSpLeft sp - - del ) "
 ; Expanded expression: " 1  (@-40) *(4) (@-44) *(4) sp *(4) - -  del ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -44 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
 ; RPN'ized expression: "ptrmask ( ExprTypeSynPtr *u isAnyPtr ) 2 * ( RightExprTypeSynPtr isAnyPtr ) + = "
 ; Expanded expression: "(@-36)  (@12) *(4) *(4)  isAnyPtr ()4 2 *  (@-12) *(4)  isAnyPtr ()4 + =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; isAnyPtr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isAnyPtr
 add r13 16 r13
 ; 1
 ; <<
 shiftl r2 1 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; isAnyPtr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isAnyPtr
 add r13 16 r13
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; RPN'ized expression: "Unsigned ( ExprTypeSynPtr *u isUint ) 2 * ( RightExprTypeSynPtr isUint ) + = "
 ; Expanded expression: "(@-56)  (@12) *(4) *(4)  isUint ()4 2 *  (@-12) *(4)  isUint ()4 + =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; isUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isUint
 add r13 16 r13
 ; 1
 ; <<
 shiftl r2 1 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; isUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isUint
 add r13 16 r13
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; local ofs
 ; = (write dereference)
 write -56 r14 r2
 ; if
 ; RPN'ized expression: "tok 68 != tok 69 != && "
 ; Expanded expression: "(@-4) *(4) 68 != [sh&&->2510] (@-4) *(4) 69 != &&[2510] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 68
 ; !=
 load32 68 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2510
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 69
 ; !=
 load32 69 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2510:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2508
 ; {
 ; if
 ; RPN'ized expression: "ptrmask "
 ; Expanded expression: "(@-36) *(4) "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2511
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_2511:
 ; }
 jump Label_2509
Label_2508:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "ptrmask 1 & "
 ; Expanded expression: "(@-36) *(4) 1 & "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; 1
 ; &
 and r2 1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2513
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_2513:
 ; }
Label_2509:
 ; if
 ; RPN'ized expression: "tok 70 == tok 71 == || "
 ; Expanded expression: "(@-4) *(4) 70 == [sh||->2517] (@-4) *(4) 71 == ||[2517] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 70
 ; ==
 load32 70 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2517
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 71
 ; ==
 load32 71 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2517:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2515
 ; {
 ; if
 ; RPN'ized expression: "constExpr 1 + *u "
 ; Expanded expression: "(@-28) *(4) "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2518
 ; {
 ; if
 ; RPN'ized expression: "Unsigned 1 & "
 ; Expanded expression: "(@-56) *(4) 1 & "
 ; local ofs
 ; * (read dereference)
 read -56 r14 r2
 ; 1
 ; &
 and r2 1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2520
 ; loc                     <something> : int
 ; RPN'ized expression: "sr ( sr truncUint ) (something2522) = "
 ; Expanded expression: "(@-60)  (@-60) *(4)  truncUint ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -60 r14 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -60 r14 r2
 jump Label_2521
Label_2520:
 ; else
 ; RPN'ized expression: "sr ( sr truncInt ) = "
 ; Expanded expression: "(@-60)  (@-60) *(4)  truncInt ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -60 r14 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -60 r14 r2
Label_2521:
 ; RPN'ized expression: "( RightExprTypeSynPtr , oldIdxRight oldSpRight sp - - , sr &u shiftCountCheck ) "
 ; Expanded expression: " (@-12) *(4)  (@-16) *(4) (@-20) *(4) sp *(4) - -  (@-60)  shiftCountCheck ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -20 r14 r5
 ; sp
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r5
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r5 r5
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r5 r5
 ; ,
 ; local ofs
 sub r14 60 r4
 ; ,
 ; shiftCountCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump shiftCountCheck
 add r13 16 r13
 ; }
Label_2518:
 ; }
Label_2515:
 ; if
 ; RPN'ized expression: "tok 66 == tok 67 == || "
 ; Expanded expression: "(@-4) *(4) 66 == [sh||->2525] (@-4) *(4) 67 == ||[2525] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 66
 ; ==
 load32 66 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2525
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 67
 ; ==
 load32 67 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2525:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2523
 ; {
 ; loc                 t : (@-64) : int
 ; loc                 sl : (@-68) : int
 ; RPN'ized expression: "sl 0 = "
 ; Expanded expression: "(@-68) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -68 r14 r0
 ; if
 ; RPN'ized expression: "tok 66 == "
 ; Expanded expression: "(@-4) *(4) 66 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 66
 ; ==
 load32 66 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2526
 ; RPN'ized expression: "t 47 = "
 ; Expanded expression: "(@-64) 47 =(4) "
 ; 47
 load32 47 r2
 ; local ofs
 ; = (write dereference)
 write -64 r14 r2
 jump Label_2527
Label_2526:
 ; else
 ; RPN'ized expression: "t 37 = "
 ; Expanded expression: "(@-64) 37 =(4) "
 ; 37
 load32 37 r2
 ; local ofs
 ; = (write dereference)
 write -64 r14 r2
Label_2527:
 ; RPN'ized expression: "( constExpr , 1 , sr , sl &u , t divCheckAndCalc ) "
 ; Expanded expression: " (@-32)  1  (@-60) *(4)  (@-68)  (@-64) *(4)  divCheckAndCalc ()20 "
 ; (
 ; local ofs
 sub r14 32 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; 1
 load32 1 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read -60 r14 r6
 ; ,
 ; local ofs
 sub r14 68 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -64 r14 r4
 ; ,
 ; divCheckAndCalc
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump divCheckAndCalc
 add r13 20 r13
 ; }
Label_2523:
 ; if
 ; RPN'ized expression: "ptrmask 2 == "
 ; Expanded expression: "(@-36) *(4) 2 == "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2528
 ; {
 ; RPN'ized expression: "incSize ( 0 , ( ExprTypeSynPtr *u derefAnyPtr ) GetDeclSize ) = "
 ; Expanded expression: "(@-48)  0   (@12) *(4) *(4)  derefAnyPtr ()4  GetDeclSize ()8 =(4) "
 ; (
 sub r13 8 r13
 ; 0
 load32 0 r2
 ; ,
 ; (
 sub r13 4 r13
 write 0 r13 r2
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; ,
 ; derefAnyPtr
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump derefAnyPtr
 add r13 16 r13
 ; ,
 ; GetDeclSize
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -48 r14 r2
 ; if
 ; RPN'ized expression: "constExpr 1 + *u "
 ; Expanded expression: "(@-28) *(4) "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2530
 ; {
 ; loc                     t : (@-64) : int
 ; loc                     <something> : int
 ; loc                     <something> : unsigned
 ; RPN'ized expression: "t stack oldIdxRight oldSpRight sp - - + *u 1 + *u incSize (something2533) * (something2532) = "
 ; Expanded expression: "(@-64) stack (@-16) *(4) (@-20) *(4) sp *(4) - - 8 * + 4 + *(4) (@-48) *(4) * =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read -48 r14 r8
 ; *
 mult r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -64 r14 r2
 ; RPN'ized expression: "stack oldIdxRight oldSpRight sp - - + *u 1 + *u t = "
 ; Expanded expression: "stack (@-16) *(4) (@-20) *(4) sp *(4) - - 8 * + 4 + (@-64) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -64 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
 jump Label_2531
Label_2530:
 ; else
 ; if
 ; RPN'ized expression: "incSize 1 != "
 ; Expanded expression: "(@-48) *(4) 1 != "
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 ; 1
 ; !=
 load32 1 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_2534
 ; {
 ; RPN'ized expression: "( incSize , 1 , oldIdxRight 1 + oldSpRight sp - - ins2 ) "
 ; Expanded expression: " (@-48) *(4)  1  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  ins2 ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -48 r14 r6
 ; ,
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; ins2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins2
 add r13 16 r13
 ; RPN'ized expression: "( 42 , oldIdxRight 1 + oldSpRight sp - - ins ) "
 ; Expanded expression: " 42  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  ins ()8 "
 ; (
 ; 42
 load32 42 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; ins
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins
 add r13 16 r13
 ; }
Label_2534:
Label_2531:
 ; }
 jump Label_2529
Label_2528:
 ; else
 ; if
 ; RPN'ized expression: "Unsigned "
 ; Expanded expression: "(@-56) *(4) "
 ; local ofs
 ; * (read dereference)
 read -56 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2536
 ; {
 ; loc                 t : (@-64) : int
 ; RPN'ized expression: "t tok = "
 ; Expanded expression: "(@-64) (@-4) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; local ofs
 ; = (write dereference)
 write -64 r14 r2
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 jump Label_2539
 ; {
 ; case
 ; RPN'ized expression: "66 "
 ; Expanded expression: "66 "
 ; Expression value: 66
Label_2540:
 ; RPN'ized expression: "t 64 = "
 ; Expanded expression: "(@-64) 64 =(4) "
 ; 64
 load32 64 r2
 ; local ofs
 ; = (write dereference)
 write -64 r14 r2
 ; break
 jump Label_2538
 ; case
 ; RPN'ized expression: "67 "
 ; Expanded expression: "67 "
 ; Expression value: 67
Label_2541:
 ; RPN'ized expression: "t 75 = "
 ; Expanded expression: "(@-64) 75 =(4) "
 ; 75
 load32 75 r2
 ; local ofs
 ; = (write dereference)
 write -64 r14 r2
 ; break
 jump Label_2538
 ; case
 ; RPN'ized expression: "71 "
 ; Expanded expression: "71 "
 ; Expression value: 71
Label_2542:
 ; if
 ; RPN'ized expression: "Unsigned 2 & "
 ; Expanded expression: "(@-56) *(4) 2 & "
 ; local ofs
 ; * (read dereference)
 read -56 r14 r2
 ; 2
 ; &
 and r2 2 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2543
 ; RPN'ized expression: "t 31 = "
 ; Expanded expression: "(@-64) 31 =(4) "
 ; 31
 load32 31 r2
 ; local ofs
 ; = (write dereference)
 write -64 r14 r2
Label_2543:
 ; break
 jump Label_2538
 ; }
 jump Label_2538
Label_2539:
 load32 66 r12
 bne r2 r12 2
 jump Label_2540
 load32 67 r12
 bne r2 r12 2
 jump Label_2541
 load32 71 r12
 bne r2 r12 2
 jump Label_2542
Label_2538:
 ; RPN'ized expression: "stack oldIdxRight 1 + oldSpRight sp - - + *u 0 + *u t = "
 ; Expanded expression: "stack (@-16) *(4) 1 + (@-20) *(4) sp *(4) - - 8 * + 0 + (@-64) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; local ofs
 ; * (read dereference)
 read -64 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
Label_2536:
Label_2529:
 ; RPN'ized expression: "ConstExpr *u 0 = "
 ; Expanded expression: "(@16) *(4) 0 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; =
 write 0 r2 r0
 ; }
 ; break
 jump Label_2110
 ; case
 ; RPN'ized expression: "63 "
 ; Expanded expression: "63 "
 ; Expression value: 63
Label_2545:
 ; {
 ; loc             oldIdxLeft : (@-36) : int
 ; loc             oldSpLeft : (@-40) : int
 ; loc             oldIdxCond : (@-44) : int
 ; loc             oldSpCond : (@-48) : int
 ; loc             sr : (@-52) : int
 ; loc             sl : (@-56) : int
 ; loc             smid : (@-60) : int
 ; loc             condTypeSynPtr : (@-64) : int
 ; loc             sc : (@-68) : int
 ; RPN'ized expression: "sc LabelCnt 2 += 2 - = "
 ; Expanded expression: "(@-68) LabelCnt 2 +=(4) 2 - =(4) "
 ; 2
 load32 2 r2
 ; LabelCnt
 ; +=
 addr2reg LabelCnt r1
 read 0 r1 r12
 add r12 r2 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 ; 2
 ; -
 sub r2 2 r2
 ; local ofs
 ; = (write dereference)
 write -68 r14 r2
 ; loc             structs : (@-72) : int
 ; RPN'ized expression: "stack idx *u 1 + + *u 0 + *u 6 = "
 ; Expanded expression: "stack (@8) *(4) *(4) 1 + 8 * + 0 + 6 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 1
 ; +
 add r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 6
 load32 6 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "stack idx *u 1 + + *u 1 + *u sc 1 + = "
 ; Expanded expression: "stack (@8) *(4) *(4) 1 + 8 * + 4 + (@-68) *(4) 1 + =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 1
 ; +
 add r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -68 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "smid ( constExpr 1 + *u &u , ExprTypeSynPtr , idx exprval ) = "
 ; Expanded expression: "(@-60)  (@-28)  (@12) *(4)  (@8) *(4)  exprval ()12 =(4) "
 ; (
 ; local ofs
 sub r14 28 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -60 r14 r2
 ; RPN'ized expression: "oldIdxLeft idx *u = "
 ; Expanded expression: "(@-36) (@8) *(4) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; RPN'ized expression: "oldSpLeft sp = "
 ; Expanded expression: "(@-40) sp *(4) =(4) "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; RPN'ized expression: "sr ( constExpr 2 + *u &u , RightExprTypeSynPtr &u , idx exprval ) = "
 ; Expanded expression: "(@-52)  (@-24)  (@-12)  (@8) *(4)  exprval ()12 =(4) "
 ; (
 ; local ofs
 sub r14 24 r6
 ; ,
 ; local ofs
 sub r14 12 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -52 r14 r2
 ; RPN'ized expression: "( 0 , RightExprTypeSynPtr &u decayArray ) "
 ; Expanded expression: " 0  (@-12)  decayArray ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 sub r14 12 r4
 ; ,
 ; decayArray
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump decayArray
 add r13 16 r13
 ; RPN'ized expression: "( 0 , ExprTypeSynPtr decayArray ) "
 ; Expanded expression: " 0  (@12) *(4)  decayArray ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; decayArray
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump decayArray
 add r13 16 r13
 ; RPN'ized expression: "( ExprTypeSynPtr , RightExprTypeSynPtr &u promoteType ) "
 ; Expanded expression: " (@12) *(4)  (@-12)  promoteType ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 sub r14 12 r4
 ; ,
 ; promoteType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump promoteType
 add r13 16 r13
 ; RPN'ized expression: "( RightExprTypeSynPtr &u , ExprTypeSynPtr promoteType ) "
 ; Expanded expression: " (@-12)  (@12) *(4)  promoteType ()8 "
 ; (
 ; local ofs
 sub r14 12 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; promoteType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump promoteType
 add r13 16 r13
 ; RPN'ized expression: "structs ExprTypeSynPtr *u 0 >= SyntaxStack0 ExprTypeSynPtr *u + *u 144 == && 2 * RightExprTypeSynPtr 0 >= SyntaxStack0 RightExprTypeSynPtr + *u 144 == && + = "
 ; Expanded expression: "(@-72) (@12) *(4) *(4) 0 >= [sh&&->2547] SyntaxStack0 (@12) *(4) *(4) + *(1) 144 == &&[2547] 2 * (@-12) *(4) 0 >= [sh&&->2546] SyntaxStack0 (@-12) *(4) + *(1) 144 == &&[2546] + =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2547
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 144
 ; ==
 load32 144 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2547:
 ; 1
 ; <<
 shiftl r2 1 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 0
 ; >=
 bges r8 r0 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 load32 1 r1
 xor r8 r1 r8
 ; short-circuit &&
 ; JumpIfZero
 bne r8 r0 2
 jump Label_2546
 ; SyntaxStack0
 addr2reg SyntaxStack0 r8
 ; local ofs
 ; * (read dereference)
 read -12 r14 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 144
 ; ==
 load32 144 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; short-circuit && target
Label_2546:
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -72 r14 r2
 ; if
 ; RPN'ized expression: "structs "
 ; Expanded expression: "(@-72) *(4) "
 ; local ofs
 ; * (read dereference)
 read -72 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2548
 ; {
 ; if
 ; RPN'ized expression: "structs 3 != SyntaxStack1 RightExprTypeSynPtr + *u SyntaxStack1 ExprTypeSynPtr *u + *u != || "
 ; Expanded expression: "(@-72) *(4) 3 != [sh||->2552] SyntaxStack1 (@-12) *(4) 4 * + *(4) SyntaxStack1 (@12) *(4) *(4) 4 * + *(4) != ||[2552] "
 ; local ofs
 ; * (read dereference)
 read -72 r14 r2
 ; 3
 ; !=
 load32 3 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2552
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; SyntaxStack1
 addr2reg SyntaxStack1 r8
 ; local ofs
 ; * (read dereference)
 read 12 r14 r9
 ; * (read dereference)
 read 0 r9 r9
 ; 2
 ; <<
 shiftl r9 2 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; !=
 xor r2 r8 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2552:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2550
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_2550:
 ; RPN'ized expression: "( 1 , oldIdxLeft oldSpLeft sp - - del ) "
 ; Expanded expression: " 1  (@-36) *(4) (@-40) *(4) sp *(4) - -  del ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -40 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
 ; RPN'ized expression: "( 1 , oldIdxRight oldSpRight sp - - del ) "
 ; Expanded expression: " 1  (@-16) *(4) (@-20) *(4) sp *(4) - -  del ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
 ; RPN'ized expression: "oldSpLeft --p "
 ; Expanded expression: "(@-40) --p(4) "
 ; local ofs
 ; --p
 read -40 r14 r2
 sub r2 1 r2
 write -40 r14 r2
 add r2 1 r2
 ; }
 jump Label_2549
Label_2548:
 ; else
 ; {
 ; RPN'ized expression: "( oldIdxLeft oldSpLeft sp - - , oldIdxRight oldSpRight sp - - , constExpr 1 + *u &u , RightExprTypeSynPtr , ExprTypeSynPtr compatCheck ) "
 ; Expanded expression: " (@-36) *(4) (@-40) *(4) sp *(4) - -  (@-16) *(4) (@-20) *(4) sp *(4) - -  (@-28)  (@-12) *(4)  (@12) *(4)  compatCheck ()20 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -40 r14 r2
 ; sp
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r2 r2
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r2 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r7
 ; local ofs
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 read -20 r14 r7
 ; sp
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; ,
 ; local ofs
 sub r14 28 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; compatCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump compatCheck
 add r13 20 r13
 ; }
Label_2549:
 ; RPN'ized expression: "( sc , 6 , oldIdxLeft 1 + oldSpLeft sp - - ins2 ) "
 ; Expanded expression: " (@-68) *(4)  6  (@-36) *(4) 1 + (@-40) *(4) sp *(4) - -  ins2 ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -68 r14 r6
 ; ,
 ; 6
 load32 6 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -40 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; ins2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins2
 add r13 16 r13
 ; RPN'ized expression: "( sc 1 + , 21 , oldIdxLeft oldSpLeft sp - - ins2 ) "
 ; Expanded expression: " (@-68) *(4) 1 +  21  (@-36) *(4) (@-40) *(4) sp *(4) - -  ins2 ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -68 r14 r6
 ; 1
 ; +
 add r6 1 r6
 ; ,
 ; 21
 load32 21 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -40 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; ins2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins2
 add r13 16 r13
 ; RPN'ized expression: "( sc -u , 90 , idx *u 1 + ins2 ) "
 ; Expanded expression: " (@-68) *(4) -u  90  (@8) *(4) *(4) 1 +  ins2 ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -68 r14 r6
 ; -u
 sub r0 r6 r6
 ; ,
 ; 90
 load32 90 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; 1
 ; +
 add r4 1 r4
 ; ,
 ; ins2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins2
 add r13 16 r13
 ; RPN'ized expression: "oldIdxCond idx *u = "
 ; Expanded expression: "(@-44) (@8) *(4) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; RPN'ized expression: "oldSpCond sp = "
 ; Expanded expression: "(@-48) sp *(4) =(4) "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -48 r14 r2
 ; RPN'ized expression: "sl ( constExpr 0 + *u &u , condTypeSynPtr &u , idx exprval ) = "
 ; Expanded expression: "(@-56)  (@-32)  (@-64)  (@8) *(4)  exprval ()12 =(4) "
 ; (
 ; local ofs
 sub r14 32 r6
 ; ,
 ; local ofs
 sub r14 64 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -56 r14 r2
 ; RPN'ized expression: "( condTypeSynPtr scalarTypeCheck ) "
 ; Expanded expression: " (@-64) *(4)  scalarTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -64 r14 r4
 ; ,
 ; scalarTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump scalarTypeCheck
 add r13 16 r13
 ; RPN'ized expression: "ConstExpr *u s 0 = = "
 ; Expanded expression: "(@16) *(4) (@-8) 0 =(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 load32 0 r8
 ; local ofs
 ; = (write dereference)
 write -8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; if
 ; RPN'ized expression: "constExpr 0 + *u "
 ; Expanded expression: "(@-32) *(4) "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2553
 ; {
 ; loc                 c1 : (@-76) : int
 ; RPN'ized expression: "c1 0 = "
 ; Expanded expression: "(@-76) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -76 r14 r0
 ; loc                 c2 : (@-80) : int
 ; RPN'ized expression: "c2 0 = "
 ; Expanded expression: "(@-80) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -80 r14 r0
 ; if
 ; RPN'ized expression: "( sl truncUint ) 0 != "
 ; Expanded expression: " (@-56) *(4)  truncUint ()4 0 != "
 ; (
 ; local ofs
 ; * (read dereference)
 read -56 r14 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; 0
 ; !=
 bne r2 r0 2
 jump Label_2555
 ; {
 ; if
 ; RPN'ized expression: "constExpr 1 + *u "
 ; Expanded expression: "(@-28) *(4) "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2557
 ; {
 ; RPN'ized expression: "ConstExpr *u 1 = s smid = ,b "
 ; Expanded expression: "(@16) *(4) 1 =(4) void (@-8) (@-60) *(4) =(4) ,b "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; void
 ; local ofs
 ; * (read dereference)
 read -60 r14 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; ,b
 ; }
 jump Label_2558
Label_2557:
 ; else
 ; {
 ; RPN'ized expression: "c1 oldIdxLeft oldSpLeft sp - - idx *u - = "
 ; Expanded expression: "(@-76) (@-36) *(4) (@-40) *(4) sp *(4) - - (@8) *(4) *(4) - =(4) "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r9
 ; -
 sub r8 r9 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -76 r14 r2
 ; RPN'ized expression: "c2 1 = "
 ; Expanded expression: "(@-80) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -80 r14 r2
 ; }
Label_2558:
 ; }
 jump Label_2556
Label_2555:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "constExpr 2 + *u "
 ; Expanded expression: "(@-24) *(4) "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2559
 ; {
 ; RPN'ized expression: "ConstExpr *u 1 = s sr = ,b "
 ; Expanded expression: "(@16) *(4) 1 =(4) void (@-8) (@-52) *(4) =(4) ,b "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; void
 ; local ofs
 ; * (read dereference)
 read -52 r14 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; ,b
 ; }
 jump Label_2560
Label_2559:
 ; else
 ; {
 ; RPN'ized expression: "c1 oldIdxCond oldSpCond sp - - idx *u - 1 + = "
 ; Expanded expression: "(@-76) (@-44) *(4) (@-48) *(4) sp *(4) - - (@8) *(4) *(4) - 1 + =(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; local ofs
 ; * (read dereference)
 read -48 r14 r8
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r9
 ; -
 sub r8 r9 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; -
 sub r2 r8 r2
 ; 1
 ; +
 add r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -76 r14 r2
 ; RPN'ized expression: "c2 oldIdxRight oldSpRight sp - - oldIdxLeft oldSpLeft sp - - - 3 + = "
 ; Expanded expression: "(@-80) (@-16) *(4) (@-20) *(4) sp *(4) - - (@-36) *(4) (@-40) *(4) sp *(4) - - - 3 + =(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; local ofs
 ; * (read dereference)
 read -20 r14 r8
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r9
 ; -
 sub r8 r9 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r8
 ; local ofs
 ; * (read dereference)
 read -40 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; -
 sub r2 r8 r2
 ; 3
 ; +
 add r2 3 r2
 ; local ofs
 ; = (write dereference)
 write -80 r14 r2
 ; }
Label_2560:
 ; }
Label_2556:
 ; if
 ; RPN'ized expression: "c1 "
 ; Expanded expression: "(@-76) *(4) "
 ; local ofs
 ; * (read dereference)
 read -76 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2561
 ; {
 ; loc                     pos : (@-84) : int
 ; RPN'ized expression: "pos oldIdxRight oldSpRight sp - - 2 + c2 - = "
 ; Expanded expression: "(@-84) (@-16) *(4) (@-20) *(4) sp *(4) - - 2 + (@-80) *(4) - =(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; local ofs
 ; * (read dereference)
 read -20 r14 r8
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r9
 ; -
 sub r8 r9 r8
 ; -
 sub r2 r8 r2
 ; 2
 ; +
 add r2 2 r2
 ; local ofs
 ; * (read dereference)
 read -80 r14 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -84 r14 r2
 ; if
 ; RPN'ized expression: "structs 0 == stack pos 1 - + *u 0 + *u 78 == && "
 ; Expanded expression: "(@-72) *(4) 0 == [sh&&->2565] stack (@-84) *(4) 1 - 8 * + 0 + *(4) 78 == &&[2565] "
 ; local ofs
 ; * (read dereference)
 read -72 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2565
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -84 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 78
 ; ==
 load32 78 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2565:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2563
 ; RPN'ized expression: "stack pos ++p + *u 0 + *u 79 = c2 --p ,b "
 ; Expanded expression: "stack (@-84) ++p(4) 8 * + 0 + 79 =(4) void (@-80) --p(4) ,b "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; ++p
 read -84 r14 r8
 add r8 1 r8
 write -84 r14 r8
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 79
 load32 79 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; void
 ; local ofs
 ; --p
 read -80 r14 r2
 sub r2 1 r2
 write -80 r14 r2
 add r2 1 r2
 ; ,b
Label_2563:
 ; RPN'ized expression: "( c2 , pos del ) "
 ; Expanded expression: " (@-80) *(4)  (@-84) *(4)  del ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -80 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -84 r14 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
 ; RPN'ized expression: "( c1 , idx *u 1 + del ) "
 ; Expanded expression: " (@-76) *(4)  (@8) *(4) *(4) 1 +  del ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -76 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; 1
 ; +
 add r4 1 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
 ; }
Label_2561:
 ; }
Label_2553:
 ; if
 ; RPN'ized expression: "structs "
 ; Expanded expression: "(@-72) *(4) "
 ; local ofs
 ; * (read dereference)
 read -72 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2566
 ; RPN'ized expression: "( 0 , 78 , oldIdxRight 2 + oldSpRight sp - - ins2 ) "
 ; Expanded expression: " 0  78  (@-16) *(4) 2 + (@-20) *(4) sp *(4) - -  ins2 ()12 "
 ; (
 ; 0
 load32 0 r6
 ; ,
 ; 78
 load32 78 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; 2
 ; +
 add r4 2 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; ins2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ins2
 add r13 16 r13
Label_2566:
 ; RPN'ized expression: "( idx *u 1 + , oldIdxRight 1 + oldSpRight sp - - , ExprTypeSynPtr , ConstExpr *u , s simplifyConstExpr ) "
 ; Expanded expression: " (@8) *(4) *(4) 1 +  (@-16) *(4) 1 + (@-20) *(4) sp *(4) - -  (@12) *(4)  (@16) *(4) *(4)  (@-8) *(4)  simplifyConstExpr ()20 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; +
 add r2 1 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r7
 ; 1
 ; +
 add r7 1 r7
 ; local ofs
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 read -20 r14 r7
 ; sp
 sub r13 4 r13
 write 0 r13 r7
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r7 r7
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 16 r14 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; simplifyConstExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump simplifyConstExpr
 add r13 20 r13
 ; }
 ; break
 jump Label_2110
 ; case
 ; RPN'ized expression: "14 "
 ; Expanded expression: "14 "
 ; Expression value: 14
Label_2568:
 ; {
 ; loc             member : (@-36) : int
 ; loc             i : (@-40) : int
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-40) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -40 r14 r0
 ; loc             j : (@-44) : int
 ; RPN'ized expression: "j 0 = "
 ; Expanded expression: "(@-44) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -44 r14 r0
 ; loc             c : (@-48) : int
 ; RPN'ized expression: "c 1 = "
 ; Expanded expression: "(@-48) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -48 r14 r2
 ; loc             ofs : (@-52) : int
 ; RPN'ized expression: "ofs 0 = "
 ; Expanded expression: "(@-52) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -52 r14 r0
 ; RPN'ized expression: "stack idx *u 1 + + *u 0 + *u 43 = "
 ; Expanded expression: "stack (@8) *(4) *(4) 1 + 8 * + 0 + 43 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 1
 ; +
 add r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 43
 load32 43 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "member stack idx *u + *u 1 + *u = "
 ; Expanded expression: "(@-36) stack (@8) *(4) *(4) 8 * + 4 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; RPN'ized expression: "stack idx *u + *u 0 + *u 1 = "
 ; Expanded expression: "stack (@8) *(4) *(4) 8 * + 0 + 1 =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "idx *u -- "
 ; Expanded expression: "(@8) *(4) --(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; --
 or r0 r2 r11
 read 0 r11 r2
 sub r2 1 r2
 write 0 r11 r2
 ; RPN'ized expression: "( ConstExpr , ExprTypeSynPtr , idx exprval ) "
 ; Expanded expression: " (@16) *(4)  (@12) *(4)  (@8) *(4)  exprval ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; if
 ; RPN'ized expression: "( ExprTypeSynPtr *u isAnyPtr ) 0 == SyntaxStack0 i ( ExprTypeSynPtr *u derefAnyPtr ) = + *u 144 != || "
 ; Expanded expression: " (@12) *(4) *(4)  isAnyPtr ()4 0 == [sh||->2571] SyntaxStack0 (@-40)  (@12) *(4) *(4)  derefAnyPtr ()4 =(4) + *(1) 144 != ||[2571] "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; isAnyPtr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isAnyPtr
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2571
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; derefAnyPtr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump derefAnyPtr
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 144
 ; !=
 load32 144 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2571:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2569

.rdata
Label_2572:
.dw 80 111 105 110 116 101 114 32 116 111 32 111 114 32 115 116 114 117 99 116 117 114 101 32 111 114 32 117 110 105 111 110 32 101 120 112 101 99 116 101 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2572 error ) "
 ; Expanded expression: " L2572  error ()4 "
 ; (
 ; 2572
 addr2reg Label_2572 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2569:
 ; RPN'ized expression: "i SyntaxStack1 i + *u = "
 ; Expanded expression: "(@-40) SyntaxStack1 (@-40) *(4) 4 * + *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; if
 ; RPN'ized expression: "i 2 + SyntaxStackCnt > SyntaxStack0 i + *u 113 != SyntaxStack0 i + *u 114 != && || SyntaxStack0 i 1 + + *u 145 != || "
 ; Expanded expression: "(@-40) *(4) 2 + SyntaxStackCnt *(4) > [sh||->2576] SyntaxStack0 (@-40) *(4) + *(1) 113 != [sh&&->2577] SyntaxStack0 (@-40) *(4) + *(1) 114 != &&[2577] _Bool ||[2576] _Bool [sh||->2575] SyntaxStack0 (@-40) *(4) 1 + + *(1) 145 != ||[2575] "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; 2
 ; +
 add r2 2 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; >
 bges r8 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2576
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 113
 ; !=
 load32 113 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2577
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 114
 ; !=
 load32 114 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2577:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_2576:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2575
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 145
 ; !=
 load32 145 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2575:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2573
 ; RPN'ized expression: "( 20 errorInternal ) "
 ; Expanded expression: " 20  errorInternal ()4 "
 ; (
 ; 20
 load32 20 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
Label_2573:
 ; if
 ; RPN'ized expression: "( 0 , i GetDeclSize ) 0 == "
 ; Expanded expression: " 0  (@-40) *(4)  GetDeclSize ()8 0 == "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2578
 ; RPN'ized expression: "( errorOpType ) "
 ; Expanded expression: " errorOpType ()0 "
 ; (
 ; errorOpType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorOpType
 add r13 16 r13
Label_2578:
 ; RPN'ized expression: "i 5 += "
 ; Expanded expression: "(@-40) 5 +=(4) "
 ; 5
 load32 5 r2
 ; local ofs
 ; +=
 read -40 r14 r12
 add r12 r2 r2
 write -40 r14 r2
 ; while
 ; RPN'ized expression: "c "
 ; Expanded expression: "(@-48) *(4) "
Label_2580:
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2581
 ; {
 ; loc                 t : (@-56) : int
 ; RPN'ized expression: "t SyntaxStack0 i + *u = "
 ; Expanded expression: "(@-56) SyntaxStack0 (@-40) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -56 r14 r2
 ; RPN'ized expression: "c t 40 == t 41 == - t 123 == + t 125 == - += "
 ; Expanded expression: "(@-48) (@-56) *(4) 40 == (@-56) *(4) 41 == - (@-56) *(4) 123 == + (@-56) *(4) 125 == - +=(4) "
 ; local ofs
 ; * (read dereference)
 read -56 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -56 r14 r8
 ; 41
 ; ==
 load32 41 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -56 r14 r8
 ; 123
 ; ==
 load32 123 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -56 r14 r8
 ; 125
 ; ==
 load32 125 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; +=
 read -48 r14 r12
 add r12 r2 r2
 write -48 r14 r2
 ; if
 ; RPN'ized expression: "c 1 == t 146 == && SyntaxStack1 i + *u member == && SyntaxStack0 i 1 + + *u 89 == && "
 ; Expanded expression: "(@-48) *(4) 1 == [sh&&->2586] (@-56) *(4) 146 == &&[2586] _Bool [sh&&->2585] SyntaxStack1 (@-40) *(4) 4 * + *(4) (@-36) *(4) == &&[2585] _Bool [sh&&->2584] SyntaxStack0 (@-40) *(4) 1 + + *(1) 89 == &&[2584] "
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2586
 ; local ofs
 ; * (read dereference)
 read -56 r14 r2
 ; 146
 ; ==
 load32 146 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2586:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2585
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r8
 ; ==
 xor r2 r8 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2585:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2584
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 89
 ; ==
 load32 89 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2584:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2582
 ; {
 ; RPN'ized expression: "j i = "
 ; Expanded expression: "(@-44) (@-40) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; RPN'ized expression: "ofs SyntaxStack1 i 1 + + *u = "
 ; Expanded expression: "(@-52) SyntaxStack1 (@-40) *(4) 1 + 4 * + *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -52 r14 r2
 ; break
 jump Label_2581
 ; }
Label_2582:
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-40) ++p(4) "
 ; local ofs
 ; ++p
 read -40 r14 r2
 add r2 1 r2
 write -40 r14 r2
 sub r2 1 r2
 ; }
 jump Label_2580
Label_2581:
 ; if
 ; RPN'ized expression: "j 0 == "
 ; Expanded expression: "(@-44) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2587

.rdata
Label_2589:
.dw 85 110 100 101 102 105 110 101 100 32 115 116 114 117 99 116 117 114 101 32 111 114 32 117 110 105 111 110 32 109 101 109 98 101 114 32 39 37 115 39 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( IdentTable member + , L2589 error ) "
 ; Expanded expression: " IdentTable (@-36) *(4) +  L2589  error ()8 "
 ; (
 ; IdentTable
 addr2reg IdentTable r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -36 r14 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; 2589
 addr2reg Label_2589 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2587:
 ; RPN'ized expression: "j 2 += "
 ; Expanded expression: "(@-44) 2 +=(4) "
 ; 2
 load32 2 r2
 ; local ofs
 ; +=
 read -44 r14 r12
 add r12 r2 r2
 write -44 r14 r2
 ; RPN'ized expression: "ExprTypeSynPtr *u j -u = "
 ; Expanded expression: "(@12) *(4) (@-44) *(4) -u =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; local ofs
 ; * (read dereference)
 read -44 r14 r8
 ; -u
 sub r0 r8 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "stack oldIdxRight oldSpRight sp - - + *u 1 + *u ofs = "
 ; Expanded expression: "stack (@-16) *(4) (@-20) *(4) sp *(4) - - 8 * + 4 + (@-52) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r10
 ; -
 sub r9 r10 r9
 ; -
 sub r8 r9 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -52 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; {
 ; loc                 i : (@-56) : int
 ; RPN'ized expression: "i oldIdxRight oldSpRight sp - - 1 - = "
 ; Expanded expression: "(@-56) (@-16) *(4) (@-20) *(4) sp *(4) - - 1 - =(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; local ofs
 ; * (read dereference)
 read -20 r14 r8
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r9
 ; -
 sub r8 r9 r8
 ; -
 sub r2 r8 r2
 ; 1
 ; -
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -56 r14 r2
 ; while
 ; RPN'ized expression: "stack i + *u 0 + *u 79 == "
 ; Expanded expression: "stack (@-56) *(4) 8 * + 0 + *(4) 79 == "
Label_2590:
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -56 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 79
 ; ==
 load32 79 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2591
 ; RPN'ized expression: "i --p "
 ; Expanded expression: "(@-56) --p(4) "
 ; local ofs
 ; --p
 read -56 r14 r2
 sub r2 1 r2
 write -56 r14 r2
 add r2 1 r2
 jump Label_2590
Label_2591:
 ; if
 ; RPN'ized expression: "stack i + *u 0 + *u 1 == stack i + *u 0 + *u 2 == || stack i + *u 0 + *u 89 == || "
 ; Expanded expression: "stack (@-56) *(4) 8 * + 0 + *(4) 1 == [sh||->2595] stack (@-56) *(4) 8 * + 0 + *(4) 2 == ||[2595] _Bool [sh||->2594] stack (@-56) *(4) 8 * + 0 + *(4) 89 == ||[2594] "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -56 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2595
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -56 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2595:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2594
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -56 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 89
 ; ==
 load32 89 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2594:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2592
 ; {
 ; loc                     <something> : int
 ; loc                     <something> : unsigned
 ; RPN'ized expression: "stack i + *u 1 + *u stack i + *u 1 + *u (something2597) ofs + (something2596) = "
 ; Expanded expression: "stack (@-56) *(4) 8 * + 4 + stack (@-56) *(4) 8 * + 4 + *(4) (@-52) *(4) + =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -56 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; stack
 addr2reg stack r8
 ; local ofs
 ; * (read dereference)
 read -56 r14 r9
 ; 3
 ; <<
 shiftl r9 3 r9
 ; +
 add r8 r9 r8
 ; 4
 ; +
 add r8 4 r8
 ; * (read dereference)
 read 0 r8 r8
 ; local ofs
 ; * (read dereference)
 read -52 r14 r9
 ; +
 add r8 r9 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "( 2 , oldIdxRight oldSpRight sp - - del ) "
 ; Expanded expression: " 2  (@-16) *(4) (@-20) *(4) sp *(4) - -  del ()8 "
 ; (
 ; 2
 load32 2 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; sp
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
 ; }
Label_2592:
 ; }
 ; RPN'ized expression: "ConstExpr *u 0 = "
 ; Expanded expression: "(@16) *(4) 0 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; =
 write 0 r2 r0
 ; }
 ; break
 jump Label_2110
 ; default
Label_2598:
 ; RPN'ized expression: "( 21 errorInternal ) "
 ; Expanded expression: " 21  errorInternal ()4 "
 ; (
 ; 21
 load32 21 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
 ; }
 jump Label_2110
Label_2111:
 load32 1 r12
 bne r2 r12 2
 jump Label_2112
 load32 2 r12
 bne r2 r12 2
 jump Label_2113
 load32 16 r12
 bne r2 r12 2
 jump Label_2114
 load32 27 r12
 bne r2 r12 2
 jump Label_2185
 load32 77 r12
 bne r2 r12 2
 jump Label_2189
 load32 78 r12
 bne r2 r12 2
 jump Label_2197
 load32 43 r12
 bne r2 r12 2
 jump Label_2213
 load32 45 r12
 bne r2 r12 2
 jump Label_2214
 load32 12 r12
 bne r2 r12 2
 jump Label_2269
 load32 13 r12
 bne r2 r12 2
 jump Label_2270
 load32 81 r12
 bne r2 r12 2
 jump Label_2271
 load32 82 r12
 bne r2 r12 2
 jump Label_2272
 load32 61 r12
 bne r2 r12 2
 jump Label_2285
 load32 126 r12
 bne r2 r12 2
 jump Label_2295
 load32 79 r12
 bne r2 r12 2
 jump Label_2296
 load32 80 r12
 bne r2 r12 2
 jump Label_2297
 load32 42 r12
 bne r2 r12 2
 jump Label_2304
 load32 47 r12
 bne r2 r12 2
 jump Label_2305
 load32 37 r12
 bne r2 r12 2
 jump Label_2306
 load32 4 r12
 bne r2 r12 2
 jump Label_2307
 load32 5 r12
 bne r2 r12 2
 jump Label_2308
 load32 38 r12
 bne r2 r12 2
 jump Label_2309
 load32 94 r12
 bne r2 r12 2
 jump Label_2310
 load32 124 r12
 bne r2 r12 2
 jump Label_2311
 load32 60 r12
 bne r2 r12 2
 jump Label_2350
 load32 62 r12
 bne r2 r12 2
 jump Label_2351
 load32 10 r12
 bne r2 r12 2
 jump Label_2352
 load32 11 r12
 bne r2 r12 2
 jump Label_2353
 load32 8 r12
 bne r2 r12 2
 jump Label_2354
 load32 9 r12
 bne r2 r12 2
 jump Label_2355
 load32 120 r12
 bne r2 r12 2
 jump Label_2415
 load32 6 r12
 bne r2 r12 2
 jump Label_2416
 load32 7 r12
 bne r2 r12 2
 jump Label_2417
 load32 41 r12
 bne r2 r12 2
 jump Label_2459
 load32 48 r12
 bne r2 r12 2
 jump Label_2487
 load32 65 r12
 bne r2 r12 2
 jump Label_2498
 load32 66 r12
 bne r2 r12 2
 jump Label_2499
 load32 67 r12
 bne r2 r12 2
 jump Label_2500
 load32 68 r12
 bne r2 r12 2
 jump Label_2501
 load32 69 r12
 bne r2 r12 2
 jump Label_2502
 load32 70 r12
 bne r2 r12 2
 jump Label_2503
 load32 71 r12
 bne r2 r12 2
 jump Label_2504
 load32 72 r12
 bne r2 r12 2
 jump Label_2505
 load32 73 r12
 bne r2 r12 2
 jump Label_2506
 load32 74 r12
 bne r2 r12 2
 jump Label_2507
 load32 63 r12
 bne r2 r12 2
 jump Label_2545
 load32 14 r12
 bne r2 r12 2
 jump Label_2568
 jump Label_2598
Label_2110:
 ; return
 ; RPN'ized expression: "s "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
Label_2107:
 read 4 r14 r15
 read 0 r14 r14
 add r13 92 r13
 jumpr 0 r15

 ; glb ParseExpr : (
 ; prm     tok : int
 ; prm     GotUnary : * int
 ; prm     ExprTypeSynPtr : * int
 ; prm     ConstExpr : * int
 ; prm     ConstVal : * int
 ; prm     option : int
 ; prm     option2 : int
 ;     ) int
.code
; .globl ParseExpr
ParseExpr:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13         28 r13
 write         20 r13 r14
 add r13         20 r14
   write 4 r14 r15
 ; loc     tok : (@8) : int
 ; loc     GotUnary : (@12) : * int
 ; loc     ExprTypeSynPtr : (@16) : * int
 ; loc     ConstExpr : (@20) : * int
 ; loc     ConstVal : (@24) : * int
 ; loc     option : (@28) : int
 ; loc     option2 : (@32) : int
 ; loc     identFirst : (@-4) : int
 ; RPN'ized expression: "identFirst tok 16 == = "
 ; Expanded expression: "(@-4) (@8) *(4) 16 == =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "ConstVal *u ConstExpr *u 0 = = "
 ; Expanded expression: "(@24) *(4) (@20) *(4) 0 =(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 24 r14 r2
 ; local ofs
 ; * (read dereference)
 read 20 r14 r8
 ; 0
 load32 0 r9
 ; = (write dereference)
 write 0 r8 r9
 or r0 r9 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "ExprTypeSynPtr *u 0 = "
 ; Expanded expression: "(@16) *(4) 0 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; =
 write 0 r2 r0
 ; if
 ; RPN'ized expression: "ExprLevel ++p 0 == "
 ; Expanded expression: "ExprLevel ++p(4) 0 == "
 ; ExprLevel
 ; ++p
 addr2reg ExprLevel r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg ExprLevel r1
 write 0 r1 r2
 sub r2 1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2600
 ; {
 ; RPN'ized expression: "opsp sp 0 = = "
 ; Expanded expression: "opsp sp 0 =(4) =(4) "
 ; 0
 load32 0 r2
 ; sp
 ; = (write dereference)
 addr2reg sp r1
 write 0 r1 r2
 ; opsp
 ; = (write dereference)
 addr2reg opsp r1
 write 0 r1 r2
 ; }
Label_2600:
 ; if
 ; RPN'ized expression: "option 61 == "
 ; Expanded expression: "(@28) *(4) 61 == "
 ; local ofs
 ; * (read dereference)
 read 28 r14 r2
 ; 61
 ; ==
 load32 61 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2602
 ; RPN'ized expression: "( option2 , 16 push2 ) "
 ; Expanded expression: " (@32) *(4)  16  push2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 32 r14 r5
 ; ,
 ; 16
 load32 16 r4
 ; ,
 ; push2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
Label_2602:
 ; RPN'ized expression: "tok ( option 44 == option 61 == || , GotUnary , tok expr ) = "
 ; Expanded expression: "(@8)  (@28) *(4) 44 == [sh||->2604] (@28) *(4) 61 == ||[2604]  (@12) *(4)  (@8) *(4)  expr ()12 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 28 r14 r6
 ; 44
 ; ==
 load32 44 r1
 xor r6 r1 r6
 load32 1 r1
 bges r6 r1 3
 load32 1 r6
 jumpo 2
 load32 0 r6
 ; short-circuit ||
 ; JumpIfNotZero
 beq r6 r0 2
 jump Label_2604
 ; local ofs
 ; * (read dereference)
 read 28 r14 r6
 ; 61
 ; ==
 load32 61 r1
 xor r6 r1 r6
 load32 1 r1
 bges r6 r1 3
 load32 1 r6
 jumpo 2
 load32 0 r6
 ; short-circuit || target
Label_2604:
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; expr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump expr
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if

.rdata
Label_2607:
.dw 44 59 58 41 93 125 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "tok 0 == ( tok , L2607 strchr ) 0 == || "
 ; Expanded expression: "(@8) *(4) 0 == [sh||->2608]  (@8) *(4)  L2607  strchr ()8 0 == ||[2608] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2608
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 2607
 addr2reg Label_2607 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2608:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2605
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_2605:
 ; if
 ; RPN'ized expression: "option 61 == "
 ; Expanded expression: "(@28) *(4) 61 == "
 ; local ofs
 ; * (read dereference)
 read 28 r14 r2
 ; 61
 ; ==
 load32 61 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2609
 ; {
 ; RPN'ized expression: "( 61 push ) "
 ; Expanded expression: " 61  push ()4 "
 ; (
 ; 61
 load32 61 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; }
 jump Label_2610
Label_2609:
 ; else
 ; if
 ; RPN'ized expression: "option 143 == identFirst && tok 58 == && GotUnary *u && sp 1 == && stack sp 1 - + *u 0 + *u 16 == && "
 ; Expanded expression: "(@28) *(4) 143 == [sh&&->2617] (@-4) *(4) _Bool &&[2617] _Bool [sh&&->2616] (@8) *(4) 58 == &&[2616] _Bool [sh&&->2615] (@12) *(4) *(4) _Bool &&[2615] _Bool [sh&&->2614] sp *(4) 1 == &&[2614] _Bool [sh&&->2613] stack sp *(4) 1 - 8 * + 0 + *(4) 16 == &&[2613] "
 ; local ofs
 ; * (read dereference)
 read 28 r14 r2
 ; 143
 ; ==
 load32 143 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2617
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_2617:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2616
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 58
 ; ==
 load32 58 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2616:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2615
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_2615:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2614
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2614:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2613
 ; stack
 addr2reg stack r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2613:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2611
 ; {
 ; RPN'ized expression: "ExprLevel --p "
 ; Expanded expression: "ExprLevel --p(4) "
 ; ExprLevel
 ; --p
 addr2reg ExprLevel r1
 read 0 r1 r2
 sub r2 1 r2
 addr2reg ExprLevel r1
 write 0 r1 r2
 add r2 1 r2
 ; return
 ; RPN'ized expression: "143 "
 ; Expanded expression: "143 "
 ; Expression value: 143
 ; 143
 load32 143 r2
 jump Label_2599
 ; }
Label_2611:
Label_2610:
 ; if
 ; RPN'ized expression: "GotUnary *u "
 ; Expanded expression: "(@12) *(4) *(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2618
 ; {
 ; loc         j : (@-8) : int
 ; for
 ; RPN'ized expression: "j 0 = "
 ; Expanded expression: "(@-8) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -8 r14 r0
Label_2620:
 ; RPN'ized expression: "j 2 < "
 ; Expanded expression: "(@-8) *(4) 2 < "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 2
 ; <
 load32 2 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_2623
 ; RPN'ized expression: "j ++p "
 ; Expanded expression: "(@-8) ++p(4) "
 ; {
 ; loc             i : (@-12) : int
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13
 ; if
 ; RPN'ized expression: "j "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2624

.rdata
Label_2626:
.dw 69 120 112 97 110 100 101 100 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2626 printf2 ) "
 ; Expanded expression: " L2626  printf2 ()4 "
 ; (
 ; 2626
 addr2reg Label_2626 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 jump Label_2625
Label_2624:
 ; else

.rdata
Label_2627:
.dw 82 80 78 39 105 122 101 100 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2627 printf2 ) "
 ; Expanded expression: " L2627  printf2 ()4 "
 ; (
 ; 2627
 addr2reg Label_2627 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_2625:

.rdata
Label_2628:
.dw 32 101 120 112 114 101 115 115 105 111 110 58 32 34 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2628 printf2 ) "
 ; Expanded expression: " L2628  printf2 ()4 "
 ; (
 ; 2628
 addr2reg Label_2628 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-12) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -12 r14 r0
Label_2629:
 ; RPN'ized expression: "i sp < "
 ; Expanded expression: "(@-12) *(4) sp *(4) < "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_2632
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-12) ++p(4) "
 ; {
 ; loc                 tok : (@-16) : int
 ; RPN'ized expression: "tok stack i + *u 0 + *u = "
 ; Expanded expression: "(@-16) stack (@-12) *(4) 8 * + 0 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-16) *(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 jump Label_2634
 ; {
 ; case
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
Label_2635:

.rdata
Label_2636:
.dw 37 100 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( stack i + *u 1 + *u truncInt ) , L2636 printf2 ) "
 ; Expanded expression: "  stack (@-12) *(4) 8 * + 4 + *(4)  truncInt ()4  L2636  printf2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; stack
 addr2reg stack r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -12 r14 r2
 ; 3
 ; <<
 shiftl r2 3 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; ,
 ; truncInt
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; ,
 ; 2636
 sub r13 4 r13
 write 0 r13 r2
 addr2reg Label_2636 r2
 ; ,
 ; printf2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_2633
 ; case
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
Label_2637:

.rdata
Label_2638:
.dw 37 117 117 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( stack i + *u 1 + *u truncUint ) , L2638 printf2 ) "
 ; Expanded expression: "  stack (@-12) *(4) 8 * + 4 + *(4)  truncUint ()4  L2638  printf2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; stack
 addr2reg stack r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -12 r14 r2
 ; 3
 ; <<
 shiftl r2 3 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; ,
 ; truncUint
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; ,
 ; 2638
 sub r13 4 r13
 write 0 r13 r2
 addr2reg Label_2638 r2
 ; ,
 ; printf2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_2633
 ; case
 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
Label_2639:
 ; {
 ; loc                         p : (@-20) : * char
 ; RPN'ized expression: "p IdentTable stack i + *u 1 + *u + = "
 ; Expanded expression: "(@-20) IdentTable stack (@-12) *(4) 8 * + 4 + *(4) + =(4) "
 ; IdentTable
 addr2reg IdentTable r2
 ; stack
 addr2reg stack r8
 ; local ofs
 ; * (read dereference)
 read -12 r14 r9
 ; 3
 ; <<
 shiftl r9 3 r9
 ; +
 add r8 r9 r8
 ; 4
 ; +
 add r8 4 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; if
 ; RPN'ized expression: "( p *u isdigit ) "
 ; Expanded expression: " (@-20) *(4) *(-1)  isdigit ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; isdigit
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isdigit
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2640

.rdata
Label_2642:
.dw 76 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2642 printf2 ) "
 ; Expanded expression: " L2642  printf2 ()4 "
 ; (
 ; 2642
 addr2reg Label_2642 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_2640:

.rdata
Label_2643:
.dw 37 115 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( p , L2643 printf2 ) "
 ; Expanded expression: " (@-20) *(4)  L2643  printf2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r5
 ; ,
 ; 2643
 addr2reg Label_2643 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; }
 ; break
 jump Label_2633
 ; case
 ; RPN'ized expression: "90 "
 ; Expanded expression: "90 "
 ; Expression value: 90
Label_2644:
 ; if
 ; RPN'ized expression: "stack i + *u 1 + *u 0 >= "
 ; Expanded expression: "stack (@-12) *(4) 8 * + 4 + *(4) 0 >= "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; >=
 bges r2 r0 2
 jump Label_2645

.rdata
Label_2647:
.dw 91 115 104 38 38 45 62 37 100 93 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( stack i + *u 1 + *u , L2647 printf2 ) "
 ; Expanded expression: " stack (@-12) *(4) 8 * + 4 + *(4)  L2647  printf2 ()8 "
 ; (
 ; stack
 addr2reg stack r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -12 r14 r5
 ; 3
 ; <<
 shiftl r5 3 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; 4
 ; +
 add r5 4 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 2647
 addr2reg Label_2647 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 jump Label_2646
Label_2645:
 ; else

.rdata
Label_2648:
.dw 91 115 104 124 124 45 62 37 100 93 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( stack i + *u 1 + *u -u , L2648 printf2 ) "
 ; Expanded expression: " stack (@-12) *(4) 8 * + 4 + *(4) -u  L2648  printf2 ()8 "
 ; (
 ; stack
 addr2reg stack r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -12 r14 r5
 ; 3
 ; <<
 shiftl r5 3 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; 4
 ; +
 add r5 4 r5
 ; * (read dereference)
 read 0 r5 r5
 ; -u
 sub r0 r5 r5
 ; ,
 ; 2648
 addr2reg Label_2648 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_2646:
 ; break
 jump Label_2633
 ; case
 ; RPN'ized expression: "89 "
 ; Expanded expression: "89 "
 ; Expression value: 89
Label_2649:

.rdata
Label_2650:
.dw 40 64 37 100 41 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( stack i + *u 1 + *u truncInt ) , L2650 printf2 ) "
 ; Expanded expression: "  stack (@-12) *(4) 8 * + 4 + *(4)  truncInt ()4  L2650  printf2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; stack
 addr2reg stack r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -12 r14 r2
 ; 3
 ; <<
 shiftl r2 3 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; ,
 ; truncInt
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; ,
 ; 2650
 sub r13 4 r13
 write 0 r13 r2
 addr2reg Label_2650 r2
 ; ,
 ; printf2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_2633
 ; case
 ; RPN'ized expression: "78 "
 ; Expanded expression: "78 "
 ; Expression value: 78
Label_2651:
 ; if
 ; RPN'ized expression: "j "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2652

.rdata
Label_2654:
.dw 42 40 37 100 41 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( stack i + *u 1 + *u , L2654 printf2 ) "
 ; Expanded expression: " stack (@-12) *(4) 8 * + 4 + *(4)  L2654  printf2 ()8 "
 ; (
 ; stack
 addr2reg stack r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -12 r14 r5
 ; 3
 ; <<
 shiftl r5 3 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; 4
 ; +
 add r5 4 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 2654
 addr2reg Label_2654 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 jump Label_2653
Label_2652:
 ; else

.rdata
Label_2655:
.dw 42 117 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2655 printf2 ) "
 ; Expanded expression: " L2655  printf2 ()4 "
 ; (
 ; 2655
 addr2reg Label_2655 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_2653:
 ; break
 jump Label_2633
 ; case
 ; RPN'ized expression: "40 "
 ; Expanded expression: "40 "
 ; Expression value: 40
Label_2656:
 ; case
 ; RPN'ized expression: "44 "
 ; Expanded expression: "44 "
 ; Expression value: 44
Label_2657:
 ; if
 ; RPN'ized expression: "j 0 == "
 ; Expanded expression: "(@-8) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2658

.rdata
Label_2660:
.dw 37 99 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( tok , L2660 printf2 ) "
 ; Expanded expression: " (@-16) *(4)  L2660  printf2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -16 r14 r5
 ; ,
 ; 2660
 addr2reg Label_2660 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_2658:
 ; break
 jump Label_2633
 ; case
 ; RPN'ized expression: "41 "
 ; Expanded expression: "41 "
 ; Expression value: 41
Label_2661:
 ; if
 ; RPN'ized expression: "j "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2662

.rdata
Label_2664:
.dw 40 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2664 printf2 ) "
 ; Expanded expression: " L2664  printf2 ()4 "
 ; (
 ; 2664
 addr2reg Label_2664 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_2662:

.rdata
Label_2665:
.dw 37 99 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( tok , L2665 printf2 ) "
 ; Expanded expression: " (@-16) *(4)  L2665  printf2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -16 r14 r5
 ; ,
 ; 2665
 addr2reg Label_2665 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "j "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2666

.rdata
Label_2668:
.dw 37 100 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( stack i + *u 1 + *u , L2668 printf2 ) "
 ; Expanded expression: " stack (@-12) *(4) 8 * + 4 + *(4)  L2668  printf2 ()8 "
 ; (
 ; stack
 addr2reg stack r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -12 r14 r5
 ; 3
 ; <<
 shiftl r5 3 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; 4
 ; +
 add r5 4 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 2668
 addr2reg Label_2668 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_2666:
 ; break
 jump Label_2633
 ; default
Label_2669:

.rdata
Label_2670:
.dw 37 115 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( tok GetTokenName ) , L2670 printf2 ) "
 ; Expanded expression: "  (@-16) *(4)  GetTokenName ()4  L2670  printf2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; ,
 ; GetTokenName
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump GetTokenName
 add r13 16 r13
 ; ,
 ; 2670
 sub r13 4 r13
 write 0 r13 r2
 addr2reg Label_2670 r2
 ; ,
 ; printf2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "j "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2671
 ; {
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-16) *(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 jump Label_2674
 ; {
 ; case
 ; RPN'ized expression: "7 "
 ; Expanded expression: "7 "
 ; Expression value: 7
Label_2675:
 ; case
 ; RPN'ized expression: "6 "
 ; Expanded expression: "6 "
 ; Expression value: 6
Label_2676:

.rdata
Label_2677:
.dw 91 37 100 93 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( stack i + *u 1 + *u , L2677 printf2 ) "
 ; Expanded expression: " stack (@-12) *(4) 8 * + 4 + *(4)  L2677  printf2 ()8 "
 ; (
 ; stack
 addr2reg stack r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -12 r14 r5
 ; 3
 ; <<
 shiftl r5 3 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; 4
 ; +
 add r5 4 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 2677
 addr2reg Label_2677 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_2673
 ; case
 ; RPN'ized expression: "61 "
 ; Expanded expression: "61 "
 ; Expression value: 61
Label_2678:
 ; case
 ; RPN'ized expression: "12 "
 ; Expanded expression: "12 "
 ; Expression value: 12
Label_2679:
 ; case
 ; RPN'ized expression: "13 "
 ; Expanded expression: "13 "
 ; Expression value: 13
Label_2680:
 ; case
 ; RPN'ized expression: "81 "
 ; Expanded expression: "81 "
 ; Expression value: 81
Label_2681:
 ; case
 ; RPN'ized expression: "82 "
 ; Expanded expression: "82 "
 ; Expression value: 82
Label_2682:
 ; case
 ; RPN'ized expression: "68 "
 ; Expanded expression: "68 "
 ; Expression value: 68
Label_2683:
 ; case
 ; RPN'ized expression: "69 "
 ; Expanded expression: "69 "
 ; Expression value: 69
Label_2684:
 ; case
 ; RPN'ized expression: "83 "
 ; Expanded expression: "83 "
 ; Expression value: 83
Label_2685:
 ; case
 ; RPN'ized expression: "84 "
 ; Expanded expression: "84 "
 ; Expression value: 84
Label_2686:
 ; case
 ; RPN'ized expression: "65 "
 ; Expanded expression: "65 "
 ; Expression value: 65
Label_2687:
 ; case
 ; RPN'ized expression: "66 "
 ; Expanded expression: "66 "
 ; Expression value: 66
Label_2688:
 ; case
 ; RPN'ized expression: "67 "
 ; Expanded expression: "67 "
 ; Expression value: 67
Label_2689:
 ; case
 ; RPN'ized expression: "64 "
 ; Expanded expression: "64 "
 ; Expression value: 64
Label_2690:
 ; case
 ; RPN'ized expression: "75 "
 ; Expanded expression: "75 "
 ; Expression value: 75
Label_2691:
 ; case
 ; RPN'ized expression: "70 "
 ; Expanded expression: "70 "
 ; Expression value: 70
Label_2692:
 ; case
 ; RPN'ized expression: "71 "
 ; Expanded expression: "71 "
 ; Expression value: 71
Label_2693:
 ; case
 ; RPN'ized expression: "31 "
 ; Expanded expression: "31 "
 ; Expression value: 31
Label_2694:
 ; case
 ; RPN'ized expression: "72 "
 ; Expanded expression: "72 "
 ; Expression value: 72
Label_2695:
 ; case
 ; RPN'ized expression: "73 "
 ; Expanded expression: "73 "
 ; Expression value: 73
Label_2696:
 ; case
 ; RPN'ized expression: "74 "
 ; Expanded expression: "74 "
 ; Expression value: 74
Label_2697:

.rdata
Label_2698:
.dw 40 37 100 41 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( stack i + *u 1 + *u , L2698 printf2 ) "
 ; Expanded expression: " stack (@-12) *(4) 8 * + 4 + *(4)  L2698  printf2 ()8 "
 ; (
 ; stack
 addr2reg stack r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -12 r14 r5
 ; 3
 ; <<
 shiftl r5 3 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; 4
 ; +
 add r5 4 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 2698
 addr2reg Label_2698 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_2673
 ; }
 jump Label_2673
Label_2674:
 load32 7 r12
 bne r2 r12 2
 jump Label_2675
 load32 6 r12
 bne r2 r12 2
 jump Label_2676
 load32 61 r12
 bne r2 r12 2
 jump Label_2678
 load32 12 r12
 bne r2 r12 2
 jump Label_2679
 load32 13 r12
 bne r2 r12 2
 jump Label_2680
 load32 81 r12
 bne r2 r12 2
 jump Label_2681
 load32 82 r12
 bne r2 r12 2
 jump Label_2682
 load32 68 r12
 bne r2 r12 2
 jump Label_2683
 load32 69 r12
 bne r2 r12 2
 jump Label_2684
 load32 83 r12
 bne r2 r12 2
 jump Label_2685
 load32 84 r12
 bne r2 r12 2
 jump Label_2686
 load32 65 r12
 bne r2 r12 2
 jump Label_2687
 load32 66 r12
 bne r2 r12 2
 jump Label_2688
 load32 67 r12
 bne r2 r12 2
 jump Label_2689
 load32 64 r12
 bne r2 r12 2
 jump Label_2690
 load32 75 r12
 bne r2 r12 2
 jump Label_2691
 load32 70 r12
 bne r2 r12 2
 jump Label_2692
 load32 71 r12
 bne r2 r12 2
 jump Label_2693
 load32 31 r12
 bne r2 r12 2
 jump Label_2694
 load32 72 r12
 bne r2 r12 2
 jump Label_2695
 load32 73 r12
 bne r2 r12 2
 jump Label_2696
 load32 74 r12
 bne r2 r12 2
 jump Label_2697
Label_2673:
 ; }
Label_2671:
 ; break
 jump Label_2633
 ; }
 jump Label_2633
Label_2634:
 load32 1 r12
 bne r2 r12 2
 jump Label_2635
 load32 2 r12
 bne r2 r12 2
 jump Label_2637
 load32 16 r12
 bne r2 r12 2
 jump Label_2639
 load32 90 r12
 bne r2 r12 2
 jump Label_2644
 load32 89 r12
 bne r2 r12 2
 jump Label_2649
 load32 78 r12
 bne r2 r12 2
 jump Label_2651
 load32 40 r12
 bne r2 r12 2
 jump Label_2656
 load32 44 r12
 bne r2 r12 2
 jump Label_2657
 load32 41 r12
 bne r2 r12 2
 jump Label_2661
 jump Label_2669
Label_2633:

.rdata
Label_2699:
.dw 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2699 printf2 ) "
 ; Expanded expression: " L2699  printf2 ()4 "
 ; (
 ; 2699
 addr2reg Label_2699 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; }
Label_2630:
 ; local ofs
 ; ++p
 read -12 r14 r2
 add r2 1 r2
 write -12 r14 r2
 sub r2 1 r2
 jump Label_2629
Label_2632:

.rdata
Label_2700:
.dw 34 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2700 printf2 ) "
 ; Expanded expression: " L2700  printf2 ()4 "
 ; (
 ; 2700
 addr2reg Label_2700 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "j 0 == "
 ; Expanded expression: "(@-8) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2701
 ; {
 ; loc                 idx : (@-16) : int
 ; RPN'ized expression: "idx sp 1 - = "
 ; Expanded expression: "(@-16) sp *(4) 1 - =(4) "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; 1
 ; -
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "ConstVal *u ( ConstExpr , ExprTypeSynPtr , idx &u exprval ) = "
 ; Expanded expression: "(@24) *(4)  (@20) *(4)  (@16) *(4)  (@-16)  exprval ()12 =(4) "
 ; local ofs
 ; * (read dereference)
 read 24 r14 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read 20 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 16 r14 r5
 ; ,
 ; local ofs
 sub r14 16 r4
 ; ,
 ; exprval
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exprval
 add r13 16 r13
 ; = (write dereference)
 read 0 r13 r11
 add r13 4 r13
 write 0 r11 r2
 ; for
 ; RPN'ized expression: "idx sp 1 - = "
 ; Expanded expression: "(@-16) sp *(4) 1 - =(4) "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; 1
 ; -
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
Label_2703:
 ; RPN'ized expression: "idx 0 >= "
 ; Expanded expression: "(@-16) *(4) 0 >= "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 0
 ; >=
 bges r2 r0 2
 jump Label_2706
 ; RPN'ized expression: "idx --p "
 ; Expanded expression: "(@-16) --p(4) "
 ; if
 ; RPN'ized expression: "stack idx + *u 0 + *u 79 == stack idx + *u 0 + *u 78 == stack idx + *u 1 + *u 0 == && || "
 ; Expanded expression: "stack (@-16) *(4) 8 * + 0 + *(4) 79 == [sh||->2709] stack (@-16) *(4) 8 * + 0 + *(4) 78 == [sh&&->2710] stack (@-16) *(4) 8 * + 4 + *(4) 0 == &&[2710] _Bool ||[2709] "
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 79
 ; ==
 load32 79 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2709
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 78
 ; ==
 load32 78 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2710
 ; stack
 addr2reg stack r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2710:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_2709:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2707
 ; RPN'ized expression: "( 1 , idx del ) "
 ; Expanded expression: " 1  (@-16) *(4)  del ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; ,
 ; del
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump del
 add r13 16 r13
Label_2707:
Label_2704:
 ; local ofs
 ; --p
 read -16 r14 r2
 sub r2 1 r2
 write -16 r14 r2
 add r2 1 r2
 jump Label_2703
Label_2706:
 ; }
 jump Label_2702
Label_2701:
 ; else
 ; if
 ; RPN'ized expression: "ConstExpr *u "
 ; Expanded expression: "(@20) *(4) *(4) "
 ; local ofs
 ; * (read dereference)
 read 20 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2711
 ; {
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13
 ; switch
 ; RPN'ized expression: "SyntaxStack0 ExprTypeSynPtr *u + *u "
 ; Expanded expression: "SyntaxStack0 (@16) *(4) *(4) + *(1) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 16 r14 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_2714
 ; {
 ; case
 ; RPN'ized expression: "18 "
 ; Expanded expression: "18 "
 ; Expression value: 18
Label_2715:
 ; case
 ; RPN'ized expression: "128 "
 ; Expanded expression: "128 "
 ; Expression value: 128
Label_2716:
 ; case
 ; RPN'ized expression: "129 "
 ; Expanded expression: "129 "
 ; Expression value: 129
Label_2717:
 ; case
 ; RPN'ized expression: "100 "
 ; Expanded expression: "100 "
 ; Expression value: 100
Label_2718:
 ; case
 ; RPN'ized expression: "130 "
 ; Expanded expression: "130 "
 ; Expression value: 130
Label_2719:
 ; case
 ; RPN'ized expression: "19 "
 ; Expanded expression: "19 "
 ; Expression value: 19
Label_2720:

.rdata
Label_2721:
.dw 69 120 112 114 101 115 115 105 111 110 32 118 97 108 117 101 58 32 37 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( ConstVal *u truncInt ) , L2721 printf2 ) "
 ; Expanded expression: "  (@24) *(4) *(4)  truncInt ()4  L2721  printf2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read 24 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; ,
 ; truncInt
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; ,
 ; 2721
 sub r13 4 r13
 write 0 r13 r2
 addr2reg Label_2721 r2
 ; ,
 ; printf2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_2713
 ; default
Label_2722:
 ; case
 ; RPN'ized expression: "101 "
 ; Expanded expression: "101 "
 ; Expression value: 101
Label_2723:

.rdata
Label_2724:
.dw 69 120 112 114 101 115 115 105 111 110 32 118 97 108 117 101 58 32 37 117 117 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( ConstVal *u truncUint ) , L2724 printf2 ) "
 ; Expanded expression: "  (@24) *(4) *(4)  truncUint ()4  L2724  printf2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read 24 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; ,
 ; truncUint
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; ,
 ; 2724
 sub r13 4 r13
 write 0 r13 r2
 addr2reg Label_2724 r2
 ; ,
 ; printf2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_2713
 ; }
 jump Label_2713
Label_2714:
 load32 18 r12
 bne r2 r12 2
 jump Label_2715
 load32 128 r12
 bne r2 r12 2
 jump Label_2716
 load32 129 r12
 bne r2 r12 2
 jump Label_2717
 load32 100 r12
 bne r2 r12 2
 jump Label_2718
 load32 130 r12
 bne r2 r12 2
 jump Label_2719
 load32 19 r12
 bne r2 r12 2
 jump Label_2720
 load32 101 r12
 bne r2 r12 2
 jump Label_2723
 jump Label_2722
Label_2713:
 ; }
Label_2711:
Label_2702:
 ; }
Label_2621:
 ; local ofs
 ; ++p
 read -8 r14 r2
 add r2 1 r2
 write -8 r14 r2
 sub r2 1 r2
 jump Label_2620
Label_2623:
 ; }
Label_2618:
 ; RPN'ized expression: "ExprLevel --p "
 ; Expanded expression: "ExprLevel --p(4) "
 ; ExprLevel
 ; --p
 addr2reg ExprLevel r1
 read 0 r1 r2
 sub r2 1 r2
 addr2reg ExprLevel r1
 write 0 r1 r2
 add r2 1 r2
 ; return
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
Label_2599:
 read 4 r14 r15
 read 0 r14 r14
 add r13 28 r13
 jumpr 0 r15

 ; glb puts2 : (
 ; prm     s : * char
 ;     ) int
.code
; .globl puts2
puts2:
 write 0 r13 r4
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     s : (@8) : * char
 ; loc     res : (@-4) : int
 ; if
 ; RPN'ized expression: "OutFile 0 == "
 ; Expanded expression: "OutFile *(4) 0 == "
 ; OutFile
 ; * (read dereference)
 addr2reg OutFile r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2726
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
 jump Label_2725
Label_2726:
 ; if
 ; RPN'ized expression: "s *u 0 == res ( OutFile , s fputs ) = 0 >= || "
 ; Expanded expression: "(@8) *(4) *(-1) 0 == [sh||->2730] (@-4)  OutFile *(4)  (@8) *(4)  fputs ()8 =(4) 0 >= ||[2730] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2730
 ; (
 ; OutFile
 ; * (read dereference)
 addr2reg OutFile r1
 read 0 r1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; fputs
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump fputs
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit || target
Label_2730:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2728
 ; {
 ; RPN'ized expression: "res ( OutFile , 10 fputc ) = "
 ; Expanded expression: "(@-4)  OutFile *(4)  10  fputc ()8 =(4) "
 ; (
 ; OutFile
 ; * (read dereference)
 addr2reg OutFile r1
 read 0 r1 r5
 ; ,
 ; 10
 load32 10 r4
 ; ,
 ; fputc
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump fputc
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; }
Label_2728:
 ; return
 ; RPN'ized expression: "res "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
Label_2725:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb printf2 : (
 ; prm     format : * char
 ; prm     ...
 ;     ) int
.code
; .globl printf2
printf2:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13         16 r13
 write          8 r13 r14
 add r13          8 r14
   write 4 r14 r15
 ; loc     format : (@8) : * char
 ; loc     res : (@-4) : int
 ; loc     vl : (@-8) : * void
 ; RPN'ized expression: "vl format &u 1 + = "
 ; Expanded expression: "(@-8) (@12) =(4) "
 ; local ofs
 add r14 12 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "OutFile 0 == "
 ; Expanded expression: "OutFile *(4) 0 == "
 ; OutFile
 ; * (read dereference)
 addr2reg OutFile r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2732
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
 jump Label_2731
Label_2732:
 ; {
 ; RPN'ized expression: "res ( vl , format , OutFile vfprintf ) = "
 ; Expanded expression: "(@-4)  (@-8) *(4)  (@8) *(4)  OutFile *(4)  vfprintf ()12 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; OutFile
 ; * (read dereference)
 addr2reg OutFile r1
 read 0 r1 r4
 ; ,
 ; vfprintf
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump vfprintf
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; }
 ; return
 ; RPN'ized expression: "res "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
Label_2731:
 read 4 r14 r15
 read 0 r14 r14
 add r13 16 r13
 jumpr 0 r15

 ; glb error : (
 ; prm     format : * char
 ; prm     ...
 ;     ) void
.code
; .globl error
error:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13         20 r13
 write         12 r13 r14
 add r13         12 r14
   write 4 r14 r15
 ; loc     format : (@8) : * char
 ; loc     i : (@-4) : int
 ; loc     fidx : (@-8) : int
 ; RPN'ized expression: "fidx FileCnt 1 - FileCnt 0 == + = "
 ; Expanded expression: "(@-8) FileCnt *(4) 1 - FileCnt *(4) 0 == + =(4) "
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r2
 ; 1
 ; -
 sub r2 1 r2
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r8
 ; 0
 ; ==
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; loc     vl : (@-12) : * void
 ; RPN'ized expression: "vl format &u 1 + = "
 ; Expanded expression: "(@-12) (@12) =(4) "
 ; local ofs
 add r14 12 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_2735:
 ; RPN'ized expression: "i FileCnt < "
 ; Expanded expression: "(@-4) *(4) FileCnt *(4) < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_2738
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; if
 ; RPN'ized expression: "Files i + *u "
 ; Expanded expression: "Files (@-4) *(4) 4 * + *(4) "
 ; Files
 addr2reg Files r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2739
 ; RPN'ized expression: "( Files i + *u fclose ) "
 ; Expanded expression: " Files (@-4) *(4) 4 * + *(4)  fclose ()4 "
 ; (
 ; Files
 addr2reg Files r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; fclose
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump fclose
 add r13 16 r13
Label_2739:
Label_2736:
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_2735
Label_2738:

.rdata
Label_2741:
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2741 puts2 ) "
 ; Expanded expression: " L2741  puts2 ()4 "
 ; (
 ; 2741
 addr2reg Label_2741 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
 ; RPN'ized expression: "( DumpSynDecls ) "
 ; Expanded expression: " DumpSynDecls ()0 "
 ; (
 ; DumpSynDecls
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DumpSynDecls
 add r13 16 r13
 ; RPN'ized expression: "( DumpMacroTable ) "
 ; Expanded expression: " DumpMacroTable ()0 "
 ; (
 ; DumpMacroTable
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DumpMacroTable
 add r13 16 r13
 ; RPN'ized expression: "( DumpIdentTable ) "
 ; Expanded expression: " DumpIdentTable ()0 "
 ; (
 ; DumpIdentTable
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DumpIdentTable
 add r13 16 r13
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_2742:
.dw 67 111 109 112 105 108 97 116 105 111 110 32 102 97 105 108 101 100 46 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2742 printf2 ) "
 ; Expanded expression: " L2742  printf2 ()4 "
 ; (
 ; 2742
 addr2reg Label_2742 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "OutFile "
 ; Expanded expression: "OutFile *(4) "
 ; OutFile
 ; * (read dereference)
 addr2reg OutFile r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2743
 ; RPN'ized expression: "( OutFile fclose ) "
 ; Expanded expression: " OutFile *(4)  fclose ()4 "
 ; (
 ; OutFile
 ; * (read dereference)
 addr2reg OutFile r1
 read 0 r1 r4
 ; ,
 ; fclose
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump fclose
 add r13 16 r13
Label_2743:

.rdata
Label_2745:
.dw 69 114 114 111 114 32 105 110 32 34 37 115 34 32 40 37 100 58 37 100 41 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( LinePos , LineNo , FileNames fidx + *u , L2745 printf ) "
 ; Expanded expression: " LinePos *(4)  LineNo *(4)  FileNames (@-8) *(4) 96 * +  L2745  printf ()16 "
 ; (
 ; LinePos
 ; * (read dereference)
 addr2reg LinePos r1
 read 0 r1 r7
 ; ,
 ; LineNo
 ; * (read dereference)
 addr2reg LineNo r1
 read 0 r1 r6
 ; ,
 ; FileNames
 addr2reg FileNames r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -8 r14 r5
 ; 96
 sub r13 4 r13
 write 0 r13 r5
 load32 96 r5
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r5 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; 2745
 addr2reg Label_2745 r4
 ; ,
 ; printf
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf
 add r13 16 r13
 ; {
 ; RPN'ized expression: "( vl , format vprintf ) "
 ; Expanded expression: " (@-12) *(4)  (@8) *(4)  vprintf ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; vprintf
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump vprintf
 add r13 16 r13
 ; }
 ; RPN'ized expression: "( 1 exit ) "
 ; Expanded expression: " 1  exit ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; exit
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump exit
 add r13 16 r13
Label_2734:
 read 4 r14 r15
 read 0 r14 r14
 add r13 20 r13
 jumpr 0 r15

 ; glb warning : (
 ; prm     format : * char
 ; prm     ...
 ;     ) void
.code
; .globl warning
warning:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13         16 r13
 write          8 r13 r14
 add r13          8 r14
   write 4 r14 r15
 ; loc     format : (@8) : * char
 ; loc     fidx : (@-4) : int
 ; RPN'ized expression: "fidx FileCnt 1 - FileCnt 0 == + = "
 ; Expanded expression: "(@-4) FileCnt *(4) 1 - FileCnt *(4) 0 == + =(4) "
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r2
 ; 1
 ; -
 sub r2 1 r2
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r8
 ; 0
 ; ==
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc     vl : (@-8) : * void
 ; RPN'ized expression: "vl format &u 1 + = "
 ; Expanded expression: "(@-8) (@12) =(4) "
 ; local ofs
 add r14 12 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "warnCnt ++p "
 ; Expanded expression: "warnCnt ++p(4) "
 ; warnCnt
 ; ++p
 addr2reg warnCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg warnCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; if
 ; RPN'ized expression: "warnings 0 == "
 ; Expanded expression: "warnings *(4) 0 == "
 ; warnings
 ; * (read dereference)
 addr2reg warnings r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2747
 ; return
 jump Label_2746
Label_2747:

.rdata
Label_2749:
.dw 87 97 114 110 105 110 103 32 105 110 32 34 37 115 34 32 40 37 100 58 37 100 41 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( LinePos , LineNo , FileNames fidx + *u , L2749 printf ) "
 ; Expanded expression: " LinePos *(4)  LineNo *(4)  FileNames (@-4) *(4) 96 * +  L2749  printf ()16 "
 ; (
 ; LinePos
 ; * (read dereference)
 addr2reg LinePos r1
 read 0 r1 r7
 ; ,
 ; LineNo
 ; * (read dereference)
 addr2reg LineNo r1
 read 0 r1 r6
 ; ,
 ; FileNames
 addr2reg FileNames r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -4 r14 r5
 ; 96
 sub r13 4 r13
 write 0 r13 r5
 load32 96 r5
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r5 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; 2749
 addr2reg Label_2749 r4
 ; ,
 ; printf
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf
 add r13 16 r13
 ; {
 ; RPN'ized expression: "( vl , format vprintf ) "
 ; Expanded expression: " (@-8) *(4)  (@8) *(4)  vprintf ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; vprintf
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump vprintf
 add r13 16 r13
 ; }
Label_2746:
 read 4 r14 r15
 read 0 r14 r14
 add r13 16 r13
 jumpr 0 r15

 ; glb errorFile : (
 ; prm     n : * char
 ;     ) void
.code
; .globl errorFile
errorFile:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     n : (@8) : * char

.rdata
Label_2751:
.dw 85 110 97 98 108 101 32 116 111 32 111 112 101 110 44 32 114 101 97 100 44 32 119 114 105 116 101 32 111 114 32 99 108 111 115 101 32 102 105 108 101 32 34 37 115 34 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( n , L2751 error ) "
 ; Expanded expression: " (@8) *(4)  L2751  error ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 2751
 addr2reg Label_2751 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2750:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb errorFileName : (void) void
.code
; .globl errorFileName
errorFileName:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15

.rdata
Label_2753:
.dw 73 110 118 97 108 105 100 32 111 114 32 116 111 111 32 108 111 110 103 32 102 105 108 101 32 110 97 109 101 32 111 114 32 112 97 116 104 32 110 97 109 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2753 error ) "
 ; Expanded expression: " L2753  error ()4 "
 ; (
 ; 2753
 addr2reg Label_2753 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2752:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb errorInternal : (
 ; prm     n : int
 ;     ) void
.code
; .globl errorInternal
errorInternal:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     n : (@8) : int

.rdata
Label_2755:
.dw 37 100 32 40 105 110 116 101 114 110 97 108 41 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( n , L2755 error ) "
 ; Expanded expression: " (@8) *(4)  L2755  error ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 2755
 addr2reg Label_2755 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2754:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb errorChrStr : (void) void
.code
; .globl errorChrStr
errorChrStr:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15

.rdata
Label_2757:
.dw 73 110 118 97 108 105 100 32 111 114 32 117 110 115 117 112 112 111 114 116 101 100 32 99 104 97 114 97 99 116 101 114 32 99 111 110 115 116 97 110 116 32 111 114 32 115 116 114 105 110 103 32 108 105 116 101 114 97 108 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2757 error ) "
 ; Expanded expression: " L2757  error ()4 "
 ; (
 ; 2757
 addr2reg Label_2757 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2756:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb errorStrLen : (void) void
.code
; .globl errorStrLen
errorStrLen:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15

.rdata
Label_2759:
.dw 83 116 114 105 110 103 32 108 105 116 101 114 97 108 32 116 111 111 32 108 111 110 103 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2759 error ) "
 ; Expanded expression: " L2759  error ()4 "
 ; (
 ; 2759
 addr2reg Label_2759 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2758:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb errorUnexpectedToken : (
 ; prm     tok : int
 ;     ) void
.code
; .globl errorUnexpectedToken
errorUnexpectedToken:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     tok : (@8) : int

.rdata
Label_2761:
.dw 85 110 101 120 112 101 99 116 101 100 32 116 111 107 101 110 32 37 115 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( tok 16 == ( tok GetTokenName ) TokenIdentName ? , L2761 error ) "
 ; Expanded expression: " (@8) *(4) 16 == [sh||->2762]  (@8) *(4)  GetTokenName ()4 goto &&[2762] TokenIdentName &&[2763]  L2761  error ()8 "
 ; (
 sub r13 8 r13
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2762
 ; (
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; GetTokenName
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump GetTokenName
 add r13 16 r13
 ; sh-circ-goto goto
 jump Label_2763
 ; short-circuit && target
Label_2762:
 ; TokenIdentName
 addr2reg TokenIdentName r2
 ; short-circuit && target
Label_2763:
 ; ,
 ; 2761
 sub r13 4 r13
 write 0 r13 r2
 addr2reg Label_2761 r2
 ; ,
 ; error
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2760:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb errorDirective : (void) void
.code
; .globl errorDirective
errorDirective:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15

.rdata
Label_2765:
.dw 73 110 118 97 108 105 100 32 111 114 32 117 110 115 117 112 112 111 114 116 101 100 32 112 114 101 112 114 111 99 101 115 115 111 114 32 100 105 114 101 99 116 105 118 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2765 error ) "
 ; Expanded expression: " L2765  error ()4 "
 ; (
 ; 2765
 addr2reg Label_2765 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2764:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb errorCtrlOutOfScope : (void) void
.code
; .globl errorCtrlOutOfScope
errorCtrlOutOfScope:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15

.rdata
Label_2767:
.dw 98 114 101 97 107 44 32 99 111 110 116 105 110 117 101 44 32 99 97 115 101 32 111 114 32 100 101 102 97 117 108 116 32 105 110 32 119 114 111 110 103 32 115 99 111 112 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2767 error ) "
 ; Expanded expression: " L2767  error ()4 "
 ; (
 ; 2767
 addr2reg Label_2767 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2766:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb errorDecl : (void) void
.code
; .globl errorDecl
errorDecl:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15

.rdata
Label_2769:
.dw 73 110 118 97 108 105 100 32 111 114 32 117 110 115 117 112 112 111 114 116 101 100 32 100 101 99 108 97 114 97 116 105 111 110 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2769 error ) "
 ; Expanded expression: " L2769  error ()4 "
 ; (
 ; 2769
 addr2reg Label_2769 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2768:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb errorTagRedef : (
 ; prm     ident : int
 ;     ) void
.code
; .globl errorTagRedef
errorTagRedef:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     ident : (@8) : int

.rdata
Label_2771:
.dw 82 101 100 101 102 105 110 105 116 105 111 110 32 111 102 32 116 121 112 101 32 116 97 103 103 101 100 32 39 37 115 39 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( IdentTable ident + , L2771 error ) "
 ; Expanded expression: " IdentTable (@8) *(4) +  L2771  error ()8 "
 ; (
 ; IdentTable
 addr2reg IdentTable r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read 8 r14 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; 2771
 addr2reg Label_2771 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2770:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb errorVarSize : (void) void
.code
; .globl errorVarSize
errorVarSize:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15

.rdata
Label_2773:
.dw 86 97 114 105 97 98 108 101 40 115 41 32 116 97 107 101 40 115 41 32 116 111 111 32 109 117 99 104 32 115 112 97 99 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2773 error ) "
 ; Expanded expression: " L2773  error ()4 "
 ; (
 ; 2773
 addr2reg Label_2773 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2772:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb errorInit : (void) void
.code
; .globl errorInit
errorInit:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15

.rdata
Label_2775:
.dw 73 110 118 97 108 105 100 32 111 114 32 117 110 115 117 112 112 111 114 116 101 100 32 105 110 105 116 105 97 108 105 122 97 116 105 111 110 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2775 error ) "
 ; Expanded expression: " L2775  error ()4 "
 ; (
 ; 2775
 addr2reg Label_2775 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2774:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb errorUnexpectedVoid : (void) void
.code
; .globl errorUnexpectedVoid
errorUnexpectedVoid:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15

.rdata
Label_2777:
.dw 85 110 101 120 112 101 99 116 101 100 32 100 101 99 108 97 114 97 116 105 111 110 32 111 114 32 101 120 112 114 101 115 115 105 111 110 32 111 102 32 116 121 112 101 32 118 111 105 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2777 error ) "
 ; Expanded expression: " L2777  error ()4 "
 ; (
 ; 2777
 addr2reg Label_2777 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2776:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb errorOpType : (void) void
.code
; .globl errorOpType
errorOpType:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15

.rdata
Label_2779:
.dw 85 110 101 120 112 101 99 116 101 100 32 111 112 101 114 97 110 100 32 116 121 112 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2779 error ) "
 ; Expanded expression: " L2779  error ()4 "
 ; (
 ; 2779
 addr2reg Label_2779 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2778:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb errorNotLvalue : (void) void
.code
; .globl errorNotLvalue
errorNotLvalue:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15

.rdata
Label_2781:
.dw 108 118 97 108 117 101 32 101 120 112 101 99 116 101 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2781 error ) "
 ; Expanded expression: " L2781  error ()4 "
 ; (
 ; 2781
 addr2reg Label_2781 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2780:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb errorNotConst : (void) void
.code
; .globl errorNotConst
errorNotConst:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15

.rdata
Label_2783:
.dw 78 111 110 45 99 111 110 115 116 97 110 116 32 101 120 112 114 101 115 115 105 111 110 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2783 error ) "
 ; Expanded expression: " L2783  error ()4 "
 ; (
 ; 2783
 addr2reg Label_2783 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2782:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb errorLongExpr : (void) void
.code
; .globl errorLongExpr
errorLongExpr:
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15

.rdata
Label_2785:
.dw 69 120 112 114 101 115 115 105 111 110 32 116 111 111 32 108 111 110 103 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2785 error ) "
 ; Expanded expression: " L2785  error ()4 "
 ; (
 ; 2785
 addr2reg Label_2785 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2784:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb tsd : [0u] int
.data
; .align 2
; .globl tsd
tsd:
 ; =
 ; RPN'ized expression: "17 "
 ; Expanded expression: "17 "
 ; Expression value: 17
 .dw 17 17 17 17
 ; RPN'ized expression: "18 "
 ; Expanded expression: "18 "
 ; Expression value: 18
 .dw 18 18 18 18
 ; RPN'ized expression: "19 "
 ; Expanded expression: "19 "
 ; Expression value: 19
 .dw 19 19 19 19
 ; RPN'ized expression: "102 "
 ; Expanded expression: "102 "
 ; Expression value: 102
 .dw 102 102 102 102
 ; RPN'ized expression: "101 "
 ; Expanded expression: "101 "
 ; Expression value: 101
 .dw 101 101 101 101
 ; RPN'ized expression: "100 "
 ; Expanded expression: "100 "
 ; Expression value: 100
 .dw 100 100 100 100
 ; RPN'ized expression: "113 "
 ; Expanded expression: "113 "
 ; Expression value: 113
 .dw 113 113 113 113
 ; RPN'ized expression: "114 "
 ; Expanded expression: "114 "
 ; Expression value: 114
 .dw 114 114 114 114

 ; glb TokenStartsDeclaration : (
 ; prm     t : int
 ; prm     params : int
 ;     ) int
.code
; .globl TokenStartsDeclaration
TokenStartsDeclaration:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     t : (@8) : int
 ; loc     params : (@12) : int
 ; loc     i : (@-4) : unsigned
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_2787:
 ; RPN'ized expression: "i ( tsd 0 + *u sizeof , tsd sizeof division ) < "
 ; Expanded expression: "(@-4) *(4)  4u  32u  division ()8 <u "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; 4
 load32 4 r5
 ; ,
 ; 32
 load32 32 r4
 ; ,
 ; division
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump division
 add r13 16 r13
 ; <u
 read 0 r13 r11
 add r13 4 r13
 bges r11 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_2790
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; if
 ; RPN'ized expression: "tsd i + *u t == "
 ; Expanded expression: "tsd (@-4) *(4) 4 * + *(4) (@8) *(4) == "
 ; tsd
 addr2reg tsd r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; ==
 beq r2 r8 2
 jump Label_2791
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_2786
Label_2791:
Label_2788:
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_2787
Label_2790:
 ; return
 ; RPN'ized expression: "SizeOfWord 2 != t 99 == && params 0 == t 108 == t 106 == || && || "
 ; Expanded expression: "SizeOfWord *(4) 2 != [sh&&->2796] (@8) *(4) 99 == &&[2796] _Bool [sh||->2793] (@12) *(4) 0 == [sh&&->2794] (@8) *(4) 108 == [sh||->2795] (@8) *(4) 106 == ||[2795] _Bool &&[2794] _Bool ||[2793] "
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; 2
 ; !=
 load32 2 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2796
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 99
 ; ==
 load32 99 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2796:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2793
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2794
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 108
 ; ==
 load32 108 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2795
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 106
 ; ==
 load32 106 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2795:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_2794:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_2793:
Label_2786:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb PushSyntax2 : (
 ; prm     t : int
 ; prm     v : int
 ;     ) void
.code
; .globl PushSyntax2
PushSyntax2:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     t : (@8) : int
 ; loc     v : (@12) : int
 ; if
 ; RPN'ized expression: "SyntaxStackCnt 2048 1024 + >= "
 ; Expanded expression: "SyntaxStackCnt *(4) 3072 >= "
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r2
 ; 3072
 ; >=
 load32 3072 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_2798

.rdata
Label_2800:
.dw 83 121 109 98 111 108 32 116 97 98 108 101 32 101 120 104 97 117 115 116 101 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2800 error ) "
 ; Expanded expression: " L2800  error ()4 "
 ; (
 ; 2800
 addr2reg Label_2800 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2798:
 ; RPN'ized expression: "SyntaxStack0 SyntaxStackCnt + *u t = "
 ; Expanded expression: "SyntaxStack0 SyntaxStackCnt *(4) + (@8) *(4) =(1) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 and r2 255 r2
 ; RPN'ized expression: "SyntaxStack1 SyntaxStackCnt ++p + *u v = "
 ; Expanded expression: "SyntaxStack1 SyntaxStackCnt ++p(4) 4 * + (@12) *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; SyntaxStackCnt
 ; ++p
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 add r8 1 r8
 addr2reg SyntaxStackCnt r1
 write 0 r1 r8
 sub r8 1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_2797:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb PushSyntax : (
 ; prm     t : int
 ;     ) void
.code
; .globl PushSyntax
PushSyntax:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     t : (@8) : int
 ; RPN'ized expression: "( 0 , t PushSyntax2 ) "
 ; Expanded expression: " 0  (@8) *(4)  PushSyntax2 ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; PushSyntax2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
Label_2801:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb InsertSyntax2 : (
 ; prm     pos : int
 ; prm     t : int
 ; prm     v : int
 ;     ) void
.code
; .globl InsertSyntax2
InsertSyntax2:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     pos : (@8) : int
 ; loc     t : (@12) : int
 ; loc     v : (@16) : int
 ; if
 ; RPN'ized expression: "SyntaxStackCnt 2048 1024 + >= "
 ; Expanded expression: "SyntaxStackCnt *(4) 3072 >= "
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r2
 ; 3072
 ; >=
 load32 3072 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_2803

.rdata
Label_2805:
.dw 83 121 109 98 111 108 32 116 97 98 108 101 32 101 120 104 97 117 115 116 101 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2805 error ) "
 ; Expanded expression: " L2805  error ()4 "
 ; (
 ; 2805
 addr2reg Label_2805 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_2803:
 ; RPN'ized expression: "( SyntaxStack0 0 + *u sizeof SyntaxStackCnt pos - * , SyntaxStack0 pos + *u &u , SyntaxStack0 pos 1 + + *u &u memmove ) "
 ; Expanded expression: " 1u SyntaxStackCnt *(4) (@8) *(4) - *  SyntaxStack0 (@8) *(4) +  SyntaxStack0 (@8) *(4) 1 + +  memmove ()12 "
 ; (
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read 8 r14 r6
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r6 r6
 ; 0
 ; <<
 shiftl r6 0 r6
 ; ,
 ; SyntaxStack0
 addr2reg SyntaxStack0 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read 8 r14 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; SyntaxStack0
 addr2reg SyntaxStack0 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read 8 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; memmove
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memmove
 add r13 16 r13
 ; RPN'ized expression: "( SyntaxStack1 0 + *u sizeof SyntaxStackCnt pos - * , SyntaxStack1 pos + *u &u , SyntaxStack1 pos 1 + + *u &u memmove ) "
 ; Expanded expression: " 4u SyntaxStackCnt *(4) (@8) *(4) - *  SyntaxStack1 (@8) *(4) 4 * +  SyntaxStack1 (@8) *(4) 1 + 4 * +  memmove ()12 "
 ; (
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read 8 r14 r6
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r6 r6
 ; 2
 ; <<
 shiftl r6 2 r6
 ; ,
 ; SyntaxStack1
 addr2reg SyntaxStack1 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read 8 r14 r5
 ; 2
 ; <<
 shiftl r5 2 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; SyntaxStack1
 addr2reg SyntaxStack1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read 8 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; memmove
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memmove
 add r13 16 r13
 ; RPN'ized expression: "SyntaxStack0 pos + *u t = "
 ; Expanded expression: "SyntaxStack0 (@8) *(4) + (@12) *(4) =(1) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 and r2 255 r2
 ; RPN'ized expression: "SyntaxStack1 pos + *u v = "
 ; Expanded expression: "SyntaxStack1 (@8) *(4) 4 * + (@16) *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read 16 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "SyntaxStackCnt ++p "
 ; Expanded expression: "SyntaxStackCnt ++p(4) "
 ; SyntaxStackCnt
 ; ++p
 addr2reg SyntaxStackCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg SyntaxStackCnt r1
 write 0 r1 r2
 sub r2 1 r2
Label_2802:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb InsertSyntax : (
 ; prm     pos : int
 ; prm     t : int
 ;     ) void
.code
; .globl InsertSyntax
InsertSyntax:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     pos : (@8) : int
 ; loc     t : (@12) : int
 ; RPN'ized expression: "( 0 , t , pos InsertSyntax2 ) "
 ; Expanded expression: " 0  (@12) *(4)  (@8) *(4)  InsertSyntax2 ()12 "
 ; (
 ; 0
 load32 0 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; InsertSyntax2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump InsertSyntax2
 add r13 16 r13
Label_2806:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb DeleteSyntax : (
 ; prm     pos : int
 ; prm     cnt : int
 ;     ) void
.code
; .globl DeleteSyntax
DeleteSyntax:
 write 0 r13 r4
 write 4 r13 r5
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     pos : (@8) : int
 ; loc     cnt : (@12) : int
 ; RPN'ized expression: "( SyntaxStack0 0 + *u sizeof SyntaxStackCnt pos cnt + - * , SyntaxStack0 pos cnt + + *u &u , SyntaxStack0 pos + *u &u memmove ) "
 ; Expanded expression: " 1u SyntaxStackCnt *(4) (@8) *(4) (@12) *(4) + - *  SyntaxStack0 (@8) *(4) (@12) *(4) + +  SyntaxStack0 (@8) *(4) +  memmove ()12 "
 ; (
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read 8 r14 r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read 12 r14 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r6 r6
 ; 0
 ; <<
 shiftl r6 0 r6
 ; ,
 ; SyntaxStack0
 addr2reg SyntaxStack0 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read 8 r14 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read 12 r14 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; SyntaxStack0
 addr2reg SyntaxStack0 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read 8 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; memmove
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memmove
 add r13 16 r13
 ; RPN'ized expression: "( SyntaxStack1 0 + *u sizeof SyntaxStackCnt pos cnt + - * , SyntaxStack1 pos cnt + + *u &u , SyntaxStack1 pos + *u &u memmove ) "
 ; Expanded expression: " 4u SyntaxStackCnt *(4) (@8) *(4) (@12) *(4) + - *  SyntaxStack1 (@8) *(4) (@12) *(4) + 4 * +  SyntaxStack1 (@8) *(4) 4 * +  memmove ()12 "
 ; (
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read 8 r14 r6
 ; local ofs
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 read 12 r14 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r6 r6
 ; 2
 ; <<
 shiftl r6 2 r6
 ; ,
 ; SyntaxStack1
 addr2reg SyntaxStack1 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read 8 r14 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read 12 r14 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; 2
 ; <<
 shiftl r5 2 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; SyntaxStack1
 addr2reg SyntaxStack1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read 8 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; memmove
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memmove
 add r13 16 r13
 ; RPN'ized expression: "SyntaxStackCnt cnt -= "
 ; Expanded expression: "SyntaxStackCnt (@12) *(4) -=(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; SyntaxStackCnt
 ; -=
 addr2reg SyntaxStackCnt r1
 read 0 r1 r12
 sub r12 r2 r2
 addr2reg SyntaxStackCnt r1
 write 0 r1 r2
Label_2807:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb FindSymbol : (
 ; prm     s : * char
 ;     ) int
.code
; .globl FindSymbol
FindSymbol:
 write 0 r13 r4
 sub r13         20 r13
 write         12 r13 r14
 add r13         12 r14
   write 4 r14 r15
 ; loc     s : (@8) : * char
 ; loc     i : (@-4) : int
 ; for
 ; RPN'ized expression: "i SyntaxStackCnt 1 - = "
 ; Expanded expression: "(@-4) SyntaxStackCnt *(4) 1 - =(4) "
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r2
 ; 1
 ; -
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
Label_2809:
 ; RPN'ized expression: "i 0 >= "
 ; Expanded expression: "(@-4) *(4) 0 >= "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; >=
 bges r2 r0 2
 jump Label_2812
 ; RPN'ized expression: "i --p "
 ; Expanded expression: "(@-4) --p(4) "
 ; {
 ; loc         t : (@-8) : int
 ; RPN'ized expression: "t SyntaxStack0 i + *u = "
 ; Expanded expression: "(@-8) SyntaxStack0 (@-4) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "t 16 == ( s , IdentTable SyntaxStack1 i + *u + strcmp ) 0 == && "
 ; Expanded expression: "(@-8) *(4) 16 == [sh&&->2815]  (@8) *(4)  IdentTable SyntaxStack1 (@-4) *(4) 4 * + *(4) +  strcmp ()8 0 == &&[2815] "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2815
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; IdentTable
 addr2reg IdentTable r4
 ; SyntaxStack1
 sub r13 4 r13
 write 0 r13 r4
 addr2reg SyntaxStack1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2815:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2813
 ; {
 ; return
 ; RPN'ized expression: "i "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 jump Label_2808
 ; }
Label_2813:
 ; if
 ; RPN'ized expression: "t 41 == "
 ; Expanded expression: "(@-8) *(4) 41 == "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2816
 ; {
 ; loc             c : (@-12) : int
 ; RPN'ized expression: "c 1 -u = "
 ; Expanded expression: "(@-12) -1 =(4) "
 ; -1
 load32 -1 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; while
 ; RPN'ized expression: "c "
 ; Expanded expression: "(@-12) *(4) "
Label_2818:
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2819
 ; {
 ; RPN'ized expression: "t SyntaxStack0 i -- + *u = "
 ; Expanded expression: "(@-8) SyntaxStack0 (@-4) --(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; --
 read -4 r14 r8
 sub r8 1 r8
 write -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "c t 40 == t 41 == - += "
 ; Expanded expression: "(@-12) (@-8) *(4) 40 == (@-8) *(4) 41 == - +=(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 41
 ; ==
 load32 41 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; +=
 read -12 r14 r12
 add r12 r2 r2
 write -12 r14 r2
 ; }
 jump Label_2818
Label_2819:
 ; }
Label_2816:
 ; }
Label_2810:
 ; local ofs
 ; --p
 read -4 r14 r2
 sub r2 1 r2
 write -4 r14 r2
 add r2 1 r2
 jump Label_2809
Label_2812:
 ; return
 ; RPN'ized expression: "1 -u "
 ; Expanded expression: "-1 "
 ; Expression value: -1
 ; -1
 load32 -1 r2
Label_2808:
 read 4 r14 r15
 read 0 r14 r14
 add r13 20 r13
 jumpr 0 r15

 ; glb SymType : (
 ; prm     SynPtr : int
 ;     ) int
.code
; .globl SymType
SymType:
 write 0 r13 r4
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
 ; write 4 r14 r15
 ; loc     SynPtr : (@8) : int
 ; loc     local : (@-4) : int
 ; RPN'ized expression: "local 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
 ; if
 ; RPN'ized expression: "SyntaxStack0 SynPtr + *u 16 == "
 ; Expanded expression: "SyntaxStack0 (@8) *(4) + *(1) 16 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2821
 ; RPN'ized expression: "SynPtr ++p "
 ; Expanded expression: "(@8) ++p(4) "
 ; local ofs
 ; ++p
 read 8 r14 r2
 add r2 1 r2
 write 8 r14 r2
 sub r2 1 r2
Label_2821:
 ; if
 ; RPN'ized expression: "local SyntaxStack0 SynPtr + *u 89 == = 0 != "
 ; Expanded expression: "(@-4) SyntaxStack0 (@8) *(4) + *(1) 89 == =(4) 0 != "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 89
 ; ==
 load32 89 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; 0
 ; !=
 bne r2 r0 2
 jump Label_2823
 ; RPN'ized expression: "SynPtr ++p "
 ; Expanded expression: "(@8) ++p(4) "
 ; local ofs
 ; ++p
 read 8 r14 r2
 add r2 1 r2
 write 8 r14 r2
 sub r2 1 r2
Label_2823:
 ; switch
 ; RPN'ized expression: "SyntaxStack0 SynPtr + *u "
 ; Expanded expression: "SyntaxStack0 (@8) *(4) + *(1) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_2826
 ; {
 ; case
 ; RPN'ized expression: "40 "
 ; Expanded expression: "40 "
 ; Expression value: 40
Label_2827:
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_2820
 ; case
 ; RPN'ized expression: "91 "
 ; Expanded expression: "91 "
 ; Expression value: 91
Label_2828:
 ; if
 ; RPN'ized expression: "local "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2829
 ; return
 ; RPN'ized expression: "5 "
 ; Expanded expression: "5 "
 ; Expression value: 5
 ; 5
 load32 5 r2
 jump Label_2820
Label_2829:
 ; return
 ; RPN'ized expression: "3 "
 ; Expanded expression: "3 "
 ; Expression value: 3
 ; 3
 load32 3 r2
 jump Label_2820
 ; default
Label_2831:
 ; if
 ; RPN'ized expression: "local "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2832
 ; return
 ; RPN'ized expression: "4 "
 ; Expanded expression: "4 "
 ; Expression value: 4
 ; 4
 load32 4 r2
 jump Label_2820
Label_2832:
 ; return
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; 2
 load32 2 r2
 jump Label_2820
 ; }
 jump Label_2825
Label_2826:
 load32 40 r12
 bne r2 r12 2
 jump Label_2827
 load32 91 r12
 bne r2 r12 2
 jump Label_2828
 jump Label_2831
Label_2825:
Label_2820:
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb FindTaggedDecl : (
 ; prm     s : * char
 ; prm     start : int
 ; prm     CurScope : * int
 ;     ) int
.code
; .globl FindTaggedDecl
FindTaggedDecl:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13         20 r13
 write         12 r13 r14
 add r13         12 r14
   write 4 r14 r15
 ; loc     s : (@8) : * char
 ; loc     start : (@12) : int
 ; loc     CurScope : (@16) : * int
 ; loc     i : (@-4) : int
 ; RPN'ized expression: "CurScope *u 1 = "
 ; Expanded expression: "(@16) *(4) 1 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 1
 load32 1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; for
 ; RPN'ized expression: "i start = "
 ; Expanded expression: "(@-4) (@12) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
Label_2835:
 ; RPN'ized expression: "i 0 >= "
 ; Expanded expression: "(@-4) *(4) 0 >= "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; >=
 bges r2 r0 2
 jump Label_2838
 ; RPN'ized expression: "i --p "
 ; Expanded expression: "(@-4) --p(4) "
 ; {
 ; loc         t : (@-8) : int
 ; RPN'ized expression: "t SyntaxStack0 i + *u = "
 ; Expanded expression: "(@-8) SyntaxStack0 (@-4) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "t 145 == ( s , IdentTable SyntaxStack1 i + *u + strcmp ) 0 == && "
 ; Expanded expression: "(@-8) *(4) 145 == [sh&&->2841]  (@8) *(4)  IdentTable SyntaxStack1 (@-4) *(4) 4 * + *(4) +  strcmp ()8 0 == &&[2841] "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 145
 ; ==
 load32 145 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2841
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; IdentTable
 addr2reg IdentTable r4
 ; SyntaxStack1
 sub r13 4 r13
 write 0 r13 r4
 addr2reg SyntaxStack1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2841:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2839
 ; {
 ; return
 ; RPN'ized expression: "i 1 - "
 ; Expanded expression: "(@-4) *(4) 1 - "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; -
 sub r2 1 r2
 jump Label_2834
 ; }
 jump Label_2840
Label_2839:
 ; else
 ; if
 ; RPN'ized expression: "t 41 == "
 ; Expanded expression: "(@-8) *(4) 41 == "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2842
 ; {
 ; loc             c : (@-12) : int
 ; RPN'ized expression: "c 1 -u = "
 ; Expanded expression: "(@-12) -1 =(4) "
 ; -1
 load32 -1 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; while
 ; RPN'ized expression: "c "
 ; Expanded expression: "(@-12) *(4) "
Label_2844:
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2845
 ; {
 ; RPN'ized expression: "t SyntaxStack0 i -- + *u = "
 ; Expanded expression: "(@-8) SyntaxStack0 (@-4) --(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; --
 read -4 r14 r8
 sub r8 1 r8
 write -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "c t 40 == t 41 == - += "
 ; Expanded expression: "(@-12) (@-8) *(4) 40 == (@-8) *(4) 41 == - +=(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 41
 ; ==
 load32 41 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; +=
 read -12 r14 r12
 add r12 r2 r2
 write -12 r14 r2
 ; }
 jump Label_2844
Label_2845:
 ; }
 jump Label_2843
Label_2842:
 ; else
 ; if
 ; RPN'ized expression: "t 35 == "
 ; Expanded expression: "(@-8) *(4) 35 == "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 35
 ; ==
 load32 35 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2846
 ; {
 ; RPN'ized expression: "CurScope *u 0 = "
 ; Expanded expression: "(@16) *(4) 0 =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; =
 write 0 r2 r0
 ; }
Label_2846:
Label_2843:
Label_2840:
 ; }
Label_2836:
 ; local ofs
 ; --p
 read -4 r14 r2
 sub r2 1 r2
 write -4 r14 r2
 add r2 1 r2
 jump Label_2835
Label_2838:
 ; return
 ; RPN'ized expression: "1 -u "
 ; Expanded expression: "-1 "
 ; Expression value: -1
 ; -1
 load32 -1 r2
Label_2834:
 read 4 r14 r15
 read 0 r14 r14
 add r13 20 r13
 jumpr 0 r15

 ; glb GetDeclSize : (
 ; prm     SyntaxPtr : int
 ; prm     SizeForDeref : int
 ;     ) int
.code
; .globl GetDeclSize
GetDeclSize:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         28 r13
 write         20 r13 r14
 add r13         20 r14
   write 4 r14 r15
 ; loc     SyntaxPtr : (@8) : int
 ; loc     SizeForDeref : (@12) : int
 ; loc     i : (@-4) : int
 ; loc     size : (@-8) : unsigned
 ; RPN'ized expression: "size 1 = "
 ; Expanded expression: "(@-8) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; loc     arr : (@-12) : int
 ; RPN'ized expression: "arr 0 = "
 ; Expanded expression: "(@-12) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -12 r14 r0
 ; if
 ; RPN'ized expression: "SyntaxPtr 0 < "
 ; Expanded expression: "(@8) *(4) 0 < "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; <
 bgts r0 r2 2
 jump Label_2849
 ; return
 ; RPN'ized expression: "SizeOfWord "
 ; Expanded expression: "SizeOfWord *(4) "
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 jump Label_2848
Label_2849:
 ; for
 ; RPN'ized expression: "i SyntaxPtr = "
 ; Expanded expression: "(@-4) (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
Label_2851:
 ; RPN'ized expression: "i SyntaxStackCnt < "
 ; Expanded expression: "(@-4) *(4) SyntaxStackCnt *(4) < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_2854
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; {
 ; loc         tok : (@-16) : int
 ; RPN'ized expression: "tok SyntaxStack0 i + *u = "
 ; Expanded expression: "(@-16) SyntaxStack0 (@-4) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-16) *(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 jump Label_2856
 ; {
 ; case
 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
Label_2857:
 ; case
 ; RPN'ized expression: "89 "
 ; Expanded expression: "89 "
 ; Expression value: 89
Label_2858:
 ; break
 jump Label_2855
 ; case
 ; RPN'ized expression: "18 "
 ; Expanded expression: "18 "
 ; Expression value: 18
Label_2859:
 ; case
 ; RPN'ized expression: "128 "
 ; Expanded expression: "128 "
 ; Expression value: 128
Label_2860:
 ; if
 ; RPN'ized expression: "arr 0 == tok 128 == CharIsSigned || && SizeForDeref && "
 ; Expanded expression: "(@-12) *(4) 0 == [sh&&->2864] (@-16) *(4) 128 == [sh||->2865] CharIsSigned *(4) _Bool ||[2865] _Bool &&[2864] _Bool [sh&&->2863] (@12) *(4) _Bool &&[2863] "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2864
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 128
 ; ==
 load32 128 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2865
 ; CharIsSigned
 ; * (read dereference)
 addr2reg CharIsSigned r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_2865:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_2864:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2863
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_2863:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2861
 ; return
 ; RPN'ized expression: "1 -u "
 ; Expanded expression: "-1 "
 ; Expression value: -1
 ; -1
 load32 -1 r2
 jump Label_2848
Label_2861:
 ; case
 ; RPN'ized expression: "129 "
 ; Expanded expression: "129 "
 ; Expression value: 129
Label_2866:
 ; return
 ; loc             <something> : int
 ; RPN'ized expression: "size (something2867) "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_2848
 ; case
 ; RPN'ized expression: "100 "
 ; Expanded expression: "100 "
 ; Expression value: 100
Label_2868:
 ; if
 ; RPN'ized expression: "arr 0 == SizeForDeref && "
 ; Expanded expression: "(@-12) *(4) 0 == [sh&&->2871] (@12) *(4) _Bool &&[2871] "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2871
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_2871:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2869
 ; return
 ; RPN'ized expression: "2 -u "
 ; Expanded expression: "-2 "
 ; Expression value: -2
 ; -2
 load32 -2 r2
 jump Label_2848
Label_2869:
 ; case
 ; RPN'ized expression: "130 "
 ; Expanded expression: "130 "
 ; Expression value: 130
Label_2872:
 ; RPN'ized expression: "size 2 *= "
 ; Expanded expression: "(@-8) 2 *=(4) "
 ; 2
 load32 2 r2
 ; local ofs
 ; *=
 read -8 r14 r12
 mult r12 r2 r2
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "size ( size truncUint ) != "
 ; Expanded expression: "(@-8) *(4)  (@-8) *(4)  truncUint ()4 != "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; !=
 read 0 r13 r11
 add r13 4 r13
 bne r11 r2 2
 jump Label_2873
 ; RPN'ized expression: "( errorVarSize ) "
 ; Expanded expression: " errorVarSize ()0 "
 ; (
 ; errorVarSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorVarSize
 add r13 16 r13
Label_2873:
 ; return
 ; loc             <something> : int
 ; RPN'ized expression: "size (something2875) "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_2848
 ; case
 ; RPN'ized expression: "19 "
 ; Expanded expression: "19 "
 ; Expression value: 19
Label_2876:
 ; case
 ; RPN'ized expression: "101 "
 ; Expanded expression: "101 "
 ; Expression value: 101
Label_2877:
 ; case
 ; RPN'ized expression: "42 "
 ; Expanded expression: "42 "
 ; Expression value: 42
Label_2878:
 ; case
 ; RPN'ized expression: "40 "
 ; Expanded expression: "40 "
 ; Expression value: 40
Label_2879:
 ; RPN'ized expression: "size SizeOfWord *= "
 ; Expanded expression: "(@-8) SizeOfWord *(4) *=(4) "
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; local ofs
 ; *=
 read -8 r14 r12
 mult r12 r2 r2
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "size ( size truncUint ) != "
 ; Expanded expression: "(@-8) *(4)  (@-8) *(4)  truncUint ()4 != "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; !=
 read 0 r13 r11
 add r13 4 r13
 bne r11 r2 2
 jump Label_2880
 ; RPN'ized expression: "( errorVarSize ) "
 ; Expanded expression: " errorVarSize ()0 "
 ; (
 ; errorVarSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorVarSize
 add r13 16 r13
Label_2880:
 ; return
 ; loc             <something> : int
 ; RPN'ized expression: "size (something2882) "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_2848
 ; case
 ; RPN'ized expression: "91 "
 ; Expanded expression: "91 "
 ; Expression value: 91
Label_2883:
 ; if
 ; RPN'ized expression: "SyntaxStack0 i 1 + + *u 1 != SyntaxStack0 i 1 + + *u 2 != && "
 ; Expanded expression: "SyntaxStack0 (@-4) *(4) 1 + + *(1) 1 != [sh&&->2886] SyntaxStack0 (@-4) *(4) 1 + + *(1) 2 != &&[2886] "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; !=
 load32 1 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2886
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 2
 ; !=
 load32 2 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2886:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2884
 ; RPN'ized expression: "( 11 errorInternal ) "
 ; Expanded expression: " 11  errorInternal ()4 "
 ; (
 ; 11
 load32 11 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
Label_2884:
 ; RPN'ized expression: "size SyntaxStack1 i 1 + + *u *= "
 ; Expanded expression: "(@-8) SyntaxStack1 (@-4) *(4) 1 + 4 * + *(4) *=(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; *=
 read -8 r14 r12
 mult r12 r2 r2
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "size ( size truncUint ) != "
 ; Expanded expression: "(@-8) *(4)  (@-8) *(4)  truncUint ()4 != "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; !=
 read 0 r13 r11
 add r13 4 r13
 bne r11 r2 2
 jump Label_2887
 ; RPN'ized expression: "( errorVarSize ) "
 ; Expanded expression: " errorVarSize ()0 "
 ; (
 ; errorVarSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorVarSize
 add r13 16 r13
Label_2887:
 ; RPN'ized expression: "i 2 += "
 ; Expanded expression: "(@-4) 2 +=(4) "
 ; 2
 load32 2 r2
 ; local ofs
 ; +=
 read -4 r14 r12
 add r12 r2 r2
 write -4 r14 r2
 ; RPN'ized expression: "arr 1 = "
 ; Expanded expression: "(@-12) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; break
 jump Label_2855
 ; case
 ; RPN'ized expression: "144 "
 ; Expanded expression: "144 "
 ; Expression value: 144
Label_2889:
 ; RPN'ized expression: "i SyntaxStack1 i + *u 1 - = "
 ; Expanded expression: "(@-4) SyntaxStack1 (@-4) *(4) 4 * + *(4) 1 - =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; -
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_2855
 ; case
 ; RPN'ized expression: "113 "
 ; Expanded expression: "113 "
 ; Expression value: 113
Label_2890:
 ; case
 ; RPN'ized expression: "114 "
 ; Expanded expression: "114 "
 ; Expression value: 114
Label_2891:
 ; if
 ; RPN'ized expression: "i 2 + SyntaxStackCnt < SyntaxStack0 i 2 + + *u 27 == && SizeForDeref 0 == && "
 ; Expanded expression: "(@-4) *(4) 2 + SyntaxStackCnt *(4) < [sh&&->2895] SyntaxStack0 (@-4) *(4) 2 + + *(1) 27 == &&[2895] _Bool [sh&&->2894] (@12) *(4) 0 == &&[2894] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 2
 ; +
 add r2 2 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2895
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 2
 ; +
 add r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 27
 ; ==
 load32 27 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2895:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2894
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2894:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2892
 ; {
 ; loc                 s : (@-20) : unsigned
 ; RPN'ized expression: "s SyntaxStack1 i 2 + + *u = "
 ; Expanded expression: "(@-20) SyntaxStack1 (@-4) *(4) 2 + 4 * + *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 2
 ; +
 add r8 2 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; RPN'ized expression: "size s *= "
 ; Expanded expression: "(@-8) (@-20) *(4) *=(4) "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; local ofs
 ; *=
 read -8 r14 r12
 mult r12 r2 r2
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "size ( size truncUint ) != "
 ; Expanded expression: "(@-8) *(4)  (@-8) *(4)  truncUint ()4 != "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; !=
 read 0 r13 r11
 add r13 4 r13
 bne r11 r2 2
 jump Label_2896
 ; RPN'ized expression: "( errorVarSize ) "
 ; Expanded expression: " errorVarSize ()0 "
 ; (
 ; errorVarSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorVarSize
 add r13 16 r13
Label_2896:
 ; return
 ; loc                 <something> : int
 ; RPN'ized expression: "size (something2898) "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_2848
 ; }
Label_2892:
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
 jump Label_2848
 ; case
 ; RPN'ized expression: "17 "
 ; Expanded expression: "17 "
 ; Expression value: 17
Label_2899:
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
 jump Label_2848
 ; default
Label_2900:
 ; RPN'ized expression: "( 12 errorInternal ) "
 ; Expanded expression: " 12  errorInternal ()4 "
 ; (
 ; 12
 load32 12 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
 ; }
 jump Label_2855
Label_2856:
 load32 16 r12
 bne r2 r12 2
 jump Label_2857
 load32 89 r12
 bne r2 r12 2
 jump Label_2858
 load32 18 r12
 bne r2 r12 2
 jump Label_2859
 load32 128 r12
 bne r2 r12 2
 jump Label_2860
 load32 129 r12
 bne r2 r12 2
 jump Label_2866
 load32 100 r12
 bne r2 r12 2
 jump Label_2868
 load32 130 r12
 bne r2 r12 2
 jump Label_2872
 load32 19 r12
 bne r2 r12 2
 jump Label_2876
 load32 101 r12
 bne r2 r12 2
 jump Label_2877
 load32 42 r12
 bne r2 r12 2
 jump Label_2878
 load32 40 r12
 bne r2 r12 2
 jump Label_2879
 load32 91 r12
 bne r2 r12 2
 jump Label_2883
 load32 144 r12
 bne r2 r12 2
 jump Label_2889
 load32 113 r12
 bne r2 r12 2
 jump Label_2890
 load32 114 r12
 bne r2 r12 2
 jump Label_2891
 load32 17 r12
 bne r2 r12 2
 jump Label_2899
 jump Label_2900
Label_2855:
 ; }
Label_2852:
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_2851
Label_2854:
 ; RPN'ized expression: "( 13 errorInternal ) "
 ; Expanded expression: " 13  errorInternal ()4 "
 ; (
 ; 13
 load32 13 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
Label_2848:
 read 4 r14 r15
 read 0 r14 r14
 add r13 28 r13
 jumpr 0 r15

 ; glb GetDeclAlignment : (
 ; prm     SyntaxPtr : int
 ;     ) int
.code
; .globl GetDeclAlignment
GetDeclAlignment:
 write 0 r13 r4
 sub r13         16 r13
 write          8 r13 r14
 add r13          8 r14
   write 4 r14 r15
 ; loc     SyntaxPtr : (@8) : int
 ; loc     i : (@-4) : int
 ; if
 ; RPN'ized expression: "SyntaxPtr 0 < "
 ; Expanded expression: "(@8) *(4) 0 < "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; <
 bgts r0 r2 2
 jump Label_2902
 ; return
 ; RPN'ized expression: "SizeOfWord "
 ; Expanded expression: "SizeOfWord *(4) "
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 jump Label_2901
Label_2902:
 ; for
 ; RPN'ized expression: "i SyntaxPtr = "
 ; Expanded expression: "(@-4) (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
Label_2904:
 ; RPN'ized expression: "i SyntaxStackCnt < "
 ; Expanded expression: "(@-4) *(4) SyntaxStackCnt *(4) < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_2907
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; {
 ; loc         tok : (@-8) : int
 ; RPN'ized expression: "tok SyntaxStack0 i + *u = "
 ; Expanded expression: "(@-8) SyntaxStack0 (@-4) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_2909
 ; {
 ; case
 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
Label_2910:
 ; case
 ; RPN'ized expression: "89 "
 ; Expanded expression: "89 "
 ; Expression value: 89
Label_2911:
 ; break
 jump Label_2908
 ; case
 ; RPN'ized expression: "18 "
 ; Expanded expression: "18 "
 ; Expression value: 18
Label_2912:
 ; case
 ; RPN'ized expression: "128 "
 ; Expanded expression: "128 "
 ; Expression value: 128
Label_2913:
 ; case
 ; RPN'ized expression: "129 "
 ; Expanded expression: "129 "
 ; Expression value: 129
Label_2914:
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_2901
 ; case
 ; RPN'ized expression: "100 "
 ; Expanded expression: "100 "
 ; Expression value: 100
Label_2915:
 ; case
 ; RPN'ized expression: "130 "
 ; Expanded expression: "130 "
 ; Expression value: 130
Label_2916:
 ; return
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; 2
 load32 2 r2
 jump Label_2901
 ; case
 ; RPN'ized expression: "19 "
 ; Expanded expression: "19 "
 ; Expression value: 19
Label_2917:
 ; case
 ; RPN'ized expression: "101 "
 ; Expanded expression: "101 "
 ; Expression value: 101
Label_2918:
 ; case
 ; RPN'ized expression: "42 "
 ; Expanded expression: "42 "
 ; Expression value: 42
Label_2919:
 ; case
 ; RPN'ized expression: "40 "
 ; Expanded expression: "40 "
 ; Expression value: 40
Label_2920:
 ; return
 ; RPN'ized expression: "SizeOfWord "
 ; Expanded expression: "SizeOfWord *(4) "
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 jump Label_2901
 ; case
 ; RPN'ized expression: "91 "
 ; Expanded expression: "91 "
 ; Expression value: 91
Label_2921:
 ; if
 ; RPN'ized expression: "SyntaxStack0 i 1 + + *u 1 != SyntaxStack0 i 1 + + *u 2 != && "
 ; Expanded expression: "SyntaxStack0 (@-4) *(4) 1 + + *(1) 1 != [sh&&->2924] SyntaxStack0 (@-4) *(4) 1 + + *(1) 2 != &&[2924] "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; !=
 load32 1 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2924
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 2
 ; !=
 load32 2 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2924:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2922
 ; RPN'ized expression: "( 15 errorInternal ) "
 ; Expanded expression: " 15  errorInternal ()4 "
 ; (
 ; 15
 load32 15 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
Label_2922:
 ; RPN'ized expression: "i 2 += "
 ; Expanded expression: "(@-4) 2 +=(4) "
 ; 2
 load32 2 r2
 ; local ofs
 ; +=
 read -4 r14 r12
 add r12 r2 r2
 write -4 r14 r2
 ; break
 jump Label_2908
 ; case
 ; RPN'ized expression: "144 "
 ; Expanded expression: "144 "
 ; Expression value: 144
Label_2925:
 ; RPN'ized expression: "i SyntaxStack1 i + *u 1 - = "
 ; Expanded expression: "(@-4) SyntaxStack1 (@-4) *(4) 4 * + *(4) 1 - =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; -
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; break
 jump Label_2908
 ; case
 ; RPN'ized expression: "113 "
 ; Expanded expression: "113 "
 ; Expression value: 113
Label_2926:
 ; case
 ; RPN'ized expression: "114 "
 ; Expanded expression: "114 "
 ; Expression value: 114
Label_2927:
 ; if
 ; RPN'ized expression: "i 3 + SyntaxStackCnt < SyntaxStack0 i 2 + + *u 27 == && "
 ; Expanded expression: "(@-4) *(4) 3 + SyntaxStackCnt *(4) < [sh&&->2930] SyntaxStack0 (@-4) *(4) 2 + + *(1) 27 == &&[2930] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 3
 ; +
 add r2 3 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2930
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 2
 ; +
 add r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 27
 ; ==
 load32 27 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2930:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2928
 ; {
 ; return
 ; RPN'ized expression: "SyntaxStack1 i 3 + + *u "
 ; Expanded expression: "SyntaxStack1 (@-4) *(4) 3 + 4 * + *(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 3
 ; +
 add r8 3 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_2901
 ; }
Label_2928:
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_2901
 ; case
 ; RPN'ized expression: "17 "
 ; Expanded expression: "17 "
 ; Expression value: 17
Label_2931:
 ; return
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
 ; 1
 load32 1 r2
 jump Label_2901
 ; default
Label_2932:
 ; RPN'ized expression: "( 16 errorInternal ) "
 ; Expanded expression: " 16  errorInternal ()4 "
 ; (
 ; 16
 load32 16 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
 ; }
 jump Label_2908
Label_2909:
 load32 16 r12
 bne r2 r12 2
 jump Label_2910
 load32 89 r12
 bne r2 r12 2
 jump Label_2911
 load32 18 r12
 bne r2 r12 2
 jump Label_2912
 load32 128 r12
 bne r2 r12 2
 jump Label_2913
 load32 129 r12
 bne r2 r12 2
 jump Label_2914
 load32 100 r12
 bne r2 r12 2
 jump Label_2915
 load32 130 r12
 bne r2 r12 2
 jump Label_2916
 load32 19 r12
 bne r2 r12 2
 jump Label_2917
 load32 101 r12
 bne r2 r12 2
 jump Label_2918
 load32 42 r12
 bne r2 r12 2
 jump Label_2919
 load32 40 r12
 bne r2 r12 2
 jump Label_2920
 load32 91 r12
 bne r2 r12 2
 jump Label_2921
 load32 144 r12
 bne r2 r12 2
 jump Label_2925
 load32 113 r12
 bne r2 r12 2
 jump Label_2926
 load32 114 r12
 bne r2 r12 2
 jump Label_2927
 load32 17 r12
 bne r2 r12 2
 jump Label_2931
 jump Label_2932
Label_2908:
 ; }
Label_2905:
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_2904
Label_2907:
 ; RPN'ized expression: "( 17 errorInternal ) "
 ; Expanded expression: " 17  errorInternal ()4 "
 ; (
 ; 17
 load32 17 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
Label_2901:
 read 4 r14 r15
 read 0 r14 r14
 add r13 16 r13
 jumpr 0 r15

 ; glb DumpDecl : (
 ; prm     SyntaxPtr : int
 ; prm     IsParam : int
 ;     ) void
.code
; .globl DumpDecl
DumpDecl:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         40 r13
 write         32 r13 r14
 add r13         32 r14
   write 4 r14 r15
 ; loc     SyntaxPtr : (@8) : int
 ; loc     IsParam : (@12) : int
 ; loc     i : (@-4) : int
 ; loc     icnt : (@-8) : int
 ; RPN'ized expression: "icnt 0 = "
 ; Expanded expression: "(@-8) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -8 r14 r0
 ; if
 ; RPN'ized expression: "SyntaxPtr 0 < "
 ; Expanded expression: "(@8) *(4) 0 < "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; <
 bgts r0 r2 2
 jump Label_2934
 ; return
 jump Label_2933
Label_2934:
 ; for
 ; RPN'ized expression: "i SyntaxPtr = "
 ; Expanded expression: "(@-4) (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
Label_2936:
 ; RPN'ized expression: "i SyntaxStackCnt < "
 ; Expanded expression: "(@-4) *(4) SyntaxStackCnt *(4) < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_2939
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; {
 ; loc         tok : (@-12) : int
 ; RPN'ized expression: "tok SyntaxStack0 i + *u = "
 ; Expanded expression: "(@-12) SyntaxStack0 (@-4) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; loc         v : (@-16) : int
 ; RPN'ized expression: "v SyntaxStack1 i + *u = "
 ; Expanded expression: "(@-16) SyntaxStack1 (@-4) *(4) 4 * + *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-12) *(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 jump Label_2941
 ; {
 ; case
 ; RPN'ized expression: "89 "
 ; Expanded expression: "89 "
 ; Expression value: 89
Label_2942:

.rdata
Label_2943:
.dw 40 64 37 100 41 32 58 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( v truncInt ) , L2943 printf2 ) "
 ; Expanded expression: "  (@-16) *(4)  truncInt ()4  L2943  printf2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; ,
 ; truncInt
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; ,
 ; 2943
 sub r13 4 r13
 write 0 r13 r2
 addr2reg Label_2943 r2
 ; ,
 ; printf2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_2940
 ; case
 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
Label_2944:
 ; if
 ; RPN'ized expression: "icnt ++ 1 > IsParam 0 == && "
 ; Expanded expression: "(@-8) ++(4) 1 > [sh&&->2947] (@12) *(4) 0 == &&[2947] "
 ; local ofs
 ; ++
 read -8 r14 r2
 add r2 1 r2
 write -8 r14 r2
 ; 1
 ; >
 load32 2 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2947
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2947:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2945
 ; return
 jump Label_2933
Label_2945:
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13
 ; if
 ; RPN'ized expression: "ParseLevel 0 == "
 ; Expanded expression: "ParseLevel *(4) 0 == "
 ; ParseLevel
 ; * (read dereference)
 addr2reg ParseLevel r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2948

.rdata
Label_2950:
.dw 103 108 98 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2950 printf2 ) "
 ; Expanded expression: " L2950  printf2 ()4 "
 ; (
 ; 2950
 addr2reg Label_2950 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 jump Label_2949
Label_2948:
 ; else
 ; if
 ; RPN'ized expression: "IsParam "
 ; Expanded expression: "(@12) *(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2951

.rdata
Label_2953:
.dw 112 114 109 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2953 printf2 ) "
 ; Expanded expression: " L2953  printf2 ()4 "
 ; (
 ; 2953
 addr2reg Label_2953 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 jump Label_2952
Label_2951:
 ; else

.rdata
Label_2954:
.dw 108 111 99 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2954 printf2 ) "
 ; Expanded expression: " L2954  printf2 ()4 "
 ; (
 ; 2954
 addr2reg Label_2954 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_2952:
Label_2949:
 ; {
 ; loc                 j : (@-20) : int
 ; for
 ; RPN'ized expression: "j 0 = "
 ; Expanded expression: "(@-20) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -20 r14 r0
Label_2955:
 ; RPN'ized expression: "j ParseLevel 4 * < "
 ; Expanded expression: "(@-20) *(4) ParseLevel *(4) 4 * < "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; ParseLevel
 ; * (read dereference)
 addr2reg ParseLevel r1
 read 0 r1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_2958
 ; RPN'ized expression: "j ++p "
 ; Expanded expression: "(@-20) ++p(4) "

.rdata
Label_2959:
.dw 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2959 printf2 ) "
 ; Expanded expression: " L2959  printf2 ()4 "
 ; (
 ; 2959
 addr2reg Label_2959 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_2956:
 ; local ofs
 ; ++p
 read -20 r14 r2
 add r2 1 r2
 write -20 r14 r2
 sub r2 1 r2
 jump Label_2955
Label_2958:
 ; }
 ; if

.rdata
Label_2962:
.dw 60 115 111 109 101 116 104 105 110 103 62 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "IsParam ( L2962 , IdentTable v + strcmp ) 0 == && i 1 + SyntaxStackCnt < && "
 ; Expanded expression: "(@12) *(4) _Bool [sh&&->2964]  L2962  IdentTable (@-16) *(4) +  strcmp ()8 0 == &&[2964] _Bool [sh&&->2963] (@-4) *(4) 1 + SyntaxStackCnt *(4) < &&[2963] "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2964
 ; (
 ; 2962
 addr2reg Label_2962 r5
 ; ,
 ; IdentTable
 addr2reg IdentTable r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -16 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2964:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2963
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; SyntaxStackCnt
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r2
 ; <
 read 0 r13 r11
 add r13 4 r13
 bges r11 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2963:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2960
 ; {
 ; if
 ; RPN'ized expression: "SyntaxStack0 i 1 + + *u 15 == "
 ; Expanded expression: "SyntaxStack0 (@-4) *(4) 1 + + *(1) 15 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 15
 ; ==
 load32 15 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_2965
 ; continue
 jump Label_2937
Label_2965:
 ; }
Label_2960:

.rdata
Label_2967:
.dw 37 115 32 58 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( IdentTable v + , L2967 printf2 ) "
 ; Expanded expression: " IdentTable (@-16) *(4) +  L2967  printf2 ()8 "
 ; (
 ; IdentTable
 addr2reg IdentTable r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -16 r14 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; 2967
 addr2reg Label_2967 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "IsParam 0 == i 1 + SyntaxStackCnt < && SyntaxStack0 i 1 + + *u 16 == && "
 ; Expanded expression: "(@12) *(4) 0 == [sh&&->2971] (@-4) *(4) 1 + SyntaxStackCnt *(4) < &&[2971] _Bool [sh&&->2970] SyntaxStack0 (@-4) *(4) 1 + + *(1) 16 == &&[2970] "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2971
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2971:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2970
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_2970:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2968
 ; {
 ; RPN'ized expression: "( IdentTable SyntaxStack1 i ++ + *u + GenPrintLabel ) "
 ; Expanded expression: " IdentTable SyntaxStack1 (@-4) ++(4) 4 * + *(4) +  GenPrintLabel ()4 "
 ; (
 ; IdentTable
 addr2reg IdentTable r4
 ; SyntaxStack1
 sub r13 4 r13
 write 0 r13 r4
 addr2reg SyntaxStack1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; ++
 read -4 r14 r4
 add r4 1 r4
 write -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; GenPrintLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenPrintLabel
 add r13 16 r13

.rdata
Label_2972:
.dw 32 58 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2972 printf2 ) "
 ; Expanded expression: " L2972  printf2 ()4 "
 ; (
 ; 2972
 addr2reg Label_2972 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; }
Label_2968:
 ; break
 jump Label_2940
 ; case
 ; RPN'ized expression: "91 "
 ; Expanded expression: "91 "
 ; Expression value: 91
Label_2973:

.rdata
Label_2974:
.dw 91 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2974 printf2 ) "
 ; Expanded expression: " L2974  printf2 ()4 "
 ; (
 ; 2974
 addr2reg Label_2974 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_2940
 ; case
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
Label_2975:

.rdata
Label_2976:
.dw 37 100 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( v truncInt ) , L2976 printf2 ) "
 ; Expanded expression: "  (@-16) *(4)  truncInt ()4  L2976  printf2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; ,
 ; truncInt
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; ,
 ; 2976
 sub r13 4 r13
 write 0 r13 r2
 addr2reg Label_2976 r2
 ; ,
 ; printf2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_2940
 ; case
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
Label_2977:

.rdata
Label_2978:
.dw 37 117 117 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( v truncUint ) , L2978 printf2 ) "
 ; Expanded expression: "  (@-16) *(4)  truncUint ()4  L2978  printf2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; ,
 ; truncUint
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; ,
 ; 2978
 sub r13 4 r13
 write 0 r13 r2
 addr2reg Label_2978 r2
 ; ,
 ; printf2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_2940
 ; case
 ; RPN'ized expression: "93 "
 ; Expanded expression: "93 "
 ; Expression value: 93
Label_2979:

.rdata
Label_2980:
.dw 93 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2980 printf2 ) "
 ; Expanded expression: " L2980  printf2 ()4 "
 ; (
 ; 2980
 addr2reg Label_2980 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_2940
 ; case
 ; RPN'ized expression: "40 "
 ; Expanded expression: "40 "
 ; Expression value: 40
Label_2981:
 ; {
 ; loc                 noparams : (@-20) : int
 ; loc                 j : (@-24) : int
 ; RPN'ized expression: "j i ++ = "
 ; Expanded expression: "(@-24) (@-4) ++(4) =(4) "
 ; local ofs
 ; ++
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; loc                 c : (@-28) : int
 ; RPN'ized expression: "c 1 = "
 ; Expanded expression: "(@-28) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -28 r14 r2
 ; while
 ; RPN'ized expression: "c "
 ; Expanded expression: "(@-28) *(4) "
Label_2982:
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2983
 ; {
 ; loc                     t : (@-32) : int
 ; RPN'ized expression: "t SyntaxStack0 j ++p + *u = "
 ; Expanded expression: "(@-32) SyntaxStack0 (@-24) ++p(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; ++p
 read -24 r14 r8
 add r8 1 r8
 write -24 r14 r8
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; RPN'ized expression: "c t 40 == t 41 == - += "
 ; Expanded expression: "(@-28) (@-32) *(4) 40 == (@-32) *(4) 41 == - +=(4) "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -32 r14 r8
 ; 41
 ; ==
 load32 41 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; +=
 read -28 r14 r12
 add r12 r2 r2
 write -28 r14 r2
 ; }
 jump Label_2982
Label_2983:
 ; RPN'ized expression: "noparams i 1 + j == SyntaxStack0 i 1 + + *u 17 == || = "
 ; Expanded expression: "(@-20) (@-4) *(4) 1 + (@-24) *(4) == [sh||->2984] SyntaxStack0 (@-4) *(4) 1 + + *(1) 17 == ||[2984] =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; local ofs
 ; * (read dereference)
 read -24 r14 r8
 ; ==
 xor r2 r8 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_2984
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 17
 ; ==
 load32 17 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_2984:
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2

.rdata
Label_2985:
.dw 40 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2985 printf2 ) "
 ; Expanded expression: " L2985  printf2 ()4 "
 ; (
 ; 2985
 addr2reg Label_2985 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "noparams "
 ; Expanded expression: "(@-20) *(4) "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_2986
 ; {
 ; if
 ; RPN'ized expression: "i 1 + j != "
 ; Expanded expression: "(@-4) *(4) 1 + (@-24) *(4) != "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; local ofs
 ; * (read dereference)
 read -24 r14 r8
 ; !=
 bne r2 r8 2
 jump Label_2988

.rdata
Label_2990:
.dw 118 111 105 100 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2990 printf2 ) "
 ; Expanded expression: " L2990  printf2 ()4 "
 ; (
 ; 2990
 addr2reg Label_2990 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_2988:
 ; }
 jump Label_2987
Label_2986:
 ; else
 ; {

.rdata
Label_2991:
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2991 puts2 ) "
 ; Expanded expression: " L2991  puts2 ()4 "
 ; (
 ; 2991
 addr2reg Label_2991 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
 ; RPN'ized expression: "ParseLevel ++p "
 ; Expanded expression: "ParseLevel ++p(4) "
 ; ParseLevel
 ; ++p
 addr2reg ParseLevel r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg ParseLevel r1
 write 0 r1 r2
 sub r2 1 r2
 ; RPN'ized expression: "( 1 , i DumpDecl ) "
 ; Expanded expression: " 1  (@-4) *(4)  DumpDecl ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; DumpDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DumpDecl
 add r13 16 r13
 ; RPN'ized expression: "ParseLevel --p "
 ; Expanded expression: "ParseLevel --p(4) "
 ; ParseLevel
 ; --p
 addr2reg ParseLevel r1
 read 0 r1 r2
 sub r2 1 r2
 addr2reg ParseLevel r1
 write 0 r1 r2
 add r2 1 r2
 ; }
Label_2987:
 ; RPN'ized expression: "i j 1 - = "
 ; Expanded expression: "(@-4) (@-24) *(4) 1 - =(4) "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 1
 ; -
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "noparams 0 == "
 ; Expanded expression: "(@-20) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_2992
 ; {
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_2994:
.dw 32 32 32 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2994 printf2 ) "
 ; Expanded expression: " L2994  printf2 ()4 "
 ; (
 ; 2994
 addr2reg Label_2994 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; {
 ; loc                         j : (@-32) : int
 ; for
 ; RPN'ized expression: "j 0 = "
 ; Expanded expression: "(@-32) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -32 r14 r0
Label_2995:
 ; RPN'ized expression: "j ParseLevel 4 * < "
 ; Expanded expression: "(@-32) *(4) ParseLevel *(4) 4 * < "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; ParseLevel
 ; * (read dereference)
 addr2reg ParseLevel r1
 read 0 r1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_2998
 ; RPN'ized expression: "j ++p "
 ; Expanded expression: "(@-32) ++p(4) "

.rdata
Label_2999:
.dw 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L2999 printf2 ) "
 ; Expanded expression: " L2999  printf2 ()4 "
 ; (
 ; 2999
 addr2reg Label_2999 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_2996:
 ; local ofs
 ; ++p
 read -32 r14 r2
 add r2 1 r2
 write -32 r14 r2
 sub r2 1 r2
 jump Label_2995
Label_2998:
 ; }
 ; }
Label_2992:

.rdata
Label_3000:
.dw 41 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3000 printf2 ) "
 ; Expanded expression: " L3000  printf2 ()4 "
 ; (
 ; 3000
 addr2reg Label_3000 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; }
 ; break
 jump Label_2940
 ; case
 ; RPN'ized expression: "41 "
 ; Expanded expression: "41 "
 ; Expression value: 41
Label_3001:
 ; return
 jump Label_2933
 ; case
 ; RPN'ized expression: "144 "
 ; Expanded expression: "144 "
 ; Expression value: 144
Label_3002:
 ; RPN'ized expression: "( 0 , v DumpDecl ) "
 ; Expanded expression: " 0  (@-16) *(4)  DumpDecl ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; ,
 ; DumpDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DumpDecl
 add r13 16 r13
 ; break
 jump Label_2940
 ; default
Label_3003:
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-12) *(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 jump Label_3005
 ; {
 ; case
 ; RPN'ized expression: "17 "
 ; Expanded expression: "17 "
 ; Expression value: 17
Label_3006:
 ; case
 ; RPN'ized expression: "18 "
 ; Expanded expression: "18 "
 ; Expression value: 18
Label_3007:
 ; case
 ; RPN'ized expression: "128 "
 ; Expanded expression: "128 "
 ; Expression value: 128
Label_3008:
 ; case
 ; RPN'ized expression: "129 "
 ; Expanded expression: "129 "
 ; Expression value: 129
Label_3009:
 ; case
 ; RPN'ized expression: "100 "
 ; Expanded expression: "100 "
 ; Expression value: 100
Label_3010:
 ; case
 ; RPN'ized expression: "130 "
 ; Expanded expression: "130 "
 ; Expression value: 130
Label_3011:
 ; case
 ; RPN'ized expression: "19 "
 ; Expanded expression: "19 "
 ; Expression value: 19
Label_3012:
 ; case
 ; RPN'ized expression: "101 "
 ; Expanded expression: "101 "
 ; Expression value: 101
Label_3013:
 ; case
 ; RPN'ized expression: "15 "
 ; Expanded expression: "15 "
 ; Expression value: 15
Label_3014:

.rdata
Label_3015:
.dw 37 115 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( tok GetTokenName ) , L3015 printf2 ) "
 ; Expanded expression: "  (@-12) *(4)  GetTokenName ()4  L3015  printf2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; ,
 ; GetTokenName
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump GetTokenName
 add r13 16 r13
 ; ,
 ; 3015
 sub r13 4 r13
 write 0 r13 r2
 addr2reg Label_3015 r2
 ; ,
 ; printf2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_3004
 ; default
Label_3016:

.rdata
Label_3017:
.dw 37 115 32 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( tok GetTokenName ) , L3017 printf2 ) "
 ; Expanded expression: "  (@-12) *(4)  GetTokenName ()4  L3017  printf2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; ,
 ; GetTokenName
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump GetTokenName
 add r13 16 r13
 ; ,
 ; 3017
 sub r13 4 r13
 write 0 r13 r2
 addr2reg Label_3017 r2
 ; ,
 ; printf2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; break
 jump Label_3004
 ; case
 ; RPN'ized expression: "145 "
 ; Expanded expression: "145 "
 ; Expression value: 145
Label_3018:

.rdata
Label_3019:
.dw 37 115 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( IdentTable v + , L3019 printf2 ) "
 ; Expanded expression: " IdentTable (@-16) *(4) +  L3019  printf2 ()8 "
 ; (
 ; IdentTable
 addr2reg IdentTable r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -16 r14 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; 3019
 addr2reg Label_3019 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; return
 jump Label_2933
 ; }
 jump Label_3004
Label_3005:
 load32 17 r12
 bne r2 r12 2
 jump Label_3006
 load32 18 r12
 bne r2 r12 2
 jump Label_3007
 load32 128 r12
 bne r2 r12 2
 jump Label_3008
 load32 129 r12
 bne r2 r12 2
 jump Label_3009
 load32 100 r12
 bne r2 r12 2
 jump Label_3010
 load32 130 r12
 bne r2 r12 2
 jump Label_3011
 load32 19 r12
 bne r2 r12 2
 jump Label_3012
 load32 101 r12
 bne r2 r12 2
 jump Label_3013
 load32 15 r12
 bne r2 r12 2
 jump Label_3014
 load32 145 r12
 bne r2 r12 2
 jump Label_3018
 jump Label_3016
Label_3004:
 ; break
 jump Label_2940
 ; }
 jump Label_2940
Label_2941:
 load32 89 r12
 bne r2 r12 2
 jump Label_2942
 load32 16 r12
 bne r2 r12 2
 jump Label_2944
 load32 91 r12
 bne r2 r12 2
 jump Label_2973
 load32 1 r12
 bne r2 r12 2
 jump Label_2975
 load32 2 r12
 bne r2 r12 2
 jump Label_2977
 load32 93 r12
 bne r2 r12 2
 jump Label_2979
 load32 40 r12
 bne r2 r12 2
 jump Label_2981
 load32 41 r12
 bne r2 r12 2
 jump Label_3001
 load32 144 r12
 bne r2 r12 2
 jump Label_3002
 jump Label_3003
Label_2940:
 ; }
Label_2937:
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_2936
Label_2939:
Label_2933:
 read 4 r14 r15
 read 0 r14 r14
 add r13 40 r13
 jumpr 0 r15

 ; glb DumpSynDecls : (void) void
.code
; .globl DumpSynDecls
DumpSynDecls:
 sub r13         16 r13
 write          8 r13 r14
 add r13          8 r14
   write 4 r14 r15
 ; loc     used : (@-4) : int
 ; RPN'ized expression: "used SyntaxStackCnt SyntaxStack0 0 + *u sizeof SyntaxStack1 0 + *u sizeof + * = "
 ; Expanded expression: "(@-4) SyntaxStackCnt *(4) 5u * =(4) "
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r2
 ; 5
 load32 5 r8
 ; *
 mult r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc     total : (@-8) : int
 ; RPN'ized expression: "total 2048 1024 + SyntaxStack0 0 + *u sizeof SyntaxStack1 0 + *u sizeof + * = "
 ; Expanded expression: "(@-8) 15360u =(4) "
 ; 15360
 load32 15360 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2

.rdata
Label_3021:
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3021 puts2 ) "
 ; Expanded expression: " L3021  puts2 ()4 "
 ; (
 ; 3021
 addr2reg Label_3021 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3022:
.dw 83 121 110 116 97 120 47 100 101 99 108 97 114 97 116 105 111 110 32 116 97 98 108 101 47 115 116 97 99 107 58 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3022 printf2 ) "
 ; Expanded expression: " L3022  printf2 ()4 "
 ; (
 ; 3022
 addr2reg Label_3022 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3023:
.dw 66 121 116 101 115 32 117 115 101 100 58 32 37 100 47 37 100 10 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( total , used , L3023 printf2 ) "
 ; Expanded expression: " (@-8) *(4)  (@-4) *(4)  L3023  printf2 ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r5
 ; ,
 ; 3023
 addr2reg Label_3023 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
Label_3020:
 read 4 r14 r15
 read 0 r14 r14
 add r13 16 r13
 jumpr 0 r15

 ; glb ParseArrayDimension : (
 ; prm     AllowEmptyDimension : int
 ;     ) int
.code
; .globl ParseArrayDimension
ParseArrayDimension:
 write 0 r13 r4
 sub r13         44 r13
 write         36 r13 r14
 add r13         36 r14
   write 4 r14 r15
 ; loc     AllowEmptyDimension : (@8) : int
 ; loc     tok : (@-4) : int
 ; loc     gotUnary : (@-8) : int
 ; loc     synPtr : (@-12) : int
 ; loc     constExpr : (@-16) : int
 ; loc     exprVal : (@-20) : int
 ; loc     exprValU : (@-24) : unsigned
 ; loc     oldssp : (@-28) : int
 ; loc     oldesp : (@-32) : int
 ; loc     undoIdents : (@-36) : int
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@-4)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "oldssp SyntaxStackCnt = "
 ; Expanded expression: "(@-28) SyntaxStackCnt *(4) =(4) "
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -28 r14 r2
 ; RPN'ized expression: "oldesp sp = "
 ; Expanded expression: "(@-32) sp *(4) =(4) "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; RPN'ized expression: "undoIdents IdentTableLen = "
 ; Expanded expression: "(@-36) IdentTableLen *(4) =(4) "
 ; IdentTableLen
 ; * (read dereference)
 addr2reg IdentTableLen r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; RPN'ized expression: "tok ( 0 , 0 , exprVal &u , constExpr &u , synPtr &u , gotUnary &u , tok ParseExpr ) = "
 ; Expanded expression: "(@-4)  0  0  (@-20)  (@-16)  (@-12)  (@-8)  (@-4) *(4)  ParseExpr ()28 =(4) "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 sub r14 20 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 sub r14 16 r7
 ; ,
 ; local ofs
 sub r14 12 r6
 ; ,
 ; local ofs
 sub r14 8 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; ParseExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseExpr
 add r13 28 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "IdentTableLen undoIdents = "
 ; Expanded expression: "IdentTableLen (@-36) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; IdentTableLen
 ; = (write dereference)
 addr2reg IdentTableLen r1
 write 0 r1 r2
 ; RPN'ized expression: "SyntaxStackCnt oldssp = "
 ; Expanded expression: "SyntaxStackCnt (@-28) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; SyntaxStackCnt
 ; = (write dereference)
 addr2reg SyntaxStackCnt r1
 write 0 r1 r2
 ; RPN'ized expression: "sp oldesp = "
 ; Expanded expression: "sp (@-32) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; sp
 ; = (write dereference)
 addr2reg sp r1
 write 0 r1 r2
 ; if
 ; RPN'ized expression: "tok 93 != "
 ; Expanded expression: "(@-4) *(4) 93 != "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 93
 ; !=
 load32 93 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3025
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@-4) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3025:
 ; if
 ; RPN'ized expression: "gotUnary 0 == "
 ; Expanded expression: "(@-8) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3027
 ; {
 ; if
 ; RPN'ized expression: "AllowEmptyDimension 0 == "
 ; Expanded expression: "(@8) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3029
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@-4) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3029:
 ; RPN'ized expression: "exprVal 0 = "
 ; Expanded expression: "(@-20) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -20 r14 r0
 ; }
 jump Label_3028
Label_3027:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "constExpr 0 == "
 ; Expanded expression: "(@-16) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3031
 ; RPN'ized expression: "( errorNotConst ) "
 ; Expanded expression: " errorNotConst ()0 "
 ; (
 ; errorNotConst
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorNotConst
 add r13 16 r13
Label_3031:
 ; RPN'ized expression: "exprValU ( exprVal truncUint ) = "
 ; Expanded expression: "(@-24)  (@-20) *(4)  truncUint ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; RPN'ized expression: "exprVal ( exprVal truncInt ) = "
 ; Expanded expression: "(@-20)  (@-20) *(4)  truncInt ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; RPN'ized expression: "( synPtr &u , synPtr &u promoteType ) "
 ; Expanded expression: " (@-12)  (@-12)  promoteType ()8 "
 ; (
 ; local ofs
 sub r14 12 r5
 ; ,
 ; local ofs
 sub r14 12 r4
 ; ,
 ; promoteType
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump promoteType
 add r13 16 r13
 ; RPN'ized expression: "( synPtr anyIntTypeCheck ) "
 ; Expanded expression: " (@-12) *(4)  anyIntTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; anyIntTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump anyIntTypeCheck
 add r13 16 r13
 ; if
 ; RPN'ized expression: "SyntaxStack0 synPtr + *u 19 == exprVal 1 < && SyntaxStack0 synPtr + *u 101 == exprValU 1 < && || "
 ; Expanded expression: "SyntaxStack0 (@-12) *(4) + *(1) 19 == [sh&&->3037] (@-20) *(4) 1 < &&[3037] _Bool [sh||->3035] SyntaxStack0 (@-12) *(4) + *(1) 101 == [sh&&->3036] (@-24) *(4) 1 <u &&[3036] _Bool ||[3035] "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 19
 ; ==
 load32 19 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3037
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; 1
 ; <
 load32 1 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3037:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3035
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 101
 ; ==
 load32 101 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3036
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 1
 ; <u
 load32 1 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3036:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_3035:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3033

.rdata
Label_3038:
.dw 65 114 114 97 121 32 100 105 109 101 110 115 105 111 110 32 108 101 115 115 32 116 104 97 110 32 49 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3038 error ) "
 ; Expanded expression: " L3038  error ()4 "
 ; (
 ; 3038
 addr2reg Label_3038 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_3033:
 ; loc         <something> : int
 ; RPN'ized expression: "exprVal exprValU (something3039) = "
 ; Expanded expression: "(@-20) (@-24) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; }
Label_3028:
 ; RPN'ized expression: "( exprVal , 2 PushSyntax2 ) "
 ; Expanded expression: " (@-20) *(4)  2  PushSyntax2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r5
 ; ,
 ; 2
 load32 2 r4
 ; ,
 ; PushSyntax2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
 ; return
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
Label_3024:
 read 4 r14 r15
 read 0 r14 r14
 add r13 44 r13
 jumpr 0 r15

 ; glb ParseFxnParams : (
 ; prm     tok : int
 ;     ) void
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb BrkCntTargetFxn : [2u] int
.bss
; .align 2
BrkCntTargetFxn:
; .space 8
.dw 0 0 0 0 0 0 0 0

 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb ParseBlock : (
 ; prm     BrkCntTarget : * int
 ; prm     casesIdx : int
 ;     ) int
 ; glb AddFxnParamSymbols : (
 ; prm     SyntaxPtr : int
 ;     ) void
 ; glb CheckRedecl : (
 ; prm     lastSyntaxPtr : int
 ;     ) void
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb ParseBase : (
 ; prm     tok : int
 ; prm     base : * int
 ;     ) int
.code
; .globl ParseBase
ParseBase:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         68 r13
 write         60 r13 r14
 add r13         60 r14
   write 4 r14 r15
 ; loc     tok : (@8) : int
 ; loc     base : (@12) : * int
 ; loc     valid : (@-4) : int
 ; RPN'ized expression: "valid 1 = "
 ; Expanded expression: "(@-4) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "base 1 + *u 0 = "
 ; Expanded expression: "(@12) *(4) 4 + 0 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 4
 ; +
 add r2 4 r2
 ; 0
 ; =
 write 0 r2 r0
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 jump Label_3042
 ; {
 ; case
 ; RPN'ized expression: "17 "
 ; Expanded expression: "17 "
 ; Expression value: 17
Label_3043:
 ; RPN'ized expression: "base *u tok = "
 ; Expanded expression: "(@12) *(4) (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; break
 jump Label_3041
 ; case
 ; RPN'ized expression: "18 "
 ; Expanded expression: "18 "
 ; Expression value: 18
Label_3044:
 ; case
 ; RPN'ized expression: "19 "
 ; Expanded expression: "19 "
 ; Expression value: 19
Label_3045:
 ; case
 ; RPN'ized expression: "100 "
 ; Expanded expression: "100 "
 ; Expression value: 100
Label_3046:
 ; case
 ; RPN'ized expression: "99 "
 ; Expanded expression: "99 "
 ; Expression value: 99
Label_3047:
 ; case
 ; RPN'ized expression: "102 "
 ; Expanded expression: "102 "
 ; Expression value: 102
Label_3048:
 ; case
 ; RPN'ized expression: "101 "
 ; Expanded expression: "101 "
 ; Expression value: 101
Label_3049:
 ; {
 ; loc             allowedMask : (@-8) : int
 ; RPN'ized expression: "allowedMask 127 = "
 ; Expanded expression: "(@-8) 127 =(4) "
 ; 127
 load32 127 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; loc             typeMask : (@-12) : int
 ; RPN'ized expression: "typeMask 0 = "
 ; Expanded expression: "(@-12) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -12 r14 r0
 ; loc             tokMask : (@-16) : int
 ; loc             disallowedMask : (@-20) : int
 ; lcont:
Label_3050:
 ; switch
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 jump Label_3052
 ; {
 ; case
 ; RPN'ized expression: "18 "
 ; Expanded expression: "18 "
 ; Expression value: 18
Label_3053:
 ; RPN'ized expression: "tokMask 1 = "
 ; Expanded expression: "(@-16) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "disallowedMask 78 = "
 ; Expanded expression: "(@-20) 78 =(4) "
 ; 78
 load32 78 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; break
 jump Label_3051
 ; case
 ; RPN'ized expression: "100 "
 ; Expanded expression: "100 "
 ; Expression value: 100
Label_3054:
 ; RPN'ized expression: "tokMask 2 = "
 ; Expanded expression: "(@-16) 2 =(4) "
 ; 2
 load32 2 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "disallowedMask 73 = "
 ; Expanded expression: "(@-20) 73 =(4) "
 ; 73
 load32 73 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; break
 jump Label_3051
 ; case
 ; RPN'ized expression: "19 "
 ; Expanded expression: "19 "
 ; Expression value: 19
Label_3055:
 ; RPN'ized expression: "tokMask 4 = "
 ; Expanded expression: "(@-16) 4 =(4) "
 ; 4
 load32 4 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "disallowedMask 65 = "
 ; Expanded expression: "(@-20) 65 =(4) "
 ; 65
 load32 65 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; break
 jump Label_3051
 ; case
 ; RPN'ized expression: "99 "
 ; Expanded expression: "99 "
 ; Expression value: 99
Label_3056:
 ; RPN'ized expression: "tokMask 8 = "
 ; Expanded expression: "(@-16) 8 =(4) "
 ; 8
 load32 8 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "disallowedMask 3 = "
 ; Expanded expression: "(@-20) 3 =(4) "
 ; 3
 load32 3 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; break
 jump Label_3051
 ; case
 ; RPN'ized expression: "102 "
 ; Expanded expression: "102 "
 ; Expression value: 102
Label_3057:
 ; RPN'ized expression: "tokMask 16 = "
 ; Expanded expression: "(@-16) 16 =(4) "
 ; 16
 load32 16 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "disallowedMask 96 = "
 ; Expanded expression: "(@-20) 96 =(4) "
 ; 96
 load32 96 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; break
 jump Label_3051
 ; case
 ; RPN'ized expression: "101 "
 ; Expanded expression: "101 "
 ; Expression value: 101
Label_3058:
 ; RPN'ized expression: "tokMask 32 = "
 ; Expanded expression: "(@-16) 32 =(4) "
 ; 32
 load32 32 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "disallowedMask 80 = "
 ; Expanded expression: "(@-20) 80 =(4) "
 ; 80
 load32 80 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; break
 jump Label_3051
 ; default
Label_3059:
 ; RPN'ized expression: "tokMask disallowedMask 0 = = "
 ; Expanded expression: "(@-16) (@-20) 0 =(4) =(4) "
 ; 0
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; break
 jump Label_3051
 ; }
 jump Label_3051
Label_3052:
 load32 18 r12
 bne r2 r12 2
 jump Label_3053
 load32 100 r12
 bne r2 r12 2
 jump Label_3054
 load32 19 r12
 bne r2 r12 2
 jump Label_3055
 load32 99 r12
 bne r2 r12 2
 jump Label_3056
 load32 102 r12
 bne r2 r12 2
 jump Label_3057
 load32 101 r12
 bne r2 r12 2
 jump Label_3058
 jump Label_3059
Label_3051:
 ; if
 ; RPN'ized expression: "allowedMask tokMask & "
 ; Expanded expression: "(@-8) *(4) (@-16) *(4) & "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; &
 and r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3060
 ; {
 ; RPN'ized expression: "typeMask tokMask |= "
 ; Expanded expression: "(@-12) (@-16) *(4) |=(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; local ofs
 ; |=
 read -12 r14 r12
 or r12 r2 r2
 write -12 r14 r2
 ; RPN'ized expression: "allowedMask disallowedMask tokMask | ~ &= "
 ; Expanded expression: "(@-8) (@-20) *(4) (@-16) *(4) | ~ &=(4) "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; |
 or r2 r8 r2
 ; ~
 or r2 r2 r2
 not r2 r2
 ; local ofs
 ; &=
 read -8 r14 r12
 and r12 r2 r2
 write -8 r14 r2
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; goto lcont
 jump Label_3050
 ; }
Label_3060:
 ; switch
 ; RPN'ized expression: "typeMask "
 ; Expanded expression: "(@-12) *(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 jump Label_3063
 ; {
 ; case
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
Label_3064:
 ; RPN'ized expression: "typeMask 18 = "
 ; Expanded expression: "(@-12) 18 =(4) "
 ; 18
 load32 18 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; break
 jump Label_3062
 ; case
 ; RPN'ized expression: "17 "
 ; Expanded expression: "17 "
 ; Expression value: 17
Label_3065:
 ; RPN'ized expression: "typeMask 128 = "
 ; Expanded expression: "(@-12) 128 =(4) "
 ; 128
 load32 128 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; break
 jump Label_3062
 ; case
 ; RPN'ized expression: "33 "
 ; Expanded expression: "33 "
 ; Expression value: 33
Label_3066:
 ; RPN'ized expression: "typeMask 129 = "
 ; Expanded expression: "(@-12) 129 =(4) "
 ; 129
 load32 129 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; break
 jump Label_3062
 ; case
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
Label_3067:
 ; case
 ; RPN'ized expression: "18 "
 ; Expanded expression: "18 "
 ; Expression value: 18
Label_3068:
 ; case
 ; RPN'ized expression: "6 "
 ; Expanded expression: "6 "
 ; Expression value: 6
Label_3069:
 ; case
 ; RPN'ized expression: "22 "
 ; Expanded expression: "22 "
 ; Expression value: 22
Label_3070:
 ; RPN'ized expression: "typeMask 100 = "
 ; Expanded expression: "(@-12) 100 =(4) "
 ; 100
 load32 100 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; break
 jump Label_3062
 ; case
 ; RPN'ized expression: "34 "
 ; Expanded expression: "34 "
 ; Expression value: 34
Label_3071:
 ; case
 ; RPN'ized expression: "38 "
 ; Expanded expression: "38 "
 ; Expression value: 38
Label_3072:
 ; RPN'ized expression: "typeMask 130 = "
 ; Expanded expression: "(@-12) 130 =(4) "
 ; 130
 load32 130 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; break
 jump Label_3062
 ; case
 ; RPN'ized expression: "4 "
 ; Expanded expression: "4 "
 ; Expression value: 4
Label_3073:
 ; case
 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
Label_3074:
 ; case
 ; RPN'ized expression: "20 "
 ; Expanded expression: "20 "
 ; Expression value: 20
Label_3075:
 ; RPN'ized expression: "typeMask 19 = "
 ; Expanded expression: "(@-12) 19 =(4) "
 ; 19
 load32 19 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; break
 jump Label_3062
 ; case
 ; RPN'ized expression: "32 "
 ; Expanded expression: "32 "
 ; Expression value: 32
Label_3076:
 ; case
 ; RPN'ized expression: "36 "
 ; Expanded expression: "36 "
 ; Expression value: 36
Label_3077:
 ; RPN'ized expression: "typeMask 101 = "
 ; Expanded expression: "(@-12) 101 =(4) "
 ; 101
 load32 101 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; break
 jump Label_3062
 ; case
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
Label_3078:
 ; case
 ; RPN'ized expression: "24 "
 ; Expanded expression: "24 "
 ; Expression value: 24
Label_3079:
 ; case
 ; RPN'ized expression: "12 "
 ; Expanded expression: "12 "
 ; Expression value: 12
Label_3080:
 ; case
 ; RPN'ized expression: "28 "
 ; Expanded expression: "28 "
 ; Expression value: 28
Label_3081:
 ; RPN'ized expression: "typeMask 99 = "
 ; Expanded expression: "(@-12) 99 =(4) "
 ; 99
 load32 99 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; break
 jump Label_3062
 ; case
 ; RPN'ized expression: "40 "
 ; Expanded expression: "40 "
 ; Expression value: 40
Label_3082:
 ; case
 ; RPN'ized expression: "44 "
 ; Expanded expression: "44 "
 ; Expression value: 44
Label_3083:
 ; RPN'ized expression: "typeMask 131 = "
 ; Expanded expression: "(@-12) 131 =(4) "
 ; 131
 load32 131 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; break
 jump Label_3062
 ; default
Label_3084:
 ; RPN'ized expression: "( errorDecl ) "
 ; Expanded expression: " errorDecl ()0 "
 ; (
 ; errorDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDecl
 add r13 16 r13
 ; }
 jump Label_3062
Label_3063:
 load32 1 r12
 bne r2 r12 2
 jump Label_3064
 load32 17 r12
 bne r2 r12 2
 jump Label_3065
 load32 33 r12
 bne r2 r12 2
 jump Label_3066
 load32 2 r12
 bne r2 r12 2
 jump Label_3067
 load32 18 r12
 bne r2 r12 2
 jump Label_3068
 load32 6 r12
 bne r2 r12 2
 jump Label_3069
 load32 22 r12
 bne r2 r12 2
 jump Label_3070
 load32 34 r12
 bne r2 r12 2
 jump Label_3071
 load32 38 r12
 bne r2 r12 2
 jump Label_3072
 load32 4 r12
 bne r2 r12 2
 jump Label_3073
 load32 16 r12
 bne r2 r12 2
 jump Label_3074
 load32 20 r12
 bne r2 r12 2
 jump Label_3075
 load32 32 r12
 bne r2 r12 2
 jump Label_3076
 load32 36 r12
 bne r2 r12 2
 jump Label_3077
 load32 8 r12
 bne r2 r12 2
 jump Label_3078
 load32 24 r12
 bne r2 r12 2
 jump Label_3079
 load32 12 r12
 bne r2 r12 2
 jump Label_3080
 load32 28 r12
 bne r2 r12 2
 jump Label_3081
 load32 40 r12
 bne r2 r12 2
 jump Label_3082
 load32 44 r12
 bne r2 r12 2
 jump Label_3083
 jump Label_3084
Label_3062:
 ; RPN'ized expression: "base *u typeMask = "
 ; Expanded expression: "(@12) *(4) (@-12) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
 ; break
 jump Label_3041
 ; case
 ; RPN'ized expression: "113 "
 ; Expanded expression: "113 "
 ; Expression value: 113
Label_3085:
 ; case
 ; RPN'ized expression: "114 "
 ; Expanded expression: "114 "
 ; Expression value: 114
Label_3086:
 ; {
 ; loc             structType : (@-8) : int
 ; RPN'ized expression: "structType tok = "
 ; Expanded expression: "(@-8) (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; loc             empty : (@-12) : int
 ; RPN'ized expression: "empty 1 = "
 ; Expanded expression: "(@-12) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; loc             typePtr : (@-16) : int
 ; RPN'ized expression: "typePtr SyntaxStackCnt = "
 ; Expanded expression: "(@-16) SyntaxStackCnt *(4) =(4) "
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; loc             gotTag : (@-20) : int
 ; RPN'ized expression: "gotTag 0 = "
 ; Expanded expression: "(@-20) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -20 r14 r0
 ; loc             tagIdent : (@-24) : int
 ; RPN'ized expression: "tagIdent 0 = "
 ; Expanded expression: "(@-24) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -24 r14 r0
 ; loc             declPtr : (@-28) : int
 ; RPN'ized expression: "declPtr 1 -u = "
 ; Expanded expression: "(@-28) -1 =(4) "
 ; -1
 load32 -1 r2
 ; local ofs
 ; = (write dereference)
 write -28 r14 r2
 ; loc             curScope : (@-32) : int
 ; RPN'ized expression: "curScope 0 = "
 ; Expanded expression: "(@-32) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -32 r14 r0
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 16 == "
 ; Expanded expression: "(@8) *(4) 16 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3087
 ; {
 ; RPN'ized expression: "gotTag 1 = "
 ; Expanded expression: "(@-20) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; RPN'ized expression: "declPtr ( curScope &u , SyntaxStackCnt 1 - , TokenIdentName FindTaggedDecl ) = "
 ; Expanded expression: "(@-28)  (@-32)  SyntaxStackCnt *(4) 1 -  TokenIdentName  FindTaggedDecl ()12 =(4) "
 ; (
 ; local ofs
 sub r14 32 r6
 ; ,
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r5
 ; 1
 ; -
 sub r5 1 r5
 ; ,
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; FindTaggedDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump FindTaggedDecl
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -28 r14 r2
 ; RPN'ized expression: "tagIdent ( TokenIdentName AddIdent ) = "
 ; Expanded expression: "(@-24)  TokenIdentName  AddIdent ()4 =(4) "
 ; (
 ; TokenIdentName
 addr2reg TokenIdentName r4
 ; ,
 ; AddIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump AddIdent
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; if
 ; RPN'ized expression: "declPtr 0 >= "
 ; Expanded expression: "(@-28) *(4) 0 >= "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 0
 ; >=
 bges r2 r0 2
 jump Label_3089
 ; {
 ; if
 ; RPN'ized expression: "curScope SyntaxStack0 declPtr + *u structType != && "
 ; Expanded expression: "(@-32) *(4) _Bool [sh&&->3093] SyntaxStack0 (@-28) *(4) + *(1) (@-8) *(4) != &&[3093] "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3093
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -28 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; !=
 xor r2 r8 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3093:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3091
 ; RPN'ized expression: "( tagIdent errorTagRedef ) "
 ; Expanded expression: " (@-24) *(4)  errorTagRedef ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -24 r14 r4
 ; ,
 ; errorTagRedef
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorTagRedef
 add r13 16 r13
Label_3091:
 ; }
 jump Label_3090
Label_3089:
 ; else
 ; if
 ; RPN'ized expression: "ParamLevel "
 ; Expanded expression: "ParamLevel *(4) "
 ; ParamLevel
 ; * (read dereference)
 addr2reg ParamLevel r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3094
 ; {
 ; RPN'ized expression: "( errorDecl ) "
 ; Expanded expression: " errorDecl ()0 "
 ; (
 ; errorDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDecl
 add r13 16 r13
 ; }
Label_3094:
Label_3090:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 jump Label_3088
Label_3087:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "ExprLevel "
 ; Expanded expression: "ExprLevel *(4) "
 ; ExprLevel
 ; * (read dereference)
 addr2reg ExprLevel r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3096
 ; RPN'ized expression: "( errorDecl ) "
 ; Expanded expression: " errorDecl ()0 "
 ; (
 ; errorDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDecl
 add r13 16 r13
Label_3096:
 ; RPN'ized expression: "( structType PushSyntax ) "
 ; Expanded expression: " (@-8) *(4)  PushSyntax ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13

.rdata
Label_3098:
.dw 60 115 111 109 101 116 104 105 110 103 62 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( L3098 AddIdent ) , 145 PushSyntax2 ) "
 ; Expanded expression: "  L3098  AddIdent ()4  145  PushSyntax2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; 3098
 addr2reg Label_3098 r2
 ; ,
 ; AddIdent
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump AddIdent
 add r13 16 r13
 ; ,
 ; 145
 sub r13 4 r13
 write 0 r13 r2
 load32 145 r2
 ; ,
 ; PushSyntax2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
 ; }
Label_3088:
 ; if
 ; RPN'ized expression: "tok 123 == "
 ; Expanded expression: "(@8) *(4) 123 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 123
 ; ==
 load32 123 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3099
 ; {
 ; RPN'ized expression: "4 "
 ; Expanded expression: "4 "
 ; Expression value: 4
 ; loc                 structInfo : (@-48) : [4u] unsigned
 ; loc                 sz : (@-52) : unsigned
 ; loc                 alignment : (@-56) : unsigned
 ; loc                 tmp : (@-60) : unsigned
 ; if
 ; RPN'ized expression: "ExprLevel ParamLevel || "
 ; Expanded expression: "ExprLevel *(4) _Bool [sh||->3103] ParamLevel *(4) _Bool ||[3103] "
 ; ExprLevel
 ; * (read dereference)
 addr2reg ExprLevel r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3103
 ; ParamLevel
 ; * (read dereference)
 addr2reg ParamLevel r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_3103:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3101
 ; RPN'ized expression: "( errorDecl ) "
 ; Expanded expression: " errorDecl ()0 "
 ; (
 ; errorDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDecl
 add r13 16 r13
Label_3101:
 ; if
 ; RPN'ized expression: "gotTag "
 ; Expanded expression: "(@-20) *(4) "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3104
 ; {
 ; if
 ; RPN'ized expression: "declPtr 0 >= curScope && declPtr 2 + SyntaxStackCnt < SyntaxStack0 declPtr 2 + + *u 27 == && && "
 ; Expanded expression: "(@-28) *(4) 0 >= [sh&&->3110] (@-32) *(4) _Bool &&[3110] _Bool [sh&&->3108] (@-28) *(4) 2 + SyntaxStackCnt *(4) < [sh&&->3109] SyntaxStack0 (@-28) *(4) 2 + + *(1) 27 == &&[3109] _Bool &&[3108] "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3110
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_3110:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3108
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 2
 ; +
 add r2 2 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3109
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -28 r14 r8
 ; 2
 ; +
 add r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 27
 ; ==
 load32 27 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3109:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_3108:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3106
 ; RPN'ized expression: "( tagIdent errorTagRedef ) "
 ; Expanded expression: " (@-24) *(4)  errorTagRedef ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -24 r14 r4
 ; ,
 ; errorTagRedef
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorTagRedef
 add r13 16 r13
Label_3106:
 ; RPN'ized expression: "( structType PushSyntax ) "
 ; Expanded expression: " (@-8) *(4)  PushSyntax ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; RPN'ized expression: "( tagIdent , 145 PushSyntax2 ) "
 ; Expanded expression: " (@-24) *(4)  145  PushSyntax2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -24 r14 r5
 ; ,
 ; 145
 load32 145 r4
 ; ,
 ; PushSyntax2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
 ; }
Label_3104:
 ; {
 ; RPN'ized expression: "structInfo 0 + *u structType = "
 ; Expanded expression: "(@-48) (@-8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; local ofs
 ; = (write dereference)
 write -48 r14 r2
 ; RPN'ized expression: "structInfo 1 + *u 1 = "
 ; Expanded expression: "(@-44) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; RPN'ized expression: "structInfo 2 + *u 0 = "
 ; Expanded expression: "(@-40) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -40 r14 r0
 ; RPN'ized expression: "structInfo 3 + *u 0 = "
 ; Expanded expression: "(@-36) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -36 r14 r0
 ; RPN'ized expression: "( 27 PushSyntax ) "
 ; Expanded expression: " 27  PushSyntax ()4 "
 ; (
 ; 27
 load32 27 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; RPN'ized expression: "( 1 , 27 PushSyntax2 ) "
 ; Expanded expression: " 1  27  PushSyntax2 ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; 27
 load32 27 r4
 ; ,
 ; PushSyntax2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
 ; RPN'ized expression: "( 123 PushSyntax ) "
 ; Expanded expression: " 123  PushSyntax ()4 "
 ; (
 ; 123
 load32 123 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; while
 ; RPN'ized expression: "tok 125 != "
 ; Expanded expression: "(@8) *(4) 125 != "
Label_3111:
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 125
 ; !=
 load32 125 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3112
 ; {
 ; if
 ; RPN'ized expression: "( 1 , tok TokenStartsDeclaration ) 0 == "
 ; Expanded expression: " 1  (@8) *(4)  TokenStartsDeclaration ()8 0 == "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; TokenStartsDeclaration
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump TokenStartsDeclaration
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3113
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3113:
 ; RPN'ized expression: "tok ( 0 , 0 , structInfo , tok ParseDecl ) = "
 ; Expanded expression: "(@8)  0  0  (@-48)  (@8) *(4)  ParseDecl ()16 =(4) "
 ; (
 ; 0
 load32 0 r7
 ; ,
 ; 0
 load32 0 r6
 ; ,
 ; local ofs
 sub r14 48 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseDecl
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "empty 0 = "
 ; Expanded expression: "(@-12) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -12 r14 r0
 ; }
 jump Label_3111
Label_3112:
 ; if
 ; RPN'ized expression: "empty "
 ; Expanded expression: "(@-12) *(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3115
 ; RPN'ized expression: "( 125 errorUnexpectedToken ) "
 ; Expanded expression: " 125  errorUnexpectedToken ()4 "
 ; (
 ; 125
 load32 125 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3115:
 ; RPN'ized expression: "( 125 PushSyntax ) "
 ; Expanded expression: " 125  PushSyntax ()4 "
 ; (
 ; 125
 load32 125 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; RPN'ized expression: "alignment structInfo 1 + *u = "
 ; Expanded expression: "(@-56) (@-44) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; local ofs
 ; = (write dereference)
 write -56 r14 r2
 ; RPN'ized expression: "SyntaxStack1 typePtr 3 + + *u alignment = "
 ; Expanded expression: "SyntaxStack1 (@-16) *(4) 3 + 4 * + (@-56) *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 3
 ; +
 add r8 3 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -56 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "sz structInfo 2 + *u structInfo 3 + *u + = "
 ; Expanded expression: "(@-52) (@-40) *(4) (@-36) *(4) + =(4) "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -52 r14 r2
 ; RPN'ized expression: "tmp sz = "
 ; Expanded expression: "(@-60) (@-52) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -52 r14 r2
 ; local ofs
 ; = (write dereference)
 write -60 r14 r2
 ; RPN'ized expression: "sz sz alignment + 1 - alignment 1 - ~ & = "
 ; Expanded expression: "(@-52) (@-52) *(4) (@-56) *(4) + 1 - (@-56) *(4) 1 - ~ & =(4) "
 ; local ofs
 ; * (read dereference)
 read -52 r14 r2
 ; local ofs
 ; * (read dereference)
 read -56 r14 r8
 ; +
 add r2 r8 r2
 ; 1
 ; -
 sub r2 1 r2
 ; local ofs
 ; * (read dereference)
 read -56 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; ~
 or r8 r8 r8
 not r8 r8
 ; &
 and r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -52 r14 r2
 ; if
 ; RPN'ized expression: "sz tmp < sz ( sz truncUint ) != || "
 ; Expanded expression: "(@-52) *(4) (@-60) *(4) <u [sh||->3119] (@-52) *(4)  (@-52) *(4)  truncUint ()4 != ||[3119] "
 ; local ofs
 ; * (read dereference)
 read -52 r14 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -60 r14 r2
 ; <u
 read 0 r13 r11
 add r13 4 r13
 bges r11 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3119
 ; local ofs
 ; * (read dereference)
 read -52 r14 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -52 r14 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; !=
 read 0 r13 r11
 add r13 4 r13
 xor r11 r2 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3119:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3117
 ; RPN'ized expression: "( errorVarSize ) "
 ; Expanded expression: " errorVarSize ()0 "
 ; (
 ; errorVarSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorVarSize
 add r13 16 r13
Label_3117:
 ; loc                     <something> : int
 ; RPN'ized expression: "SyntaxStack1 typePtr 2 + + *u sz (something3120) = "
 ; Expanded expression: "SyntaxStack1 (@-16) *(4) 2 + 4 * + (@-52) *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 2
 ; +
 add r8 2 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -52 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 ; }
 jump Label_3100
Label_3099:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "gotTag "
 ; Expanded expression: "(@-20) *(4) "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3121
 ; {
 ; if
 ; RPN'ized expression: "declPtr 0 >= SyntaxStack0 declPtr + *u structType == && "
 ; Expanded expression: "(@-28) *(4) 0 >= [sh&&->3125] SyntaxStack0 (@-28) *(4) + *(1) (@-8) *(4) == &&[3125] "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3125
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -28 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; ==
 xor r2 r8 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3125:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3123
 ; {
 ; RPN'ized expression: "base 0 + *u 144 = "
 ; Expanded expression: "(@12) *(4) 0 + 144 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; +
 add r2 0 r2
 ; 144
 load32 144 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "base 1 + *u declPtr = "
 ; Expanded expression: "(@12) *(4) 4 + (@-28) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -28 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; return
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 jump Label_3040
 ; }
Label_3123:
 ; RPN'ized expression: "( structType PushSyntax ) "
 ; Expanded expression: " (@-8) *(4)  PushSyntax ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; RPN'ized expression: "( tagIdent , 145 PushSyntax2 ) "
 ; Expanded expression: " (@-24) *(4)  145  PushSyntax2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -24 r14 r5
 ; ,
 ; 145
 load32 145 r4
 ; ,
 ; PushSyntax2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
 ; RPN'ized expression: "empty 0 = "
 ; Expanded expression: "(@-12) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -12 r14 r0
 ; }
Label_3121:
 ; }
Label_3100:
 ; if
 ; RPN'ized expression: "empty "
 ; Expanded expression: "(@-12) *(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3126
 ; RPN'ized expression: "( errorDecl ) "
 ; Expanded expression: " errorDecl ()0 "
 ; (
 ; errorDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDecl
 add r13 16 r13
Label_3126:
 ; RPN'ized expression: "base 0 + *u 144 = "
 ; Expanded expression: "(@12) *(4) 0 + 144 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; +
 add r2 0 r2
 ; 144
 load32 144 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "base 1 + *u typePtr = "
 ; Expanded expression: "(@12) *(4) 4 + (@-16) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; if
 ; RPN'ized expression: "gotTag SyntaxStack0 SyntaxStackCnt 1 - + *u 125 == && "
 ; Expanded expression: "(@-20) *(4) _Bool [sh&&->3130] SyntaxStack0 SyntaxStackCnt *(4) 1 - + *(1) 125 == &&[3130] "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3130
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 125
 ; ==
 load32 125 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3130:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3128
 ; {
 ; loc                 i : (@-36) : int
 ; for
 ; RPN'ized expression: "i SyntaxStackCnt 1 - = "
 ; Expanded expression: "(@-36) SyntaxStackCnt *(4) 1 - =(4) "
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r2
 ; 1
 ; -
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
Label_3131:
 ; RPN'ized expression: "i 0 >= "
 ; Expanded expression: "(@-36) *(4) 0 >= "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; 0
 ; >=
 bges r2 r0 2
 jump Label_3134
 ; RPN'ized expression: "i --p "
 ; Expanded expression: "(@-36) --p(4) "
 ; if
 ; RPN'ized expression: "SyntaxStack0 i + *u 144 == "
 ; Expanded expression: "SyntaxStack0 (@-36) *(4) + *(1) 144 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 144
 ; ==
 load32 144 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3135
 ; {
 ; loc                     j : (@-40) : int
 ; RPN'ized expression: "j SyntaxStack1 i + *u = "
 ; Expanded expression: "(@-40) SyntaxStack1 (@-36) *(4) 4 * + *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; if
 ; RPN'ized expression: "SyntaxStack1 j 1 + + *u tagIdent == ( 0 , i GetDeclSize ) 0 == && "
 ; Expanded expression: "SyntaxStack1 (@-40) *(4) 1 + 4 * + *(4) (@-24) *(4) == [sh&&->3139]  0  (@-36) *(4)  GetDeclSize ()8 0 == &&[3139] "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -40 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; 2
 ; <<
 shiftl r2 2 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -24 r14 r2
 ; ==
 read 0 r13 r11
 add r13 4 r13
 xor r11 r2 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3139
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3139:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3137
 ; RPN'ized expression: "SyntaxStack1 i + *u typePtr = "
 ; Expanded expression: "SyntaxStack1 (@-36) *(4) 4 * + (@-16) *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_3137:
 ; }
 jump Label_3136
Label_3135:
 ; else
 ; if
 ; RPN'ized expression: "SyntaxStack0 i + *u 35 == "
 ; Expanded expression: "SyntaxStack0 (@-36) *(4) + *(1) 35 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 35
 ; ==
 load32 35 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3140
 ; {
 ; break
 jump Label_3134
 ; }
Label_3140:
Label_3136:
Label_3132:
 ; local ofs
 ; --p
 read -36 r14 r2
 sub r2 1 r2
 write -36 r14 r2
 add r2 1 r2
 jump Label_3131
Label_3134:
 ; }
Label_3128:
 ; }
 ; break
 jump Label_3041
 ; default
Label_3142:
 ; RPN'ized expression: "valid 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
 ; break
 jump Label_3041
 ; }
 jump Label_3041
Label_3042:
 load32 17 r12
 bne r2 r12 2
 jump Label_3043
 load32 18 r12
 bne r2 r12 2
 jump Label_3044
 load32 19 r12
 bne r2 r12 2
 jump Label_3045
 load32 100 r12
 bne r2 r12 2
 jump Label_3046
 load32 99 r12
 bne r2 r12 2
 jump Label_3047
 load32 102 r12
 bne r2 r12 2
 jump Label_3048
 load32 101 r12
 bne r2 r12 2
 jump Label_3049
 load32 113 r12
 bne r2 r12 2
 jump Label_3085
 load32 114 r12
 bne r2 r12 2
 jump Label_3086
 jump Label_3142
Label_3041:
 ; if
 ; RPN'ized expression: "SizeOfWord 2 == base *u 99 == base *u 131 == || && "
 ; Expanded expression: "SizeOfWord *(4) 2 == [sh&&->3145] (@12) *(4) *(4) 99 == [sh||->3146] (@12) *(4) *(4) 131 == ||[3146] _Bool &&[3145] "
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3145
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 99
 ; ==
 load32 99 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3146
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 131
 ; ==
 load32 131 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3146:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_3145:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3143
 ; RPN'ized expression: "valid 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
Label_3143:
 ; if
 ; RPN'ized expression: "base *u 99 == "
 ; Expanded expression: "(@12) *(4) *(4) 99 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 99
 ; ==
 load32 99 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3147
 ; RPN'ized expression: "base *u 19 = "
 ; Expanded expression: "(@12) *(4) 19 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 19
 load32 19 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_3147:
 ; if
 ; RPN'ized expression: "base *u 131 == "
 ; Expanded expression: "(@12) *(4) *(4) 131 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 131
 ; ==
 load32 131 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3149
 ; RPN'ized expression: "base *u 101 = "
 ; Expanded expression: "(@12) *(4) 101 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 101
 load32 101 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_3149:
 ; if
 ; RPN'ized expression: "SizeOfWord 2 == "
 ; Expanded expression: "SizeOfWord *(4) 2 == "
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3151
 ; {
 ; if
 ; RPN'ized expression: "base *u 100 == "
 ; Expanded expression: "(@12) *(4) *(4) 100 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 100
 ; ==
 load32 100 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3153
 ; RPN'ized expression: "base *u 19 = "
 ; Expanded expression: "(@12) *(4) 19 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 19
 load32 19 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_3153:
 ; if
 ; RPN'ized expression: "base *u 130 == "
 ; Expanded expression: "(@12) *(4) *(4) 130 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 130
 ; ==
 load32 130 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3155
 ; RPN'ized expression: "base *u 101 = "
 ; Expanded expression: "(@12) *(4) 101 =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 101
 load32 101 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_3155:
 ; }
Label_3151:
 ; if
 ; RPN'ized expression: "valid 0 == tok 0 == | "
 ; Expanded expression: "(@-4) *(4) 0 == (@8) *(4) 0 == | "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 0
 ; ==
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; |
 or r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3157

.rdata
Label_3159:
.dw 73 110 118 97 108 105 100 32 111 114 32 117 110 115 117 112 112 111 114 116 101 100 32 116 121 112 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3159 error ) "
 ; Expanded expression: " L3159  error ()4 "
 ; (
 ; 3159
 addr2reg Label_3159 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_3157:
 ; return
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
Label_3040:
 read 4 r14 r15
 read 0 r14 r14
 add r13 68 r13
 jumpr 0 r15

 ; glb ParseDerived : (
 ; prm     tok : int
 ;     ) int
.code
; .globl ParseDerived
ParseDerived:
 write 0 r13 r4
 sub r13         24 r13
 write         16 r13 r14
 add r13         16 r14
   write 4 r14 r15
 ; loc     tok : (@8) : int
 ; loc     stars : (@-4) : int
 ; RPN'ized expression: "stars 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
 ; loc     params : (@-8) : int
 ; RPN'ized expression: "params 0 = "
 ; Expanded expression: "(@-8) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -8 r14 r0
 ; while
 ; RPN'ized expression: "tok 42 == "
 ; Expanded expression: "(@8) *(4) 42 == "
Label_3161:
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 42
 ; ==
 load32 42 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3162
 ; {
 ; RPN'ized expression: "stars ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 jump Label_3161
Label_3162:
 ; if
 ; RPN'ized expression: "tok 40 == "
 ; Expanded expression: "(@8) *(4) 40 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3163
 ; {
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 41 != ( 1 , tok TokenStartsDeclaration ) 0 == && "
 ; Expanded expression: "(@8) *(4) 41 != [sh&&->3167]  1  (@8) *(4)  TokenStartsDeclaration ()8 0 == &&[3167] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 41
 ; !=
 load32 41 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3167
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; TokenStartsDeclaration
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump TokenStartsDeclaration
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3167:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3165
 ; {
 ; RPN'ized expression: "tok ( tok ParseDerived ) = "
 ; Expanded expression: "(@8)  (@8) *(4)  ParseDerived ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseDerived
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseDerived
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 41 != "
 ; Expanded expression: "(@8) *(4) 41 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 41
 ; !=
 load32 41 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3168
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3168:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 jump Label_3166
Label_3165:
 ; else
 ; {
 ; RPN'ized expression: "params 1 = "
 ; Expanded expression: "(@-8) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; }
Label_3166:
 ; }
 jump Label_3164
Label_3163:
 ; else
 ; if
 ; RPN'ized expression: "tok 16 == "
 ; Expanded expression: "(@8) *(4) 16 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3170
 ; {
 ; RPN'ized expression: "( ( TokenIdentName AddIdent ) , tok PushSyntax2 ) "
 ; Expanded expression: "  TokenIdentName  AddIdent ()4  (@8) *(4)  PushSyntax2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; TokenIdentName
 addr2reg TokenIdentName r2
 ; ,
 ; AddIdent
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump AddIdent
 add r13 16 r13
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read 8 r14 r2
 ; ,
 ; PushSyntax2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 jump Label_3171
Label_3170:
 ; else
 ; {

.rdata
Label_3172:
.dw 60 115 111 109 101 116 104 105 110 103 62 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( L3172 AddIdent ) , 16 PushSyntax2 ) "
 ; Expanded expression: "  L3172  AddIdent ()4  16  PushSyntax2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; 3172
 addr2reg Label_3172 r2
 ; ,
 ; AddIdent
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump AddIdent
 add r13 16 r13
 ; ,
 ; 16
 sub r13 4 r13
 write 0 r13 r2
 load32 16 r2
 ; ,
 ; PushSyntax2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
 ; }
Label_3171:
Label_3164:
 ; if
 ; RPN'ized expression: "params tok 40 == | "
 ; Expanded expression: "(@-8) *(4) (@8) *(4) 40 == | "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 40
 ; ==
 load32 40 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; |
 or r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3173
 ; {
 ; loc         t : (@-12) : int
 ; RPN'ized expression: "t SyntaxStack0 SyntaxStackCnt 1 - + *u = "
 ; Expanded expression: "(@-12) SyntaxStack0 SyntaxStackCnt *(4) 1 - + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; if
 ; RPN'ized expression: "t 41 == t 93 == | "
 ; Expanded expression: "(@-12) *(4) 41 == (@-12) *(4) 93 == | "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 93
 ; ==
 load32 93 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; |
 or r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3175
 ; RPN'ized expression: "( 40 errorUnexpectedToken ) "
 ; Expanded expression: " 40  errorUnexpectedToken ()4 "
 ; (
 ; 40
 load32 40 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3175:
 ; if
 ; RPN'ized expression: "params 0 == "
 ; Expanded expression: "(@-8) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3177
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 jump Label_3178
Label_3177:
 ; else

.rdata
Label_3179:
.dw 60 115 111 109 101 116 104 105 110 103 62 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( L3179 AddIdent ) , 16 PushSyntax2 ) "
 ; Expanded expression: "  L3179  AddIdent ()4  16  PushSyntax2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; 3179
 addr2reg Label_3179 r2
 ; ,
 ; AddIdent
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump AddIdent
 add r13 16 r13
 ; ,
 ; 16
 sub r13 4 r13
 write 0 r13 r2
 load32 16 r2
 ; ,
 ; PushSyntax2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
Label_3178:
 ; RPN'ized expression: "( 40 PushSyntax ) "
 ; Expanded expression: " 40  PushSyntax ()4 "
 ; (
 ; 40
 load32 40 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; RPN'ized expression: "ParseLevel ++p "
 ; Expanded expression: "ParseLevel ++p(4) "
 ; ParseLevel
 ; ++p
 addr2reg ParseLevel r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg ParseLevel r1
 write 0 r1 r2
 sub r2 1 r2
 ; RPN'ized expression: "ParamLevel ++p "
 ; Expanded expression: "ParamLevel ++p(4) "
 ; ParamLevel
 ; ++p
 addr2reg ParamLevel r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg ParamLevel r1
 write 0 r1 r2
 sub r2 1 r2
 ; RPN'ized expression: "( tok ParseFxnParams ) "
 ; Expanded expression: " (@8) *(4)  ParseFxnParams ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseFxnParams
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseFxnParams
 add r13 16 r13
 ; RPN'ized expression: "ParamLevel --p "
 ; Expanded expression: "ParamLevel --p(4) "
 ; ParamLevel
 ; --p
 addr2reg ParamLevel r1
 read 0 r1 r2
 sub r2 1 r2
 addr2reg ParamLevel r1
 write 0 r1 r2
 add r2 1 r2
 ; RPN'ized expression: "ParseLevel --p "
 ; Expanded expression: "ParseLevel --p(4) "
 ; ParseLevel
 ; --p
 addr2reg ParseLevel r1
 read 0 r1 r2
 sub r2 1 r2
 addr2reg ParseLevel r1
 write 0 r1 r2
 add r2 1 r2
 ; RPN'ized expression: "( 41 PushSyntax ) "
 ; Expanded expression: " 41  PushSyntax ()4 "
 ; (
 ; 41
 load32 41 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 jump Label_3174
Label_3173:
 ; else
 ; if
 ; RPN'ized expression: "tok 91 == "
 ; Expanded expression: "(@8) *(4) 91 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 91
 ; ==
 load32 91 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3180
 ; {
 ; loc         allowEmptyDimension : (@-12) : int
 ; RPN'ized expression: "allowEmptyDimension 1 = "
 ; Expanded expression: "(@-12) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; if
 ; RPN'ized expression: "SyntaxStack0 SyntaxStackCnt 1 - + *u 41 == "
 ; Expanded expression: "SyntaxStack0 SyntaxStackCnt *(4) 1 - + *(1) 41 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3182
 ; RPN'ized expression: "( 91 errorUnexpectedToken ) "
 ; Expanded expression: " 91  errorUnexpectedToken ()4 "
 ; (
 ; 91
 load32 91 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3182:
 ; while
 ; RPN'ized expression: "tok 91 == "
 ; Expanded expression: "(@8) *(4) 91 == "
Label_3184:
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 91
 ; ==
 load32 91 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3185
 ; {
 ; loc             oldsp : (@-16) : int
 ; RPN'ized expression: "oldsp SyntaxStackCnt = "
 ; Expanded expression: "(@-16) SyntaxStackCnt *(4) =(4) "
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "( 17 PushSyntax ) "
 ; Expanded expression: " 17  PushSyntax ()4 "
 ; (
 ; 17
 load32 17 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; RPN'ized expression: "( tok PushSyntax ) "
 ; Expanded expression: " (@8) *(4)  PushSyntax ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; RPN'ized expression: "tok ( allowEmptyDimension ParseArrayDimension ) = "
 ; Expanded expression: "(@8)  (@-12) *(4)  ParseArrayDimension ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; ParseArrayDimension
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseArrayDimension
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 93 != "
 ; Expanded expression: "(@8) *(4) 93 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 93
 ; !=
 load32 93 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3186
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3186:
 ; RPN'ized expression: "( 93 PushSyntax ) "
 ; Expanded expression: " 93  PushSyntax ()4 "
 ; (
 ; 93
 load32 93 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "( 1 , oldsp DeleteSyntax ) "
 ; Expanded expression: " 1  (@-16) *(4)  DeleteSyntax ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; ,
 ; DeleteSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DeleteSyntax
 add r13 16 r13
 ; RPN'ized expression: "allowEmptyDimension 0 = "
 ; Expanded expression: "(@-12) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -12 r14 r0
 ; }
 jump Label_3184
Label_3185:
 ; }
Label_3180:
Label_3174:
 ; while
 ; RPN'ized expression: "stars --p "
 ; Expanded expression: "(@-4) --p(4) "
Label_3188:
 ; local ofs
 ; --p
 read -4 r14 r2
 sub r2 1 r2
 write -4 r14 r2
 add r2 1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3189
 ; RPN'ized expression: "( 42 PushSyntax ) "
 ; Expanded expression: " 42  PushSyntax ()4 "
 ; (
 ; 42
 load32 42 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 jump Label_3188
Label_3189:
 ; if

.rdata
Label_3192:
.dw 44 59 123 61 41 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "tok 0 == ( tok , L3192 strchr ) 0 == || "
 ; Expanded expression: "(@8) *(4) 0 == [sh||->3193]  (@8) *(4)  L3192  strchr ()8 0 == ||[3193] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3193
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 3192
 addr2reg Label_3192 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3193:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3190
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3190:
 ; return
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
Label_3160:
 read 4 r14 r15
 read 0 r14 r14
 add r13 24 r13
 jumpr 0 r15

 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb PushBase : (
 ; prm     base : * int
 ;     ) void
.code
; .globl PushBase
PushBase:
 write 0 r13 r4
 sub r13          8 r13
 write          0 r13 r14
 add r13          0 r14
   write 4 r14 r15
 ; loc     base : (@8) : * int
 ; {
 ; RPN'ized expression: "( base 1 + *u , base 0 + *u PushSyntax2 ) "
 ; Expanded expression: " (@8) *(4) 4 + *(4)  (@8) *(4) 0 + *(4)  PushSyntax2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; 4
 ; +
 add r5 4 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; 0
 ; +
 add r4 0 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; PushSyntax2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
 ; }
 ; if
 ; RPN'ized expression: "SyntaxStack0 SyntaxStackCnt 1 - + *u 17 == SyntaxStack0 SyntaxStackCnt 2 - + *u 93 == && "
 ; Expanded expression: "SyntaxStack0 SyntaxStackCnt *(4) 1 - + *(1) 17 == [sh&&->3197] SyntaxStack0 SyntaxStackCnt *(4) 2 - + *(1) 93 == &&[3197] "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 17
 ; ==
 load32 17 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3197
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; 2
 ; -
 sub r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 93
 ; ==
 load32 93 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3197:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3195
 ; RPN'ized expression: "( errorUnexpectedVoid ) "
 ; Expanded expression: " errorUnexpectedVoid ()0 "
 ; (
 ; errorUnexpectedVoid
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedVoid
 add r13 16 r13
Label_3195:
Label_3194:
 read 4 r14 r15
 read 0 r14 r14
 add r13 8 r13
 jumpr 0 r15

 ; glb InitScalar : (
 ; prm     synPtr : int
 ; prm     tok : int
 ;     ) int
 ; glb InitArray : (
 ; prm     synPtr : int
 ; prm     tok : int
 ;     ) int
 ; glb InitStruct : (
 ; prm     synPtr : int
 ; prm     tok : int
 ;     ) int
 ; glb InitVar : (
 ; prm     synPtr : int
 ; prm     tok : int
 ;     ) int
.code
; .globl InitVar
InitVar:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         20 r13
 write         12 r13 r14
 add r13         12 r14
   write 4 r14 r15
 ; loc     synPtr : (@8) : int
 ; loc     tok : (@12) : int
 ; loc     p : (@-4) : int
 ; RPN'ized expression: "p synPtr = "
 ; Expanded expression: "(@-4) (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc     t : (@-8) : int
 ; loc     undoIdents : (@-12) : int
 ; RPN'ized expression: "undoIdents IdentTableLen = "
 ; Expanded expression: "(@-12) IdentTableLen *(4) =(4) "
 ; IdentTableLen
 ; * (read dereference)
 addr2reg IdentTableLen r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; while
 ; RPN'ized expression: "t SyntaxStack0 p + *u = t 16 == t 89 == | ,b "
 ; Expanded expression: "(@-8) SyntaxStack0 (@-4) *(4) + *(1) =(4) void (@-8) *(4) 16 == (@-8) *(4) 89 == | ,b "
Label_3199:
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; void
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 89
 ; ==
 load32 89 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; |
 or r2 r8 r2
 ; ,b
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3200
 ; RPN'ized expression: "p ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_3199
Label_3200:
 ; switch
 ; RPN'ized expression: "t "
 ; Expanded expression: "(@-8) *(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 jump Label_3202
 ; {
 ; case
 ; RPN'ized expression: "91 "
 ; Expanded expression: "91 "
 ; Expression value: 91
Label_3203:
 ; if
 ; RPN'ized expression: "tok 123 != "
 ; Expanded expression: "(@12) *(4) 123 != "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 123
 ; !=
 load32 123 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3204
 ; {
 ; RPN'ized expression: "t SyntaxStack0 p 3 + + *u = "
 ; Expanded expression: "(@-8) SyntaxStack0 (@-4) *(4) 3 + + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 3
 ; +
 add r8 3 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "tok 3 != t 18 != t 129 != & t 128 != & | "
 ; Expanded expression: "(@12) *(4) 3 != (@-8) *(4) 18 != (@-8) *(4) 129 != & (@-8) *(4) 128 != & | "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 3
 ; !=
 load32 3 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 18
 ; !=
 load32 18 r1
 xor r8 r1 r8
 bges r0 r8 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; local ofs
 ; * (read dereference)
 read -8 r14 r9
 ; 129
 ; !=
 load32 129 r1
 xor r9 r1 r9
 bges r0 r9 3
 load32 1 r9
 jumpo 2
 load32 0 r9
 ; &
 and r8 r9 r8
 ; local ofs
 ; * (read dereference)
 read -8 r14 r9
 ; 128
 ; !=
 load32 128 r1
 xor r9 r1 r9
 bges r0 r9 3
 load32 1 r9
 jumpo 2
 load32 0 r9
 ; &
 and r8 r9 r8
 ; |
 or r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3206
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@12) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3206:
 ; }
Label_3204:
 ; RPN'ized expression: "tok ( tok , p InitArray ) = "
 ; Expanded expression: "(@12)  (@12) *(4)  (@-4) *(4)  InitArray ()8 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; InitArray
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump InitArray
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; break
 jump Label_3201
 ; case
 ; RPN'ized expression: "144 "
 ; Expanded expression: "144 "
 ; Expression value: 144
Label_3208:
 ; if
 ; RPN'ized expression: "tok 123 != "
 ; Expanded expression: "(@12) *(4) 123 != "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 123
 ; !=
 load32 123 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3209
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@12) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3209:
 ; RPN'ized expression: "tok ( tok , p InitStruct ) = "
 ; Expanded expression: "(@12)  (@12) *(4)  (@-4) *(4)  InitStruct ()8 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; InitStruct
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump InitStruct
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; break
 jump Label_3201
 ; default
Label_3211:
 ; RPN'ized expression: "tok ( tok , p InitScalar ) = "
 ; Expanded expression: "(@12)  (@12) *(4)  (@-4) *(4)  InitScalar ()8 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; InitScalar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump InitScalar
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; break
 jump Label_3201
 ; }
 jump Label_3201
Label_3202:
 load32 91 r12
 bne r2 r12 2
 jump Label_3203
 load32 144 r12
 bne r2 r12 2
 jump Label_3208
 jump Label_3211
Label_3201:
 ; if

.rdata
Label_3214:
.dw 44 59 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( tok , L3214 strchr ) 0 == "
 ; Expanded expression: " (@12) *(4)  L3214  strchr ()8 0 == "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; 3214
 addr2reg Label_3214 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3212
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@12) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3212:
 ; RPN'ized expression: "IdentTableLen undoIdents = "
 ; Expanded expression: "IdentTableLen (@-12) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; IdentTableLen
 ; = (write dereference)
 addr2reg IdentTableLen r1
 write 0 r1 r2
 ; return
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@12) *(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
Label_3198:
 read 4 r14 r15
 read 0 r14 r14
 add r13 20 r13
 jumpr 0 r15

 ; glb InitScalar : (
 ; prm     synPtr : int
 ; prm     tok : int
 ;     ) int
.code
; .globl InitScalar
InitScalar:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         52 r13
 write         44 r13 r14
 add r13         44 r14
   write 4 r14 r15
 ; loc     synPtr : (@8) : int
 ; loc     tok : (@12) : int
 ; loc     elementSz : (@-4) : unsigned
 ; RPN'ized expression: "elementSz ( 0 , synPtr GetDeclSize ) = "
 ; Expanded expression: "(@-4)  0  (@8) *(4)  GetDeclSize ()8 =(4) "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc     gotUnary : (@-8) : int
 ; loc     synPtr2 : (@-12) : int
 ; loc     constExpr : (@-16) : int
 ; loc     exprVal : (@-20) : int
 ; loc     oldssp : (@-24) : int
 ; RPN'ized expression: "oldssp SyntaxStackCnt = "
 ; Expanded expression: "(@-24) SyntaxStackCnt *(4) =(4) "
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; loc     undoIdents : (@-28) : int
 ; RPN'ized expression: "undoIdents IdentTableLen = "
 ; Expanded expression: "(@-28) IdentTableLen *(4) =(4) "
 ; IdentTableLen
 ; * (read dereference)
 addr2reg IdentTableLen r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -28 r14 r2
 ; loc     ttop : (@-32) : int
 ; loc     braces : (@-36) : int
 ; RPN'ized expression: "braces 0 = "
 ; Expanded expression: "(@-36) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -36 r14 r0
 ; if
 ; RPN'ized expression: "tok 123 == "
 ; Expanded expression: "(@12) *(4) 123 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 123
 ; ==
 load32 123 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3216
 ; {
 ; RPN'ized expression: "braces 1 = "
 ; Expanded expression: "(@-36) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@12)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; }
Label_3216:
 ; RPN'ized expression: "tok ( 0 , 44 , exprVal &u , constExpr &u , synPtr2 &u , gotUnary &u , tok ParseExpr ) = "
 ; Expanded expression: "(@12)  0  44  (@-20)  (@-16)  (@-12)  (@-8)  (@12) *(4)  ParseExpr ()28 =(4) "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 44
 sub r13 4 r13
 write 0 r13 r2
 load32 44 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 sub r14 20 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 sub r14 16 r7
 ; ,
 ; local ofs
 sub r14 12 r6
 ; ,
 ; local ofs
 sub r14 8 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; ParseExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseExpr
 add r13 28 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; if
 ; RPN'ized expression: "gotUnary 0 == "
 ; Expanded expression: "(@-8) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3218
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@12) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3218:
 ; if
 ; RPN'ized expression: "braces "
 ; Expanded expression: "(@-36) *(4) "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3220
 ; {
 ; if
 ; RPN'ized expression: "tok 125 != "
 ; Expanded expression: "(@12) *(4) 125 != "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 125
 ; !=
 load32 125 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3222
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@12) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3222:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@12)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; }
Label_3220:
 ; RPN'ized expression: "( synPtr2 scalarTypeCheck ) "
 ; Expanded expression: " (@-12) *(4)  scalarTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; scalarTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump scalarTypeCheck
 add r13 16 r13
 ; RPN'ized expression: "ttop stack sp 1 - + *u 0 + *u = "
 ; Expanded expression: "(@-32) stack sp *(4) 1 - 8 * + 0 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; if
 ; RPN'ized expression: "ttop 1 == ttop 2 == || "
 ; Expanded expression: "(@-32) *(4) 1 == [sh||->3226] (@-32) *(4) 2 == ||[3226] "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3226
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3226:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3224
 ; {
 ; loc         val : (@-40) : int
 ; RPN'ized expression: "val stack sp 1 - + *u 1 + *u = "
 ; Expanded expression: "(@-40) stack sp *(4) 1 - 8 * + 4 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; RPN'ized expression: "( val , elementSz GenIntData ) "
 ; Expanded expression: " (@-40) *(4)  (@-4) *(4)  GenIntData ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -40 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenIntData
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenIntData
 add r13 16 r13
 ; }
 jump Label_3225
Label_3224:
 ; else
 ; if
 ; loc     <something> : unsigned
 ; RPN'ized expression: "elementSz SizeOfWord (something3229) == "
 ; Expanded expression: "(@-4) *(4) SizeOfWord *(4) == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r8
 ; ==
 beq r2 r8 2
 jump Label_3227
 ; {
 ; if
 ; RPN'ized expression: "ttop 16 == "
 ; Expanded expression: "(@-32) *(4) 16 == "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3230
 ; {
 ; RPN'ized expression: "( 0 , IdentTable stack sp 1 - + *u 1 + *u + , elementSz GenAddrData ) "
 ; Expanded expression: " 0  IdentTable stack sp *(4) 1 - 8 * + 4 + *(4) +  (@-4) *(4)  GenAddrData ()12 "
 ; (
 ; 0
 load32 0 r6
 ; ,
 ; IdentTable
 addr2reg IdentTable r5
 ; stack
 sub r13 4 r13
 write 0 r13 r5
 addr2reg stack r5
 ; sp
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r5
 ; 1
 ; -
 sub r5 1 r5
 ; 3
 ; <<
 shiftl r5 3 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; 4
 ; +
 add r5 4 r5
 ; * (read dereference)
 read 0 r5 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenAddrData
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenAddrData
 add r13 16 r13
 ; }
 jump Label_3231
Label_3230:
 ; else
 ; if
 ; RPN'ized expression: "ttop 43 == ttop 45 == || "
 ; Expanded expression: "(@-32) *(4) 43 == [sh||->3234] (@-32) *(4) 45 == ||[3234] "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 43
 ; ==
 load32 43 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3234
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 45
 ; ==
 load32 45 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3234:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3232
 ; {
 ; loc             tleft : (@-40) : int
 ; RPN'ized expression: "tleft stack sp 3 - + *u 0 + *u = "
 ; Expanded expression: "(@-40) stack sp *(4) 3 - 8 * + 0 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; 3
 ; -
 sub r8 3 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; loc             tright : (@-44) : int
 ; RPN'ized expression: "tright stack sp 2 - + *u 0 + *u = "
 ; Expanded expression: "(@-44) stack sp *(4) 2 - 8 * + 0 + *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; 2
 ; -
 sub r8 2 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; if
 ; RPN'ized expression: "tleft 16 == tright 1 == tright 2 == || && "
 ; Expanded expression: "(@-40) *(4) 16 == [sh&&->3237] (@-44) *(4) 1 == [sh||->3238] (@-44) *(4) 2 == ||[3238] _Bool &&[3237] "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3237
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3238
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3238:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_3237:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3235
 ; {
 ; RPN'ized expression: "( ttop 43 == stack sp 2 - + *u 1 + *u -u stack sp 2 - + *u 1 + *u ? , IdentTable stack sp 3 - + *u 1 + *u + , elementSz GenAddrData ) "
 ; Expanded expression: " (@-32) *(4) 43 == [sh||->3239] stack sp *(4) 2 - 8 * + 4 + *(4) -u goto &&[3239] stack sp *(4) 2 - 8 * + 4 + *(4) &&[3240]  IdentTable stack sp *(4) 3 - 8 * + 4 + *(4) +  (@-4) *(4)  GenAddrData ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r6
 ; 43
 ; ==
 load32 43 r1
 xor r6 r1 r6
 load32 1 r1
 bges r6 r1 3
 load32 1 r6
 jumpo 2
 load32 0 r6
 ; short-circuit ||
 ; JumpIfNotZero
 beq r6 r0 2
 jump Label_3239
 ; stack
 addr2reg stack r6
 ; sp
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r6
 ; 2
 ; -
 sub r6 2 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; -u
 sub r0 r6 r6
 ; sh-circ-goto goto
 jump Label_3240
 ; short-circuit && target
Label_3239:
 ; stack
 addr2reg stack r6
 ; sp
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r6
 ; 2
 ; -
 sub r6 2 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; short-circuit && target
Label_3240:
 ; ,
 ; IdentTable
 addr2reg IdentTable r5
 ; stack
 sub r13 4 r13
 write 0 r13 r5
 addr2reg stack r5
 ; sp
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r5
 ; 3
 ; -
 sub r5 3 r5
 ; 3
 ; <<
 shiftl r5 3 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; 4
 ; +
 add r5 4 r5
 ; * (read dereference)
 read 0 r5 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenAddrData
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenAddrData
 add r13 16 r13
 ; }
 jump Label_3236
Label_3235:
 ; else
 ; if
 ; RPN'ized expression: "ttop 43 == tright 16 == && tleft 1 == tleft 2 == || && "
 ; Expanded expression: "(@-32) *(4) 43 == [sh&&->3245] (@-44) *(4) 16 == &&[3245] _Bool [sh&&->3243] (@-40) *(4) 1 == [sh||->3244] (@-40) *(4) 2 == ||[3244] _Bool &&[3243] "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 43
 ; ==
 load32 43 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3245
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3245:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3243
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3244
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3244:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_3243:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3241
 ; {
 ; RPN'ized expression: "( stack sp 3 - + *u 1 + *u , IdentTable stack sp 2 - + *u 1 + *u + , elementSz GenAddrData ) "
 ; Expanded expression: " stack sp *(4) 3 - 8 * + 4 + *(4)  IdentTable stack sp *(4) 2 - 8 * + 4 + *(4) +  (@-4) *(4)  GenAddrData ()12 "
 ; (
 ; stack
 addr2reg stack r6
 ; sp
 sub r13 4 r13
 write 0 r13 r6
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r6
 ; 3
 ; -
 sub r6 3 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r6 r6
 ; 4
 ; +
 add r6 4 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; IdentTable
 addr2reg IdentTable r5
 ; stack
 sub r13 4 r13
 write 0 r13 r5
 addr2reg stack r5
 ; sp
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r5
 ; 2
 ; -
 sub r5 2 r5
 ; 3
 ; <<
 shiftl r5 3 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; 4
 ; +
 add r5 4 r5
 ; * (read dereference)
 read 0 r5 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GenAddrData
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenAddrData
 add r13 16 r13
 ; }
 jump Label_3242
Label_3241:
 ; else
 ; RPN'ized expression: "( errorNotConst ) "
 ; Expanded expression: " errorNotConst ()0 "
 ; (
 ; errorNotConst
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorNotConst
 add r13 16 r13
Label_3242:
Label_3236:
 ; }
 jump Label_3233
Label_3232:
 ; else
 ; RPN'ized expression: "( errorNotConst ) "
 ; Expanded expression: " errorNotConst ()0 "
 ; (
 ; errorNotConst
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorNotConst
 add r13 16 r13
Label_3233:
Label_3231:
 ; }
 jump Label_3228
Label_3227:
 ; else
 ; RPN'ized expression: "( errorNotConst ) "
 ; Expanded expression: " errorNotConst ()0 "
 ; (
 ; errorNotConst
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorNotConst
 add r13 16 r13
Label_3228:
Label_3225:
 ; RPN'ized expression: "IdentTableLen undoIdents = "
 ; Expanded expression: "IdentTableLen (@-28) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; IdentTableLen
 ; = (write dereference)
 addr2reg IdentTableLen r1
 write 0 r1 r2
 ; RPN'ized expression: "SyntaxStackCnt oldssp = "
 ; Expanded expression: "SyntaxStackCnt (@-24) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; SyntaxStackCnt
 ; = (write dereference)
 addr2reg SyntaxStackCnt r1
 write 0 r1 r2
 ; return
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@12) *(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
Label_3215:
 read 4 r14 r15
 read 0 r14 r14
 add r13 52 r13
 jumpr 0 r15

 ; glb InitArray : (
 ; prm     synPtr : int
 ; prm     tok : int
 ;     ) int
.code
; .globl InitArray
InitArray:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         44 r13
 write         36 r13 r14
 add r13         36 r14
   write 4 r14 r15
 ; loc     synPtr : (@8) : int
 ; loc     tok : (@12) : int
 ; loc     elementTypePtr : (@-4) : int
 ; RPN'ized expression: "elementTypePtr synPtr 3 + = "
 ; Expanded expression: "(@-4) (@8) *(4) 3 + =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 3
 ; +
 add r2 3 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; loc     elementType : (@-8) : int
 ; RPN'ized expression: "elementType SyntaxStack0 elementTypePtr + *u = "
 ; Expanded expression: "(@-8) SyntaxStack0 (@-4) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; loc     elementSz : (@-12) : unsigned
 ; RPN'ized expression: "elementSz ( 0 , elementTypePtr GetDeclSize ) = "
 ; Expanded expression: "(@-12)  0  (@-4) *(4)  GetDeclSize ()8 =(4) "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; loc     braces : (@-16) : int
 ; RPN'ized expression: "braces 0 = "
 ; Expanded expression: "(@-16) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -16 r14 r0
 ; loc     elementCnt : (@-20) : unsigned
 ; RPN'ized expression: "elementCnt 0 = "
 ; Expanded expression: "(@-20) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -20 r14 r0
 ; loc     elementsRequired : (@-24) : unsigned
 ; RPN'ized expression: "elementsRequired SyntaxStack1 synPtr 1 + + *u = "
 ; Expanded expression: "(@-24) SyntaxStack1 (@8) *(4) 1 + 4 * + *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; loc     arrOfChar : (@-28) : int
 ; RPN'ized expression: "arrOfChar elementType 18 == elementType 129 == | elementType 128 == | = "
 ; Expanded expression: "(@-28) (@-8) *(4) 18 == (@-8) *(4) 129 == | (@-8) *(4) 128 == | =(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 18
 ; ==
 load32 18 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 129
 ; ==
 load32 129 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; |
 or r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; 128
 ; ==
 load32 128 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; |
 or r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -28 r14 r2
 ; if
 ; RPN'ized expression: "tok 123 == "
 ; Expanded expression: "(@12) *(4) 123 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 123
 ; ==
 load32 123 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3247
 ; {
 ; RPN'ized expression: "braces 1 = "
 ; Expanded expression: "(@-16) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@12)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; }
Label_3247:
 ; if
 ; RPN'ized expression: "arrOfChar tok 3 == & "
 ; Expanded expression: "(@-28) *(4) (@12) *(4) 3 == & "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; 3
 ; ==
 load32 3 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; &
 and r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3249
 ; {
 ; loc         ltok : (@-32) : int
 ; RPN'ized expression: "ltok tok = "
 ; Expanded expression: "(@-32) (@12) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; loc         sz : (@-36) : unsigned
 ; RPN'ized expression: "sz 0 = "
 ; Expanded expression: "(@-36) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -36 r14 r0
 ; do
Label_3251:
 ; {
 ; RPN'ized expression: "( 100 , 0 , 34 GetString ) "
 ; Expanded expression: " 100  0  34  GetString ()12 "
 ; (
 ; 100
 load32 100 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 34
 load32 34 r4
 ; ,
 ; GetString
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetString
 add r13 16 r13
 ; if
 ; RPN'ized expression: "sz TokenStringSize + sz < sz TokenStringSize + ( 1 -u truncUint ) >= || "
 ; Expanded expression: "(@-36) *(4) TokenStringSize *(4) + (@-36) *(4) <u [sh||->3256] (@-36) *(4) TokenStringSize *(4) +  -1  truncUint ()4 >=u ||[3256] "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; TokenStringSize
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg TokenStringSize r1
 read 0 r1 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -36 r14 r2
 ; <u
 read 0 r13 r11
 add r13 4 r13
 bges r11 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3256
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; TokenStringSize
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg TokenStringSize r1
 read 0 r1 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; -1
 load32 -1 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; >=u
 read 0 r13 r11
 add r13 4 r13
 bges r11 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit || target
Label_3256:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3254
 ; RPN'ized expression: "( errorStrLen ) "
 ; Expanded expression: " errorStrLen ()0 "
 ; (
 ; errorStrLen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorStrLen
 add r13 16 r13
Label_3254:
 ; RPN'ized expression: "sz TokenStringSize += "
 ; Expanded expression: "(@-36) TokenStringSize *(4) +=(4) "
 ; TokenStringSize
 ; * (read dereference)
 addr2reg TokenStringSize r1
 read 0 r1 r2
 ; local ofs
 ; +=
 read -36 r14 r12
 add r12 r2 r2
 write -36 r14 r2
 ; RPN'ized expression: "elementCnt TokenStringLen += "
 ; Expanded expression: "(@-20) TokenStringLen *(4) +=(4) "
 ; TokenStringLen
 ; * (read dereference)
 addr2reg TokenStringLen r1
 read 0 r1 r2
 ; local ofs
 ; +=
 read -20 r14 r12
 add r12 r2 r2
 write -20 r14 r2
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@12)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; }
 ; while
 ; RPN'ized expression: "tok ltok == "
 ; Expanded expression: "(@12) *(4) (@-32) *(4) == "
Label_3252:
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; local ofs
 ; * (read dereference)
 read -32 r14 r8
 ; ==
 bne r2 r8 2
 jump Label_3251
Label_3253:
 ; if
 ; RPN'ized expression: "elementsRequired elementCnt elementsRequired > && "
 ; Expanded expression: "(@-24) *(4) _Bool [sh&&->3259] (@-20) *(4) (@-24) *(4) >u &&[3259] "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3259
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; local ofs
 ; * (read dereference)
 read -24 r14 r8
 ; >u
 bges r8 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3259:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3257
 ; RPN'ized expression: "( errorStrLen ) "
 ; Expanded expression: " errorStrLen ()0 "
 ; (
 ; errorStrLen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorStrLen
 add r13 16 r13
Label_3257:
 ; if
 ; RPN'ized expression: "elementCnt elementsRequired < "
 ; Expanded expression: "(@-20) *(4) (@-24) *(4) <u "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; local ofs
 ; * (read dereference)
 read -24 r14 r8
 ; <u
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_3260
 ; RPN'ized expression: "( 0 , elementsRequired elementCnt - GenZeroData ) "
 ; Expanded expression: " 0  (@-24) *(4) (@-20) *(4) -  GenZeroData ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -24 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; GenZeroData
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenZeroData
 add r13 16 r13
Label_3260:
 ; if
 ; RPN'ized expression: "elementsRequired 0 == "
 ; Expanded expression: "(@-24) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3262
 ; RPN'ized expression: "( 0 , elementSz GenZeroData ) elementCnt ++p ,b "
 ; Expanded expression: " 0  (@-12) *(4)  GenZeroData ()8 void (@-20) ++p(4) ,b "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; GenZeroData
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenZeroData
 add r13 16 r13
 ; void
 ; local ofs
 ; ++p
 read -20 r14 r2
 add r2 1 r2
 write -20 r14 r2
 sub r2 1 r2
 ; ,b
Label_3262:
 ; if
 ; RPN'ized expression: "braces "
 ; Expanded expression: "(@-16) *(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3264
 ; {
 ; if
 ; RPN'ized expression: "tok 125 != "
 ; Expanded expression: "(@12) *(4) 125 != "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 125
 ; !=
 load32 125 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3266
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@12) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3266:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@12)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; }
Label_3264:
 ; }
 jump Label_3250
Label_3249:
 ; else
 ; {
 ; while
 ; RPN'ized expression: "tok 125 != "
 ; Expanded expression: "(@12) *(4) 125 != "
Label_3268:
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 125
 ; !=
 load32 125 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3269
 ; {
 ; if
 ; RPN'ized expression: "elementType 91 == "
 ; Expanded expression: "(@-8) *(4) 91 == "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 91
 ; ==
 load32 91 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3270
 ; {
 ; RPN'ized expression: "tok ( tok , elementTypePtr InitArray ) = "
 ; Expanded expression: "(@12)  (@12) *(4)  (@-4) *(4)  InitArray ()8 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; InitArray
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump InitArray
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; }
 jump Label_3271
Label_3270:
 ; else
 ; if
 ; RPN'ized expression: "elementType 144 == "
 ; Expanded expression: "(@-8) *(4) 144 == "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 144
 ; ==
 load32 144 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3272
 ; {
 ; RPN'ized expression: "tok ( tok , elementTypePtr InitStruct ) = "
 ; Expanded expression: "(@12)  (@12) *(4)  (@-4) *(4)  InitStruct ()8 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; InitStruct
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump InitStruct
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; }
 jump Label_3273
Label_3272:
 ; else
 ; {
 ; RPN'ized expression: "tok ( tok , elementTypePtr InitScalar ) = "
 ; Expanded expression: "(@12)  (@12) *(4)  (@-4) *(4)  InitScalar ()8 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; InitScalar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump InitScalar
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; }
Label_3273:
Label_3271:
 ; if
 ; RPN'ized expression: "elementCnt ++ elementsRequired >= elementsRequired && "
 ; Expanded expression: "(@-20) ++(4) (@-24) *(4) >=u [sh&&->3276] (@-24) *(4) _Bool &&[3276] "
 ; local ofs
 ; ++
 read -20 r14 r2
 add r2 1 r2
 write -20 r14 r2
 ; local ofs
 ; * (read dereference)
 read -24 r14 r8
 ; >=u
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3276
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_3276:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3274
 ; {
 ; if
 ; RPN'ized expression: "braces tok 44 == & "
 ; Expanded expression: "(@-16) *(4) (@12) *(4) 44 == & "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; 44
 ; ==
 load32 44 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; &
 and r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3277
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@12)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
Label_3277:
 ; break
 jump Label_3269
 ; }
Label_3274:
 ; if
 ; RPN'ized expression: "tok 44 == "
 ; Expanded expression: "(@12) *(4) 44 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 44
 ; ==
 load32 44 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3279
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@12)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 jump Label_3280
Label_3279:
 ; else
 ; if
 ; RPN'ized expression: "tok 125 != "
 ; Expanded expression: "(@12) *(4) 125 != "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 125
 ; !=
 load32 125 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3281
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@12) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3281:
Label_3280:
 ; }
 jump Label_3268
Label_3269:
 ; if
 ; RPN'ized expression: "braces "
 ; Expanded expression: "(@-16) *(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3283
 ; {
 ; if
 ; RPN'ized expression: "elementCnt 0 == tok 125 != | "
 ; Expanded expression: "(@-20) *(4) 0 == (@12) *(4) 125 != | "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; 125
 ; !=
 load32 125 r1
 xor r8 r1 r8
 bges r0 r8 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; |
 or r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3285
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@12) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3285:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@12)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; }
Label_3283:
 ; if
 ; RPN'ized expression: "elementCnt elementsRequired < "
 ; Expanded expression: "(@-20) *(4) (@-24) *(4) <u "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; local ofs
 ; * (read dereference)
 read -24 r14 r8
 ; <u
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_3287
 ; RPN'ized expression: "( 0 , elementsRequired elementCnt - elementSz * GenZeroData ) "
 ; Expanded expression: " 0  (@-24) *(4) (@-20) *(4) - (@-12) *(4) *  GenZeroData ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -24 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -20 r14 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -12 r14 r4
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r4 r4
 ; ,
 ; GenZeroData
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenZeroData
 add r13 16 r13
Label_3287:
 ; }
Label_3250:
 ; if
 ; RPN'ized expression: "elementsRequired 0 == "
 ; Expanded expression: "(@-24) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3289
 ; RPN'ized expression: "SyntaxStack1 synPtr 1 + + *u elementCnt = "
 ; Expanded expression: "SyntaxStack1 (@8) *(4) 1 + 4 * + (@-20) *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -20 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_3289:
 ; return
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@12) *(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
Label_3246:
 read 4 r14 r15
 read 0 r14 r14
 add r13 44 r13
 jumpr 0 r15

 ; glb InitStruct : (
 ; prm     synPtr : int
 ; prm     tok : int
 ;     ) int
.code
; .globl InitStruct
InitStruct:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         52 r13
 write         44 r13 r14
 add r13         44 r14
   write 4 r14 r15
 ; loc     synPtr : (@8) : int
 ; loc     tok : (@12) : int
 ; loc     isUnion : (@-4) : int
 ; loc     size : (@-8) : unsigned
 ; loc     ofs : (@-12) : unsigned
 ; RPN'ized expression: "ofs 0 = "
 ; Expanded expression: "(@-12) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -12 r14 r0
 ; loc     braces : (@-16) : int
 ; RPN'ized expression: "braces 0 = "
 ; Expanded expression: "(@-16) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -16 r14 r0
 ; loc     c : (@-20) : int
 ; RPN'ized expression: "c 1 = "
 ; Expanded expression: "(@-20) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; RPN'ized expression: "synPtr SyntaxStack1 synPtr + *u = "
 ; Expanded expression: "(@8) SyntaxStack1 (@8) *(4) 4 * + *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "isUnion SyntaxStack0 synPtr ++p + *u 114 == = "
 ; Expanded expression: "(@-4) SyntaxStack0 (@8) ++p(4) + *(1) 114 == =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; ++p
 read 8 r14 r8
 add r8 1 r8
 write 8 r14 r8
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 114
 ; ==
 load32 114 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "size SyntaxStack1 synPtr ++ + *u = "
 ; Expanded expression: "(@-8) SyntaxStack1 (@8) ++(4) 4 * + *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; ++
 read 8 r14 r8
 add r8 1 r8
 write 8 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "synPtr 3 += "
 ; Expanded expression: "(@8) 3 +=(4) "
 ; 3
 load32 3 r2
 ; local ofs
 ; +=
 read 8 r14 r12
 add r12 r2 r2
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 123 == "
 ; Expanded expression: "(@12) *(4) 123 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 123
 ; ==
 load32 123 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3292
 ; {
 ; RPN'ized expression: "braces 1 = "
 ; Expanded expression: "(@-16) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@12)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; }
Label_3292:
 ; while
 ; RPN'ized expression: "c "
 ; Expanded expression: "(@-20) *(4) "
Label_3294:
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3295
 ; {
 ; loc         t : (@-24) : int
 ; RPN'ized expression: "t SyntaxStack0 synPtr + *u = "
 ; Expanded expression: "(@-24) SyntaxStack0 (@8) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; RPN'ized expression: "c t 40 == t 41 == - t 123 == + t 125 == - += "
 ; Expanded expression: "(@-20) (@-24) *(4) 40 == (@-24) *(4) 41 == - (@-24) *(4) 123 == + (@-24) *(4) 125 == - +=(4) "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -24 r14 r8
 ; 41
 ; ==
 load32 41 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -24 r14 r8
 ; 123
 ; ==
 load32 123 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -24 r14 r8
 ; 125
 ; ==
 load32 125 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; +=
 read -20 r14 r12
 add r12 r2 r2
 write -20 r14 r2
 ; if
 ; RPN'ized expression: "c 1 == t 146 == && "
 ; Expanded expression: "(@-20) *(4) 1 == [sh&&->3298] (@-24) *(4) 146 == &&[3298] "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3298
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 146
 ; ==
 load32 146 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3298:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3296
 ; break
 jump Label_3295
Label_3296:
 ; RPN'ized expression: "synPtr ++p "
 ; Expanded expression: "(@8) ++p(4) "
 ; local ofs
 ; ++p
 read 8 r14 r2
 add r2 1 r2
 write 8 r14 r2
 sub r2 1 r2
 ; }
 jump Label_3294
Label_3295:
 ; while
 ; RPN'ized expression: "tok 125 != "
 ; Expanded expression: "(@12) *(4) 125 != "
Label_3299:
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 125
 ; !=
 load32 125 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3300
 ; {
 ; loc         c : (@-24) : int
 ; RPN'ized expression: "c 1 = "
 ; Expanded expression: "(@-24) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; loc         elementTypePtr : (@-28) : int
 ; loc         elementType : (@-32) : int
 ; loc         elementOfs : (@-36) : unsigned
 ; loc         elementSz : (@-40) : unsigned
 ; RPN'ized expression: "elementOfs SyntaxStack1 synPtr ++ + *u = "
 ; Expanded expression: "(@-36) SyntaxStack1 (@8) ++(4) 4 * + *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; ++
 read 8 r14 r8
 add r8 1 r8
 write 8 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; RPN'ized expression: "elementTypePtr synPtr ++ = "
 ; Expanded expression: "(@-28) (@8) ++(4) =(4) "
 ; local ofs
 ; ++
 read 8 r14 r2
 add r2 1 r2
 write 8 r14 r2
 ; local ofs
 ; = (write dereference)
 write -28 r14 r2
 ; RPN'ized expression: "elementType SyntaxStack0 elementTypePtr + *u = "
 ; Expanded expression: "(@-32) SyntaxStack0 (@-28) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -28 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; RPN'ized expression: "elementSz ( 0 , elementTypePtr GetDeclSize ) = "
 ; Expanded expression: "(@-40)  0  (@-28) *(4)  GetDeclSize ()8 =(4) "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -28 r14 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; if
 ; RPN'ized expression: "ofs elementOfs < "
 ; Expanded expression: "(@-12) *(4) (@-36) *(4) <u "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r8
 ; <u
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_3301
 ; RPN'ized expression: "( 0 , elementOfs ofs - GenZeroData ) "
 ; Expanded expression: " 0  (@-36) *(4) (@-12) *(4) -  GenZeroData ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -12 r14 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; GenZeroData
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenZeroData
 add r13 16 r13
Label_3301:
 ; if
 ; RPN'ized expression: "elementType 91 == "
 ; Expanded expression: "(@-32) *(4) 91 == "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 91
 ; ==
 load32 91 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3303
 ; {
 ; RPN'ized expression: "tok ( tok , elementTypePtr InitArray ) = "
 ; Expanded expression: "(@12)  (@12) *(4)  (@-28) *(4)  InitArray ()8 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -28 r14 r4
 ; ,
 ; InitArray
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump InitArray
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; }
 jump Label_3304
Label_3303:
 ; else
 ; if
 ; RPN'ized expression: "elementType 144 == "
 ; Expanded expression: "(@-32) *(4) 144 == "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 144
 ; ==
 load32 144 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3305
 ; {
 ; RPN'ized expression: "tok ( tok , elementTypePtr InitStruct ) = "
 ; Expanded expression: "(@12)  (@12) *(4)  (@-28) *(4)  InitStruct ()8 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -28 r14 r4
 ; ,
 ; InitStruct
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump InitStruct
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; }
 jump Label_3306
Label_3305:
 ; else
 ; {
 ; RPN'ized expression: "tok ( tok , elementTypePtr InitScalar ) = "
 ; Expanded expression: "(@12)  (@12) *(4)  (@-28) *(4)  InitScalar ()8 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -28 r14 r4
 ; ,
 ; InitScalar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump InitScalar
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; }
Label_3306:
Label_3304:
 ; RPN'ized expression: "ofs elementOfs elementSz + = "
 ; Expanded expression: "(@-12) (@-36) *(4) (@-40) *(4) + =(4) "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; local ofs
 ; * (read dereference)
 read -40 r14 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; while
 ; RPN'ized expression: "c "
 ; Expanded expression: "(@-24) *(4) "
Label_3307:
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3308
 ; {
 ; loc             t : (@-44) : int
 ; RPN'ized expression: "t SyntaxStack0 synPtr + *u = "
 ; Expanded expression: "(@-44) SyntaxStack0 (@8) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; RPN'ized expression: "c t 40 == t 41 == - t 123 == + t 125 == - += "
 ; Expanded expression: "(@-24) (@-44) *(4) 40 == (@-44) *(4) 41 == - (@-44) *(4) 123 == + (@-44) *(4) 125 == - +=(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -44 r14 r8
 ; 41
 ; ==
 load32 41 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -44 r14 r8
 ; 123
 ; ==
 load32 123 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -44 r14 r8
 ; 125
 ; ==
 load32 125 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; +=
 read -24 r14 r12
 add r12 r2 r2
 write -24 r14 r2
 ; if
 ; RPN'ized expression: "c 1 == t 146 == && "
 ; Expanded expression: "(@-24) *(4) 1 == [sh&&->3311] (@-44) *(4) 146 == &&[3311] "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3311
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; 146
 ; ==
 load32 146 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3311:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3309
 ; break
 jump Label_3308
Label_3309:
 ; RPN'ized expression: "synPtr ++p "
 ; Expanded expression: "(@8) ++p(4) "
 ; local ofs
 ; ++p
 read 8 r14 r2
 add r2 1 r2
 write 8 r14 r2
 sub r2 1 r2
 ; }
 jump Label_3307
Label_3308:
 ; if
 ; RPN'ized expression: "c 0 == isUnion | "
 ; Expanded expression: "(@-24) *(4) 0 == (@-4) *(4) | "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; |
 or r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3312
 ; {
 ; if
 ; RPN'ized expression: "braces tok 44 == & "
 ; Expanded expression: "(@-16) *(4) (@12) *(4) 44 == & "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; 44
 ; ==
 load32 44 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; &
 and r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3314
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@12)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
Label_3314:
 ; break
 jump Label_3300
 ; }
Label_3312:
 ; if
 ; RPN'ized expression: "tok 44 == "
 ; Expanded expression: "(@12) *(4) 44 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 44
 ; ==
 load32 44 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3316
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@12)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 jump Label_3317
Label_3316:
 ; else
 ; if
 ; RPN'ized expression: "tok 125 != "
 ; Expanded expression: "(@12) *(4) 125 != "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 125
 ; !=
 load32 125 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3318
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@12) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3318:
Label_3317:
 ; }
 jump Label_3299
Label_3300:
 ; if
 ; RPN'ized expression: "braces "
 ; Expanded expression: "(@-16) *(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3320
 ; {
 ; if
 ; RPN'ized expression: "ofs 0 == tok 125 != | "
 ; Expanded expression: "(@-12) *(4) 0 == (@12) *(4) 125 != | "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; 125
 ; !=
 load32 125 r1
 xor r8 r1 r8
 bges r0 r8 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; |
 or r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3322
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@12) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3322:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@12)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 12 r14 r2
 ; }
Label_3320:
 ; if
 ; RPN'ized expression: "ofs size < "
 ; Expanded expression: "(@-12) *(4) (@-8) *(4) <u "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; <u
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_3324
 ; RPN'ized expression: "( 0 , size ofs - GenZeroData ) "
 ; Expanded expression: " 0  (@-8) *(4) (@-12) *(4) -  GenZeroData ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -12 r14 r4
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r4 r4
 ; ,
 ; GenZeroData
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenZeroData
 add r13 16 r13
Label_3324:
 ; return
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@12) *(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
Label_3291:
 read 4 r14 r15
 read 0 r14 r14
 add r13 52 r13
 jumpr 0 r15

 ; glb compatCheck2 : (
 ; prm     lastSyntaxPtr : int
 ; prm     i : int
 ;     ) int
.code
; .globl compatCheck2
compatCheck2:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         24 r13
 write         16 r13 r14
 add r13         16 r14
   write 4 r14 r15
 ; loc     lastSyntaxPtr : (@8) : int
 ; loc     i : (@12) : int
 ; loc     res : (@-4) : int
 ; RPN'ized expression: "res 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
 ; loc     c : (@-8) : int
 ; RPN'ized expression: "c 0 = "
 ; Expanded expression: "(@-8) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -8 r14 r0
 ; loc     t : (@-12) : int
 ; for
Label_3327:
 ; {
 ; RPN'ized expression: "t SyntaxStack0 lastSyntaxPtr + *u = "
 ; Expanded expression: "(@-12) SyntaxStack0 (@8) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; if
 ; RPN'ized expression: "t SyntaxStack0 i + *u != "
 ; Expanded expression: "(@-12) *(4) SyntaxStack0 (@12) *(4) + *(1) != "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; SyntaxStack0
 addr2reg SyntaxStack0 r8
 ; local ofs
 ; * (read dereference)
 read 12 r14 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; !=
 bne r2 r8 2
 jump Label_3331
 ; {
 ; if
 ; RPN'ized expression: "SyntaxStack0 i + *u 41 == SyntaxStack0 i 1 - + *u 40 == && "
 ; Expanded expression: "SyntaxStack0 (@12) *(4) + *(1) 41 == [sh&&->3335] SyntaxStack0 (@12) *(4) 1 - + *(1) 40 == &&[3335] "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3335
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3335:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3333
 ; {
 ; loc                 c1 : (@-16) : int
 ; RPN'ized expression: "c1 1 = "
 ; Expanded expression: "(@-16) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; do
Label_3336:
 ; {
 ; RPN'ized expression: "t SyntaxStack0 lastSyntaxPtr ++p + *u = "
 ; Expanded expression: "(@-12) SyntaxStack0 (@8) ++p(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; ++p
 read 8 r14 r8
 add r8 1 r8
 write 8 r14 r8
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; RPN'ized expression: "c1 t 40 == t 41 == - += "
 ; Expanded expression: "(@-16) (@-12) *(4) 40 == (@-12) *(4) 41 == - +=(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 41
 ; ==
 load32 41 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; +=
 read -16 r14 r12
 add r12 r2 r2
 write -16 r14 r2
 ; }
 ; while
 ; RPN'ized expression: "c1 "
 ; Expanded expression: "(@-16) *(4) "
Label_3337:
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3336
Label_3338:
 ; RPN'ized expression: "lastSyntaxPtr --p "
 ; Expanded expression: "(@8) --p(4) "
 ; local ofs
 ; --p
 read 8 r14 r2
 sub r2 1 r2
 write 8 r14 r2
 add r2 1 r2
 ; }
 jump Label_3334
Label_3333:
 ; else
 ; if
 ; RPN'ized expression: "t 41 == SyntaxStack0 i 1 - + *u 40 == && SyntaxStack0 i + *u 16 == && SyntaxStack0 i 1 + + *u 17 == && SyntaxStack0 i 2 + + *u 41 == && "
 ; Expanded expression: "(@-12) *(4) 41 == [sh&&->3344] SyntaxStack0 (@12) *(4) 1 - + *(1) 40 == &&[3344] _Bool [sh&&->3343] SyntaxStack0 (@12) *(4) + *(1) 16 == &&[3343] _Bool [sh&&->3342] SyntaxStack0 (@12) *(4) 1 + + *(1) 17 == &&[3342] _Bool [sh&&->3341] SyntaxStack0 (@12) *(4) 2 + + *(1) 41 == &&[3341] "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3344
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3344:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3343
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3343:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3342
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 17
 ; ==
 load32 17 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3342:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3341
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; 2
 ; +
 add r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3341:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3339
 ; {
 ; RPN'ized expression: "i 2 += "
 ; Expanded expression: "(@12) 2 +=(4) "
 ; 2
 load32 2 r2
 ; local ofs
 ; +=
 read 12 r14 r12
 add r12 r2 r2
 write 12 r14 r2

.rdata
Label_3345:
.dw 82 101 100 101 99 108 97 114 97 116 105 111 110 32 102 114 111 109 32 110 111 32 112 97 114 97 109 101 116 101 114 115 32 116 111 32 117 110 115 112 101 99 105 102 105 101 100 32 112 97 114 97 109 101 116 101 114 115 46 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3345 warning ) "
 ; Expanded expression: " L3345  warning ()4 "
 ; (
 ; 3345
 addr2reg Label_3345 r4
 ; ,
 ; warning
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump warning
 add r13 16 r13
 ; }
 jump Label_3340
Label_3339:
 ; else
 ; goto lend
 jump Label_3346
Label_3340:
Label_3334:
 ; }
Label_3331:
 ; if
 ; RPN'ized expression: "t 16 != SyntaxStack1 lastSyntaxPtr + *u SyntaxStack1 i + *u != && "
 ; Expanded expression: "(@-12) *(4) 16 != [sh&&->3349] SyntaxStack1 (@8) *(4) 4 * + *(4) SyntaxStack1 (@12) *(4) 4 * + *(4) != &&[3349] "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 16
 ; !=
 load32 16 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3349
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; SyntaxStack1
 addr2reg SyntaxStack1 r8
 ; local ofs
 ; * (read dereference)
 read 12 r14 r9
 ; 2
 ; <<
 shiftl r9 2 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; !=
 xor r2 r8 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3349:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3347
 ; {
 ; if
 ; RPN'ized expression: "SyntaxStack0 lastSyntaxPtr 1 - + *u 91 == "
 ; Expanded expression: "SyntaxStack0 (@8) *(4) 1 - + *(1) 91 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 91
 ; ==
 load32 91 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3350
 ; {
 ; if
 ; RPN'ized expression: "SyntaxStack1 lastSyntaxPtr + *u 0 == "
 ; Expanded expression: "SyntaxStack1 (@8) *(4) 4 * + *(4) 0 == "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3352
 ; RPN'ized expression: "SyntaxStack1 lastSyntaxPtr + *u SyntaxStack1 i + *u = "
 ; Expanded expression: "SyntaxStack1 (@8) *(4) 4 * + SyntaxStack1 (@12) *(4) 4 * + *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; SyntaxStack1
 addr2reg SyntaxStack1 r8
 ; local ofs
 ; * (read dereference)
 read 12 r14 r9
 ; 2
 ; <<
 shiftl r9 2 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 jump Label_3353
Label_3352:
 ; else
 ; if
 ; RPN'ized expression: "SyntaxStack1 i + *u "
 ; Expanded expression: "SyntaxStack1 (@12) *(4) 4 * + *(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3354
 ; goto lend
 jump Label_3346
Label_3354:
Label_3353:
 ; }
 jump Label_3351
Label_3350:
 ; else
 ; goto lend
 jump Label_3346
Label_3351:
 ; }
Label_3347:
 ; RPN'ized expression: "c t 40 == t 41 == - t 91 == + t 93 == - += "
 ; Expanded expression: "(@-8) (@-12) *(4) 40 == (@-12) *(4) 41 == - (@-12) *(4) 91 == + (@-12) *(4) 93 == - +=(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 41
 ; ==
 load32 41 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 91
 ; ==
 load32 91 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 93
 ; ==
 load32 93 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; +=
 read -8 r14 r12
 add r12 r2 r2
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "c 0 == "
 ; Expanded expression: "(@-8) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3356
 ; {
 ; switch
 ; RPN'ized expression: "t "
 ; Expanded expression: "(@-12) *(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 jump Label_3359
 ; {
 ; case
 ; RPN'ized expression: "17 "
 ; Expanded expression: "17 "
 ; Expression value: 17
Label_3360:
 ; case
 ; RPN'ized expression: "18 "
 ; Expanded expression: "18 "
 ; Expression value: 18
Label_3361:
 ; case
 ; RPN'ized expression: "128 "
 ; Expanded expression: "128 "
 ; Expression value: 128
Label_3362:
 ; case
 ; RPN'ized expression: "129 "
 ; Expanded expression: "129 "
 ; Expression value: 129
Label_3363:
 ; case
 ; RPN'ized expression: "100 "
 ; Expanded expression: "100 "
 ; Expression value: 100
Label_3364:
 ; case
 ; RPN'ized expression: "130 "
 ; Expanded expression: "130 "
 ; Expression value: 130
Label_3365:
 ; case
 ; RPN'ized expression: "19 "
 ; Expanded expression: "19 "
 ; Expression value: 19
Label_3366:
 ; case
 ; RPN'ized expression: "101 "
 ; Expanded expression: "101 "
 ; Expression value: 101
Label_3367:
 ; case
 ; RPN'ized expression: "144 "
 ; Expanded expression: "144 "
 ; Expression value: 144
Label_3368:
 ; goto lok
 jump Label_3369
 ; }
 jump Label_3358
Label_3359:
 load32 17 r12
 bne r2 r12 2
 jump Label_3360
 load32 18 r12
 bne r2 r12 2
 jump Label_3361
 load32 128 r12
 bne r2 r12 2
 jump Label_3362
 load32 129 r12
 bne r2 r12 2
 jump Label_3363
 load32 100 r12
 bne r2 r12 2
 jump Label_3364
 load32 130 r12
 bne r2 r12 2
 jump Label_3365
 load32 19 r12
 bne r2 r12 2
 jump Label_3366
 load32 101 r12
 bne r2 r12 2
 jump Label_3367
 load32 144 r12
 bne r2 r12 2
 jump Label_3368
Label_3358:
 ; }
Label_3356:
 ; RPN'ized expression: "lastSyntaxPtr ++p "
 ; Expanded expression: "(@8) ++p(4) "
 ; local ofs
 ; ++p
 read 8 r14 r2
 add r2 1 r2
 write 8 r14 r2
 sub r2 1 r2
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@12) ++p(4) "
 ; local ofs
 ; ++p
 read 12 r14 r2
 add r2 1 r2
 write 12 r14 r2
 sub r2 1 r2
 ; }
 jump Label_3327
Label_3330:
 ; lok:
Label_3369:
 ; RPN'ized expression: "res 1 = "
 ; Expanded expression: "(@-4) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; lend:
Label_3346:
 ; return
 ; RPN'ized expression: "res "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
Label_3326:
 read 4 r14 r15
 read 0 r14 r14
 add r13 24 r13
 jumpr 0 r15

 ; glb CheckRedecl : (
 ; prm     lastSyntaxPtr : int
 ;     ) void
.code
; .globl CheckRedecl
CheckRedecl:
 write 0 r13 r4
 sub r13         40 r13
 write         32 r13 r14
 add r13         32 r14
   write 4 r14 r15
 ; loc     lastSyntaxPtr : (@8) : int
 ; loc     tid : (@-4) : int
 ; loc     id : (@-8) : int
 ; loc     external : (@-12) : int
 ; RPN'ized expression: "external 0 = "
 ; Expanded expression: "(@-12) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -12 r14 r0
 ; loc     i : (@-16) : int
 ; loc     curScopeOnly : (@-20) : int
 ; loc     level : (@-24) : int
 ; RPN'ized expression: "level ParseLevel = "
 ; Expanded expression: "(@-24) ParseLevel *(4) =(4) "
 ; ParseLevel
 ; * (read dereference)
 addr2reg ParseLevel r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; RPN'ized expression: "tid SyntaxStack0 lastSyntaxPtr + *u = "
 ; Expanded expression: "(@-4) SyntaxStack0 (@8) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; RPN'ized expression: "id SyntaxStack1 lastSyntaxPtr + *u = "
 ; Expanded expression: "(@-8) SyntaxStack1 (@8) *(4) 4 * + *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; switch
 ; RPN'ized expression: "tid "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 jump Label_3372
 ; {
 ; case
 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
Label_3373:
 ; switch
 ; RPN'ized expression: "SyntaxStack0 lastSyntaxPtr 1 + + *u "
 ; Expanded expression: "SyntaxStack0 (@8) *(4) 1 + + *(1) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_3375
 ; {
 ; default
Label_3376:
 ; RPN'ized expression: "external 1 = "
 ; Expanded expression: "(@-12) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; case
 ; RPN'ized expression: "89 "
 ; Expanded expression: "89 "
 ; Expression value: 89
Label_3377:
 ; case
 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
Label_3378:
 ; }
 jump Label_3374
Label_3375:
 load32 89 r12
 bne r2 r12 2
 jump Label_3377
 load32 16 r12
 bne r2 r12 2
 jump Label_3378
 jump Label_3376
Label_3374:
 ; case
 ; RPN'ized expression: "111 "
 ; Expanded expression: "111 "
 ; Expression value: 111
Label_3379:
 ; break
 jump Label_3371
 ; case
 ; RPN'ized expression: "146 "
 ; Expanded expression: "146 "
 ; Expression value: 146
Label_3380:
 ; {
 ; loc             c : (@-28) : int
 ; RPN'ized expression: "c 1 = "
 ; Expanded expression: "(@-28) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -28 r14 r2
 ; RPN'ized expression: "i lastSyntaxPtr 1 - = "
 ; Expanded expression: "(@-16) (@8) *(4) 1 - =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 1
 ; -
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; do
Label_3381:
 ; {
 ; loc                 t : (@-32) : int
 ; RPN'ized expression: "t SyntaxStack0 i + *u = "
 ; Expanded expression: "(@-32) SyntaxStack0 (@-16) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; RPN'ized expression: "c t 40 == t 41 == - t 123 == + t 125 == - -= "
 ; Expanded expression: "(@-28) (@-32) *(4) 40 == (@-32) *(4) 41 == - (@-32) *(4) 123 == + (@-32) *(4) 125 == - -=(4) "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -32 r14 r8
 ; 41
 ; ==
 load32 41 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -32 r14 r8
 ; 123
 ; ==
 load32 123 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -32 r14 r8
 ; 125
 ; ==
 load32 125 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; -=
 read -28 r14 r12
 sub r12 r2 r2
 write -28 r14 r2
 ; if
 ; RPN'ized expression: "c 1 == t 146 == && SyntaxStack1 i + *u id == && SyntaxStack0 i 1 + + *u 89 == && "
 ; Expanded expression: "(@-28) *(4) 1 == [sh&&->3388] (@-32) *(4) 146 == &&[3388] _Bool [sh&&->3387] SyntaxStack1 (@-16) *(4) 4 * + *(4) (@-8) *(4) == &&[3387] _Bool [sh&&->3386] SyntaxStack0 (@-16) *(4) 1 + + *(1) 89 == &&[3386] "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3388
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 146
 ; ==
 load32 146 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3388:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3387
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; ==
 xor r2 r8 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3387:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3386
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 89
 ; ==
 load32 89 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3386:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3384
 ; RPN'ized expression: "( IdentTable id + errorRedecl ) "
 ; Expanded expression: " IdentTable (@-8) *(4) +  errorRedecl ()4 "
 ; (
 ; IdentTable
 addr2reg IdentTable r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -8 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; errorRedecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorRedecl
 add r13 16 r13
Label_3384:
 ; RPN'ized expression: "i --p "
 ; Expanded expression: "(@-16) --p(4) "
 ; local ofs
 ; --p
 read -16 r14 r2
 sub r2 1 r2
 write -16 r14 r2
 add r2 1 r2
 ; }
 ; while
 ; RPN'ized expression: "c "
 ; Expanded expression: "(@-28) *(4) "
Label_3382:
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3381
Label_3383:
 ; }
 ; return
 jump Label_3370
 ; default
Label_3389:
 ; RPN'ized expression: "( 23 errorInternal ) "
 ; Expanded expression: " 23  errorInternal ()4 "
 ; (
 ; 23
 load32 23 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
 ; }
 jump Label_3371
Label_3372:
 load32 16 r12
 bne r2 r12 2
 jump Label_3373
 load32 111 r12
 bne r2 r12 2
 jump Label_3379
 load32 146 r12
 bne r2 r12 2
 jump Label_3380
 jump Label_3389
Label_3371:
 ; RPN'ized expression: "curScopeOnly tid 16 != external 0 == || = "
 ; Expanded expression: "(@-20) (@-4) *(4) 16 != [sh||->3390] (@-12) *(4) 0 == ||[3390] =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 16
 ; !=
 load32 16 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3390
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3390:
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; for
 ; RPN'ized expression: "i lastSyntaxPtr 1 - = "
 ; Expanded expression: "(@-16) (@8) *(4) 1 - =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 1
 ; -
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
Label_3391:
 ; RPN'ized expression: "i 0 >= "
 ; Expanded expression: "(@-16) *(4) 0 >= "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 0
 ; >=
 bges r2 r0 2
 jump Label_3394
 ; RPN'ized expression: "i --p "
 ; Expanded expression: "(@-16) --p(4) "
 ; {
 ; loc         t : (@-28) : int
 ; RPN'ized expression: "t SyntaxStack0 i + *u = "
 ; Expanded expression: "(@-28) SyntaxStack0 (@-16) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -28 r14 r2
 ; switch
 ; RPN'ized expression: "t "
 ; Expanded expression: "(@-28) *(4) "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 jump Label_3396
 ; {
 ; case
 ; RPN'ized expression: "41 "
 ; Expanded expression: "41 "
 ; Expression value: 41
Label_3397:
 ; {
 ; loc                 c : (@-32) : int
 ; RPN'ized expression: "c 1 -u = "
 ; Expanded expression: "(@-32) -1 =(4) "
 ; -1
 load32 -1 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; while
 ; RPN'ized expression: "c "
 ; Expanded expression: "(@-32) *(4) "
Label_3398:
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3399
 ; {
 ; RPN'ized expression: "t SyntaxStack0 i -- + *u = "
 ; Expanded expression: "(@-28) SyntaxStack0 (@-16) --(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; --
 read -16 r14 r8
 sub r8 1 r8
 write -16 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -28 r14 r2
 ; RPN'ized expression: "c t 40 == t 41 == - += "
 ; Expanded expression: "(@-32) (@-28) *(4) 40 == (@-28) *(4) 41 == - +=(4) "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -28 r14 r8
 ; 41
 ; ==
 load32 41 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; +=
 read -32 r14 r12
 add r12 r2 r2
 write -32 r14 r2
 ; }
 jump Label_3398
Label_3399:
 ; }
 ; break
 jump Label_3395
 ; case
 ; RPN'ized expression: "35 "
 ; Expanded expression: "35 "
 ; Expression value: 35
Label_3400:
 ; if
 ; RPN'ized expression: "curScopeOnly "
 ; Expanded expression: "(@-20) *(4) "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3401
 ; return
 jump Label_3370
Label_3401:
 ; RPN'ized expression: "level --p "
 ; Expanded expression: "(@-24) --p(4) "
 ; local ofs
 ; --p
 read -24 r14 r2
 sub r2 1 r2
 write -24 r14 r2
 add r2 1 r2
 ; break
 jump Label_3395
 ; case
 ; RPN'ized expression: "111 "
 ; Expanded expression: "111 "
 ; Expression value: 111
Label_3403:
 ; case
 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
Label_3404:
 ; if
 ; RPN'ized expression: "SyntaxStack1 i + *u id == "
 ; Expanded expression: "SyntaxStack1 (@-16) *(4) 4 * + *(4) (@-8) *(4) == "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; ==
 beq r2 r8 2
 jump Label_3405
 ; {
 ; if
 ; RPN'ized expression: "level ParseLevel == "
 ; Expanded expression: "(@-24) *(4) ParseLevel *(4) == "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; ParseLevel
 ; * (read dereference)
 addr2reg ParseLevel r1
 read 0 r1 r8
 ; ==
 beq r2 r8 2
 jump Label_3407
 ; {
 ; if
 ; RPN'ized expression: "level "
 ; Expanded expression: "(@-24) *(4) "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3409
 ; {
 ; switch
 ; RPN'ized expression: "SyntaxStack0 i 1 + + *u "
 ; Expanded expression: "SyntaxStack0 (@-16) *(4) 1 + + *(1) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_3412
 ; {
 ; case
 ; RPN'ized expression: "89 "
 ; Expanded expression: "89 "
 ; Expression value: 89
Label_3413:
 ; case
 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
Label_3414:
 ; RPN'ized expression: "( IdentTable id + errorRedecl ) "
 ; Expanded expression: " IdentTable (@-8) *(4) +  errorRedecl ()4 "
 ; (
 ; IdentTable
 addr2reg IdentTable r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -8 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; errorRedecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorRedecl
 add r13 16 r13
 ; default
Label_3415:
 ; if
 ; RPN'ized expression: "external 0 == "
 ; Expanded expression: "(@-12) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3416
 ; RPN'ized expression: "( IdentTable id + errorRedecl ) "
 ; Expanded expression: " IdentTable (@-8) *(4) +  errorRedecl ()4 "
 ; (
 ; IdentTable
 addr2reg IdentTable r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -8 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; errorRedecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorRedecl
 add r13 16 r13
Label_3416:
 ; }
 jump Label_3411
Label_3412:
 load32 89 r12
 bne r2 r12 2
 jump Label_3413
 load32 16 r12
 bne r2 r12 2
 jump Label_3414
 jump Label_3415
Label_3411:
 ; }
Label_3409:
 ; if
 ; RPN'ized expression: "( i , lastSyntaxPtr compatCheck2 ) "
 ; Expanded expression: " (@-16) *(4)  (@8) *(4)  compatCheck2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -16 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; compatCheck2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump compatCheck2
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3418
 ; return
 jump Label_3370
Label_3418:
 ; RPN'ized expression: "( IdentTable id + errorRedecl ) "
 ; Expanded expression: " IdentTable (@-8) *(4) +  errorRedecl ()4 "
 ; (
 ; IdentTable
 addr2reg IdentTable r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -8 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; errorRedecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorRedecl
 add r13 16 r13
 ; }
 jump Label_3408
Label_3407:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "t 16 == "
 ; Expanded expression: "(@-28) *(4) 16 == "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3420
 ; {
 ; switch
 ; RPN'ized expression: "SyntaxStack0 i 1 + + *u "
 ; Expanded expression: "SyntaxStack0 (@-16) *(4) 1 + + *(1) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_3423
 ; {
 ; case
 ; RPN'ized expression: "89 "
 ; Expanded expression: "89 "
 ; Expression value: 89
Label_3424:
 ; case
 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
Label_3425:
 ; break
 jump Label_3422
 ; default
Label_3426:
 ; if
 ; RPN'ized expression: "( i , lastSyntaxPtr compatCheck2 ) "
 ; Expanded expression: " (@-16) *(4)  (@8) *(4)  compatCheck2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -16 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; compatCheck2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump compatCheck2
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3427
 ; return
 jump Label_3370
Label_3427:
 ; RPN'ized expression: "( IdentTable id + errorRedecl ) "
 ; Expanded expression: " IdentTable (@-8) *(4) +  errorRedecl ()4 "
 ; (
 ; IdentTable
 addr2reg IdentTable r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -8 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; errorRedecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorRedecl
 add r13 16 r13
 ; }
 jump Label_3422
Label_3423:
 load32 89 r12
 bne r2 r12 2
 jump Label_3424
 load32 16 r12
 bne r2 r12 2
 jump Label_3425
 jump Label_3426
Label_3422:
 ; }
Label_3420:
 ; }
Label_3408:
 ; }
Label_3405:
 ; break
 jump Label_3395
 ; }
 jump Label_3395
Label_3396:
 load32 41 r12
 bne r2 r12 2
 jump Label_3397
 load32 35 r12
 bne r2 r12 2
 jump Label_3400
 load32 111 r12
 bne r2 r12 2
 jump Label_3403
 load32 16 r12
 bne r2 r12 2
 jump Label_3404
Label_3395:
 ; }
Label_3392:
 ; local ofs
 ; --p
 read -16 r14 r2
 sub r2 1 r2
 write -16 r14 r2
 add r2 1 r2
 jump Label_3391
Label_3394:
Label_3370:
 read 4 r14 r15
 read 0 r14 r14
 add r13 40 r13
 jumpr 0 r15

 ; RPN'ized expression: "4 "
 ; Expanded expression: "4 "
 ; Expression value: 4
 ; glb ParseDecl : (
 ; prm     tok : int
 ; prm     structInfo : * unsigned
 ; prm     cast : int
 ; prm     label : int
 ;     ) int
.code
; .globl ParseDecl
ParseDecl:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 write 12 r13 r7
 sub r13        100 r13
 write         92 r13 r14
 add r13         92 r14
   write 4 r14 r15
 ; loc     tok : (@8) : int
 ; loc     structInfo : (@12) : * unsigned
 ; loc     cast : (@16) : int
 ; loc     label : (@20) : int
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; loc     base : (@-8) : [2u] int
 ; loc     lastSyntaxPtr : (@-12) : int
 ; loc     external : (@-16) : int
 ; RPN'ized expression: "external tok 108 == = "
 ; Expanded expression: "(@-16) (@8) *(4) 108 == =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 108
 ; ==
 load32 108 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; loc     Static : (@-20) : int
 ; RPN'ized expression: "Static tok 106 == = "
 ; Expanded expression: "(@-20) (@8) *(4) 106 == =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 106
 ; ==
 load32 106 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; loc     <something> : void
 ; RPN'ized expression: "label (something3430) "
 ; Expanded expression: "(@20) *(4) "
 ; local ofs
 ; * (read dereference)
 read 20 r14 r2
 ; if
 ; RPN'ized expression: "external Static | "
 ; Expanded expression: "(@-16) *(4) (@-20) *(4) | "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; local ofs
 ; * (read dereference)
 read -20 r14 r8
 ; |
 or r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3431
 ; {
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "( 1 , tok TokenStartsDeclaration ) 0 == "
 ; Expanded expression: " 1  (@8) *(4)  TokenStartsDeclaration ()8 0 == "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; TokenStartsDeclaration
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump TokenStartsDeclaration
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3433
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3433:
 ; }
Label_3431:
 ; RPN'ized expression: "tok ( base , tok ParseBase ) = "
 ; Expanded expression: "(@8)  (@-8)  (@8) *(4)  ParseBase ()8 =(4) "
 ; (
 ; local ofs
 sub r14 8 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseBase
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseBase
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; for
Label_3435:
 ; {
 ; RPN'ized expression: "lastSyntaxPtr SyntaxStackCnt = "
 ; Expanded expression: "(@-12) SyntaxStackCnt *(4) =(4) "
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; RPN'ized expression: "tok ( tok ParseDerived ) = "
 ; Expanded expression: "(@8)  (@8) *(4)  ParseDerived ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseDerived
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseDerived
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "( base PushBase ) "
 ; Expanded expression: " (@-8)  PushBase ()4 "
 ; (
 ; local ofs
 sub r14 8 r4
 ; ,
 ; PushBase
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushBase
 add r13 16 r13
 ; if

.rdata
Label_3441:
.dw 44 59 123 61 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "tok ( tok , L3441 strchr ) && tok 41 == ExprLevel && || "
 ; Expanded expression: "(@8) *(4) _Bool [sh&&->3444]  (@8) *(4)  L3441  strchr ()8 _Bool &&[3444] _Bool [sh||->3442] (@8) *(4) 41 == [sh&&->3443] ExprLevel *(4) _Bool &&[3443] _Bool ||[3442] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3444
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; 3441
 addr2reg Label_3441 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_3444:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3442
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3443
 ; ExprLevel
 ; * (read dereference)
 addr2reg ExprLevel r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_3443:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_3442:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3439
 ; {
 ; loc             isLocal : (@-24) : int
 ; RPN'ized expression: "isLocal 0 = "
 ; Expanded expression: "(@-24) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -24 r14 r0
 ; loc             isGlobal : (@-28) : int
 ; RPN'ized expression: "isGlobal 0 = "
 ; Expanded expression: "(@-28) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -28 r14 r0
 ; loc             isFxn : (@-32) : int
 ; loc             isStruct : (@-36) : int
 ; loc             isArray : (@-40) : int
 ; loc             isIncompleteArr : (@-44) : int
 ; loc             alignment : (@-48) : unsigned
 ; RPN'ized expression: "alignment 0 = "
 ; Expanded expression: "(@-48) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -48 r14 r0
 ; loc             staticLabel : (@-52) : int
 ; RPN'ized expression: "staticLabel 0 = "
 ; Expanded expression: "(@-52) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -52 r14 r0
 ; if
 ; RPN'ized expression: "SyntaxStack0 SyntaxStackCnt 1 - + *u 17 == "
 ; Expanded expression: "SyntaxStack0 SyntaxStackCnt *(4) 1 - + *(1) 17 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 17
 ; ==
 load32 17 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3445
 ; {
 ; if
 ; RPN'ized expression: "SyntaxStack0 SyntaxStackCnt 2 - + *u 16 == cast 0 == && "
 ; Expanded expression: "SyntaxStack0 SyntaxStackCnt *(4) 2 - + *(1) 16 == [sh&&->3449] (@16) *(4) 0 == &&[3449] "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; 2
 ; -
 sub r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3449
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3449:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3447
 ; RPN'ized expression: "( errorUnexpectedVoid ) "
 ; Expanded expression: " errorUnexpectedVoid ()0 "
 ; (
 ; errorUnexpectedVoid
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedVoid
 add r13 16 r13
Label_3447:
 ; }
Label_3445:
 ; RPN'ized expression: "isFxn SyntaxStack0 lastSyntaxPtr 1 + + *u 40 == = "
 ; Expanded expression: "(@-32) SyntaxStack0 (@-12) *(4) 1 + + *(1) 40 == =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; if
 ; RPN'ized expression: "isFxn SyntaxStack0 SyntaxStackCnt 1 - + *u 144 == && SyntaxStack0 SyntaxStackCnt 2 - + *u 41 == && "
 ; Expanded expression: "(@-32) *(4) _Bool [sh&&->3453] SyntaxStack0 SyntaxStackCnt *(4) 1 - + *(1) 144 == &&[3453] _Bool [sh&&->3452] SyntaxStack0 SyntaxStackCnt *(4) 2 - + *(1) 41 == &&[3452] "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3453
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 144
 ; ==
 load32 144 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3453:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3452
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; 2
 ; -
 sub r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3452:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3450
 ; RPN'ized expression: "( errorDecl ) "
 ; Expanded expression: " errorDecl ()0 "
 ; (
 ; errorDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDecl
 add r13 16 r13
Label_3450:
 ; RPN'ized expression: "isArray SyntaxStack0 lastSyntaxPtr 1 + + *u 91 == = "
 ; Expanded expression: "(@-40) SyntaxStack0 (@-12) *(4) 1 + + *(1) 91 == =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 91
 ; ==
 load32 91 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; RPN'ized expression: "isIncompleteArr isArray SyntaxStack1 lastSyntaxPtr 2 + + *u 0 == && = "
 ; Expanded expression: "(@-44) (@-40) *(4) _Bool [sh&&->3454] SyntaxStack1 (@-12) *(4) 2 + 4 * + *(4) 0 == &&[3454] =(4) "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3454
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 2
 ; +
 add r8 2 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3454:
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; RPN'ized expression: "isStruct SyntaxStack0 lastSyntaxPtr 1 + + *u 144 == = "
 ; Expanded expression: "(@-36) SyntaxStack0 (@-12) *(4) 1 + + *(1) 144 == =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 144
 ; ==
 load32 144 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; if

.rdata
Label_3457:
.dw 60 115 111 109 101 116 104 105 110 103 62 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "ExprLevel structInfo || 0 == external Static | 0 == && ( L3457 , IdentTable SyntaxStack1 lastSyntaxPtr + *u + strcmp ) 0 == && tok 59 == && "
 ; Expanded expression: "ExprLevel *(4) _Bool [sh||->3461] (@12) *(4) _Bool ||[3461] 0 == [sh&&->3460] (@-16) *(4) (@-20) *(4) | 0 == &&[3460] _Bool [sh&&->3459]  L3457  IdentTable SyntaxStack1 (@-12) *(4) 4 * + *(4) +  strcmp ()8 0 == &&[3459] _Bool [sh&&->3458] (@8) *(4) 59 == &&[3458] "
 ; ExprLevel
 ; * (read dereference)
 addr2reg ExprLevel r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3461
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_3461:
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3460
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -20 r14 r2
 ; |
 read 0 r13 r11
 add r13 4 r13
 or r11 r2 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3460:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3459
 ; (
 ; 3457
 addr2reg Label_3457 r5
 ; ,
 ; IdentTable
 addr2reg IdentTable r4
 ; SyntaxStack1
 sub r13 4 r13
 write 0 r13 r4
 addr2reg SyntaxStack1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -12 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3459:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3458
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 59
 ; ==
 load32 59 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3458:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3455
 ; {
 ; if
 ; RPN'ized expression: "isStruct "
 ; Expanded expression: "(@-36) *(4) "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3462
 ; {
 ; loc                     declPtr : (@-56) : int
 ; loc                     curScope : (@-60) : int
 ; loc                     j : (@-64) : int
 ; RPN'ized expression: "j SyntaxStack1 lastSyntaxPtr 1 + + *u = "
 ; Expanded expression: "(@-64) SyntaxStack1 (@-12) *(4) 1 + 4 * + *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -64 r14 r2
 ; if
 ; RPN'ized expression: "j 2 + SyntaxStackCnt < IdentTable SyntaxStack1 j 1 + + *u + *u 60 == && SyntaxStack0 j 2 + + *u 27 == && "
 ; Expanded expression: "(@-64) *(4) 2 + SyntaxStackCnt *(4) < [sh&&->3467] IdentTable SyntaxStack1 (@-64) *(4) 1 + 4 * + *(4) + *(-1) 60 == &&[3467] _Bool [sh&&->3466] SyntaxStack0 (@-64) *(4) 2 + + *(1) 27 == &&[3466] "
 ; local ofs
 ; * (read dereference)
 read -64 r14 r2
 ; 2
 ; +
 add r2 2 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3467
 ; IdentTable
 addr2reg IdentTable r2
 ; SyntaxStack1
 addr2reg SyntaxStack1 r8
 ; local ofs
 ; * (read dereference)
 read -64 r14 r9
 ; 1
 ; +
 add r9 1 r9
 ; 2
 ; <<
 shiftl r9 2 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 60
 ; ==
 load32 60 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3467:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3466
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -64 r14 r8
 ; 2
 ; +
 add r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 27
 ; ==
 load32 27 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3466:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3464
 ; RPN'ized expression: "( errorDecl ) "
 ; Expanded expression: " errorDecl ()0 "
 ; (
 ; errorDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDecl
 add r13 16 r13
Label_3464:
 ; RPN'ized expression: "declPtr ( curScope &u , lastSyntaxPtr 1 - , IdentTable SyntaxStack1 j 1 + + *u + FindTaggedDecl ) = "
 ; Expanded expression: "(@-56)  (@-60)  (@-12) *(4) 1 -  IdentTable SyntaxStack1 (@-64) *(4) 1 + 4 * + *(4) +  FindTaggedDecl ()12 =(4) "
 ; (
 ; local ofs
 sub r14 60 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r5
 ; 1
 ; -
 sub r5 1 r5
 ; ,
 ; IdentTable
 addr2reg IdentTable r4
 ; SyntaxStack1
 sub r13 4 r13
 write 0 r13 r4
 addr2reg SyntaxStack1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -64 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; FindTaggedDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump FindTaggedDecl
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -56 r14 r2
 ; if
 ; RPN'ized expression: "declPtr 0 >= curScope 0 == && "
 ; Expanded expression: "(@-56) *(4) 0 >= [sh&&->3470] (@-60) *(4) 0 == &&[3470] "
 ; local ofs
 ; * (read dereference)
 read -56 r14 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3470
 ; local ofs
 ; * (read dereference)
 read -60 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3470:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3468
 ; {
 ; RPN'ized expression: "( SyntaxStack0 j + *u PushSyntax ) "
 ; Expanded expression: " SyntaxStack0 (@-64) *(4) + *(1)  PushSyntax ()4 "
 ; (
 ; SyntaxStack0
 addr2reg SyntaxStack0 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -64 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; RPN'ized expression: "( SyntaxStack1 j 1 + + *u , 145 PushSyntax2 ) "
 ; Expanded expression: " SyntaxStack1 (@-64) *(4) 1 + 4 * + *(4)  145  PushSyntax2 ()8 "
 ; (
 ; SyntaxStack1
 addr2reg SyntaxStack1 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -64 r14 r5
 ; 1
 ; +
 add r5 1 r5
 ; 2
 ; <<
 shiftl r5 2 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 145
 load32 145 r4
 ; ,
 ; PushSyntax2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
 ; RPN'ized expression: "SyntaxStack1 lastSyntaxPtr 1 + + *u SyntaxStackCnt 2 - = "
 ; Expanded expression: "SyntaxStack1 (@-12) *(4) 1 + 4 * + SyntaxStackCnt *(4) 2 - =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; 2
 ; -
 sub r8 2 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
Label_3468:
 ; return
 ; RPN'ized expression: "( GetToken ) "
 ; Expanded expression: " GetToken ()0 "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 jump Label_3429
 ; }
Label_3462:
 ; }
Label_3455:
 ; if
 ; RPN'ized expression: "structInfo tok 61 == isFxn | tok 123 == | isIncompleteArr | && "
 ; Expanded expression: "(@12) *(4) _Bool [sh&&->3473] (@8) *(4) 61 == (@-32) *(4) | (@8) *(4) 123 == | (@-44) *(4) | _Bool &&[3473] "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3473
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 61
 ; ==
 load32 61 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -32 r14 r8
 ; |
 or r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 123
 ; ==
 load32 123 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; |
 or r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -44 r14 r8
 ; |
 or r2 r8 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_3473:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3471
 ; RPN'ized expression: "( errorDecl ) "
 ; Expanded expression: " errorDecl ()0 "
 ; (
 ; errorDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDecl
 add r13 16 r13
Label_3471:
 ; if
 ; RPN'ized expression: "isFxn tok 61 == & "
 ; Expanded expression: "(@-32) *(4) (@8) *(4) 61 == & "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 61
 ; ==
 load32 61 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; &
 and r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3474
 ; RPN'ized expression: "( errorInit ) "
 ; Expanded expression: " errorInit ()0 "
 ; (
 ; errorInit
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInit
 add r13 16 r13
Label_3474:
 ; if
 ; RPN'ized expression: "isFxn tok 123 == & ParseLevel && "
 ; Expanded expression: "(@-32) *(4) (@8) *(4) 123 == & _Bool [sh&&->3478] ParseLevel *(4) _Bool &&[3478] "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 123
 ; ==
 load32 123 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; &
 and r2 r8 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3478
 ; ParseLevel
 ; * (read dereference)
 addr2reg ParseLevel r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_3478:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3476
 ; RPN'ized expression: "( errorDecl ) "
 ; Expanded expression: " errorDecl ()0 "
 ; (
 ; errorDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDecl
 add r13 16 r13
Label_3476:
 ; if
 ; RPN'ized expression: "isFxn Static & ParseLevel && "
 ; Expanded expression: "(@-32) *(4) (@-20) *(4) & _Bool [sh&&->3481] ParseLevel *(4) _Bool &&[3481] "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; local ofs
 ; * (read dereference)
 read -20 r14 r8
 ; &
 and r2 r8 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3481
 ; ParseLevel
 ; * (read dereference)
 addr2reg ParseLevel r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_3481:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3479
 ; RPN'ized expression: "( errorDecl ) "
 ; Expanded expression: " errorDecl ()0 "
 ; (
 ; errorDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDecl
 add r13 16 r13
Label_3479:
 ; if
 ; RPN'ized expression: "external tok 61 == & "
 ; Expanded expression: "(@-16) *(4) (@8) *(4) 61 == & "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 61
 ; ==
 load32 61 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; &
 and r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3482
 ; RPN'ized expression: "( errorInit ) "
 ; Expanded expression: " errorInit ()0 "
 ; (
 ; errorInit
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInit
 add r13 16 r13
Label_3482:
 ; if
 ; RPN'ized expression: "isIncompleteArr external tok 61 == | 0 == & "
 ; Expanded expression: "(@-44) *(4) (@-16) *(4) (@8) *(4) 61 == | 0 == & "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; local ofs
 ; * (read dereference)
 read 8 r14 r9
 ; 61
 ; ==
 load32 61 r1
 xor r9 r1 r9
 load32 1 r1
 bges r9 r1 3
 load32 1 r9
 jumpo 2
 load32 0 r9
 ; |
 or r8 r9 r8
 ; 0
 ; ==
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; &
 and r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3484
 ; RPN'ized expression: "( errorDecl ) "
 ; Expanded expression: " errorDecl ()0 "
 ; (
 ; errorDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDecl
 add r13 16 r13
Label_3484:
 ; if

.rdata
Label_3488:
.dw 60 115 111 109 101 116 104 105 110 103 62 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3488 , IdentTable SyntaxStack1 lastSyntaxPtr + *u + strcmp ) 0 == "
 ; Expanded expression: " L3488  IdentTable SyntaxStack1 (@-12) *(4) 4 * + *(4) +  strcmp ()8 0 == "
 ; (
 ; 3488
 addr2reg Label_3488 r5
 ; ,
 ; IdentTable
 addr2reg IdentTable r4
 ; SyntaxStack1
 sub r13 4 r13
 write 0 r13 r4
 addr2reg SyntaxStack1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -12 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3486
 ; {
 ; if
 ; RPN'ized expression: "structInfo ExprLevel 0 == || "
 ; Expanded expression: "(@12) *(4) _Bool [sh||->3491] ExprLevel *(4) 0 == ||[3491] "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3491
 ; ExprLevel
 ; * (read dereference)
 addr2reg ExprLevel r1
 read 0 r1 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3491:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3489

.rdata
Label_3492:
.dw 73 100 101 110 116 105 102 105 101 114 32 101 120 112 101 99 116 101 100 32 105 110 32 100 101 99 108 97 114 97 116 105 111 110 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3492 error ) "
 ; Expanded expression: " L3492  error ()4 "
 ; (
 ; 3492
 addr2reg Label_3492 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_3489:
 ; }
 jump Label_3487
Label_3486:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "ExprLevel structInfo 0 == && "
 ; Expanded expression: "ExprLevel *(4) _Bool [sh&&->3495] (@12) *(4) 0 == &&[3495] "
 ; ExprLevel
 ; * (read dereference)
 addr2reg ExprLevel r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3495
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3495:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3493

.rdata
Label_3496:
.dw 73 100 101 110 116 105 102 105 101 114 32 117 110 101 120 112 101 99 116 101 100 32 105 110 32 100 101 99 108 97 114 97 116 105 111 110 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3496 error ) "
 ; Expanded expression: " L3496  error ()4 "
 ; (
 ; 3496
 addr2reg Label_3496 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_3493:
 ; }
Label_3487:
 ; if
 ; RPN'ized expression: "isFxn 0 == "
 ; Expanded expression: "(@-32) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3497
 ; {
 ; loc                 sz : (@-56) : int
 ; RPN'ized expression: "sz ( 0 , lastSyntaxPtr GetDeclSize ) = "
 ; Expanded expression: "(@-56)  0  (@-12) *(4)  GetDeclSize ()8 =(4) "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -56 r14 r2
 ; if
 ; RPN'ized expression: "sz isIncompleteArr | ExprLevel || 0 == "
 ; Expanded expression: "(@-56) *(4) (@-44) *(4) | _Bool [sh||->3501] ExprLevel *(4) _Bool ||[3501] 0 == "
 ; local ofs
 ; * (read dereference)
 read -56 r14 r2
 ; local ofs
 ; * (read dereference)
 read -44 r14 r8
 ; |
 or r2 r8 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3501
 ; ExprLevel
 ; * (read dereference)
 addr2reg ExprLevel r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_3501:
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3499
 ; RPN'ized expression: "( errorDecl ) "
 ; Expanded expression: " errorDecl ()0 "
 ; (
 ; errorDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDecl
 add r13 16 r13
Label_3499:
 ; if
 ; RPN'ized expression: "isArray ( 0 , lastSyntaxPtr 4 + GetDeclSize ) 0 == && "
 ; Expanded expression: "(@-40) *(4) _Bool [sh&&->3504]  0  (@-12) *(4) 4 +  GetDeclSize ()8 0 == &&[3504] "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3504
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; 4
 ; +
 add r4 4 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3504:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3502
 ; RPN'ized expression: "( errorDecl ) "
 ; Expanded expression: " errorDecl ()0 "
 ; (
 ; errorDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDecl
 add r13 16 r13
Label_3502:
 ; RPN'ized expression: "alignment ( lastSyntaxPtr GetDeclAlignment ) = "
 ; Expanded expression: "(@-48)  (@-12) *(4)  GetDeclAlignment ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; GetDeclAlignment
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclAlignment
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -48 r14 r2
 ; if
 ; RPN'ized expression: "structInfo "
 ; Expanded expression: "(@12) *(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3505
 ; {
 ; loc                     tmp : (@-60) : unsigned
 ; loc                     newAlignment : (@-64) : unsigned
 ; RPN'ized expression: "newAlignment alignment = "
 ; Expanded expression: "(@-64) (@-48) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 ; local ofs
 ; = (write dereference)
 write -64 r14 r2
 ; if
 ; RPN'ized expression: "structInfo 1 + *u newAlignment < "
 ; Expanded expression: "(@12) *(4) 4 + *(4) (@-64) *(4) <u "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read -64 r14 r8
 ; <u
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_3507
 ; RPN'ized expression: "structInfo 1 + *u newAlignment = "
 ; Expanded expression: "(@12) *(4) 4 + (@-64) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -64 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_3507:
 ; RPN'ized expression: "tmp structInfo 2 + *u = "
 ; Expanded expression: "(@-60) (@12) *(4) 8 + *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 8
 ; +
 add r2 8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -60 r14 r2
 ; RPN'ized expression: "structInfo 2 + *u structInfo 2 + *u newAlignment + 1 - newAlignment 1 - ~ & = "
 ; Expanded expression: "(@12) *(4) 8 + (@12) *(4) 8 + *(4) (@-64) *(4) + 1 - (@-64) *(4) 1 - ~ & =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 8
 ; +
 add r2 8 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; 8
 ; +
 add r8 8 r8
 ; * (read dereference)
 read 0 r8 r8
 ; local ofs
 ; * (read dereference)
 read -64 r14 r9
 ; +
 add r8 r9 r8
 ; 1
 ; -
 sub r8 1 r8
 ; local ofs
 ; * (read dereference)
 read -64 r14 r9
 ; 1
 ; -
 sub r9 1 r9
 ; ~
 or r9 r9 r9
 not r9 r9
 ; &
 and r8 r9 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; if
 ; RPN'ized expression: "structInfo 2 + *u tmp < structInfo 2 + *u ( structInfo 2 + *u truncUint ) != || "
 ; Expanded expression: "(@12) *(4) 8 + *(4) (@-60) *(4) <u [sh||->3511] (@12) *(4) 8 + *(4)  (@12) *(4) 8 + *(4)  truncUint ()4 != ||[3511] "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 8
 ; +
 add r2 8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -60 r14 r2
 ; <u
 read 0 r13 r11
 add r13 4 r13
 bges r11 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3511
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 8
 ; +
 add r2 8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; 8
 ; +
 add r4 8 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; !=
 read 0 r13 r11
 add r13 4 r13
 xor r11 r2 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3511:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3509
 ; RPN'ized expression: "( errorVarSize ) "
 ; Expanded expression: " errorVarSize ()0 "
 ; (
 ; errorVarSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorVarSize
 add r13 16 r13
Label_3509:
 ; RPN'ized expression: "SyntaxStack0 lastSyntaxPtr + *u 146 = "
 ; Expanded expression: "SyntaxStack0 (@-12) *(4) + 146 =(1) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; +
 add r2 r8 r2
 ; 146
 load32 146 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 and r2 255 r2
 ; loc                     <something> : int
 ; RPN'ized expression: "( structInfo 2 + *u (something3512) , 89 , lastSyntaxPtr 1 + InsertSyntax2 ) "
 ; Expanded expression: " (@12) *(4) 8 + *(4)  89  (@-12) *(4) 1 +  InsertSyntax2 ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r6
 ; 8
 ; +
 add r6 8 r6
 ; * (read dereference)
 read 0 r6 r6
 ; ,
 ; 89
 load32 89 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; ,
 ; InsertSyntax2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump InsertSyntax2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "structInfo 0 + *u 113 == "
 ; Expanded expression: "(@12) *(4) 0 + *(4) 113 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 113
 ; ==
 load32 113 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3513
 ; {
 ; RPN'ized expression: "tmp structInfo 2 + *u = "
 ; Expanded expression: "(@-60) (@12) *(4) 8 + *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 8
 ; +
 add r2 8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -60 r14 r2
 ; RPN'ized expression: "structInfo 2 + *u sz += "
 ; Expanded expression: "(@12) *(4) 8 + (@-56) *(4) +=(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 8
 ; +
 add r2 8 r2
 ; local ofs
 ; * (read dereference)
 read -56 r14 r8
 ; +=
 or r0 r2 r12
 read 0 r2 r2
 add r2 r8 r2
 write 0 r12 r2
 ; if
 ; RPN'ized expression: "structInfo 2 + *u tmp < structInfo 2 + *u ( structInfo 2 + *u truncUint ) != || "
 ; Expanded expression: "(@12) *(4) 8 + *(4) (@-60) *(4) <u [sh||->3517] (@12) *(4) 8 + *(4)  (@12) *(4) 8 + *(4)  truncUint ()4 != ||[3517] "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 8
 ; +
 add r2 8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -60 r14 r2
 ; <u
 read 0 r13 r11
 add r13 4 r13
 bges r11 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3517
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 8
 ; +
 add r2 8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; 8
 ; +
 add r4 8 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; truncUint
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncUint
 add r13 16 r13
 ; !=
 read 0 r13 r11
 add r13 4 r13
 xor r11 r2 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3517:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3515
 ; RPN'ized expression: "( errorVarSize ) "
 ; Expanded expression: " errorVarSize ()0 "
 ; (
 ; errorVarSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorVarSize
 add r13 16 r13
Label_3515:
 ; }
 jump Label_3514
Label_3513:
 ; else
 ; if
 ; loc                     <something> : unsigned
 ; RPN'ized expression: "structInfo 3 + *u sz (something3520) < "
 ; Expanded expression: "(@12) *(4) 12 + *(4) (@-56) *(4) <u "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 12
 ; +
 add r2 12 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read -56 r14 r8
 ; <u
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_3518
 ; {
 ; RPN'ized expression: "structInfo 3 + *u sz = "
 ; Expanded expression: "(@12) *(4) 12 + (@-56) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 12
 ; +
 add r2 12 r2
 ; local ofs
 ; * (read dereference)
 read -56 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
Label_3518:
Label_3514:
 ; }
 jump Label_3506
Label_3505:
 ; else
 ; if
 ; RPN'ized expression: "ParseLevel external Static | ExprLevel || 0 == && "
 ; Expanded expression: "ParseLevel *(4) _Bool [sh&&->3523] (@-16) *(4) (@-20) *(4) | _Bool [sh||->3524] ExprLevel *(4) _Bool ||[3524] 0 == &&[3523] "
 ; ParseLevel
 ; * (read dereference)
 addr2reg ParseLevel r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3523
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; local ofs
 ; * (read dereference)
 read -20 r14 r8
 ; |
 or r2 r8 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3524
 ; ExprLevel
 ; * (read dereference)
 addr2reg ExprLevel r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_3524:
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3523:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3521
 ; {
 ; RPN'ized expression: "isLocal 1 = "
 ; Expanded expression: "(@-24) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; RPN'ized expression: "( 0 , 89 , lastSyntaxPtr 1 + InsertSyntax2 ) "
 ; Expanded expression: " 0  89  (@-12) *(4) 1 +  InsertSyntax2 ()12 "
 ; (
 ; 0
 load32 0 r6
 ; ,
 ; 89
 load32 89 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; 1
 ; +
 add r4 1 r4
 ; ,
 ; InsertSyntax2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump InsertSyntax2
 add r13 16 r13
 ; }
 jump Label_3522
Label_3521:
 ; else
 ; if
 ; RPN'ized expression: "ExprLevel 0 == "
 ; Expanded expression: "ExprLevel *(4) 0 == "
 ; ExprLevel
 ; * (read dereference)
 addr2reg ExprLevel r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3525
 ; {
 ; RPN'ized expression: "isGlobal 1 = "
 ; Expanded expression: "(@-28) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -28 r14 r2
 ; if
 ; RPN'ized expression: "Static ParseLevel && "
 ; Expanded expression: "(@-20) *(4) _Bool [sh&&->3529] ParseLevel *(4) _Bool &&[3529] "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3529
 ; ParseLevel
 ; * (read dereference)
 addr2reg ParseLevel r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_3529:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3527
 ; {
 ; RPN'ized expression: "staticLabel LabelCnt ++p = "
 ; Expanded expression: "(@-52) LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -52 r14 r2
 ; RPN'ized expression: "( ( staticLabel AddNumericIdent ) , 16 , lastSyntaxPtr 1 + InsertSyntax2 ) "
 ; Expanded expression: "  (@-52) *(4)  AddNumericIdent ()4  16  (@-12) *(4) 1 +  InsertSyntax2 ()12 "
 ; (
 sub r13 4 r13
 ; (
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read -52 r14 r2
 ; ,
 ; AddNumericIdent
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump AddNumericIdent
 add r13 16 r13
 ; ,
 ; 16
 sub r13 4 r13
 write 0 r13 r2
 load32 16 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -12 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; ,
 ; InsertSyntax2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 read 8 r13 r6
 savpc r15
 add r15 3 r15
 jump InsertSyntax2
 add r13 16 r13
 ; }
Label_3527:
 ; }
Label_3525:
Label_3522:
Label_3506:
 ; }
Label_3497:
 ; if
 ; RPN'ized expression: "ExprLevel structInfo 0 == && "
 ; Expanded expression: "ExprLevel *(4) _Bool [sh&&->3532] (@12) *(4) 0 == &&[3532] "
 ; ExprLevel
 ; * (read dereference)
 addr2reg ExprLevel r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3532
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3532:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3530
 ; {
 ; RPN'ized expression: "( 0 , lastSyntaxPtr DumpDecl ) "
 ; Expanded expression: " 0  (@-12) *(4)  DumpDecl ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; DumpDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DumpDecl
 add r13 16 r13
 ; return
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 jump Label_3429
 ; }
Label_3530:
 ; if
 ; RPN'ized expression: "isLocal isGlobal | "
 ; Expanded expression: "(@-24) *(4) (@-28) *(4) | "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; local ofs
 ; * (read dereference)
 read -28 r14 r8
 ; |
 or r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3533
 ; {
 ; loc                 hasInit : (@-56) : int
 ; RPN'ized expression: "hasInit tok 61 == = "
 ; Expanded expression: "(@-56) (@8) *(4) 61 == =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 61
 ; ==
 load32 61 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -56 r14 r2
 ; loc                 needsGlobalInit : (@-60) : int
 ; RPN'ized expression: "needsGlobalInit isGlobal external 0 == & = "
 ; Expanded expression: "(@-60) (@-28) *(4) (@-16) *(4) 0 == & =(4) "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; 0
 ; ==
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; &
 and r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -60 r14 r2
 ; loc                 sz : (@-64) : int
 ; RPN'ized expression: "sz ( 0 , lastSyntaxPtr GetDeclSize ) = "
 ; Expanded expression: "(@-64)  0  (@-12) *(4)  GetDeclSize ()8 =(4) "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -64 r14 r2
 ; loc                 initLabel : (@-68) : int
 ; RPN'ized expression: "initLabel 0 = "
 ; Expanded expression: "(@-68) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -68 r14 r0
 ; loc                 bss : (@-72) : int
 ; RPN'ized expression: "bss hasInit 0 == UseBss & = "
 ; Expanded expression: "(@-72) (@-56) *(4) 0 == UseBss *(4) & =(4) "
 ; local ofs
 ; * (read dereference)
 read -56 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; UseBss
 ; * (read dereference)
 addr2reg UseBss r1
 read 0 r1 r8
 ; &
 and r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -72 r14 r2
 ; if
 ; RPN'ized expression: "isGlobal "
 ; Expanded expression: "(@-28) *(4) "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3535
 ; RPN'ized expression: "( 0 , lastSyntaxPtr DumpDecl ) "
 ; Expanded expression: " 0  (@-12) *(4)  DumpDecl ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; DumpDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DumpDecl
 add r13 16 r13
Label_3535:
 ; if
 ; RPN'ized expression: "hasInit "
 ; Expanded expression: "(@-56) *(4) "
 ; local ofs
 ; * (read dereference)
 read -56 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3537
 ; {
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
Label_3537:
 ; if
 ; RPN'ized expression: "isLocal hasInit & "
 ; Expanded expression: "(@-24) *(4) (@-56) *(4) & "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; local ofs
 ; * (read dereference)
 read -56 r14 r8
 ; &
 and r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3539
 ; RPN'ized expression: "needsGlobalInit isArray isStruct tok 123 == & | = "
 ; Expanded expression: "(@-60) (@-40) *(4) (@-36) *(4) (@8) *(4) 123 == & | =(4) "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r8
 ; local ofs
 ; * (read dereference)
 read 8 r14 r9
 ; 123
 ; ==
 load32 123 r1
 xor r9 r1 r9
 load32 1 r1
 bges r9 r1 3
 load32 1 r9
 jumpo 2
 load32 0 r9
 ; &
 and r8 r9 r8
 ; |
 or r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -60 r14 r2
Label_3539:
 ; if
 ; RPN'ized expression: "needsGlobalInit "
 ; Expanded expression: "(@-60) *(4) "
 ; local ofs
 ; * (read dereference)
 read -60 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3541
 ; {
 ; loc                     oldHeaderFooter : (@-76) : * * char
 ; RPN'ized expression: "oldHeaderFooter CurHeaderFooter = "
 ; Expanded expression: "(@-76) CurHeaderFooter *(4) =(4) "
 ; CurHeaderFooter
 ; * (read dereference)
 addr2reg CurHeaderFooter r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -76 r14 r2
 ; if
 ; RPN'ized expression: "oldHeaderFooter "
 ; Expanded expression: "(@-76) *(4) "
 ; local ofs
 ; * (read dereference)
 read -76 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3543
 ; RPN'ized expression: "( oldHeaderFooter 1 + *u puts2 ) "
 ; Expanded expression: " (@-76) *(4) 4 + *(4)  puts2 ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -76 r14 r4
 ; 4
 ; +
 add r4 4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
Label_3543:
 ; RPN'ized expression: "CurHeaderFooter bss DataHeaderFooter BssHeaderFooter ? = "
 ; Expanded expression: "CurHeaderFooter (@-72) *(4) [sh||->3545] DataHeaderFooter goto &&[3545] BssHeaderFooter &&[3546] =(4) "
 ; local ofs
 ; * (read dereference)
 read -72 r14 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3545
 ; DataHeaderFooter
 addr2reg DataHeaderFooter r2
 ; sh-circ-goto goto
 jump Label_3546
 ; short-circuit && target
Label_3545:
 ; BssHeaderFooter
 addr2reg BssHeaderFooter r2
 ; short-circuit && target
Label_3546:
 ; CurHeaderFooter
 ; = (write dereference)
 addr2reg CurHeaderFooter r1
 write 0 r1 r2
 ; RPN'ized expression: "( CurHeaderFooter 0 + *u puts2 ) "
 ; Expanded expression: " CurHeaderFooter *(4) 0 + *(4)  puts2 ()4 "
 ; (
 ; CurHeaderFooter
 ; * (read dereference)
 addr2reg CurHeaderFooter r1
 read 0 r1 r4
 ; 0
 ; +
 add r4 0 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "alignment 1 != "
 ; Expanded expression: "(@-48) *(4) 1 != "
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 ; 1
 ; !=
 load32 1 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3547
 ; RPN'ized expression: "( bss GenWordAlignment ) "
 ; Expanded expression: " (@-72) *(4)  GenWordAlignment ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -72 r14 r4
 ; ,
 ; GenWordAlignment
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenWordAlignment
 add r13 16 r13
Label_3547:
 ; if
 ; RPN'ized expression: "isGlobal "
 ; Expanded expression: "(@-28) *(4) "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3549
 ; {
 ; if
 ; RPN'ized expression: "Static ParseLevel && "
 ; Expanded expression: "(@-20) *(4) _Bool [sh&&->3553] ParseLevel *(4) _Bool &&[3553] "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3553
 ; ParseLevel
 ; * (read dereference)
 addr2reg ParseLevel r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_3553:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3551
 ; RPN'ized expression: "( staticLabel GenNumLabel ) "
 ; Expanded expression: " (@-52) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -52 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 jump Label_3552
Label_3551:
 ; else
 ; RPN'ized expression: "( Static , IdentTable SyntaxStack1 lastSyntaxPtr + *u + GenLabel ) "
 ; Expanded expression: " (@-20) *(4)  IdentTable SyntaxStack1 (@-12) *(4) 4 * + *(4) +  GenLabel ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r5
 ; ,
 ; IdentTable
 addr2reg IdentTable r4
 ; SyntaxStack1
 sub r13 4 r13
 write 0 r13 r4
 addr2reg SyntaxStack1 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -12 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; GenLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenLabel
 add r13 16 r13
Label_3552:
 ; }
 jump Label_3550
Label_3549:
 ; else
 ; {
 ; RPN'ized expression: "( initLabel LabelCnt ++p = GenNumLabel ) "
 ; Expanded expression: " (@-68) LabelCnt ++p(4) =(4)  GenNumLabel ()4 "
 ; (
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r4
 add r4 1 r4
 addr2reg LabelCnt r1
 write 0 r1 r4
 sub r4 1 r4
 ; local ofs
 ; = (write dereference)
 write -68 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; }
Label_3550:
 ; if
 ; RPN'ized expression: "hasInit "
 ; Expanded expression: "(@-56) *(4) "
 ; local ofs
 ; * (read dereference)
 read -56 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3554
 ; {
 ; if
 ; RPN'ized expression: "isGlobal "
 ; Expanded expression: "(@-28) *(4) "
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3556
 ; {
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3558:
.dw 61 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3558 printf2 ) "
 ; Expanded expression: " L3558  printf2 ()4 "
 ; (
 ; 3558
 addr2reg Label_3558 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; }
Label_3556:
 ; RPN'ized expression: "tok ( tok , lastSyntaxPtr InitVar ) = "
 ; Expanded expression: "(@8)  (@8) *(4)  (@-12) *(4)  InitVar ()8 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; InitVar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump InitVar
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "sz ( 0 , lastSyntaxPtr GetDeclSize ) = "
 ; Expanded expression: "(@-64)  0  (@-12) *(4)  GetDeclSize ()8 =(4) "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -64 r14 r2
 ; }
 jump Label_3555
Label_3554:
 ; else
 ; {
 ; RPN'ized expression: "( bss , sz GenZeroData ) "
 ; Expanded expression: " (@-72) *(4)  (@-64) *(4)  GenZeroData ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -72 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -64 r14 r4
 ; ,
 ; GenZeroData
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenZeroData
 add r13 16 r13
 ; }
Label_3555:
 ; RPN'ized expression: "( CurHeaderFooter 1 + *u puts2 ) "
 ; Expanded expression: " CurHeaderFooter *(4) 4 + *(4)  puts2 ()4 "
 ; (
 ; CurHeaderFooter
 ; * (read dereference)
 addr2reg CurHeaderFooter r1
 read 0 r1 r4
 ; 4
 ; +
 add r4 4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "oldHeaderFooter "
 ; Expanded expression: "(@-76) *(4) "
 ; local ofs
 ; * (read dereference)
 read -76 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3559
 ; RPN'ized expression: "( oldHeaderFooter 0 + *u puts2 ) "
 ; Expanded expression: " (@-76) *(4) 0 + *(4)  puts2 ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -76 r14 r4
 ; 0
 ; +
 add r4 0 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
Label_3559:
 ; RPN'ized expression: "CurHeaderFooter oldHeaderFooter = "
 ; Expanded expression: "CurHeaderFooter (@-76) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -76 r14 r2
 ; CurHeaderFooter
 ; = (write dereference)
 addr2reg CurHeaderFooter r1
 write 0 r1 r2
 ; }
Label_3541:
 ; if
 ; RPN'ized expression: "isLocal "
 ; Expanded expression: "(@-24) *(4) "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3561
 ; {
 ; RPN'ized expression: "SyntaxStack1 lastSyntaxPtr 1 + + *u ( sz AllocLocal ) = "
 ; Expanded expression: "SyntaxStack1 (@-12) *(4) 1 + 4 * +  (@-64) *(4)  AllocLocal ()4 =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -12 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; 2
 ; <<
 shiftl r2 2 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 ; * (read dereference)
 read -64 r14 r4
 ; ,
 ; AllocLocal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump AllocLocal
 add r13 16 r13
 ; = (write dereference)
 read 0 r13 r11
 add r13 4 r13
 write 0 r11 r2
 ; RPN'ized expression: "( 0 , lastSyntaxPtr DumpDecl ) "
 ; Expanded expression: " 0  (@-12) *(4)  DumpDecl ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; DumpDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DumpDecl
 add r13 16 r13
 ; }
Label_3561:
 ; if
 ; RPN'ized expression: "isLocal needsGlobalInit & "
 ; Expanded expression: "(@-24) *(4) (@-60) *(4) & "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; local ofs
 ; * (read dereference)
 read -60 r14 r8
 ; &
 and r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3563
 ; {
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3565:
.dw 61 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3565 printf2 ) "
 ; Expanded expression: " L3565  printf2 ()4 "
 ; (
 ; 3565
 addr2reg Label_3565 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "StructCpyLabel 0 == "
 ; Expanded expression: "StructCpyLabel *(4) 0 == "
 ; StructCpyLabel
 ; * (read dereference)
 addr2reg StructCpyLabel r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3566
 ; RPN'ized expression: "StructCpyLabel LabelCnt ++p = "
 ; Expanded expression: "StructCpyLabel LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; StructCpyLabel
 ; = (write dereference)
 addr2reg StructCpyLabel r1
 write 0 r1 r2
Label_3566:
 ; RPN'ized expression: "sp 0 = "
 ; Expanded expression: "sp 0 =(4) "
 ; 0
 ; sp
 ; =
 addr2reg sp r1
 write 0 r1 r0
 ; RPN'ized expression: "( SizeOfWord 3 * , 40 push2 ) "
 ; Expanded expression: " SizeOfWord *(4) 3 *  40  push2 ()8 "
 ; (
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r5
 ; 3
 sub r13 4 r13
 write 0 r13 r5
 load32 3 r5
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r5 r5
 ; ,
 ; 40
 load32 40 r4
 ; ,
 ; push2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; RPN'ized expression: "( SyntaxStack1 lastSyntaxPtr 1 + + *u , 89 push2 ) "
 ; Expanded expression: " SyntaxStack1 (@-12) *(4) 1 + 4 * + *(4)  89  push2 ()8 "
 ; (
 ; SyntaxStack1
 addr2reg SyntaxStack1 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -12 r14 r5
 ; 1
 ; +
 add r5 1 r5
 ; 2
 ; <<
 shiftl r5 2 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; 89
 load32 89 r4
 ; ,
 ; push2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; RPN'ized expression: "( 44 push ) "
 ; Expanded expression: " 44  push ()4 "
 ; (
 ; 44
 load32 44 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; RPN'ized expression: "( ( initLabel AddNumericIdent ) , 16 push2 ) "
 ; Expanded expression: "  (@-68) *(4)  AddNumericIdent ()4  16  push2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; local ofs
 ; * (read dereference)
 read -68 r14 r2
 ; ,
 ; AddNumericIdent
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump AddNumericIdent
 add r13 16 r13
 ; ,
 ; 16
 sub r13 4 r13
 write 0 r13 r2
 load32 16 r2
 ; ,
 ; push2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; RPN'ized expression: "( 44 push ) "
 ; Expanded expression: " 44  push ()4 "
 ; (
 ; 44
 load32 44 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; RPN'ized expression: "( sz , 2 push2 ) "
 ; Expanded expression: " (@-64) *(4)  2  push2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -64 r14 r5
 ; ,
 ; 2
 load32 2 r4
 ; ,
 ; push2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; RPN'ized expression: "( 44 push ) "
 ; Expanded expression: " 44  push ()4 "
 ; (
 ; 44
 load32 44 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; RPN'ized expression: "( ( StructCpyLabel AddNumericIdent ) , 16 push2 ) "
 ; Expanded expression: "  StructCpyLabel *(4)  AddNumericIdent ()4  16  push2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; StructCpyLabel
 ; * (read dereference)
 addr2reg StructCpyLabel r1
 read 0 r1 r2
 ; ,
 ; AddNumericIdent
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump AddNumericIdent
 add r13 16 r13
 ; ,
 ; 16
 sub r13 4 r13
 write 0 r13 r2
 load32 16 r2
 ; ,
 ; push2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; RPN'ized expression: "( SizeOfWord 3 * , 41 push2 ) "
 ; Expanded expression: " SizeOfWord *(4) 3 *  41  push2 ()8 "
 ; (
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r5
 ; 3
 sub r13 4 r13
 write 0 r13 r5
 load32 3 r5
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r5 r5
 ; ,
 ; 41
 load32 41 r4
 ; ,
 ; push2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; RPN'ized expression: "( GenExpr ) "
 ; Expanded expression: " GenExpr ()0 "
 ; (
 ; GenExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExpr
 add r13 16 r13
 ; }
 jump Label_3564
Label_3563:
 ; else
 ; if
 ; RPN'ized expression: "hasInit needsGlobalInit 0 == & "
 ; Expanded expression: "(@-56) *(4) (@-60) *(4) 0 == & "
 ; local ofs
 ; * (read dereference)
 read -56 r14 r2
 ; local ofs
 ; * (read dereference)
 read -60 r14 r8
 ; 0
 ; ==
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; &
 and r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3568
 ; {
 ; loc                     gotUnary : (@-76) : int
 ; loc                     synPtr : (@-80) : int
 ; loc                     constExpr : (@-84) : int
 ; loc                     exprVal : (@-88) : int
 ; loc                     brace : (@-92) : int
 ; RPN'ized expression: "brace 0 = "
 ; Expanded expression: "(@-92) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -92 r14 r0
 ; if
 ; RPN'ized expression: "isStruct 0 == tok 123 == & "
 ; Expanded expression: "(@-36) *(4) 0 == (@8) *(4) 123 == & "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 123
 ; ==
 load32 123 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; &
 and r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3570
 ; {
 ; RPN'ized expression: "brace 1 = "
 ; Expanded expression: "(@-92) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -92 r14 r2
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
Label_3570:
 ; RPN'ized expression: "tok ( SyntaxStack1 lastSyntaxPtr + *u , 61 , exprVal &u , constExpr &u , synPtr &u , gotUnary &u , tok ParseExpr ) = "
 ; Expanded expression: "(@8)  SyntaxStack1 (@-12) *(4) 4 * + *(4)  61  (@-88)  (@-84)  (@-80)  (@-76)  (@8) *(4)  ParseExpr ()28 =(4) "
 ; (
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -12 r14 r2
 ; 2
 ; <<
 shiftl r2 2 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; * (read dereference)
 read 0 r2 r2
 ; ,
 ; 61
 sub r13 4 r13
 write 0 r13 r2
 load32 61 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 sub r14 88 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 sub r14 84 r7
 ; ,
 ; local ofs
 sub r14 80 r6
 ; ,
 ; local ofs
 sub r14 76 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseExpr
 add r13 28 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "gotUnary 0 == "
 ; Expanded expression: "(@-76) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -76 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3572
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3572:
 ; if
 ; RPN'ized expression: "brace "
 ; Expanded expression: "(@-92) *(4) "
 ; local ofs
 ; * (read dereference)
 read -92 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3574
 ; {
 ; if
 ; RPN'ized expression: "tok 125 != "
 ; Expanded expression: "(@8) *(4) 125 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 125
 ; !=
 load32 125 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3576
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3576:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
Label_3574:
 ; if
 ; RPN'ized expression: "isStruct 0 == "
 ; Expanded expression: "(@-36) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3578
 ; {
 ; RPN'ized expression: "stack sp 1 - + *u 1 + *u SizeOfWord = "
 ; Expanded expression: "stack sp *(4) 1 - 8 * + 4 + SizeOfWord *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
Label_3578:
 ; RPN'ized expression: "( GenExpr ) "
 ; Expanded expression: " GenExpr ()0 "
 ; (
 ; GenExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExpr
 add r13 16 r13
 ; }
Label_3568:
Label_3564:
 ; }
 jump Label_3534
Label_3533:
 ; else
 ; if
 ; RPN'ized expression: "tok 123 == "
 ; Expanded expression: "(@8) *(4) 123 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 123
 ; ==
 load32 123 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3580
 ; {
 ; loc                 undoSymbolsPtr : (@-56) : int
 ; RPN'ized expression: "undoSymbolsPtr SyntaxStackCnt = "
 ; Expanded expression: "(@-56) SyntaxStackCnt *(4) =(4) "
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -56 r14 r2
 ; loc                 undoIdents : (@-60) : int
 ; RPN'ized expression: "undoIdents IdentTableLen = "
 ; Expanded expression: "(@-60) IdentTableLen *(4) =(4) "
 ; IdentTableLen
 ; * (read dereference)
 addr2reg IdentTableLen r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -60 r14 r2
 ; loc                 i : (@-64) : int
 ; loc                 endLabel : (@-68) : int
 ; RPN'ized expression: "endLabel 0 = "
 ; Expanded expression: "(@-68) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -68 r14 r0
 ; RPN'ized expression: "( 0 , lastSyntaxPtr DumpDecl ) "
 ; Expanded expression: " 0  (@-12) *(4)  DumpDecl ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; DumpDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DumpDecl
 add r13 16 r13
 ; RPN'ized expression: "CurFxnName IdentTable SyntaxStack1 lastSyntaxPtr + *u + = "
 ; Expanded expression: "CurFxnName IdentTable SyntaxStack1 (@-12) *(4) 4 * + *(4) + =(4) "
 ; IdentTable
 addr2reg IdentTable r2
 ; SyntaxStack1
 addr2reg SyntaxStack1 r8
 ; local ofs
 ; * (read dereference)
 read -12 r14 r9
 ; 2
 ; <<
 shiftl r9 2 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; CurFxnName
 ; = (write dereference)
 addr2reg CurFxnName r1
 write 0 r1 r2

.rdata
Label_3582:
.dw 109 97 105 110 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "IsMain ( L3582 , CurFxnName strcmp ) 0 == = "
 ; Expanded expression: "IsMain  L3582  CurFxnName *(4)  strcmp ()8 0 == =(4) "
 ; (
 ; 3582
 addr2reg Label_3582 r5
 ; ,
 ; CurFxnName
 ; * (read dereference)
 addr2reg CurFxnName r1
 read 0 r1 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; IsMain
 ; = (write dereference)
 addr2reg IsMain r1
 write 0 r1 r2
 ; RPN'ized expression: "gotoLabCnt 0 = "
 ; Expanded expression: "gotoLabCnt 0 =(4) "
 ; 0
 ; gotoLabCnt
 ; =
 addr2reg gotoLabCnt r1
 write 0 r1 r0
 ; if
 ; RPN'ized expression: "verbose "
 ; Expanded expression: "verbose *(4) "
 ; verbose
 ; * (read dereference)
 addr2reg verbose r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3583

.rdata
Label_3585:
.dw 37 115 40 41 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( CurFxnName , L3585 printf ) "
 ; Expanded expression: " CurFxnName *(4)  L3585  printf ()8 "
 ; (
 ; CurFxnName
 ; * (read dereference)
 addr2reg CurFxnName r1
 read 0 r1 r5
 ; ,
 ; 3585
 addr2reg Label_3585 r4
 ; ,
 ; printf
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf
 add r13 16 r13
Label_3583:
 ; RPN'ized expression: "ParseLevel ++p "
 ; Expanded expression: "ParseLevel ++p(4) "
 ; ParseLevel
 ; ++p
 addr2reg ParseLevel r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg ParseLevel r1
 write 0 r1 r2
 sub r2 1 r2
 ; RPN'ized expression: "( 0 , CurFxnReturnExprTypeSynPtr &u , CurFxnParamCntMax &u , CurFxnParamCntMin &u , lastSyntaxPtr GetFxnInfo ) "
 ; Expanded expression: " 0  CurFxnReturnExprTypeSynPtr  CurFxnParamCntMax  CurFxnParamCntMin  (@-12) *(4)  GetFxnInfo ()20 "
 ; (
 ; 0
 load32 0 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; CurFxnReturnExprTypeSynPtr
 addr2reg CurFxnReturnExprTypeSynPtr r7
 ; ,
 ; CurFxnParamCntMax
 addr2reg CurFxnParamCntMax r6
 ; ,
 ; CurFxnParamCntMin
 addr2reg CurFxnParamCntMin r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; GetFxnInfo
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetFxnInfo
 add r13 20 r13
 ; RPN'ized expression: "CurHeaderFooter CodeHeaderFooter = "
 ; Expanded expression: "CurHeaderFooter CodeHeaderFooter =(4) "
 ; CodeHeaderFooter
 addr2reg CodeHeaderFooter r2
 ; CurHeaderFooter
 ; = (write dereference)
 addr2reg CurHeaderFooter r1
 write 0 r1 r2
 ; RPN'ized expression: "( CurHeaderFooter 0 + *u puts2 ) "
 ; Expanded expression: " CurHeaderFooter *(4) 0 + *(4)  puts2 ()4 "
 ; (
 ; CurHeaderFooter
 ; * (read dereference)
 addr2reg CurHeaderFooter r1
 read 0 r1 r4
 ; 0
 ; +
 add r4 0 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
 ; RPN'ized expression: "( Static , CurFxnName GenLabel ) "
 ; Expanded expression: " (@-20) *(4)  CurFxnName *(4)  GenLabel ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r5
 ; ,
 ; CurFxnName
 ; * (read dereference)
 addr2reg CurFxnName r1
 read 0 r1 r4
 ; ,
 ; GenLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenLabel
 add r13 16 r13
 ; RPN'ized expression: "( GenFxnProlog ) "
 ; Expanded expression: " GenFxnProlog ()0 "
 ; (
 ; GenFxnProlog
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenFxnProlog
 add r13 16 r13
 ; RPN'ized expression: "CurFxnEpilogLabel LabelCnt ++p = "
 ; Expanded expression: "CurFxnEpilogLabel LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; CurFxnEpilogLabel
 ; = (write dereference)
 addr2reg CurFxnEpilogLabel r1
 write 0 r1 r2
 ; RPN'ized expression: "( 35 PushSyntax ) "
 ; Expanded expression: " 35  PushSyntax ()4 "
 ; (
 ; 35
 load32 35 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; RPN'ized expression: "( lastSyntaxPtr AddFxnParamSymbols ) "
 ; Expanded expression: " (@-12) *(4)  AddFxnParamSymbols ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; AddFxnParamSymbols
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump AddFxnParamSymbols
 add r13 16 r13
 ; RPN'ized expression: "tok ( 0 , BrkCntTargetFxn ParseBlock ) = "
 ; Expanded expression: "(@8)  0  BrkCntTargetFxn  ParseBlock ()8 =(4) "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; BrkCntTargetFxn
 addr2reg BrkCntTargetFxn r4
 ; ,
 ; ParseBlock
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseBlock
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "ParseLevel --p "
 ; Expanded expression: "ParseLevel --p(4) "
 ; ParseLevel
 ; --p
 addr2reg ParseLevel r1
 read 0 r1 r2
 sub r2 1 r2
 addr2reg ParseLevel r1
 write 0 r1 r2
 add r2 1 r2
 ; if
 ; RPN'ized expression: "tok 125 != "
 ; Expanded expression: "(@8) *(4) 125 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 125
 ; !=
 load32 125 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3586
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3586:
 ; for
 ; RPN'ized expression: "i 0 = "
 ; Expanded expression: "(@-64) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -64 r14 r0
Label_3588:
 ; RPN'ized expression: "i gotoLabCnt < "
 ; Expanded expression: "(@-64) *(4) gotoLabCnt *(4) < "
 ; local ofs
 ; * (read dereference)
 read -64 r14 r2
 ; gotoLabCnt
 ; * (read dereference)
 addr2reg gotoLabCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_3591
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-64) ++p(4) "
 ; if
 ; RPN'ized expression: "gotoLabStat i + *u 2 == "
 ; Expanded expression: "gotoLabStat (@-64) *(4) + *(-1) 2 == "
 ; gotoLabStat
 addr2reg gotoLabStat r2
 ; local ofs
 ; * (read dereference)
 read -64 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3592

.rdata
Label_3594:
.dw 85 110 100 101 99 108 97 114 101 100 32 108 97 98 101 108 32 39 37 115 39 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( IdentTable gotoLabels i + *u 0 + *u + , L3594 error ) "
 ; Expanded expression: " IdentTable gotoLabels (@-64) *(4) 8 * + 0 + *(4) +  L3594  error ()8 "
 ; (
 ; IdentTable
 addr2reg IdentTable r5
 ; gotoLabels
 sub r13 4 r13
 write 0 r13 r5
 addr2reg gotoLabels r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -64 r14 r5
 ; 3
 ; <<
 shiftl r5 3 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; 0
 ; +
 add r5 0 r5
 ; * (read dereference)
 read 0 r5 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; 3594
 addr2reg Label_3594 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_3592:
Label_3589:
 ; local ofs
 ; ++p
 read -64 r14 r2
 add r2 1 r2
 write -64 r14 r2
 sub r2 1 r2
 jump Label_3588
Label_3591:
 ; if
 ; RPN'ized expression: "IsMain "
 ; Expanded expression: "IsMain *(4) "
 ; IsMain
 ; * (read dereference)
 addr2reg IsMain r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3595
 ; {
 ; RPN'ized expression: "sp 0 = "
 ; Expanded expression: "sp 0 =(4) "
 ; 0
 ; sp
 ; =
 addr2reg sp r1
 write 0 r1 r0
 ; RPN'ized expression: "( 1 push ) "
 ; Expanded expression: " 1  push ()4 "
 ; (
 ; 1
 load32 1 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; RPN'ized expression: "( 20 push ) "
 ; Expanded expression: " 20  push ()4 "
 ; (
 ; 20
 load32 20 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; RPN'ized expression: "( GenExpr ) "
 ; Expanded expression: " GenExpr ()0 "
 ; (
 ; GenExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExpr
 add r13 16 r13
 ; }
Label_3595:
 ; RPN'ized expression: "( CurFxnEpilogLabel GenNumLabel ) "
 ; Expanded expression: " CurFxnEpilogLabel *(4)  GenNumLabel ()4 "
 ; (
 ; CurFxnEpilogLabel
 ; * (read dereference)
 addr2reg CurFxnEpilogLabel r1
 read 0 r1 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; RPN'ized expression: "( GenFxnEpilog ) "
 ; Expanded expression: " GenFxnEpilog ()0 "
 ; (
 ; GenFxnEpilog
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenFxnEpilog
 add r13 16 r13
 ; if
 ; RPN'ized expression: "( GenFxnSizeNeeded ) "
 ; Expanded expression: " GenFxnSizeNeeded ()0 "
 ; (
 ; GenFxnSizeNeeded
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenFxnSizeNeeded
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3597
 ; RPN'ized expression: "( endLabel LabelCnt ++p = GenNumLabel ) "
 ; Expanded expression: " (@-68) LabelCnt ++p(4) =(4)  GenNumLabel ()4 "
 ; (
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r4
 add r4 1 r4
 addr2reg LabelCnt r1
 write 0 r1 r4
 sub r4 1 r4
 ; local ofs
 ; = (write dereference)
 write -68 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
Label_3597:
 ; RPN'ized expression: "( CurHeaderFooter 1 + *u puts2 ) "
 ; Expanded expression: " CurHeaderFooter *(4) 4 + *(4)  puts2 ()4 "
 ; (
 ; CurHeaderFooter
 ; * (read dereference)
 addr2reg CurHeaderFooter r1
 read 0 r1 r4
 ; 4
 ; +
 add r4 4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
 ; RPN'ized expression: "CurHeaderFooter 0 = "
 ; Expanded expression: "CurHeaderFooter 0 =(4) "
 ; 0
 ; CurHeaderFooter
 ; =
 addr2reg CurHeaderFooter r1
 write 0 r1 r0
 ; if
 ; RPN'ized expression: "( GenFxnSizeNeeded ) "
 ; Expanded expression: " GenFxnSizeNeeded ()0 "
 ; (
 ; GenFxnSizeNeeded
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenFxnSizeNeeded
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3599
 ; RPN'ized expression: "( endLabel , CurFxnName GenRecordFxnSize ) "
 ; Expanded expression: " (@-68) *(4)  CurFxnName *(4)  GenRecordFxnSize ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -68 r14 r5
 ; ,
 ; CurFxnName
 ; * (read dereference)
 addr2reg CurFxnName r1
 read 0 r1 r4
 ; ,
 ; GenRecordFxnSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenRecordFxnSize
 add r13 16 r13
Label_3599:
 ; RPN'ized expression: "CurFxnName 0 = "
 ; Expanded expression: "CurFxnName 0 =(4) "
 ; 0
 ; CurFxnName
 ; =
 addr2reg CurFxnName r1
 write 0 r1 r0
 ; RPN'ized expression: "IdentTableLen undoIdents = "
 ; Expanded expression: "IdentTableLen (@-60) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -60 r14 r2
 ; IdentTableLen
 ; = (write dereference)
 addr2reg IdentTableLen r1
 write 0 r1 r2
 ; RPN'ized expression: "SyntaxStackCnt undoSymbolsPtr = "
 ; Expanded expression: "SyntaxStackCnt (@-56) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -56 r14 r2
 ; SyntaxStackCnt
 ; = (write dereference)
 addr2reg SyntaxStackCnt r1
 write 0 r1 r2
 ; RPN'ized expression: "SyntaxStack1 5 + *u DummyIdent = "
 ; Expanded expression: "SyntaxStack1 20 + DummyIdent *(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; 20
 ; +
 add r2 20 r2
 ; DummyIdent
 ; * (read dereference)
 addr2reg DummyIdent r1
 read 0 r1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; }
 jump Label_3581
Label_3580:
 ; else
 ; if
 ; RPN'ized expression: "isFxn "
 ; Expanded expression: "(@-32) *(4) "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3601
 ; {
 ; RPN'ized expression: "( 0 , lastSyntaxPtr DumpDecl ) "
 ; Expanded expression: " 0  (@-12) *(4)  DumpDecl ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; DumpDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DumpDecl
 add r13 16 r13
 ; }
Label_3601:
Label_3581:
Label_3534:
 ; RPN'ized expression: "( lastSyntaxPtr CheckRedecl ) "
 ; Expanded expression: " (@-12) *(4)  CheckRedecl ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; CheckRedecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump CheckRedecl
 add r13 16 r13
 ; if
 ; RPN'ized expression: "tok 59 == tok 125 == | "
 ; Expanded expression: "(@8) *(4) 59 == (@8) *(4) 125 == | "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 59
 ; ==
 load32 59 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 125
 ; ==
 load32 125 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; |
 or r2 r8 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3603
 ; break
 jump Label_3438
Label_3603:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; continue
 jump Label_3435
 ; }
Label_3439:
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
 ; }
 jump Label_3435
Label_3438:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; return
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
Label_3429:
 read 4 r14 r15
 read 0 r14 r14
 add r13 100 r13
 jumpr 0 r15

 ; glb ParseFxnParams : (
 ; prm     tok : int
 ;     ) void
.code
; .globl ParseFxnParams
ParseFxnParams:
 write 0 r13 r4
 sub r13         32 r13
 write         24 r13 r14
 add r13         24 r14
   write 4 r14 r15
 ; loc     tok : (@8) : int
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; loc     base : (@-8) : [2u] int
 ; loc     lastSyntaxPtr : (@-12) : int
 ; loc     cnt : (@-16) : int
 ; RPN'ized expression: "cnt 0 = "
 ; Expanded expression: "(@-16) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -16 r14 r0
 ; loc     ellCnt : (@-20) : int
 ; RPN'ized expression: "ellCnt 0 = "
 ; Expanded expression: "(@-20) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -20 r14 r0
 ; for
Label_3606:
 ; {
 ; RPN'ized expression: "lastSyntaxPtr SyntaxStackCnt = "
 ; Expanded expression: "(@-12) SyntaxStackCnt *(4) =(4) "
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; if
 ; RPN'ized expression: "tok 41 == "
 ; Expanded expression: "(@8) *(4) 41 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3610
 ; break
 jump Label_3609
Label_3610:
 ; if
 ; RPN'ized expression: "( 1 , tok TokenStartsDeclaration ) 0 == "
 ; Expanded expression: " 1  (@8) *(4)  TokenStartsDeclaration ()8 0 == "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; TokenStartsDeclaration
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump TokenStartsDeclaration
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3612
 ; {
 ; if
 ; RPN'ized expression: "tok 15 == "
 ; Expanded expression: "(@8) *(4) 15 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 15
 ; ==
 load32 15 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3614
 ; {
 ; if
 ; RPN'ized expression: "cnt 0 == ellCnt || "
 ; Expanded expression: "(@-16) *(4) 0 == [sh||->3618] (@-20) *(4) _Bool ||[3618] "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3618
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_3618:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3616
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3616:
 ; RPN'ized expression: "ellCnt ++p "
 ; Expanded expression: "(@-20) ++p(4) "
 ; local ofs
 ; ++p
 read -20 r14 r2
 add r2 1 r2
 write -20 r14 r2
 sub r2 1 r2
 ; }
 jump Label_3615
Label_3614:
 ; else
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3615:
 ; RPN'ized expression: "base 0 + *u tok = "
 ; Expanded expression: "(@-8) (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; RPN'ized expression: "base 1 + *u 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0

.rdata
Label_3619:
.dw 60 115 111 109 101 116 104 105 110 103 62 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( ( L3619 AddIdent ) , 16 PushSyntax2 ) "
 ; Expanded expression: "  L3619  AddIdent ()4  16  PushSyntax2 ()8 "
 ; (
 sub r13 8 r13
 ; (
 sub r13 12 r13
 ; 3619
 addr2reg Label_3619 r2
 ; ,
 ; AddIdent
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump AddIdent
 add r13 16 r13
 ; ,
 ; 16
 sub r13 4 r13
 write 0 r13 r2
 load32 16 r2
 ; ,
 ; PushSyntax2
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 jump Label_3613
Label_3612:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "ellCnt "
 ; Expanded expression: "(@-20) *(4) "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3620
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3620:
 ; RPN'ized expression: "tok ( base , tok ParseBase ) = "
 ; Expanded expression: "(@8)  (@-8)  (@8) *(4)  ParseBase ()8 =(4) "
 ; (
 ; local ofs
 sub r14 8 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseBase
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseBase
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "tok ( tok ParseDerived ) = "
 ; Expanded expression: "(@8)  (@8) *(4)  ParseDerived ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseDerived
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseDerived
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
Label_3613:
 ; RPN'ized expression: "( base PushBase ) "
 ; Expanded expression: " (@-8)  PushBase ()4 "
 ; (
 ; local ofs
 sub r14 8 r4
 ; ,
 ; PushBase
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushBase
 add r13 16 r13
 ; RPN'ized expression: "lastSyntaxPtr ++p "
 ; Expanded expression: "(@-12) ++p(4) "
 ; local ofs
 ; ++p
 read -12 r14 r2
 add r2 1 r2
 write -12 r14 r2
 sub r2 1 r2
 ; if
 ; RPN'ized expression: "SyntaxStack0 lastSyntaxPtr + *u 91 == "
 ; Expanded expression: "SyntaxStack0 (@-12) *(4) + *(1) 91 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 91
 ; ==
 load32 91 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3622
 ; {
 ; loc             t : (@-24) : int
 ; RPN'ized expression: "( 1 , lastSyntaxPtr DeleteSyntax ) "
 ; Expanded expression: " 1  (@-12) *(4)  DeleteSyntax ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; DeleteSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DeleteSyntax
 add r13 16 r13
 ; RPN'ized expression: "t SyntaxStack0 lastSyntaxPtr + *u = "
 ; Expanded expression: "(@-24) SyntaxStack0 (@-12) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; if
 ; RPN'ized expression: "t 1 == t 2 == || "
 ; Expanded expression: "(@-24) *(4) 1 == [sh||->3626] (@-24) *(4) 2 == ||[3626] "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3626
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3626:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3624
 ; RPN'ized expression: "( 1 , lastSyntaxPtr DeleteSyntax ) "
 ; Expanded expression: " 1  (@-12) *(4)  DeleteSyntax ()8 "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; DeleteSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DeleteSyntax
 add r13 16 r13
Label_3624:
 ; RPN'ized expression: "SyntaxStack0 lastSyntaxPtr + *u 42 = "
 ; Expanded expression: "SyntaxStack0 (@-12) *(4) + 42 =(1) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; +
 add r2 r8 r2
 ; 42
 load32 42 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 and r2 255 r2
 ; }
 jump Label_3623
Label_3622:
 ; else
 ; if
 ; RPN'ized expression: "SyntaxStack0 lastSyntaxPtr + *u 40 == "
 ; Expanded expression: "SyntaxStack0 (@-12) *(4) + *(1) 40 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3627
 ; {
 ; RPN'ized expression: "( 42 , lastSyntaxPtr InsertSyntax ) "
 ; Expanded expression: " 42  (@-12) *(4)  InsertSyntax ()8 "
 ; (
 ; 42
 load32 42 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; InsertSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump InsertSyntax
 add r13 16 r13
 ; }
Label_3627:
Label_3623:
 ; RPN'ized expression: "lastSyntaxPtr --p "
 ; Expanded expression: "(@-12) --p(4) "
 ; local ofs
 ; --p
 read -12 r14 r2
 sub r2 1 r2
 write -12 r14 r2
 add r2 1 r2
 ; RPN'ized expression: "cnt ++p "
 ; Expanded expression: "(@-16) ++p(4) "
 ; local ofs
 ; ++p
 read -16 r14 r2
 add r2 1 r2
 write -16 r14 r2
 sub r2 1 r2
 ; if
 ; RPN'ized expression: "tok 41 == tok 44 == || "
 ; Expanded expression: "(@8) *(4) 41 == [sh||->3631] (@8) *(4) 44 == ||[3631] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3631
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 44
 ; ==
 load32 44 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3631:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3629
 ; {
 ; loc             t : (@-24) : int
 ; RPN'ized expression: "t SyntaxStack0 SyntaxStackCnt 2 - + *u = "
 ; Expanded expression: "(@-24) SyntaxStack0 SyntaxStackCnt *(4) 2 - + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; 2
 ; -
 sub r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; if
 ; RPN'ized expression: "SyntaxStack0 SyntaxStackCnt 1 - + *u 17 == "
 ; Expanded expression: "SyntaxStack0 SyntaxStackCnt *(4) 1 - + *(1) 17 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 17
 ; ==
 load32 17 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3632
 ; {
 ; if

.rdata
Label_3636:
.dw 60 115 111 109 101 116 104 105 110 103 62 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "t 16 == ( L3636 , IdentTable SyntaxStack1 SyntaxStackCnt 2 - + *u + strcmp ) 0 == cnt 1 == && tok 41 == && 0 == && "
 ; Expanded expression: "(@-24) *(4) 16 == [sh&&->3637]  L3636  IdentTable SyntaxStack1 SyntaxStackCnt *(4) 2 - 4 * + *(4) +  strcmp ()8 0 == [sh&&->3639] (@-16) *(4) 1 == &&[3639] _Bool [sh&&->3638] (@8) *(4) 41 == &&[3638] 0 == &&[3637] "
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3637
 ; (
 ; 3636
 addr2reg Label_3636 r5
 ; ,
 ; IdentTable
 addr2reg IdentTable r4
 ; SyntaxStack1
 sub r13 4 r13
 write 0 r13 r4
 addr2reg SyntaxStack1 r4
 ; SyntaxStackCnt
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r4
 ; 2
 ; -
 sub r4 2 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3639
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3639:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3638
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3638:
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3637:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3634
 ; RPN'ized expression: "( errorUnexpectedVoid ) "
 ; Expanded expression: " errorUnexpectedVoid ()0 "
 ; (
 ; errorUnexpectedVoid
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedVoid
 add r13 16 r13
Label_3634:
 ; }
Label_3632:
 ; if
 ; RPN'ized expression: "SyntaxStack0 SyntaxStackCnt 1 - + *u 144 == t 42 != && t 93 != && "
 ; Expanded expression: "SyntaxStack0 SyntaxStackCnt *(4) 1 - + *(1) 144 == [sh&&->3643] (@-24) *(4) 42 != &&[3643] _Bool [sh&&->3642] (@-24) *(4) 93 != &&[3642] "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 144
 ; ==
 load32 144 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3643
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 42
 ; !=
 load32 42 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3643:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3642
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; 93
 ; !=
 load32 93 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3642:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3640
 ; RPN'ized expression: "( errorDecl ) "
 ; Expanded expression: " errorDecl ()0 "
 ; (
 ; errorDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDecl
 add r13 16 r13
Label_3640:
 ; if
 ; RPN'ized expression: "tok 41 == "
 ; Expanded expression: "(@8) *(4) 41 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3644
 ; break
 jump Label_3609
Label_3644:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; continue
 jump Label_3606
 ; }
Label_3629:
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
 ; }
 jump Label_3606
Label_3609:
Label_3605:
 read 4 r14 r15
 read 0 r14 r14
 add r13 32 r13
 jumpr 0 r15

 ; glb AddFxnParamSymbols : (
 ; prm     SyntaxPtr : int
 ;     ) void
.code
; .globl AddFxnParamSymbols
AddFxnParamSymbols:
 write 0 r13 r4
 sub r13         32 r13
 write         24 r13 r14
 add r13         24 r14
   write 4 r14 r15
 ; loc     SyntaxPtr : (@8) : int
 ; loc     i : (@-4) : int
 ; loc     paramOfs : (@-8) : unsigned
 ; RPN'ized expression: "paramOfs 2 SizeOfWord * = "
 ; Expanded expression: "(@-8) 2 SizeOfWord *(4) * =(4) "
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; 1
 ; <<
 shiftl r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "SyntaxPtr 0 < SyntaxPtr SyntaxStackCnt 3 - > || SyntaxStack0 SyntaxPtr + *u 16 != || SyntaxStack0 SyntaxPtr 1 + + *u 40 != || "
 ; Expanded expression: "(@8) *(4) 0 < [sh||->3651] (@8) *(4) SyntaxStackCnt *(4) 3 - > ||[3651] _Bool [sh||->3650] SyntaxStack0 (@8) *(4) + *(1) 16 != ||[3650] _Bool [sh||->3649] SyntaxStack0 (@8) *(4) 1 + + *(1) 40 != ||[3649] "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 0
 ; <
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3651
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; 3
 ; -
 sub r8 3 r8
 ; >
 bges r8 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3651:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3650
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 16
 ; !=
 load32 16 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3650:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3649
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 40
 ; !=
 load32 40 r1
 xor r2 r1 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3649:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3647
 ; RPN'ized expression: "( 6 errorInternal ) "
 ; Expanded expression: " 6  errorInternal ()4 "
 ; (
 ; 6
 load32 6 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
Label_3647:
 ; RPN'ized expression: "CurFxnSyntaxPtr SyntaxPtr = "
 ; Expanded expression: "CurFxnSyntaxPtr (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; CurFxnSyntaxPtr
 ; = (write dereference)
 addr2reg CurFxnSyntaxPtr r1
 write 0 r1 r2
 ; RPN'ized expression: "CurFxnLocalOfs 0 = "
 ; Expanded expression: "CurFxnLocalOfs 0 =(4) "
 ; 0
 ; CurFxnLocalOfs
 ; =
 addr2reg CurFxnLocalOfs r1
 write 0 r1 r0
 ; RPN'ized expression: "CurFxnMinLocalOfs 0 = "
 ; Expanded expression: "CurFxnMinLocalOfs 0 =(4) "
 ; 0
 ; CurFxnMinLocalOfs
 ; =
 addr2reg CurFxnMinLocalOfs r1
 write 0 r1 r0
 ; RPN'ized expression: "SyntaxPtr 2 += "
 ; Expanded expression: "(@8) 2 +=(4) "
 ; 2
 load32 2 r2
 ; local ofs
 ; +=
 read 8 r14 r12
 add r12 r2 r2
 write 8 r14 r2
 ; for
 ; RPN'ized expression: "i SyntaxPtr = "
 ; Expanded expression: "(@-4) (@8) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
Label_3652:
 ; RPN'ized expression: "i SyntaxStackCnt < "
 ; Expanded expression: "(@-4) *(4) SyntaxStackCnt *(4) < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_3655
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; {
 ; loc         tok : (@-12) : int
 ; RPN'ized expression: "tok SyntaxStack0 i + *u = "
 ; Expanded expression: "(@-12) SyntaxStack0 (@-4) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; if
 ; RPN'ized expression: "tok 16 == "
 ; Expanded expression: "(@-12) *(4) 16 == "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3656
 ; {
 ; loc             sz : (@-16) : unsigned
 ; loc             paramPtr : (@-20) : int
 ; if
 ; RPN'ized expression: "i 1 + SyntaxStackCnt >= "
 ; Expanded expression: "(@-4) *(4) 1 + SyntaxStackCnt *(4) >= "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; >=
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_3658
 ; RPN'ized expression: "( 7 errorInternal ) "
 ; Expanded expression: " 7  errorInternal ()4 "
 ; (
 ; 7
 load32 7 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
Label_3658:
 ; if
 ; RPN'ized expression: "SyntaxStack0 i 1 + + *u 17 == "
 ; Expanded expression: "SyntaxStack0 (@-4) *(4) 1 + + *(1) 17 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 17
 ; ==
 load32 17 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3660
 ; break
 jump Label_3655
Label_3660:
 ; if
 ; RPN'ized expression: "SyntaxStack0 i 1 + + *u 15 == "
 ; Expanded expression: "SyntaxStack0 (@-4) *(4) 1 + + *(1) 15 == "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; +
 add r8 1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 15
 ; ==
 load32 15 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3662
 ; break
 jump Label_3655
Label_3662:
 ; RPN'ized expression: "sz ( 0 , i GetDeclSize ) = "
 ; Expanded expression: "(@-16)  0  (@-4) *(4)  GetDeclSize ()8 =(4) "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; if
 ; RPN'ized expression: "sz 0 == "
 ; Expanded expression: "(@-16) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3664
 ; RPN'ized expression: "( errorDecl ) "
 ; Expanded expression: " errorDecl ()0 "
 ; (
 ; errorDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorDecl
 add r13 16 r13
Label_3664:
 ; RPN'ized expression: "paramPtr SyntaxStackCnt = "
 ; Expanded expression: "(@-20) SyntaxStackCnt *(4) =(4) "
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; RPN'ized expression: "( SyntaxStack1 i + *u , SyntaxStack0 i + *u PushSyntax2 ) "
 ; Expanded expression: " SyntaxStack1 (@-4) *(4) 4 * + *(4)  SyntaxStack0 (@-4) *(4) + *(1)  PushSyntax2 ()8 "
 ; (
 ; SyntaxStack1
 addr2reg SyntaxStack1 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -4 r14 r5
 ; 2
 ; <<
 shiftl r5 2 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; SyntaxStack0
 addr2reg SyntaxStack0 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; PushSyntax2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
 ; RPN'ized expression: "( paramOfs , 89 PushSyntax2 ) "
 ; Expanded expression: " (@-8) *(4)  89  PushSyntax2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r5
 ; ,
 ; 89
 load32 89 r4
 ; ,
 ; PushSyntax2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "sz SizeOfWord + 1 - sz < "
 ; Expanded expression: "(@-16) *(4) SizeOfWord *(4) + 1 - (@-16) *(4) <u "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r8
 ; +
 add r2 r8 r2
 ; 1
 ; -
 sub r2 1 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; <u
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_3666
 ; RPN'ized expression: "( errorVarSize ) "
 ; Expanded expression: " errorVarSize ()0 "
 ; (
 ; errorVarSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorVarSize
 add r13 16 r13
Label_3666:
 ; RPN'ized expression: "sz sz SizeOfWord + 1 - SizeOfWord 1u - ~ & = "
 ; Expanded expression: "(@-16) (@-16) *(4) SizeOfWord *(4) + 1 - SizeOfWord *(4) 1u - ~ & =(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r8
 ; +
 add r2 r8 r2
 ; 1
 ; -
 sub r2 1 r2
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; ~
 or r8 r8 r8
 not r8 r8
 ; &
 and r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; if
 ; RPN'ized expression: "paramOfs sz + paramOfs < "
 ; Expanded expression: "(@-8) *(4) (@-16) *(4) + (@-8) *(4) <u "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; +
 add r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; <u
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_3668
 ; RPN'ized expression: "( errorVarSize ) "
 ; Expanded expression: " errorVarSize ()0 "
 ; (
 ; errorVarSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorVarSize
 add r13 16 r13
Label_3668:
 ; RPN'ized expression: "paramOfs sz += "
 ; Expanded expression: "(@-8) (@-16) *(4) +=(4) "
 ; local ofs
 ; * (read dereference)
 read -16 r14 r2
 ; local ofs
 ; +=
 read -8 r14 r12
 add r12 r2 r2
 write -8 r14 r2
 ; if
 ; loc             <something> : unsigned
 ; RPN'ized expression: "paramOfs ( GenMaxLocalsSize ) (something3672) > "
 ; Expanded expression: "(@-8) *(4)  GenMaxLocalsSize ()0 >u "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; GenMaxLocalsSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenMaxLocalsSize
 add r13 16 r13
 ; >u
 read 0 r13 r11
 add r13 4 r13
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_3670
 ; RPN'ized expression: "( errorVarSize ) "
 ; Expanded expression: " errorVarSize ()0 "
 ; (
 ; errorVarSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorVarSize
 add r13 16 r13
Label_3670:
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 ; while
 ; RPN'ized expression: "i SyntaxStackCnt < "
 ; Expanded expression: "(@-4) *(4) SyntaxStackCnt *(4) < "
Label_3673:
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_3674
 ; {
 ; RPN'ized expression: "tok SyntaxStack0 i + *u = "
 ; Expanded expression: "(@-12) SyntaxStack0 (@-4) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; if
 ; RPN'ized expression: "tok 16 == tok 41 == || "
 ; Expanded expression: "(@-12) *(4) 16 == [sh||->3677] (@-12) *(4) 41 == ||[3677] "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 16
 ; ==
 load32 16 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3677
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3677:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3675
 ; {
 ; RPN'ized expression: "( 0 , paramPtr DumpDecl ) "
 ; Expanded expression: " 0  (@-20) *(4)  DumpDecl ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -20 r14 r4
 ; ,
 ; DumpDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DumpDecl
 add r13 16 r13
 ; if
 ; RPN'ized expression: "IdentTable SyntaxStack1 paramPtr + *u + *u 60 == "
 ; Expanded expression: "IdentTable SyntaxStack1 (@-20) *(4) 4 * + *(4) + *(-1) 60 == "
 ; IdentTable
 addr2reg IdentTable r2
 ; SyntaxStack1
 addr2reg SyntaxStack1 r8
 ; local ofs
 ; * (read dereference)
 read -20 r14 r9
 ; 2
 ; <<
 shiftl r9 2 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 60
 ; ==
 load32 60 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3678

.rdata
Label_3680:
.dw 80 97 114 97 109 101 116 101 114 32 110 97 109 101 32 101 120 112 101 99 116 101 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3680 error ) "
 ; Expanded expression: " L3680  error ()4 "
 ; (
 ; 3680
 addr2reg Label_3680 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_3678:
 ; RPN'ized expression: "( paramPtr CheckRedecl ) "
 ; Expanded expression: " (@-20) *(4)  CheckRedecl ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r4
 ; ,
 ; CheckRedecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump CheckRedecl
 add r13 16 r13
 ; RPN'ized expression: "i --p "
 ; Expanded expression: "(@-4) --p(4) "
 ; local ofs
 ; --p
 read -4 r14 r2
 sub r2 1 r2
 write -4 r14 r2
 add r2 1 r2
 ; break
 jump Label_3674
 ; }
 jump Label_3676
Label_3675:
 ; else
 ; if
 ; RPN'ized expression: "tok 40 == "
 ; Expanded expression: "(@-12) *(4) 40 == "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3681
 ; {
 ; loc                     c : (@-24) : int
 ; RPN'ized expression: "c 1 = "
 ; Expanded expression: "(@-24) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 ; RPN'ized expression: "( tok PushSyntax ) "
 ; Expanded expression: " (@-12) *(4)  PushSyntax ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -12 r14 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
 ; while
 ; RPN'ized expression: "c i SyntaxStackCnt < && "
 ; Expanded expression: "(@-24) *(4) _Bool [sh&&->3685] (@-4) *(4) SyntaxStackCnt *(4) < &&[3685] "
Label_3683:
 ; local ofs
 ; * (read dereference)
 read -24 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3685
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3685:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3684
 ; {
 ; RPN'ized expression: "tok SyntaxStack0 i + *u = "
 ; Expanded expression: "(@-12) SyntaxStack0 (@-4) *(4) + *(1) =(4) "
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -12 r14 r2
 ; RPN'ized expression: "c tok 40 == tok 41 == - += "
 ; Expanded expression: "(@-24) (@-12) *(4) 40 == (@-12) *(4) 41 == - +=(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 40
 ; ==
 load32 40 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; * (read dereference)
 read -12 r14 r8
 ; 41
 ; ==
 load32 41 r1
 xor r8 r1 r8
 load32 1 r1
 bges r8 r1 3
 load32 1 r8
 jumpo 2
 load32 0 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; +=
 read -24 r14 r12
 add r12 r2 r2
 write -24 r14 r2
 ; RPN'ized expression: "( SyntaxStack1 i + *u , SyntaxStack0 i + *u PushSyntax2 ) "
 ; Expanded expression: " SyntaxStack1 (@-4) *(4) 4 * + *(4)  SyntaxStack0 (@-4) *(4) + *(1)  PushSyntax2 ()8 "
 ; (
 ; SyntaxStack1
 addr2reg SyntaxStack1 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -4 r14 r5
 ; 2
 ; <<
 shiftl r5 2 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; SyntaxStack0
 addr2reg SyntaxStack0 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; PushSyntax2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 ; }
 jump Label_3683
Label_3684:
 ; }
 jump Label_3682
Label_3681:
 ; else
 ; {
 ; RPN'ized expression: "( SyntaxStack1 i + *u , SyntaxStack0 i + *u PushSyntax2 ) "
 ; Expanded expression: " SyntaxStack1 (@-4) *(4) 4 * + *(4)  SyntaxStack0 (@-4) *(4) + *(1)  PushSyntax2 ()8 "
 ; (
 ; SyntaxStack1
 addr2reg SyntaxStack1 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -4 r14 r5
 ; 2
 ; <<
 shiftl r5 2 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; SyntaxStack0
 addr2reg SyntaxStack0 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; PushSyntax2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax2
 add r13 16 r13
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 ; }
Label_3682:
Label_3676:
 ; }
 jump Label_3673
Label_3674:
 ; }
 jump Label_3657
Label_3656:
 ; else
 ; if
 ; RPN'ized expression: "tok 41 == "
 ; Expanded expression: "(@-12) *(4) 41 == "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 41
 ; ==
 load32 41 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3686
 ; break
 jump Label_3655
 jump Label_3687
Label_3686:
 ; else
 ; RPN'ized expression: "( 9 errorInternal ) "
 ; Expanded expression: " 9  errorInternal ()4 "
 ; (
 ; 9
 load32 9 r4
 ; ,
 ; errorInternal
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorInternal
 add r13 16 r13
Label_3687:
Label_3657:
 ; }
Label_3653:
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_3652
Label_3655:
Label_3646:
 read 4 r14 r15
 read 0 r14 r14
 add r13 32 r13
 jumpr 0 r15

 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb ParseStatement : (
 ; prm     tok : int
 ; prm     BrkCntTarget : * int
 ; prm     casesIdx : int
 ;     ) int
.code
; .globl ParseStatement
ParseStatement:
 write 0 r13 r4
 write 4 r13 r5
 write 8 r13 r6
 sub r13         60 r13
 write         52 r13 r14
 add r13         52 r14
   write 4 r14 r15
 ; loc     tok : (@8) : int
 ; loc     BrkCntTarget : (@12) : * int
 ; loc     casesIdx : (@16) : int
 ; loc     gotUnary : (@-4) : int
 ; loc     synPtr : (@-8) : int
 ; loc     constExpr : (@-12) : int
 ; loc     exprVal : (@-16) : int
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; loc     brkCntTarget : (@-24) : [2u] int
 ; loc     statementNeeded : (@-28) : int
 ; do
Label_3689:
 ; {
 ; RPN'ized expression: "statementNeeded 0 = "
 ; Expanded expression: "(@-28) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -28 r14 r0
 ; if
 ; RPN'ized expression: "tok 59 == "
 ; Expanded expression: "(@8) *(4) 59 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 59
 ; ==
 load32 59 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3692
 ; {
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 jump Label_3693
Label_3692:
 ; else
 ; if
 ; RPN'ized expression: "tok 123 == "
 ; Expanded expression: "(@8) *(4) 123 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 123
 ; ==
 load32 123 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3694
 ; {
 ; loc             undoSymbolsPtr : (@-32) : int
 ; RPN'ized expression: "undoSymbolsPtr SyntaxStackCnt = "
 ; Expanded expression: "(@-32) SyntaxStackCnt *(4) =(4) "
 ; SyntaxStackCnt
 ; * (read dereference)
 addr2reg SyntaxStackCnt r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; loc             undoLocalOfs : (@-36) : int
 ; RPN'ized expression: "undoLocalOfs CurFxnLocalOfs = "
 ; Expanded expression: "(@-36) CurFxnLocalOfs *(4) =(4) "
 ; CurFxnLocalOfs
 ; * (read dereference)
 addr2reg CurFxnLocalOfs r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; loc             undoIdents : (@-40) : int
 ; RPN'ized expression: "undoIdents IdentTableLen = "
 ; Expanded expression: "(@-40) IdentTableLen *(4) =(4) "
 ; IdentTableLen
 ; * (read dereference)
 addr2reg IdentTableLen r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3696:
.dw 123 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3696 printf2 ) "
 ; Expanded expression: " L3696  printf2 ()4 "
 ; (
 ; 3696
 addr2reg Label_3696 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "ParseLevel ++p "
 ; Expanded expression: "ParseLevel ++p(4) "
 ; ParseLevel
 ; ++p
 addr2reg ParseLevel r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg ParseLevel r1
 write 0 r1 r2
 sub r2 1 r2
 ; RPN'ized expression: "tok ( casesIdx , BrkCntTarget ParseBlock ) = "
 ; Expanded expression: "(@8)  (@16) *(4)  (@12) *(4)  ParseBlock ()8 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; ,
 ; ParseBlock
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseBlock
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "ParseLevel --p "
 ; Expanded expression: "ParseLevel --p(4) "
 ; ParseLevel
 ; --p
 addr2reg ParseLevel r1
 read 0 r1 r2
 sub r2 1 r2
 addr2reg ParseLevel r1
 write 0 r1 r2
 add r2 1 r2
 ; if
 ; RPN'ized expression: "tok 125 != "
 ; Expanded expression: "(@8) *(4) 125 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 125
 ; !=
 load32 125 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3697
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3697:
 ; RPN'ized expression: "( undoIdents UndoNonLabelIdents ) "
 ; Expanded expression: " (@-40) *(4)  UndoNonLabelIdents ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; ,
 ; UndoNonLabelIdents
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump UndoNonLabelIdents
 add r13 16 r13
 ; RPN'ized expression: "SyntaxStackCnt undoSymbolsPtr = "
 ; Expanded expression: "SyntaxStackCnt (@-32) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; SyntaxStackCnt
 ; = (write dereference)
 addr2reg SyntaxStackCnt r1
 write 0 r1 r2
 ; RPN'ized expression: "CurFxnLocalOfs undoLocalOfs = "
 ; Expanded expression: "CurFxnLocalOfs (@-36) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; CurFxnLocalOfs
 ; = (write dereference)
 addr2reg CurFxnLocalOfs r1
 write 0 r1 r2
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3699:
.dw 125 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3699 printf2 ) "
 ; Expanded expression: " L3699  printf2 ()4 "
 ; (
 ; 3699
 addr2reg Label_3699 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 jump Label_3695
Label_3694:
 ; else
 ; if
 ; RPN'ized expression: "tok 20 == "
 ; Expanded expression: "(@8) *(4) 20 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 20
 ; ==
 load32 20 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3700
 ; {
 ; loc             retVoid : (@-32) : int
 ; RPN'ized expression: "retVoid CurFxnReturnExprTypeSynPtr 0 >= SyntaxStack0 CurFxnReturnExprTypeSynPtr + *u 17 == && = "
 ; Expanded expression: "(@-32) CurFxnReturnExprTypeSynPtr *(4) 0 >= [sh&&->3702] SyntaxStack0 CurFxnReturnExprTypeSynPtr *(4) + *(1) 17 == &&[3702] =(4) "
 ; CurFxnReturnExprTypeSynPtr
 ; * (read dereference)
 addr2reg CurFxnReturnExprTypeSynPtr r1
 read 0 r1 r2
 ; 0
 ; >=
 bges r2 r0 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3702
 ; SyntaxStack0
 addr2reg SyntaxStack0 r2
 ; CurFxnReturnExprTypeSynPtr
 ; * (read dereference)
 addr2reg CurFxnReturnExprTypeSynPtr r1
 read 0 r1 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 17
 ; ==
 load32 17 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3702:
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3703:
.dw 114 101 116 117 114 110 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3703 printf2 ) "
 ; Expanded expression: " L3703  printf2 ()4 "
 ; (
 ; 3703
 addr2reg Label_3703 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 59 == "
 ; Expanded expression: "(@8) *(4) 59 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 59
 ; ==
 load32 59 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3704
 ; {
 ; RPN'ized expression: "gotUnary 0 = "
 ; Expanded expression: "(@-4) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -4 r14 r0
 ; if
 ; RPN'ized expression: "retVoid 0 == "
 ; Expanded expression: "(@-32) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3706
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3706:
 ; }
 jump Label_3705
Label_3704:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "retVoid "
 ; Expanded expression: "(@-32) *(4) "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3708
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3708:
 ; if
 ; RPN'ized expression: "tok ( 0 , 0 , exprVal &u , constExpr &u , synPtr &u , gotUnary &u , tok ParseExpr ) = 59 != "
 ; Expanded expression: "(@8)  0  0  (@-16)  (@-12)  (@-8)  (@-4)  (@8) *(4)  ParseExpr ()28 =(4) 59 != "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 sub r14 16 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 sub r14 12 r7
 ; ,
 ; local ofs
 sub r14 8 r6
 ; ,
 ; local ofs
 sub r14 4 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseExpr
 add r13 28 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; 59
 ; !=
 load32 59 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3710
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3710:
 ; if
 ; RPN'ized expression: "gotUnary "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3712
 ; RPN'ized expression: "( synPtr scalarTypeCheck ) "
 ; Expanded expression: " (@-8) *(4)  scalarTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; scalarTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump scalarTypeCheck
 add r13 16 r13
Label_3712:
 ; }
Label_3705:
 ; if
 ; RPN'ized expression: "gotUnary "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3714
 ; {
 ; RPN'ized expression: "( 0 , synPtr &u decayArray ) "
 ; Expanded expression: " 0  (@-8)  decayArray ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 sub r14 8 r4
 ; ,
 ; decayArray
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump decayArray
 add r13 16 r13
 ; {
 ; loc                     castSize : (@-36) : int
 ; RPN'ized expression: "castSize ( 1 , CurFxnReturnExprTypeSynPtr GetDeclSize ) = "
 ; Expanded expression: "(@-36)  1  CurFxnReturnExprTypeSynPtr *(4)  GetDeclSize ()8 =(4) "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; CurFxnReturnExprTypeSynPtr
 ; * (read dereference)
 addr2reg CurFxnReturnExprTypeSynPtr r1
 read 0 r1 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; if
 ; RPN'ized expression: "castSize SizeOfWord != castSize ( 1 , synPtr GetDeclSize ) != && "
 ; Expanded expression: "(@-36) *(4) SizeOfWord *(4) != [sh&&->3718] (@-36) *(4)  1  (@-8) *(4)  GetDeclSize ()8 != &&[3718] "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; SizeOfWord
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; !=
 read 0 r13 r11
 add r13 4 r13
 xor r11 r2 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3718
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; 1
 load32 1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; GetDeclSize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetDeclSize
 add r13 16 r13
 ; !=
 read 0 r13 r11
 add r13 4 r13
 xor r11 r2 r2
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3718:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3716
 ; {
 ; if
 ; RPN'ized expression: "constExpr "
 ; Expanded expression: "(@-12) *(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3719
 ; {
 ; switch
 ; RPN'ized expression: "castSize "
 ; Expanded expression: "(@-36) *(4) "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 jump Label_3722
 ; {
 ; case
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
Label_3723:
 ; RPN'ized expression: "exprVal 255u &= "
 ; Expanded expression: "(@-16) 255u &=(4) "
 ; 255
 load32 255 r2
 ; local ofs
 ; &=
 read -16 r14 r12
 and r12 r2 r2
 write -16 r14 r2
 ; break
 jump Label_3721
 ; case
 ; RPN'ized expression: "1 -u "
 ; Expanded expression: "-1 "
 ; Expression value: -1
Label_3724:
 ; if
 ; RPN'ized expression: "exprVal 255u &= 128 >= "
 ; Expanded expression: "(@-16) 255u &=(4) 128 >= "
 ; 255
 load32 255 r2
 ; local ofs
 ; &=
 read -16 r14 r12
 and r12 r2 r2
 write -16 r14 r2
 ; 128
 ; >=
 load32 128 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_3725
 ; RPN'ized expression: "exprVal 256 -= "
 ; Expanded expression: "(@-16) 256 -=(4) "
 ; 256
 load32 256 r2
 ; local ofs
 ; -=
 read -16 r14 r12
 sub r12 r2 r2
 write -16 r14 r2
Label_3725:
 ; break
 jump Label_3721
 ; case
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
Label_3727:
 ; RPN'ized expression: "exprVal 65535u &= "
 ; Expanded expression: "(@-16) 65535u &=(4) "
 ; 65535
 load32 65535 r2
 ; local ofs
 ; &=
 read -16 r14 r12
 and r12 r2 r2
 write -16 r14 r2
 ; break
 jump Label_3721
 ; case
 ; RPN'ized expression: "2 -u "
 ; Expanded expression: "-2 "
 ; Expression value: -2
Label_3728:
 ; if
 ; RPN'ized expression: "exprVal 65535u &= 32768 >= "
 ; Expanded expression: "(@-16) 65535u &=(4) 32768 >= "
 ; 65535
 load32 65535 r2
 ; local ofs
 ; &=
 read -16 r14 r12
 and r12 r2 r2
 write -16 r14 r2
 ; 32768
 ; >=
 load32 32768 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_3729
 ; RPN'ized expression: "exprVal 65536 -= "
 ; Expanded expression: "(@-16) 65536 -=(4) "
 ; 65536
 load32 65536 r2
 ; local ofs
 ; -=
 read -16 r14 r12
 sub r12 r2 r2
 write -16 r14 r2
Label_3729:
 ; break
 jump Label_3721
 ; }
 jump Label_3721
Label_3722:
 load32 1 r12
 bne r2 r12 2
 jump Label_3723
 load32 -1 r12
 bne r2 r12 2
 jump Label_3724
 load32 2 r12
 bne r2 r12 2
 jump Label_3727
 load32 -2 r12
 bne r2 r12 2
 jump Label_3728
Label_3721:
 ; }
 jump Label_3720
Label_3719:
 ; else
 ; {
 ; switch
 ; RPN'ized expression: "castSize "
 ; Expanded expression: "(@-36) *(4) "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 jump Label_3732
 ; {
 ; case
 ; RPN'ized expression: "1 "
 ; Expanded expression: "1 "
 ; Expression value: 1
Label_3733:
 ; RPN'ized expression: "( 129 push ) "
 ; Expanded expression: " 129  push ()4 "
 ; (
 ; 129
 load32 129 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; break
 jump Label_3731
 ; case
 ; RPN'ized expression: "1 -u "
 ; Expanded expression: "-1 "
 ; Expression value: -1
Label_3734:
 ; RPN'ized expression: "( 128 push ) "
 ; Expanded expression: " 128  push ()4 "
 ; (
 ; 128
 load32 128 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; break
 jump Label_3731
 ; case
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
Label_3735:
 ; RPN'ized expression: "( 130 push ) "
 ; Expanded expression: " 130  push ()4 "
 ; (
 ; 130
 load32 130 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; break
 jump Label_3731
 ; case
 ; RPN'ized expression: "2 -u "
 ; Expanded expression: "-2 "
 ; Expression value: -2
Label_3736:
 ; RPN'ized expression: "( 100 push ) "
 ; Expanded expression: " 100  push ()4 "
 ; (
 ; 100
 load32 100 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; break
 jump Label_3731
 ; }
 jump Label_3731
Label_3732:
 load32 1 r12
 bne r2 r12 2
 jump Label_3733
 load32 -1 r12
 bne r2 r12 2
 jump Label_3734
 load32 2 r12
 bne r2 r12 2
 jump Label_3735
 load32 -2 r12
 bne r2 r12 2
 jump Label_3736
Label_3731:
 ; }
Label_3720:
 ; }
Label_3716:
 ; }
 ; if
 ; RPN'ized expression: "constExpr "
 ; Expanded expression: "(@-12) *(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3737
 ; RPN'ized expression: "stack 0 + *u 1 + *u exprVal = "
 ; Expanded expression: "stack 4 + (@-16) *(4) =(4) "
 ; stack
 addr2reg stack r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_3737:
 ; RPN'ized expression: "( 20 push ) "
 ; Expanded expression: " 20  push ()4 "
 ; (
 ; 20
 load32 20 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; RPN'ized expression: "( GenExpr ) "
 ; Expanded expression: " GenExpr ()0 "
 ; (
 ; GenExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExpr
 add r13 16 r13
 ; }
Label_3714:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 125 == ParseLevel 1 == && IsMain 0 == && 0 == "
 ; Expanded expression: "(@8) *(4) 125 == [sh&&->3742] ParseLevel *(4) 1 == &&[3742] _Bool [sh&&->3741] IsMain *(4) 0 == &&[3741] 0 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 125
 ; ==
 load32 125 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3742
 ; ParseLevel
 ; * (read dereference)
 addr2reg ParseLevel r1
 read 0 r1 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3742:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3741
 ; IsMain
 ; * (read dereference)
 addr2reg IsMain r1
 read 0 r1 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3741:
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3739
 ; RPN'ized expression: "( CurFxnEpilogLabel GenJumpUncond ) "
 ; Expanded expression: " CurFxnEpilogLabel *(4)  GenJumpUncond ()4 "
 ; (
 ; CurFxnEpilogLabel
 ; * (read dereference)
 addr2reg CurFxnEpilogLabel r1
 read 0 r1 r4
 ; ,
 ; GenJumpUncond
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpUncond
 add r13 16 r13
Label_3739:
 ; }
 jump Label_3701
Label_3700:
 ; else
 ; if
 ; RPN'ized expression: "tok 24 == "
 ; Expanded expression: "(@8) *(4) 24 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 24
 ; ==
 load32 24 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3743
 ; {
 ; loc             labelBefore : (@-32) : int
 ; RPN'ized expression: "labelBefore LabelCnt ++p = "
 ; Expanded expression: "(@-32) LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; loc             labelAfter : (@-36) : int
 ; RPN'ized expression: "labelAfter LabelCnt ++p = "
 ; Expanded expression: "(@-36) LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; loc             forever : (@-40) : int
 ; RPN'ized expression: "forever 0 = "
 ; Expanded expression: "(@-40) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -40 r14 r0
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3745:
.dw 119 104 105 108 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3745 printf2 ) "
 ; Expanded expression: " L3745  printf2 ()4 "
 ; (
 ; 3745
 addr2reg Label_3745 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 40 != "
 ; Expanded expression: "(@8) *(4) 40 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 40
 ; !=
 load32 40 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3746
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3746:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok ( 0 , 0 , exprVal &u , constExpr &u , synPtr &u , gotUnary &u , tok ParseExpr ) = 41 != "
 ; Expanded expression: "(@8)  0  0  (@-16)  (@-12)  (@-8)  (@-4)  (@8) *(4)  ParseExpr ()28 =(4) 41 != "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 sub r14 16 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 sub r14 12 r7
 ; ,
 ; local ofs
 sub r14 8 r6
 ; ,
 ; local ofs
 sub r14 4 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseExpr
 add r13 28 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; 41
 ; !=
 load32 41 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3748
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3748:
 ; if
 ; RPN'ized expression: "gotUnary 0 == "
 ; Expanded expression: "(@-4) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3750
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3750:
 ; RPN'ized expression: "( synPtr scalarTypeCheck ) "
 ; Expanded expression: " (@-8) *(4)  scalarTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; scalarTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump scalarTypeCheck
 add r13 16 r13
 ; RPN'ized expression: "( labelBefore GenNumLabel ) "
 ; Expanded expression: " (@-32) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; if
 ; RPN'ized expression: "constExpr "
 ; Expanded expression: "(@-12) *(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3752
 ; {
 ; if
 ; RPN'ized expression: "forever ( exprVal truncInt ) = 0 == "
 ; Expanded expression: "(@-40)  (@-16) *(4)  truncInt ()4 =(4) 0 == "
 ; (
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3754
 ; RPN'ized expression: "( labelAfter GenJumpUncond ) "
 ; Expanded expression: " (@-36) *(4)  GenJumpUncond ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; GenJumpUncond
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpUncond
 add r13 16 r13
Label_3754:
 ; }
 jump Label_3753
Label_3752:
 ; else
 ; {
 ; switch
 ; RPN'ized expression: "stack sp 1 - + *u 0 + *u "
 ; Expanded expression: "stack sp *(4) 1 - 8 * + 0 + *(4) "
 ; stack
 addr2reg stack r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_3757
 ; {
 ; case
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
Label_3758:
 ; case
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
Label_3759:
 ; case
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
Label_3760:
 ; case
 ; RPN'ized expression: "9 "
 ; Expanded expression: "9 "
 ; Expression value: 9
Label_3761:
 ; case
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
Label_3762:
 ; case
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
Label_3763:
 ; case
 ; RPN'ized expression: "85 "
 ; Expanded expression: "85 "
 ; Expression value: 85
Label_3764:
 ; case
 ; RPN'ized expression: "86 "
 ; Expanded expression: "86 "
 ; Expression value: 86
Label_3765:
 ; case
 ; RPN'ized expression: "87 "
 ; Expanded expression: "87 "
 ; Expression value: 87
Label_3766:
 ; case
 ; RPN'ized expression: "88 "
 ; Expanded expression: "88 "
 ; Expression value: 88
Label_3767:
 ; RPN'ized expression: "( labelAfter , 76 push2 ) "
 ; Expanded expression: " (@-36) *(4)  76  push2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r5
 ; ,
 ; 76
 load32 76 r4
 ; ,
 ; push2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; RPN'ized expression: "( GenExpr ) "
 ; Expanded expression: " GenExpr ()0 "
 ; (
 ; GenExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExpr
 add r13 16 r13
 ; break
 jump Label_3756
 ; default
Label_3768:
 ; RPN'ized expression: "( 20 push ) "
 ; Expanded expression: " 20  push ()4 "
 ; (
 ; 20
 load32 20 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; RPN'ized expression: "( GenExpr ) "
 ; Expanded expression: " GenExpr ()0 "
 ; (
 ; GenExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExpr
 add r13 16 r13
 ; RPN'ized expression: "( labelAfter GenJumpIfZero ) "
 ; Expanded expression: " (@-36) *(4)  GenJumpIfZero ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; GenJumpIfZero
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpIfZero
 add r13 16 r13
 ; break
 jump Label_3756
 ; }
 jump Label_3756
Label_3757:
 load32 60 r12
 bne r2 r12 2
 jump Label_3758
 load32 62 r12
 bne r2 r12 2
 jump Label_3759
 load32 8 r12
 bne r2 r12 2
 jump Label_3760
 load32 9 r12
 bne r2 r12 2
 jump Label_3761
 load32 10 r12
 bne r2 r12 2
 jump Label_3762
 load32 11 r12
 bne r2 r12 2
 jump Label_3763
 load32 85 r12
 bne r2 r12 2
 jump Label_3764
 load32 86 r12
 bne r2 r12 2
 jump Label_3765
 load32 87 r12
 bne r2 r12 2
 jump Label_3766
 load32 88 r12
 bne r2 r12 2
 jump Label_3767
 jump Label_3768
Label_3756:
 ; }
Label_3753:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "brkCntTarget 0 + *u labelAfter = "
 ; Expanded expression: "(@-24) (@-36) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; RPN'ized expression: "brkCntTarget 1 + *u labelBefore = "
 ; Expanded expression: "(@-20) (@-32) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; RPN'ized expression: "tok ( casesIdx , brkCntTarget , tok ParseStatement ) = "
 ; Expanded expression: "(@8)  (@16) *(4)  (@-24)  (@8) *(4)  ParseStatement ()12 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 sub r14 24 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseStatement
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseStatement
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "constExpr forever 0 == && 0 == "
 ; Expanded expression: "(@-12) *(4) _Bool [sh&&->3771] (@-40) *(4) 0 == &&[3771] 0 == "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3771
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3771:
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3769
 ; RPN'ized expression: "( labelBefore GenJumpUncond ) "
 ; Expanded expression: " (@-32) *(4)  GenJumpUncond ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r4
 ; ,
 ; GenJumpUncond
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpUncond
 add r13 16 r13
Label_3769:
 ; RPN'ized expression: "( labelAfter GenNumLabel ) "
 ; Expanded expression: " (@-36) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; }
 jump Label_3744
Label_3743:
 ; else
 ; if
 ; RPN'ized expression: "tok 115 == "
 ; Expanded expression: "(@8) *(4) 115 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 115
 ; ==
 load32 115 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3772
 ; {
 ; loc             labelBefore : (@-32) : int
 ; RPN'ized expression: "labelBefore LabelCnt ++p = "
 ; Expanded expression: "(@-32) LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; loc             labelWhile : (@-36) : int
 ; RPN'ized expression: "labelWhile LabelCnt ++p = "
 ; Expanded expression: "(@-36) LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; loc             labelAfter : (@-40) : int
 ; RPN'ized expression: "labelAfter LabelCnt ++p = "
 ; Expanded expression: "(@-40) LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3774:
.dw 100 111 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3774 printf2 ) "
 ; Expanded expression: " L3774  printf2 ()4 "
 ; (
 ; 3774
 addr2reg Label_3774 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "( labelBefore GenNumLabel ) "
 ; Expanded expression: " (@-32) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "brkCntTarget 0 + *u labelAfter = "
 ; Expanded expression: "(@-24) (@-40) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -40 r14 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; RPN'ized expression: "brkCntTarget 1 + *u labelWhile = "
 ; Expanded expression: "(@-20) (@-36) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; RPN'ized expression: "tok ( casesIdx , brkCntTarget , tok ParseStatement ) = "
 ; Expanded expression: "(@8)  (@16) *(4)  (@-24)  (@8) *(4)  ParseStatement ()12 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 sub r14 24 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseStatement
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseStatement
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 24 != "
 ; Expanded expression: "(@8) *(4) 24 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 24
 ; !=
 load32 24 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3775
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3775:
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3777:
.dw 119 104 105 108 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3777 printf2 ) "
 ; Expanded expression: " L3777  printf2 ()4 "
 ; (
 ; 3777
 addr2reg Label_3777 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 40 != "
 ; Expanded expression: "(@8) *(4) 40 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 40
 ; !=
 load32 40 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3778
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3778:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok ( 0 , 0 , exprVal &u , constExpr &u , synPtr &u , gotUnary &u , tok ParseExpr ) = 41 != "
 ; Expanded expression: "(@8)  0  0  (@-16)  (@-12)  (@-8)  (@-4)  (@8) *(4)  ParseExpr ()28 =(4) 41 != "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 sub r14 16 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 sub r14 12 r7
 ; ,
 ; local ofs
 sub r14 8 r6
 ; ,
 ; local ofs
 sub r14 4 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseExpr
 add r13 28 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; 41
 ; !=
 load32 41 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3780
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3780:
 ; if
 ; RPN'ized expression: "gotUnary 0 == "
 ; Expanded expression: "(@-4) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3782
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3782:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 59 != "
 ; Expanded expression: "(@8) *(4) 59 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 59
 ; !=
 load32 59 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3784
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3784:
 ; RPN'ized expression: "( synPtr scalarTypeCheck ) "
 ; Expanded expression: " (@-8) *(4)  scalarTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; scalarTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump scalarTypeCheck
 add r13 16 r13
 ; RPN'ized expression: "( labelWhile GenNumLabel ) "
 ; Expanded expression: " (@-36) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; if
 ; RPN'ized expression: "constExpr "
 ; Expanded expression: "(@-12) *(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3786
 ; {
 ; if
 ; RPN'ized expression: "( exprVal truncInt ) "
 ; Expanded expression: " (@-16) *(4)  truncInt ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3788
 ; RPN'ized expression: "( labelBefore GenJumpUncond ) "
 ; Expanded expression: " (@-32) *(4)  GenJumpUncond ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r4
 ; ,
 ; GenJumpUncond
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpUncond
 add r13 16 r13
Label_3788:
 ; }
 jump Label_3787
Label_3786:
 ; else
 ; {
 ; switch
 ; RPN'ized expression: "stack sp 1 - + *u 0 + *u "
 ; Expanded expression: "stack sp *(4) 1 - 8 * + 0 + *(4) "
 ; stack
 addr2reg stack r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_3791
 ; {
 ; case
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
Label_3792:
 ; case
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
Label_3793:
 ; case
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
Label_3794:
 ; case
 ; RPN'ized expression: "9 "
 ; Expanded expression: "9 "
 ; Expression value: 9
Label_3795:
 ; case
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
Label_3796:
 ; case
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
Label_3797:
 ; case
 ; RPN'ized expression: "85 "
 ; Expanded expression: "85 "
 ; Expression value: 85
Label_3798:
 ; case
 ; RPN'ized expression: "86 "
 ; Expanded expression: "86 "
 ; Expression value: 86
Label_3799:
 ; case
 ; RPN'ized expression: "87 "
 ; Expanded expression: "87 "
 ; Expression value: 87
Label_3800:
 ; case
 ; RPN'ized expression: "88 "
 ; Expanded expression: "88 "
 ; Expression value: 88
Label_3801:
 ; RPN'ized expression: "( labelBefore , 22 push2 ) "
 ; Expanded expression: " (@-32) *(4)  22  push2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; 22
 load32 22 r4
 ; ,
 ; push2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; RPN'ized expression: "( GenExpr ) "
 ; Expanded expression: " GenExpr ()0 "
 ; (
 ; GenExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExpr
 add r13 16 r13
 ; break
 jump Label_3790
 ; default
Label_3802:
 ; RPN'ized expression: "( 20 push ) "
 ; Expanded expression: " 20  push ()4 "
 ; (
 ; 20
 load32 20 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; RPN'ized expression: "( GenExpr ) "
 ; Expanded expression: " GenExpr ()0 "
 ; (
 ; GenExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExpr
 add r13 16 r13
 ; RPN'ized expression: "( labelBefore GenJumpIfNotZero ) "
 ; Expanded expression: " (@-32) *(4)  GenJumpIfNotZero ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r4
 ; ,
 ; GenJumpIfNotZero
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpIfNotZero
 add r13 16 r13
 ; break
 jump Label_3790
 ; }
 jump Label_3790
Label_3791:
 load32 60 r12
 bne r2 r12 2
 jump Label_3792
 load32 62 r12
 bne r2 r12 2
 jump Label_3793
 load32 8 r12
 bne r2 r12 2
 jump Label_3794
 load32 9 r12
 bne r2 r12 2
 jump Label_3795
 load32 10 r12
 bne r2 r12 2
 jump Label_3796
 load32 11 r12
 bne r2 r12 2
 jump Label_3797
 load32 85 r12
 bne r2 r12 2
 jump Label_3798
 load32 86 r12
 bne r2 r12 2
 jump Label_3799
 load32 87 r12
 bne r2 r12 2
 jump Label_3800
 load32 88 r12
 bne r2 r12 2
 jump Label_3801
 jump Label_3802
Label_3790:
 ; }
Label_3787:
 ; RPN'ized expression: "( labelAfter GenNumLabel ) "
 ; Expanded expression: " (@-40) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 jump Label_3773
Label_3772:
 ; else
 ; if
 ; RPN'ized expression: "tok 22 == "
 ; Expanded expression: "(@8) *(4) 22 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 22
 ; ==
 load32 22 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3803
 ; {
 ; loc             labelAfterIf : (@-32) : int
 ; RPN'ized expression: "labelAfterIf LabelCnt ++p = "
 ; Expanded expression: "(@-32) LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; loc             labelAfterElse : (@-36) : int
 ; RPN'ized expression: "labelAfterElse LabelCnt ++p = "
 ; Expanded expression: "(@-36) LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3805:
.dw 105 102 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3805 printf2 ) "
 ; Expanded expression: " L3805  printf2 ()4 "
 ; (
 ; 3805
 addr2reg Label_3805 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 40 != "
 ; Expanded expression: "(@8) *(4) 40 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 40
 ; !=
 load32 40 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3806
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3806:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok ( 0 , 0 , exprVal &u , constExpr &u , synPtr &u , gotUnary &u , tok ParseExpr ) = 41 != "
 ; Expanded expression: "(@8)  0  0  (@-16)  (@-12)  (@-8)  (@-4)  (@8) *(4)  ParseExpr ()28 =(4) 41 != "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 sub r14 16 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 sub r14 12 r7
 ; ,
 ; local ofs
 sub r14 8 r6
 ; ,
 ; local ofs
 sub r14 4 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseExpr
 add r13 28 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; 41
 ; !=
 load32 41 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3808
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3808:
 ; if
 ; RPN'ized expression: "gotUnary 0 == "
 ; Expanded expression: "(@-4) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3810
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3810:
 ; RPN'ized expression: "( synPtr scalarTypeCheck ) "
 ; Expanded expression: " (@-8) *(4)  scalarTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; scalarTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump scalarTypeCheck
 add r13 16 r13
 ; if
 ; RPN'ized expression: "constExpr "
 ; Expanded expression: "(@-12) *(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3812
 ; {
 ; if
 ; RPN'ized expression: "( exprVal truncInt ) 0 == "
 ; Expanded expression: " (@-16) *(4)  truncInt ()4 0 == "
 ; (
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3814
 ; RPN'ized expression: "( labelAfterIf GenJumpUncond ) "
 ; Expanded expression: " (@-32) *(4)  GenJumpUncond ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r4
 ; ,
 ; GenJumpUncond
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpUncond
 add r13 16 r13
Label_3814:
 ; }
 jump Label_3813
Label_3812:
 ; else
 ; {
 ; switch
 ; RPN'ized expression: "stack sp 1 - + *u 0 + *u "
 ; Expanded expression: "stack sp *(4) 1 - 8 * + 0 + *(4) "
 ; stack
 addr2reg stack r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_3817
 ; {
 ; case
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
Label_3818:
 ; case
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
Label_3819:
 ; case
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
Label_3820:
 ; case
 ; RPN'ized expression: "9 "
 ; Expanded expression: "9 "
 ; Expression value: 9
Label_3821:
 ; case
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
Label_3822:
 ; case
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
Label_3823:
 ; case
 ; RPN'ized expression: "85 "
 ; Expanded expression: "85 "
 ; Expression value: 85
Label_3824:
 ; case
 ; RPN'ized expression: "86 "
 ; Expanded expression: "86 "
 ; Expression value: 86
Label_3825:
 ; case
 ; RPN'ized expression: "87 "
 ; Expanded expression: "87 "
 ; Expression value: 87
Label_3826:
 ; case
 ; RPN'ized expression: "88 "
 ; Expanded expression: "88 "
 ; Expression value: 88
Label_3827:
 ; RPN'ized expression: "( labelAfterIf , 76 push2 ) "
 ; Expanded expression: " (@-32) *(4)  76  push2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r5
 ; ,
 ; 76
 load32 76 r4
 ; ,
 ; push2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; RPN'ized expression: "( GenExpr ) "
 ; Expanded expression: " GenExpr ()0 "
 ; (
 ; GenExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExpr
 add r13 16 r13
 ; break
 jump Label_3816
 ; default
Label_3828:
 ; RPN'ized expression: "( 20 push ) "
 ; Expanded expression: " 20  push ()4 "
 ; (
 ; 20
 load32 20 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; RPN'ized expression: "( GenExpr ) "
 ; Expanded expression: " GenExpr ()0 "
 ; (
 ; GenExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExpr
 add r13 16 r13
 ; RPN'ized expression: "( labelAfterIf GenJumpIfZero ) "
 ; Expanded expression: " (@-32) *(4)  GenJumpIfZero ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r4
 ; ,
 ; GenJumpIfZero
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpIfZero
 add r13 16 r13
 ; break
 jump Label_3816
 ; }
 jump Label_3816
Label_3817:
 load32 60 r12
 bne r2 r12 2
 jump Label_3818
 load32 62 r12
 bne r2 r12 2
 jump Label_3819
 load32 8 r12
 bne r2 r12 2
 jump Label_3820
 load32 9 r12
 bne r2 r12 2
 jump Label_3821
 load32 10 r12
 bne r2 r12 2
 jump Label_3822
 load32 11 r12
 bne r2 r12 2
 jump Label_3823
 load32 85 r12
 bne r2 r12 2
 jump Label_3824
 load32 86 r12
 bne r2 r12 2
 jump Label_3825
 load32 87 r12
 bne r2 r12 2
 jump Label_3826
 load32 88 r12
 bne r2 r12 2
 jump Label_3827
 jump Label_3828
Label_3816:
 ; }
Label_3813:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "tok ( casesIdx , BrkCntTarget , tok ParseStatement ) = "
 ; Expanded expression: "(@8)  (@16) *(4)  (@12) *(4)  (@8) *(4)  ParseStatement ()12 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseStatement
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseStatement
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 23 == "
 ; Expanded expression: "(@8) *(4) 23 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 23
 ; ==
 load32 23 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3829
 ; {
 ; RPN'ized expression: "( labelAfterElse GenJumpUncond ) "
 ; Expanded expression: " (@-36) *(4)  GenJumpUncond ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; GenJumpUncond
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpUncond
 add r13 16 r13
 ; RPN'ized expression: "( labelAfterIf GenNumLabel ) "
 ; Expanded expression: " (@-32) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3831:
.dw 101 108 115 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3831 printf2 ) "
 ; Expanded expression: " L3831  printf2 ()4 "
 ; (
 ; 3831
 addr2reg Label_3831 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "tok ( casesIdx , BrkCntTarget , tok ParseStatement ) = "
 ; Expanded expression: "(@8)  (@16) *(4)  (@12) *(4)  (@8) *(4)  ParseStatement ()12 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseStatement
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseStatement
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "( labelAfterElse GenNumLabel ) "
 ; Expanded expression: " (@-36) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; }
 jump Label_3830
Label_3829:
 ; else
 ; {
 ; RPN'ized expression: "( labelAfterIf GenNumLabel ) "
 ; Expanded expression: " (@-32) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; }
Label_3830:
 ; }
 jump Label_3804
Label_3803:
 ; else
 ; if
 ; RPN'ized expression: "tok 116 == "
 ; Expanded expression: "(@8) *(4) 116 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 116
 ; ==
 load32 116 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3832
 ; {
 ; loc             labelBefore : (@-32) : int
 ; RPN'ized expression: "labelBefore LabelCnt ++p = "
 ; Expanded expression: "(@-32) LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; loc             labelExpr3 : (@-36) : int
 ; RPN'ized expression: "labelExpr3 LabelCnt ++p = "
 ; Expanded expression: "(@-36) LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; loc             labelBody : (@-40) : int
 ; RPN'ized expression: "labelBody LabelCnt ++p = "
 ; Expanded expression: "(@-40) LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; loc             labelAfter : (@-44) : int
 ; RPN'ized expression: "labelAfter LabelCnt ++p = "
 ; Expanded expression: "(@-44) LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
 ; loc             cond : (@-48) : int
 ; RPN'ized expression: "cond 1 -u = "
 ; Expanded expression: "(@-48) -1 =(4) "
 ; -1
 load32 -1 r2
 ; local ofs
 ; = (write dereference)
 write -48 r14 r2
 ; RPN'ized expression: "129 1 >> "
 ; Expanded expression: "64 "
 ; Expression value: 64
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; loc             expr3Stack : Label_3834 : [64u] [2u] int

.bss
; .align 2
Label_3834:
; .space 512
.dw 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

.code
 ; loc             expr3Sp : Label_3835 : int

.bss
; .align 2
Label_3835:
; .space 4
.dw 0 0 0 0

.code
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3836:
.dw 102 111 114 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3836 printf2 ) "
 ; Expanded expression: " L3836  printf2 ()4 "
 ; (
 ; 3836
 addr2reg Label_3836 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 40 != "
 ; Expanded expression: "(@8) *(4) 40 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 40
 ; !=
 load32 40 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3837
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3837:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; {
 ; if
 ; RPN'ized expression: "tok ( 0 , 0 , exprVal &u , constExpr &u , synPtr &u , gotUnary &u , tok ParseExpr ) = 59 != "
 ; Expanded expression: "(@8)  0  0  (@-16)  (@-12)  (@-8)  (@-4)  (@8) *(4)  ParseExpr ()28 =(4) 59 != "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 sub r14 16 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 sub r14 12 r7
 ; ,
 ; local ofs
 sub r14 8 r6
 ; ,
 ; local ofs
 sub r14 4 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseExpr
 add r13 28 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; 59
 ; !=
 load32 59 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3839
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3839:
 ; if
 ; RPN'ized expression: "gotUnary "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3841
 ; {
 ; RPN'ized expression: "( GenExpr ) "
 ; Expanded expression: " GenExpr ()0 "
 ; (
 ; GenExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExpr
 add r13 16 r13
 ; }
Label_3841:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 ; RPN'ized expression: "( labelBefore GenNumLabel ) "
 ; Expanded expression: " (@-32) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; if
 ; RPN'ized expression: "tok ( 0 , 0 , exprVal &u , constExpr &u , synPtr &u , gotUnary &u , tok ParseExpr ) = 59 != "
 ; Expanded expression: "(@8)  0  0  (@-16)  (@-12)  (@-8)  (@-4)  (@8) *(4)  ParseExpr ()28 =(4) 59 != "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 sub r14 16 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 sub r14 12 r7
 ; ,
 ; local ofs
 sub r14 8 r6
 ; ,
 ; local ofs
 sub r14 4 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseExpr
 add r13 28 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; 59
 ; !=
 load32 59 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3843
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3843:
 ; if
 ; RPN'ized expression: "gotUnary "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3845
 ; {
 ; RPN'ized expression: "( synPtr scalarTypeCheck ) "
 ; Expanded expression: " (@-8) *(4)  scalarTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; scalarTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump scalarTypeCheck
 add r13 16 r13
 ; if
 ; RPN'ized expression: "constExpr "
 ; Expanded expression: "(@-12) *(4) "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3847
 ; {
 ; RPN'ized expression: "cond ( exprVal truncInt ) 0 != = "
 ; Expanded expression: "(@-48)  (@-16) *(4)  truncInt ()4 0 != =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; 0
 ; !=
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -48 r14 r2
 ; }
 jump Label_3848
Label_3847:
 ; else
 ; {
 ; switch
 ; RPN'ized expression: "stack sp 1 - + *u 0 + *u "
 ; Expanded expression: "stack sp *(4) 1 - 8 * + 0 + *(4) "
 ; stack
 addr2reg stack r2
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 jump Label_3850
 ; {
 ; case
 ; RPN'ized expression: "60 "
 ; Expanded expression: "60 "
 ; Expression value: 60
Label_3851:
 ; case
 ; RPN'ized expression: "62 "
 ; Expanded expression: "62 "
 ; Expression value: 62
Label_3852:
 ; case
 ; RPN'ized expression: "8 "
 ; Expanded expression: "8 "
 ; Expression value: 8
Label_3853:
 ; case
 ; RPN'ized expression: "9 "
 ; Expanded expression: "9 "
 ; Expression value: 9
Label_3854:
 ; case
 ; RPN'ized expression: "10 "
 ; Expanded expression: "10 "
 ; Expression value: 10
Label_3855:
 ; case
 ; RPN'ized expression: "11 "
 ; Expanded expression: "11 "
 ; Expression value: 11
Label_3856:
 ; case
 ; RPN'ized expression: "85 "
 ; Expanded expression: "85 "
 ; Expression value: 85
Label_3857:
 ; case
 ; RPN'ized expression: "86 "
 ; Expanded expression: "86 "
 ; Expression value: 86
Label_3858:
 ; case
 ; RPN'ized expression: "87 "
 ; Expanded expression: "87 "
 ; Expression value: 87
Label_3859:
 ; case
 ; RPN'ized expression: "88 "
 ; Expanded expression: "88 "
 ; Expression value: 88
Label_3860:
 ; RPN'ized expression: "( labelAfter , 76 push2 ) "
 ; Expanded expression: " (@-44) *(4)  76  push2 ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -44 r14 r5
 ; ,
 ; 76
 load32 76 r4
 ; ,
 ; push2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push2
 add r13 16 r13
 ; RPN'ized expression: "( GenExpr ) "
 ; Expanded expression: " GenExpr ()0 "
 ; (
 ; GenExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExpr
 add r13 16 r13
 ; break
 jump Label_3849
 ; default
Label_3861:
 ; RPN'ized expression: "( 20 push ) "
 ; Expanded expression: " 20  push ()4 "
 ; (
 ; 20
 load32 20 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; RPN'ized expression: "( GenExpr ) "
 ; Expanded expression: " GenExpr ()0 "
 ; (
 ; GenExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExpr
 add r13 16 r13
 ; RPN'ized expression: "( labelAfter GenJumpIfZero ) "
 ; Expanded expression: " (@-44) *(4)  GenJumpIfZero ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -44 r14 r4
 ; ,
 ; GenJumpIfZero
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpIfZero
 add r13 16 r13
 ; break
 jump Label_3849
 ; }
 jump Label_3849
Label_3850:
 load32 60 r12
 bne r2 r12 2
 jump Label_3851
 load32 62 r12
 bne r2 r12 2
 jump Label_3852
 load32 8 r12
 bne r2 r12 2
 jump Label_3853
 load32 9 r12
 bne r2 r12 2
 jump Label_3854
 load32 10 r12
 bne r2 r12 2
 jump Label_3855
 load32 11 r12
 bne r2 r12 2
 jump Label_3856
 load32 85 r12
 bne r2 r12 2
 jump Label_3857
 load32 86 r12
 bne r2 r12 2
 jump Label_3858
 load32 87 r12
 bne r2 r12 2
 jump Label_3859
 load32 88 r12
 bne r2 r12 2
 jump Label_3860
 jump Label_3861
Label_3849:
 ; }
Label_3848:
 ; }
 jump Label_3846
Label_3845:
 ; else
 ; {
 ; RPN'ized expression: "cond 1 = "
 ; Expanded expression: "(@-48) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -48 r14 r2
 ; }
Label_3846:
 ; if
 ; RPN'ized expression: "cond 0 == "
 ; Expanded expression: "(@-48) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3862
 ; RPN'ized expression: "( labelAfter GenJumpUncond ) "
 ; Expanded expression: " (@-44) *(4)  GenJumpUncond ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -44 r14 r4
 ; ,
 ; GenJumpUncond
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpUncond
 add r13 16 r13
Label_3862:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok ( 0 , 0 , exprVal &u , constExpr &u , synPtr &u , gotUnary &u , tok ParseExpr ) = 41 != "
 ; Expanded expression: "(@8)  0  0  (@-16)  (@-12)  (@-8)  (@-4)  (@8) *(4)  ParseExpr ()28 =(4) 41 != "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 sub r14 16 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 sub r14 12 r7
 ; ,
 ; local ofs
 sub r14 8 r6
 ; ,
 ; local ofs
 sub r14 4 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseExpr
 add r13 28 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; 41
 ; !=
 load32 41 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3864
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3864:
 ; if
 ; loc             <something> : unsigned
 ; RPN'ized expression: "gotUnary sp 16 <= && sp (something3868) ( expr3Stack 0 + *u sizeof , expr3Stack sizeof division ) expr3Sp - <= && "
 ; Expanded expression: "(@-4) *(4) _Bool [sh&&->3870] sp *(4) 16 <= &&[3870] _Bool [sh&&->3869] sp *(4)  8u  512u  division ()8 L3835 *(4) - <=u &&[3869] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3870
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; 16
 ; <=
 load32 17 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3870:
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3869
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; 8
 load32 8 r5
 ; ,
 ; 512
 load32 512 r4
 ; ,
 ; division
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump division
 add r13 16 r13
 ; 3835
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 addr2reg Label_3835 r1
 read 0 r1 r2
 ; -
 read 0 r13 r11
 add r13 4 r13
 sub r11 r2 r2
 ; <=u
 read 0 r13 r11
 add r13 4 r13
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 load32 1 r1
 xor r2 r1 r2
 ; short-circuit && target
Label_3869:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3866
 ; {
 ; loc                 cnt : (@-52) : int
 ; RPN'ized expression: "cnt sp = "
 ; Expanded expression: "(@-52) sp *(4) =(4) "
 ; sp
 ; * (read dereference)
 addr2reg sp r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -52 r14 r2
 ; RPN'ized expression: "( cnt stack 0 + *u sizeof * , stack , expr3Stack expr3Sp + memcpy ) "
 ; Expanded expression: " (@-52) *(4) 8u *  stack  L3834 L3835 *(4) 8 * +  memcpy ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -52 r14 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; ,
 ; stack
 addr2reg stack r5
 ; ,
 ; 3834
 addr2reg Label_3834 r4
 ; 3835
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg Label_3835 r1
 read 0 r1 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; memcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memcpy
 add r13 16 r13
 ; RPN'ized expression: "expr3Sp cnt += "
 ; Expanded expression: "L3835 (@-52) *(4) +=(4) "
 ; local ofs
 ; * (read dereference)
 read -52 r14 r2
 ; 3835
 ; +=
 addr2reg Label_3835 r1
 read 0 r1 r12
 add r12 r2 r2
 addr2reg Label_3835 r1
 write 0 r1 r2
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "brkCntTarget 0 + *u labelAfter = "
 ; Expanded expression: "(@-24) (@-44) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; RPN'ized expression: "brkCntTarget 1 + *u labelExpr3 = "
 ; Expanded expression: "(@-20) (@-36) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; RPN'ized expression: "tok ( casesIdx , brkCntTarget , tok ParseStatement ) = "
 ; Expanded expression: "(@8)  (@16) *(4)  (@-24)  (@8) *(4)  ParseStatement ()12 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 sub r14 24 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseStatement
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseStatement
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "expr3Sp cnt -= "
 ; Expanded expression: "L3835 (@-52) *(4) -=(4) "
 ; local ofs
 ; * (read dereference)
 read -52 r14 r2
 ; 3835
 ; -=
 addr2reg Label_3835 r1
 read 0 r1 r12
 sub r12 r2 r2
 addr2reg Label_3835 r1
 write 0 r1 r2
 ; RPN'ized expression: "( cnt stack 0 + *u sizeof * , expr3Stack expr3Sp + , stack memcpy ) "
 ; Expanded expression: " (@-52) *(4) 8u *  L3834 L3835 *(4) 8 * +  stack  memcpy ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -52 r14 r6
 ; 3
 ; <<
 shiftl r6 3 r6
 ; ,
 ; 3834
 addr2reg Label_3834 r5
 ; 3835
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 addr2reg Label_3835 r1
 read 0 r1 r5
 ; 3
 ; <<
 shiftl r5 3 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; stack
 addr2reg stack r4
 ; ,
 ; memcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memcpy
 add r13 16 r13
 ; RPN'ized expression: "sp cnt = "
 ; Expanded expression: "sp (@-52) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -52 r14 r2
 ; sp
 ; = (write dereference)
 addr2reg sp r1
 write 0 r1 r2
 ; RPN'ized expression: "( labelExpr3 GenNumLabel ) "
 ; Expanded expression: " (@-36) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; RPN'ized expression: "( GenExpr ) "
 ; Expanded expression: " GenExpr ()0 "
 ; (
 ; GenExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExpr
 add r13 16 r13
 ; if
 ; RPN'ized expression: "cond "
 ; Expanded expression: "(@-48) *(4) "
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3871
 ; RPN'ized expression: "( labelBefore GenJumpUncond ) "
 ; Expanded expression: " (@-32) *(4)  GenJumpUncond ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r4
 ; ,
 ; GenJumpUncond
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpUncond
 add r13 16 r13
Label_3871:
 ; }
 jump Label_3867
Label_3866:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "gotUnary "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3873
 ; {
 ; RPN'ized expression: "( labelBody GenJumpUncond ) "
 ; Expanded expression: " (@-40) *(4)  GenJumpUncond ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; ,
 ; GenJumpUncond
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpUncond
 add r13 16 r13
 ; RPN'ized expression: "( labelExpr3 GenNumLabel ) "
 ; Expanded expression: " (@-36) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; RPN'ized expression: "( GenExpr ) "
 ; Expanded expression: " GenExpr ()0 "
 ; (
 ; GenExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExpr
 add r13 16 r13
 ; RPN'ized expression: "( labelBefore GenJumpUncond ) "
 ; Expanded expression: " (@-32) *(4)  GenJumpUncond ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -32 r14 r4
 ; ,
 ; GenJumpUncond
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpUncond
 add r13 16 r13
 ; RPN'ized expression: "( labelBody GenNumLabel ) "
 ; Expanded expression: " (@-40) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; }
Label_3873:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "brkCntTarget 0 + *u labelAfter = "
 ; Expanded expression: "(@-24) (@-44) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; RPN'ized expression: "brkCntTarget 1 + *u gotUnary cond labelAfter labelBefore ? labelExpr3 ? = "
 ; Expanded expression: "(@-20) (@-4) *(4) [sh||->3875] (@-48) *(4) [sh||->3877] (@-44) *(4) goto &&[3877] (@-32) *(4) &&[3878] goto &&[3875] (@-36) *(4) &&[3876] =(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3875
 ; local ofs
 ; * (read dereference)
 read -48 r14 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3877
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; sh-circ-goto goto
 jump Label_3878
 ; short-circuit && target
Label_3877:
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; short-circuit && target
Label_3878:
 ; sh-circ-goto goto
 jump Label_3876
 ; short-circuit && target
Label_3875:
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; short-circuit && target
Label_3876:
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; RPN'ized expression: "tok ( casesIdx , brkCntTarget , tok ParseStatement ) = "
 ; Expanded expression: "(@8)  (@16) *(4)  (@-24)  (@8) *(4)  ParseStatement ()12 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 16 r14 r6
 ; ,
 ; local ofs
 sub r14 24 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseStatement
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseStatement
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "brkCntTarget 1 + *u labelAfter != "
 ; Expanded expression: "(@-20) *(4) (@-44) *(4) != "
 ; local ofs
 ; * (read dereference)
 read -20 r14 r2
 ; local ofs
 ; * (read dereference)
 read -44 r14 r8
 ; !=
 bne r2 r8 2
 jump Label_3879
 ; RPN'ized expression: "( brkCntTarget 1 + *u GenJumpUncond ) "
 ; Expanded expression: " (@-20) *(4)  GenJumpUncond ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -20 r14 r4
 ; ,
 ; GenJumpUncond
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpUncond
 add r13 16 r13
Label_3879:
 ; }
Label_3867:
 ; RPN'ized expression: "( labelAfter GenNumLabel ) "
 ; Expanded expression: " (@-44) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -44 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; }
 jump Label_3833
Label_3832:
 ; else
 ; if
 ; RPN'ized expression: "tok 26 == "
 ; Expanded expression: "(@8) *(4) 26 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 26
 ; ==
 load32 26 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3881
 ; {
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3883:
.dw 98 114 101 97 107 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3883 printf2 ) "
 ; Expanded expression: " L3883  printf2 ()4 "
 ; (
 ; 3883
 addr2reg Label_3883 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "tok ( GetToken ) = 59 != "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) 59 != "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; 59
 ; !=
 load32 59 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3884
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3884:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "BrkCntTarget 0 == "
 ; Expanded expression: "(@12) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3886
 ; RPN'ized expression: "( errorCtrlOutOfScope ) "
 ; Expanded expression: " errorCtrlOutOfScope ()0 "
 ; (
 ; errorCtrlOutOfScope
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorCtrlOutOfScope
 add r13 16 r13
Label_3886:
 ; RPN'ized expression: "( BrkCntTarget 0 + *u GenJumpUncond ) "
 ; Expanded expression: " (@12) *(4) 0 + *(4)  GenJumpUncond ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; 0
 ; +
 add r4 0 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; GenJumpUncond
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpUncond
 add r13 16 r13
 ; }
 jump Label_3882
Label_3881:
 ; else
 ; if
 ; RPN'ized expression: "tok 25 == "
 ; Expanded expression: "(@8) *(4) 25 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 25
 ; ==
 load32 25 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3888
 ; {
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3890:
.dw 99 111 110 116 105 110 117 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3890 printf2 ) "
 ; Expanded expression: " L3890  printf2 ()4 "
 ; (
 ; 3890
 addr2reg Label_3890 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "tok ( GetToken ) = 59 != "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) 59 != "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; 59
 ; !=
 load32 59 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3891
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3891:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "BrkCntTarget 0 == BrkCntTarget 1 + *u 0 == || "
 ; Expanded expression: "(@12) *(4) 0 == [sh||->3895] (@12) *(4) 4 + *(4) 0 == ||[3895] "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3895
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3895:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3893
 ; RPN'ized expression: "( errorCtrlOutOfScope ) "
 ; Expanded expression: " errorCtrlOutOfScope ()0 "
 ; (
 ; errorCtrlOutOfScope
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorCtrlOutOfScope
 add r13 16 r13
Label_3893:
 ; RPN'ized expression: "( BrkCntTarget 1 + *u GenJumpUncond ) "
 ; Expanded expression: " (@12) *(4) 4 + *(4)  GenJumpUncond ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; 4
 ; +
 add r4 4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; GenJumpUncond
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpUncond
 add r13 16 r13
 ; }
 jump Label_3889
Label_3888:
 ; else
 ; if
 ; RPN'ized expression: "tok 117 == "
 ; Expanded expression: "(@8) *(4) 117 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 117
 ; ==
 load32 117 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3896
 ; {
 ; loc             undoCases : (@-32) : int
 ; RPN'ized expression: "undoCases CasesCnt = "
 ; Expanded expression: "(@-32) CasesCnt *(4) =(4) "
 ; CasesCnt
 ; * (read dereference)
 addr2reg CasesCnt r1
 read 0 r1 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
 ; loc             brkLabel : (@-36) : int
 ; RPN'ized expression: "brkLabel LabelCnt ++p = "
 ; Expanded expression: "(@-36) LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -36 r14 r2
 ; loc             lbl : (@-40) : int
 ; RPN'ized expression: "lbl LabelCnt ++p = "
 ; Expanded expression: "(@-40) LabelCnt ++p(4) =(4) "
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg LabelCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -40 r14 r2
 ; loc             i : (@-44) : int
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3898:
.dw 115 119 105 116 99 104 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3898 printf2 ) "
 ; Expanded expression: " L3898  printf2 ()4 "
 ; (
 ; 3898
 addr2reg Label_3898 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 40 != "
 ; Expanded expression: "(@8) *(4) 40 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 40
 ; !=
 load32 40 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3899
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3899:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok ( 0 , 0 , exprVal &u , constExpr &u , synPtr &u , gotUnary &u , tok ParseExpr ) = 41 != "
 ; Expanded expression: "(@8)  0  0  (@-16)  (@-12)  (@-8)  (@-4)  (@8) *(4)  ParseExpr ()28 =(4) 41 != "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 sub r14 16 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 sub r14 12 r7
 ; ,
 ; local ofs
 sub r14 8 r6
 ; ,
 ; local ofs
 sub r14 4 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseExpr
 add r13 28 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; 41
 ; !=
 load32 41 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3901
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3901:
 ; if
 ; RPN'ized expression: "gotUnary 0 == "
 ; Expanded expression: "(@-4) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3903
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3903:
 ; RPN'ized expression: "( synPtr anyIntTypeCheck ) "
 ; Expanded expression: " (@-8) *(4)  anyIntTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; anyIntTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump anyIntTypeCheck
 add r13 16 r13
 ; RPN'ized expression: "( 20 push ) "
 ; Expanded expression: " 20  push ()4 "
 ; (
 ; 20
 load32 20 r4
 ; ,
 ; push
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump push
 add r13 16 r13
 ; RPN'ized expression: "( GenExpr ) "
 ; Expanded expression: " GenExpr ()0 "
 ; (
 ; GenExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExpr
 add r13 16 r13
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "( lbl GenJumpUncond ) "
 ; Expanded expression: " (@-40) *(4)  GenJumpUncond ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; ,
 ; GenJumpUncond
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpUncond
 add r13 16 r13
 ; RPN'ized expression: "brkCntTarget 0 + *u brkLabel = "
 ; Expanded expression: "(@-24) (@-36) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -36 r14 r2
 ; local ofs
 ; = (write dereference)
 write -24 r14 r2
 ; RPN'ized expression: "brkCntTarget 1 + *u 0 = "
 ; Expanded expression: "(@-20) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -20 r14 r0
 ; if
 ; RPN'ized expression: "BrkCntTarget "
 ; Expanded expression: "(@12) *(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3905
 ; {
 ; RPN'ized expression: "brkCntTarget 1 + *u BrkCntTarget 1 + *u = "
 ; Expanded expression: "(@-20) (@12) *(4) 4 + *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; = (write dereference)
 write -20 r14 r2
 ; }
Label_3905:
 ; RPN'ized expression: "( 0 , 0 AddCase ) "
 ; Expanded expression: " 0  0  AddCase ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; 0
 load32 0 r4
 ; ,
 ; AddCase
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump AddCase
 add r13 16 r13
 ; RPN'ized expression: "tok ( CasesCnt , brkCntTarget , tok ParseStatement ) = "
 ; Expanded expression: "(@8)  CasesCnt *(4)  (@-24)  (@8) *(4)  ParseStatement ()12 =(4) "
 ; (
 ; CasesCnt
 ; * (read dereference)
 addr2reg CasesCnt r1
 read 0 r1 r6
 ; ,
 ; local ofs
 sub r14 24 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseStatement
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseStatement
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "Cases undoCases + *u 1 + *u 0 == "
 ; Expanded expression: "Cases (@-32) *(4) 8 * + 4 + *(4) 0 == "
 ; Cases
 addr2reg Cases r2
 ; local ofs
 ; * (read dereference)
 read -32 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3907
 ; RPN'ized expression: "Cases undoCases + *u 1 + *u brkLabel = "
 ; Expanded expression: "Cases (@-32) *(4) 8 * + 4 + (@-36) *(4) =(4) "
 ; Cases
 addr2reg Cases r2
 ; local ofs
 ; * (read dereference)
 read -32 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
Label_3907:
 ; RPN'ized expression: "( brkLabel GenJumpUncond ) "
 ; Expanded expression: " (@-36) *(4)  GenJumpUncond ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; GenJumpUncond
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpUncond
 add r13 16 r13
 ; RPN'ized expression: "( lbl GenNumLabel ) "
 ; Expanded expression: " (@-40) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -40 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; for
 ; RPN'ized expression: "i undoCases 1 + = "
 ; Expanded expression: "(@-44) (@-32) *(4) 1 + =(4) "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -44 r14 r2
Label_3909:
 ; RPN'ized expression: "i CasesCnt < "
 ; Expanded expression: "(@-44) *(4) CasesCnt *(4) < "
 ; local ofs
 ; * (read dereference)
 read -44 r14 r2
 ; CasesCnt
 ; * (read dereference)
 addr2reg CasesCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_3912
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-44) ++p(4) "
 ; {
 ; RPN'ized expression: "( Cases i + *u 1 + *u , Cases i + *u 0 + *u GenJumpIfEqual ) "
 ; Expanded expression: " Cases (@-44) *(4) 8 * + 4 + *(4)  Cases (@-44) *(4) 8 * + 0 + *(4)  GenJumpIfEqual ()8 "
 ; (
 ; Cases
 addr2reg Cases r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -44 r14 r5
 ; 3
 ; <<
 shiftl r5 3 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; 4
 ; +
 add r5 4 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; Cases
 addr2reg Cases r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -44 r14 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; 0
 ; +
 add r4 0 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; GenJumpIfEqual
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpIfEqual
 add r13 16 r13
 ; }
Label_3910:
 ; local ofs
 ; ++p
 read -44 r14 r2
 add r2 1 r2
 write -44 r14 r2
 sub r2 1 r2
 jump Label_3909
Label_3912:
 ; if
 ; RPN'ized expression: "Cases undoCases + *u 1 + *u brkLabel != "
 ; Expanded expression: "Cases (@-32) *(4) 8 * + 4 + *(4) (@-36) *(4) != "
 ; Cases
 addr2reg Cases r2
 ; local ofs
 ; * (read dereference)
 read -32 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read -36 r14 r8
 ; !=
 bne r2 r8 2
 jump Label_3913
 ; RPN'ized expression: "( Cases undoCases + *u 1 + *u GenJumpUncond ) "
 ; Expanded expression: " Cases (@-32) *(4) 8 * + 4 + *(4)  GenJumpUncond ()4 "
 ; (
 ; Cases
 addr2reg Cases r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -32 r14 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; 4
 ; +
 add r4 4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; GenJumpUncond
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenJumpUncond
 add r13 16 r13
Label_3913:
 ; RPN'ized expression: "( brkLabel GenNumLabel ) "
 ; Expanded expression: " (@-36) *(4)  GenNumLabel ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -36 r14 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; RPN'ized expression: "CasesCnt undoCases = "
 ; Expanded expression: "CasesCnt (@-32) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; CasesCnt
 ; = (write dereference)
 addr2reg CasesCnt r1
 write 0 r1 r2
 ; }
 jump Label_3897
Label_3896:
 ; else
 ; if
 ; RPN'ized expression: "tok 118 == "
 ; Expanded expression: "(@8) *(4) 118 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 118
 ; ==
 load32 118 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3915
 ; {
 ; loc             i : (@-32) : int
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3917:
.dw 99 97 115 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3917 printf2 ) "
 ; Expanded expression: " L3917  printf2 ()4 "
 ; (
 ; 3917
 addr2reg Label_3917 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "casesIdx 0 == "
 ; Expanded expression: "(@16) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3918
 ; RPN'ized expression: "( errorCtrlOutOfScope ) "
 ; Expanded expression: " errorCtrlOutOfScope ()0 "
 ; (
 ; errorCtrlOutOfScope
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorCtrlOutOfScope
 add r13 16 r13
Label_3918:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok ( 0 , 0 , exprVal &u , constExpr &u , synPtr &u , gotUnary &u , tok ParseExpr ) = 58 != "
 ; Expanded expression: "(@8)  0  0  (@-16)  (@-12)  (@-8)  (@-4)  (@8) *(4)  ParseExpr ()28 =(4) 58 != "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 0
 sub r13 4 r13
 write 0 r13 r2
 load32 0 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 sub r14 16 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 sub r14 12 r7
 ; ,
 ; local ofs
 sub r14 8 r6
 ; ,
 ; local ofs
 sub r14 4 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseExpr
 add r13 28 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; 58
 ; !=
 load32 58 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3920
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3920:
 ; if
 ; RPN'ized expression: "gotUnary 0 == "
 ; Expanded expression: "(@-4) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3922
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3922:
 ; RPN'ized expression: "( synPtr anyIntTypeCheck ) "
 ; Expanded expression: " (@-8) *(4)  anyIntTypeCheck ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -8 r14 r4
 ; ,
 ; anyIntTypeCheck
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump anyIntTypeCheck
 add r13 16 r13
 ; if
 ; RPN'ized expression: "constExpr 0 == "
 ; Expanded expression: "(@-12) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -12 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3924
 ; RPN'ized expression: "( errorNotConst ) "
 ; Expanded expression: " errorNotConst ()0 "
 ; (
 ; errorNotConst
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorNotConst
 add r13 16 r13
Label_3924:
 ; RPN'ized expression: "exprVal ( exprVal truncInt ) = "
 ; Expanded expression: "(@-16)  (@-16) *(4)  truncInt ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; ,
 ; truncInt
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump truncInt
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -16 r14 r2
 ; for
 ; RPN'ized expression: "i casesIdx = "
 ; Expanded expression: "(@-32) (@16) *(4) =(4) "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; local ofs
 ; = (write dereference)
 write -32 r14 r2
Label_3926:
 ; RPN'ized expression: "i CasesCnt < "
 ; Expanded expression: "(@-32) *(4) CasesCnt *(4) < "
 ; local ofs
 ; * (read dereference)
 read -32 r14 r2
 ; CasesCnt
 ; * (read dereference)
 addr2reg CasesCnt r1
 read 0 r1 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_3929
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-32) ++p(4) "
 ; if
 ; RPN'ized expression: "Cases i + *u 0 + *u exprVal == "
 ; Expanded expression: "Cases (@-32) *(4) 8 * + 0 + *(4) (@-16) *(4) == "
 ; Cases
 addr2reg Cases r2
 ; local ofs
 ; * (read dereference)
 read -32 r14 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; local ofs
 ; * (read dereference)
 read -16 r14 r8
 ; ==
 beq r2 r8 2
 jump Label_3930

.rdata
Label_3932:
.dw 68 117 112 108 105 99 97 116 101 32 99 97 115 101 32 118 97 108 117 101 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3932 error ) "
 ; Expanded expression: " L3932  error ()4 "
 ; (
 ; 3932
 addr2reg Label_3932 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_3930:
Label_3927:
 ; local ofs
 ; ++p
 read -32 r14 r2
 add r2 1 r2
 write -32 r14 r2
 sub r2 1 r2
 jump Label_3926
Label_3929:
 ; RPN'ized expression: "( LabelCnt , exprVal AddCase ) "
 ; Expanded expression: " LabelCnt *(4)  (@-16) *(4)  AddCase ()8 "
 ; (
 ; LabelCnt
 ; * (read dereference)
 addr2reg LabelCnt r1
 read 0 r1 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -16 r14 r4
 ; ,
 ; AddCase
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump AddCase
 add r13 16 r13
 ; RPN'ized expression: "( LabelCnt ++p GenNumLabel ) "
 ; Expanded expression: " LabelCnt ++p(4)  GenNumLabel ()4 "
 ; (
 ; LabelCnt
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r4
 add r4 1 r4
 addr2reg LabelCnt r1
 write 0 r1 r4
 sub r4 1 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "statementNeeded 1 = "
 ; Expanded expression: "(@-28) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -28 r14 r2
 ; }
 jump Label_3916
Label_3915:
 ; else
 ; if
 ; RPN'ized expression: "tok 119 == "
 ; Expanded expression: "(@8) *(4) 119 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 119
 ; ==
 load32 119 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3933
 ; {
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3935:
.dw 100 101 102 97 117 108 116 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3935 printf2 ) "
 ; Expanded expression: " L3935  printf2 ()4 "
 ; (
 ; 3935
 addr2reg Label_3935 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "casesIdx 0 == "
 ; Expanded expression: "(@16) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read 16 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3936
 ; RPN'ized expression: "( errorCtrlOutOfScope ) "
 ; Expanded expression: " errorCtrlOutOfScope ()0 "
 ; (
 ; errorCtrlOutOfScope
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorCtrlOutOfScope
 add r13 16 r13
Label_3936:
 ; if
 ; RPN'ized expression: "Cases casesIdx 1 - + *u 1 + *u "
 ; Expanded expression: "Cases (@16) *(4) 1 - 8 * + 4 + *(4) "
 ; Cases
 addr2reg Cases r2
 ; local ofs
 ; * (read dereference)
 read 16 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 3
 ; <<
 shiftl r8 3 r8
 ; +
 add r2 r8 r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3938
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3938:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 58 != "
 ; Expanded expression: "(@8) *(4) 58 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 58
 ; !=
 load32 58 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3940
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3940:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; RPN'ized expression: "( Cases casesIdx 1 - + *u 1 + *u LabelCnt ++p = GenNumLabel ) "
 ; Expanded expression: " Cases (@16) *(4) 1 - 8 * + 4 + LabelCnt ++p(4) =(4)  GenNumLabel ()4 "
 ; (
 ; Cases
 addr2reg Cases r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read 16 r14 r4
 ; 1
 ; -
 sub r4 1 r4
 ; 3
 ; <<
 shiftl r4 3 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; 4
 ; +
 add r4 4 r4
 ; LabelCnt
 sub r13 4 r13
 write 0 r13 r4
 ; ++p
 addr2reg LabelCnt r1
 read 0 r1 r4
 add r4 1 r4
 addr2reg LabelCnt r1
 write 0 r1 r4
 sub r4 1 r4
 ; = (write dereference)
 read 0 r13 r11
 add r13 4 r13
 write 0 r11 r4
 ; ,
 ; GenNumLabel
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; RPN'ized expression: "statementNeeded 1 = "
 ; Expanded expression: "(@-28) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -28 r14 r2
 ; }
 jump Label_3934
Label_3933:
 ; else
 ; if
 ; RPN'ized expression: "tok 96 == "
 ; Expanded expression: "(@8) *(4) 96 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 96
 ; ==
 load32 96 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3942
 ; {
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 40 != "
 ; Expanded expression: "(@8) *(4) 40 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 40
 ; !=
 load32 40 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3944
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3944:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 3 != "
 ; Expanded expression: "(@8) *(4) 3 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 3
 ; !=
 load32 3 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3946
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3946:
 ; do
Label_3948:
 ; {
 ; RPN'ized expression: "( 97 , 0 , 34 GetString ) "
 ; Expanded expression: " 97  0  34  GetString ()12 "
 ; (
 ; 97
 load32 97 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; 34
 load32 34 r4
 ; ,
 ; GetString
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetString
 add r13 16 r13
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 ; while
 ; RPN'ized expression: "tok 3 == "
 ; Expanded expression: "(@8) *(4) 3 == "
Label_3949:
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 3
 ; ==
 load32 3 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3948
Label_3950:

.rdata
Label_3951:
.dw 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3951 printf2 ) "
 ; Expanded expression: " L3951  printf2 ()4 "
 ; (
 ; 3951
 addr2reg Label_3951 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "tok 41 != "
 ; Expanded expression: "(@8) *(4) 41 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 41
 ; !=
 load32 41 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3952
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3952:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 59 != "
 ; Expanded expression: "(@8) *(4) 59 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 59
 ; !=
 load32 59 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3954
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3954:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 jump Label_3943
Label_3942:
 ; else
 ; if
 ; RPN'ized expression: "tok 21 == "
 ; Expanded expression: "(@8) *(4) 21 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 21
 ; ==
 load32 21 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3956
 ; {
 ; if
 ; RPN'ized expression: "tok ( GetToken ) = 16 != "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) 16 != "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; 16
 ; !=
 load32 16 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3958
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3958:
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3960:
.dw 103 111 116 111 32 37 115 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( TokenIdentName , L3960 printf2 ) "
 ; Expanded expression: " TokenIdentName  L3960  printf2 ()8 "
 ; (
 ; TokenIdentName
 addr2reg TokenIdentName r5
 ; ,
 ; 3960
 addr2reg Label_3960 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "( ( 0 , TokenIdentName AddGotoLabel ) GenJumpUncond ) "
 ; Expanded expression: "  0  TokenIdentName  AddGotoLabel ()8  GenJumpUncond ()4 "
 ; (
 sub r13 12 r13
 ; (
 sub r13 8 r13
 ; 0
 load32 0 r2
 ; ,
 ; TokenIdentName
 sub r13 4 r13
 write 0 r13 r2
 addr2reg TokenIdentName r2
 ; ,
 ; AddGotoLabel
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump AddGotoLabel
 add r13 16 r13
 ; ,
 ; GenJumpUncond
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump GenJumpUncond
 add r13 16 r13
 ; if
 ; RPN'ized expression: "tok ( GetToken ) = 59 != "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) 59 != "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; 59
 ; !=
 load32 59 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3961
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3961:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
 jump Label_3957
Label_3956:
 ; else
 ; {
 ; RPN'ized expression: "tok ( 0 , 143 , exprVal &u , constExpr &u , synPtr &u , gotUnary &u , tok ParseExpr ) = "
 ; Expanded expression: "(@8)  0  143  (@-16)  (@-12)  (@-8)  (@-4)  (@8) *(4)  ParseExpr ()28 =(4) "
 ; (
 ; 0
 load32 0 r2
 ; ,
 ; 143
 sub r13 4 r13
 write 0 r13 r2
 load32 143 r2
 ; ,
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 sub r14 16 r2
 ; ,
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 sub r14 12 r7
 ; ,
 ; local ofs
 sub r14 8 r6
 ; ,
 ; local ofs
 sub r14 4 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; ParseExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseExpr
 add r13 28 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; if
 ; RPN'ized expression: "tok 143 == "
 ; Expanded expression: "(@8) *(4) 143 == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 143
 ; ==
 load32 143 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_3963
 ; {
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_3965:
.dw 37 115 58 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( IdentTable stack 0 + *u 1 + *u + , L3965 printf2 ) "
 ; Expanded expression: " IdentTable stack 4 + *(4) +  L3965  printf2 ()8 "
 ; (
 ; IdentTable
 addr2reg IdentTable r5
 ; stack
 sub r13 4 r13
 write 0 r13 r5
 addr2reg stack r5
 ; 4
 ; +
 add r5 4 r5
 ; * (read dereference)
 read 0 r5 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; ,
 ; 3965
 addr2reg Label_3965 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; RPN'ized expression: "( ( 1 , IdentTable stack 0 + *u 1 + *u + AddGotoLabel ) GenNumLabel ) "
 ; Expanded expression: "  1  IdentTable stack 4 + *(4) +  AddGotoLabel ()8  GenNumLabel ()4 "
 ; (
 sub r13 12 r13
 ; (
 sub r13 8 r13
 ; 1
 load32 1 r2
 ; ,
 ; IdentTable
 sub r13 4 r13
 write 0 r13 r2
 addr2reg IdentTable r2
 ; stack
 sub r13 4 r13
 write 0 r13 r2
 addr2reg stack r2
 ; 4
 ; +
 add r2 4 r2
 ; * (read dereference)
 read 0 r2 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; ,
 ; AddGotoLabel
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 read 4 r13 r5
 savpc r15
 add r15 3 r15
 jump AddGotoLabel
 add r13 16 r13
 ; ,
 ; GenNumLabel
 sub r13 4 r13
 write 0 r13 r2
 ; ) fxn call
 read 0 r13 r4
 savpc r15
 add r15 3 r15
 jump GenNumLabel
 add r13 16 r13
 ; RPN'ized expression: "statementNeeded 1 = "
 ; Expanded expression: "(@-28) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -28 r14 r2
 ; }
 jump Label_3964
Label_3963:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "tok 59 != "
 ; Expanded expression: "(@8) *(4) 59 != "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; 59
 ; !=
 load32 59 r1
 xor r2 r1 r2
 bne r2 r0 2
 jump Label_3966
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@8) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3966:
 ; if
 ; RPN'ized expression: "gotUnary "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3968
 ; RPN'ized expression: "( GenExpr ) "
 ; Expanded expression: " GenExpr ()0 "
 ; (
 ; GenExpr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenExpr
 add r13 16 r13
Label_3968:
 ; }
Label_3964:
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@8)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write 8 r14 r2
 ; }
Label_3957:
Label_3943:
Label_3934:
Label_3916:
Label_3897:
Label_3889:
Label_3882:
Label_3833:
Label_3804:
Label_3773:
Label_3744:
Label_3701:
Label_3695:
Label_3693:
 ; }
 ; while
 ; RPN'ized expression: "statementNeeded "
 ; Expanded expression: "(@-28) *(4) "
Label_3690:
 ; local ofs
 ; * (read dereference)
 read -28 r14 r2
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3689
Label_3691:
 ; return
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@8) *(4) "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
Label_3688:
 read 4 r14 r15
 read 0 r14 r14
 add r13 60 r13
 jumpr 0 r15

 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 ; glb ParseBlock : (
 ; prm     BrkCntTarget : * int
 ; prm     casesIdx : int
 ;     ) int
.code
; .globl ParseBlock
ParseBlock:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         12 r13
 write          4 r13 r14
 add r13          4 r14
   write 4 r14 r15
 ; loc     BrkCntTarget : (@8) : * int
 ; loc     casesIdx : (@12) : int
 ; loc     tok : (@-4) : int
 ; RPN'ized expression: "tok ( GetToken ) = "
 ; Expanded expression: "(@-4)  GetToken ()0 =(4) "
 ; (
 ; GetToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GetToken
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; if
 ; RPN'ized expression: "BrkCntTarget BrkCntTargetFxn == "
 ; Expanded expression: "(@8) *(4) BrkCntTargetFxn == "
 ; local ofs
 ; * (read dereference)
 read 8 r14 r2
 ; BrkCntTargetFxn
 addr2reg BrkCntTargetFxn r8
 ; ==
 beq r2 r8 2
 jump Label_3971
 ; RPN'ized expression: "BrkCntTarget 0 = "
 ; Expanded expression: "(@8) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write 8 r14 r0
 jump Label_3972
Label_3971:
 ; else
 ; RPN'ized expression: "( 35 PushSyntax ) "
 ; Expanded expression: " 35  PushSyntax ()4 "
 ; (
 ; 35
 load32 35 r4
 ; ,
 ; PushSyntax
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump PushSyntax
 add r13 16 r13
Label_3972:
 ; for
Label_3973:
 ; {
 ; if
 ; RPN'ized expression: "tok 0 == "
 ; Expanded expression: "(@-4) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3977
 ; return
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 jump Label_3970
Label_3977:
 ; if
 ; RPN'ized expression: "tok 125 == ParseLevel 0 > && "
 ; Expanded expression: "(@-4) *(4) 125 == [sh&&->3981] ParseLevel *(4) 0 > &&[3981] "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 125
 ; ==
 load32 125 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3981
 ; ParseLevel
 ; * (read dereference)
 addr2reg ParseLevel r1
 read 0 r1 r2
 ; 0
 ; >
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_3981:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3979
 ; return
 ; RPN'ized expression: "tok "
 ; Expanded expression: "(@-4) *(4) "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 jump Label_3970
Label_3979:
 ; if
 ; RPN'ized expression: "( 0 , tok TokenStartsDeclaration ) "
 ; Expanded expression: " 0  (@-4) *(4)  TokenStartsDeclaration ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; TokenStartsDeclaration
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump TokenStartsDeclaration
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3982
 ; {
 ; RPN'ized expression: "tok ( 1 , 0 , 0 , tok ParseDecl ) = "
 ; Expanded expression: "(@-4)  1  0  0  (@-4) *(4)  ParseDecl ()16 =(4) "
 ; (
 ; 1
 load32 1 r7
 ; ,
 ; 0
 load32 0 r6
 ; ,
 ; 0
 load32 0 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; ParseDecl
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseDecl
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; }
 jump Label_3983
Label_3982:
 ; else
 ; if
 ; RPN'ized expression: "ParseLevel 0 > tok 96 == || "
 ; Expanded expression: "ParseLevel *(4) 0 > [sh||->3986] (@-4) *(4) 96 == ||[3986] "
 ; ParseLevel
 ; * (read dereference)
 addr2reg ParseLevel r1
 read 0 r1 r2
 ; 0
 ; >
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_3986
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 96
 ; ==
 load32 96 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_3986:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3984
 ; {
 ; RPN'ized expression: "tok ( casesIdx , BrkCntTarget , tok ParseStatement ) = "
 ; Expanded expression: "(@-4)  (@12) *(4)  (@8) *(4)  (@-4) *(4)  ParseStatement ()12 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; ParseStatement
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseStatement
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
 ; }
 jump Label_3985
Label_3984:
 ; else
 ; RPN'ized expression: "( tok errorUnexpectedToken ) "
 ; Expanded expression: " (@-4) *(4)  errorUnexpectedToken ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -4 r14 r4
 ; ,
 ; errorUnexpectedToken
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorUnexpectedToken
 add r13 16 r13
Label_3985:
Label_3983:
 ; }
 jump Label_3973
Label_3976:
Label_3970:
 read 4 r14 r15
 read 0 r14 r14
 add r13 12 r13
 jumpr 0 r15

 ; glb main : (
 ; prm     argc : int
 ; prm     argv : * * char
 ;     ) int
.code
; .globl main
main:
 write 0 r13 r4
 write 4 r13 r5
 sub r13         92 r13
 write         84 r13 r14
 add r13         84 r14
   write 4 r14 r15
 ; loc     argc : (@8) : int
 ; loc     argv : (@12) : * * char
 ; loc     i : (@-4) : int
 ; loc     SyntaxStackInit : Label_3988 : [0u] unsigned char

.data
Label_3988:
 ; =
 ; RPN'ized expression: "17 "
 ; Expanded expression: "17 "
 ; Expression value: 17
 .dw 17
 ; RPN'ized expression: "19 "
 ; Expanded expression: "19 "
 ; Expression value: 19
 .dw 19
 ; RPN'ized expression: "101 "
 ; Expanded expression: "101 "
 ; Expression value: 101
 .dw 101
 ; RPN'ized expression: "17 "
 ; Expanded expression: "17 "
 ; Expression value: 17
 .dw 17
 ; RPN'ized expression: "97 "
 ; Expanded expression: "97 "
 ; Expression value: 97
 .dw 97
 ; RPN'ized expression: "16 "
 ; Expanded expression: "16 "
 ; Expression value: 16
 .dw 16
 ; RPN'ized expression: "91 "
 ; Expanded expression: "91 "
 ; Expression value: 91
 .dw 91
 ; RPN'ized expression: "2 "
 ; Expanded expression: "2 "
 ; Expression value: 2
 .dw 2
 ; RPN'ized expression: "93 "
 ; Expanded expression: "93 "
 ; Expression value: 93
 .dw 93
 ; RPN'ized expression: "18 "
 ; Expanded expression: "18 "
 ; Expression value: 18
 .dw 18

.code
 ; RPN'ized expression: "( SyntaxStackInit sizeof , SyntaxStackInit , SyntaxStack0 memcpy ) "
 ; Expanded expression: " 10u  L3988  SyntaxStack0  memcpy ()12 "
 ; (
 ; 10
 load32 10 r6
 ; ,
 ; 3988
 addr2reg Label_3988 r5
 ; ,
 ; SyntaxStack0
 addr2reg SyntaxStack0 r4
 ; ,
 ; memcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memcpy
 add r13 16 r13
 ; RPN'ized expression: "SyntaxStackCnt ( SyntaxStackInit 0 + *u sizeof , SyntaxStackInit sizeof division ) = "
 ; Expanded expression: "SyntaxStackCnt  1u  10u  division ()8 =(4) "
 ; (
 ; 1
 load32 1 r5
 ; ,
 ; 10
 load32 10 r4
 ; ,
 ; division
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump division
 add r13 16 r13
 ; SyntaxStackCnt
 ; = (write dereference)
 addr2reg SyntaxStackCnt r1
 write 0 r1 r2

.rdata
Label_3989:
; .space 1
.dw 0

.code
 ; RPN'ized expression: "SyntaxStack1 5 + *u DummyIdent ( L3989 AddIdent ) = = "
 ; Expanded expression: "SyntaxStack1 20 + DummyIdent  L3989  AddIdent ()4 =(4) =(4) "
 ; SyntaxStack1
 addr2reg SyntaxStack1 r2
 ; 20
 ; +
 add r2 20 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; 3989
 addr2reg Label_3989 r4
 ; ,
 ; AddIdent
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump AddIdent
 add r13 16 r13
 ; DummyIdent
 ; = (write dereference)
 addr2reg DummyIdent r1
 write 0 r1 r2
 ; = (write dereference)
 read 0 r13 r11
 add r13 4 r13
 write 0 r11 r2
 ; RPN'ized expression: "( GenInit ) "
 ; Expanded expression: " GenInit ()0 "
 ; (
 ; GenInit
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenInit
 add r13 16 r13
 ; for
 ; RPN'ized expression: "i 1 = "
 ; Expanded expression: "(@-4) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -4 r14 r2
Label_3990:
 ; RPN'ized expression: "i argc < "
 ; Expanded expression: "(@-4) *(4) (@8) *(4) < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_3993
 ; RPN'ized expression: "i ++p "
 ; Expanded expression: "(@-4) ++p(4) "
 ; {
 ; if
 ; RPN'ized expression: "( i &u , argv , argc GenInitParams ) "
 ; Expanded expression: " (@-4)  (@12) *(4)  (@8) *(4)  GenInitParams ()12 "
 ; (
 ; local ofs
 sub r14 4 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 8 r14 r4
 ; ,
 ; GenInitParams
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenInitParams
 add r13 16 r13
 ; JumpIfZero
 bne r2 r0 2
 jump Label_3994
 ; {
 ; continue
 jump Label_3991
 ; }
 jump Label_3995
Label_3994:
 ; else
 ; if

.rdata
Label_3998:
.dw 45 45 111 115 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L3998 , argv i + *u strcmp ) 0 == "
 ; Expanded expression: " L3998  (@12) *(4) (@-4) *(4) 4 * + *(4)  strcmp ()8 0 == "
 ; (
 ; 3998
 addr2reg Label_3998 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3996
 ; {
 ; RPN'ized expression: "compileOS 1 = "
 ; Expanded expression: "compileOS 1 =(4) "
 ; 1
 load32 1 r2
 ; compileOS
 ; = (write dereference)
 addr2reg compileOS r1
 write 0 r1 r2
 ; continue
 jump Label_3991
 ; }
 jump Label_3997
Label_3996:
 ; else
 ; if

.rdata
Label_4001:
.dw 45 45 98 100 111 115 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4001 , argv i + *u strcmp ) 0 == "
 ; Expanded expression: " L4001  (@12) *(4) (@-4) *(4) 4 * + *(4)  strcmp ()8 0 == "
 ; (
 ; 4001
 addr2reg Label_4001 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_3999
 ; {
 ; RPN'ized expression: "compileUserBDOS 1 = "
 ; Expanded expression: "compileUserBDOS 1 =(4) "
 ; 1
 load32 1 r2
 ; compileUserBDOS
 ; = (write dereference)
 addr2reg compileUserBDOS r1
 write 0 r1 r2
 ; continue
 jump Label_3991
 ; }
 jump Label_4000
Label_3999:
 ; else
 ; if

.rdata
Label_4004:
.dw 45 115 105 103 110 101 100 45 99 104 97 114 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4004 , argv i + *u strcmp ) 0 == "
 ; Expanded expression: " L4004  (@12) *(4) (@-4) *(4) 4 * + *(4)  strcmp ()8 0 == "
 ; (
 ; 4004
 addr2reg Label_4004 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_4002
 ; {
 ; RPN'ized expression: "CharIsSigned 1 = "
 ; Expanded expression: "CharIsSigned 1 =(4) "
 ; 1
 load32 1 r2
 ; CharIsSigned
 ; = (write dereference)
 addr2reg CharIsSigned r1
 write 0 r1 r2
 ; continue
 jump Label_3991
 ; }
 jump Label_4003
Label_4002:
 ; else
 ; if

.rdata
Label_4007:
.dw 45 117 110 115 105 103 110 101 100 45 99 104 97 114 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4007 , argv i + *u strcmp ) 0 == "
 ; Expanded expression: " L4007  (@12) *(4) (@-4) *(4) 4 * + *(4)  strcmp ()8 0 == "
 ; (
 ; 4007
 addr2reg Label_4007 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_4005
 ; {
 ; RPN'ized expression: "CharIsSigned 0 = "
 ; Expanded expression: "CharIsSigned 0 =(4) "
 ; 0
 ; CharIsSigned
 ; =
 addr2reg CharIsSigned r1
 write 0 r1 r0
 ; continue
 jump Label_3991
 ; }
 jump Label_4006
Label_4005:
 ; else
 ; if

.rdata
Label_4010:
.dw 45 108 101 97 100 105 110 103 45 117 110 100 101 114 115 99 111 114 101 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4010 , argv i + *u strcmp ) 0 == "
 ; Expanded expression: " L4010  (@12) *(4) (@-4) *(4) 4 * + *(4)  strcmp ()8 0 == "
 ; (
 ; 4010
 addr2reg Label_4010 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_4008
 ; {
 ; RPN'ized expression: "UseLeadingUnderscores 1 = "
 ; Expanded expression: "UseLeadingUnderscores 1 =(4) "
 ; 1
 load32 1 r2
 ; UseLeadingUnderscores
 ; = (write dereference)
 addr2reg UseLeadingUnderscores r1
 write 0 r1 r2
 ; continue
 jump Label_3991
 ; }
 jump Label_4009
Label_4008:
 ; else
 ; if

.rdata
Label_4013:
.dw 45 110 111 45 108 101 97 100 105 110 103 45 117 110 100 101 114 115 99 111 114 101 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4013 , argv i + *u strcmp ) 0 == "
 ; Expanded expression: " L4013  (@12) *(4) (@-4) *(4) 4 * + *(4)  strcmp ()8 0 == "
 ; (
 ; 4013
 addr2reg Label_4013 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_4011
 ; {
 ; RPN'ized expression: "UseLeadingUnderscores 0 = "
 ; Expanded expression: "UseLeadingUnderscores 0 =(4) "
 ; 0
 ; UseLeadingUnderscores
 ; =
 addr2reg UseLeadingUnderscores r1
 write 0 r1 r0
 ; continue
 jump Label_3991
 ; }
 jump Label_4012
Label_4011:
 ; else
 ; if

.rdata
Label_4016:
.dw 45 108 97 98 101 108 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4016 , argv i + *u strcmp ) 0 == "
 ; Expanded expression: " L4016  (@12) *(4) (@-4) *(4) 4 * + *(4)  strcmp ()8 0 == "
 ; (
 ; 4016
 addr2reg Label_4016 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_4014
 ; {
 ; if
 ; RPN'ized expression: "i 1 + argc < "
 ; Expanded expression: "(@-4) *(4) 1 + (@8) *(4) < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_4017
 ; {
 ; RPN'ized expression: "LabelCnt ( argv i ++ + *u atoi ) = "
 ; Expanded expression: "LabelCnt  (@12) *(4) (@-4) ++(4) 4 * + *(4)  atoi ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; ++
 read -4 r14 r4
 add r4 1 r4
 write -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; atoi
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump atoi
 add r13 16 r13
 ; LabelCnt
 ; = (write dereference)
 addr2reg LabelCnt r1
 write 0 r1 r2
 ; continue
 jump Label_3991
 ; }
Label_4017:
 ; }
 jump Label_4015
Label_4014:
 ; else
 ; if

.rdata
Label_4021:
.dw 45 110 111 45 101 120 116 101 114 110 115 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4021 , argv i + *u strcmp ) 0 == "
 ; Expanded expression: " L4021  (@12) *(4) (@-4) *(4) 4 * + *(4)  strcmp ()8 0 == "
 ; (
 ; 4021
 addr2reg Label_4021 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_4019
 ; {
 ; RPN'ized expression: "GenExterns 0 = "
 ; Expanded expression: "GenExterns 0 =(4) "
 ; 0
 ; GenExterns
 ; =
 addr2reg GenExterns r1
 write 0 r1 r0
 ; continue
 jump Label_3991
 ; }
 jump Label_4020
Label_4019:
 ; else
 ; if

.rdata
Label_4024:
.dw 45 118 101 114 98 111 115 101 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4024 , argv i + *u strcmp ) 0 == "
 ; Expanded expression: " L4024  (@12) *(4) (@-4) *(4) 4 * + *(4)  strcmp ()8 0 == "
 ; (
 ; 4024
 addr2reg Label_4024 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_4022
 ; {
 ; RPN'ized expression: "warnings verbose 1 = = "
 ; Expanded expression: "warnings verbose 1 =(4) =(4) "
 ; 1
 load32 1 r2
 ; verbose
 ; = (write dereference)
 addr2reg verbose r1
 write 0 r1 r2
 ; warnings
 ; = (write dereference)
 addr2reg warnings r1
 write 0 r1 r2
 ; continue
 jump Label_3991
 ; }
 jump Label_4023
Label_4022:
 ; else
 ; if

.rdata
Label_4027:
.dw 45 87 97 108 108 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4027 , argv i + *u strcmp ) 0 == "
 ; Expanded expression: " L4027  (@12) *(4) (@-4) *(4) 4 * + *(4)  strcmp ()8 0 == "
 ; (
 ; 4027
 addr2reg Label_4027 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_4025
 ; {
 ; RPN'ized expression: "warnings 1 = "
 ; Expanded expression: "warnings 1 =(4) "
 ; 1
 load32 1 r2
 ; warnings
 ; = (write dereference)
 addr2reg warnings r1
 write 0 r1 r2
 ; continue
 jump Label_3991
 ; }
 jump Label_4026
Label_4025:
 ; else
 ; if

.rdata
Label_4030:
.dw 45 73 
; .space 1
.dw 0

.code

.rdata
Label_4031:
.dw 45 83 73 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4030 , argv i + *u strcmp ) 0 == ( L4031 , argv i + *u strcmp ) 0 == || "
 ; Expanded expression: " L4030  (@12) *(4) (@-4) *(4) 4 * + *(4)  strcmp ()8 0 == [sh||->4032]  L4031  (@12) *(4) (@-4) *(4) 4 * + *(4)  strcmp ()8 0 == ||[4032] "
 ; (
 ; 4030
 addr2reg Label_4030 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_4032
 ; (
 ; 4031
 addr2reg Label_4031 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit || target
Label_4032:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_4028
 ; {
 ; if
 ; RPN'ized expression: "i 1 + argc < "
 ; Expanded expression: "(@-4) *(4) 1 + (@8) *(4) < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_4033
 ; {
 ; loc                 len : (@-8) : int
 ; RPN'ized expression: "len ( argv i ++ + *u strlen ) 1 + = "
 ; Expanded expression: "(@-8)  (@12) *(4) (@-4) ++(4) 4 * + *(4)  strlen ()4 1 + =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; ++
 read -4 r14 r4
 add r4 1 r4
 write -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strlen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strlen
 add r13 16 r13
 ; 1
 ; +
 add r2 1 r2
 ; local ofs
 ; = (write dereference)
 write -8 r14 r2
 ; if
 ; RPN'ized expression: "argv i 1 - + *u 1 + *u 73 == "
 ; Expanded expression: "(@12) *(4) (@-4) *(4) 1 - 4 * + *(4) 1 + *(-1) 73 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 1
 ; -
 sub r8 1 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 1
 ; +
 add r2 1 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 73
 ; ==
 load32 73 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_4035
 ; {
 ; if
 ; RPN'ized expression: "256 SearchPathsLen - len < "
 ; Expanded expression: "256 SearchPathsLen *(4) - (@-8) *(4) < "
 ; 256
 load32 256 r2
 ; SearchPathsLen
 ; * (read dereference)
 addr2reg SearchPathsLen r1
 read 0 r1 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_4037
 ; RPN'ized expression: "( errorFileName ) "
 ; Expanded expression: " errorFileName ()0 "
 ; (
 ; errorFileName
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorFileName
 add r13 16 r13
Label_4037:
 ; RPN'ized expression: "( argv i + *u , SearchPaths SearchPathsLen + strcpy ) "
 ; Expanded expression: " (@12) *(4) (@-4) *(4) 4 * + *(4)  SearchPaths SearchPathsLen *(4) +  strcpy ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -4 r14 r5
 ; 2
 ; <<
 shiftl r5 2 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; SearchPaths
 addr2reg SearchPaths r4
 ; SearchPathsLen
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg SearchPathsLen r1
 read 0 r1 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; strcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcpy
 add r13 16 r13
 ; RPN'ized expression: "SearchPathsLen len += "
 ; Expanded expression: "SearchPathsLen (@-8) *(4) +=(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; SearchPathsLen
 ; +=
 addr2reg SearchPathsLen r1
 read 0 r1 r12
 add r12 r2 r2
 addr2reg SearchPathsLen r1
 write 0 r1 r2
 ; }
 jump Label_4036
Label_4035:
 ; else
 ; {
 ; if
 ; RPN'ized expression: "256 SysSearchPathsLen - len < "
 ; Expanded expression: "256 SysSearchPathsLen *(4) - (@-8) *(4) < "
 ; 256
 load32 256 r2
 ; SysSearchPathsLen
 ; * (read dereference)
 addr2reg SysSearchPathsLen r1
 read 0 r1 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; * (read dereference)
 read -8 r14 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_4039
 ; RPN'ized expression: "( errorFileName ) "
 ; Expanded expression: " errorFileName ()0 "
 ; (
 ; errorFileName
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorFileName
 add r13 16 r13
Label_4039:
 ; RPN'ized expression: "( argv i + *u , SysSearchPaths SysSearchPathsLen + strcpy ) "
 ; Expanded expression: " (@12) *(4) (@-4) *(4) 4 * + *(4)  SysSearchPaths SysSearchPathsLen *(4) +  strcpy ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -4 r14 r5
 ; 2
 ; <<
 shiftl r5 2 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; SysSearchPaths
 addr2reg SysSearchPaths r4
 ; SysSearchPathsLen
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 addr2reg SysSearchPathsLen r1
 read 0 r1 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; ,
 ; strcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcpy
 add r13 16 r13
 ; RPN'ized expression: "SysSearchPathsLen len += "
 ; Expanded expression: "SysSearchPathsLen (@-8) *(4) +=(4) "
 ; local ofs
 ; * (read dereference)
 read -8 r14 r2
 ; SysSearchPathsLen
 ; +=
 addr2reg SysSearchPathsLen r1
 read 0 r1 r12
 add r12 r2 r2
 addr2reg SysSearchPathsLen r1
 write 0 r1 r2
 ; }
Label_4036:
 ; continue
 jump Label_3991
 ; }
Label_4033:
 ; }
 jump Label_4029
Label_4028:
 ; else
 ; if

.rdata
Label_4043:
.dw 45 110 111 112 112 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4043 , argv i + *u strcmp ) 0 == "
 ; Expanded expression: " L4043  (@12) *(4) (@-4) *(4) 4 * + *(4)  strcmp ()8 0 == "
 ; (
 ; 4043
 addr2reg Label_4043 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_4041
 ; {
 ; continue
 jump Label_3991
 ; }
 jump Label_4042
Label_4041:
 ; else
 ; if

.rdata
Label_4046:
.dw 45 68 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4046 , argv i + *u strcmp ) 0 == "
 ; Expanded expression: " L4046  (@12) *(4) (@-4) *(4) 4 * + *(4)  strcmp ()8 0 == "
 ; (
 ; 4046
 addr2reg Label_4046 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strcmp
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcmp
 add r13 16 r13
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_4044
 ; {
 ; if
 ; RPN'ized expression: "i 1 + argc < "
 ; Expanded expression: "(@-4) *(4) 1 + (@8) *(4) < "
 ; local ofs
 ; * (read dereference)
 read -4 r14 r2
 ; 1
 ; +
 add r2 1 r2
 ; local ofs
 ; * (read dereference)
 read 8 r14 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_4047
 ; {
 ; RPN'ized expression: "63 1 + "
 ; Expanded expression: "64 "
 ; Expression value: 64
 ; loc                 id : (@-68) : [64u] char
 ; loc                 e : (@-72) : * char
 ; RPN'ized expression: "e ( 61 , argv i ++ + *u strchr ) = "
 ; Expanded expression: "(@-72)  61  (@12) *(4) (@-4) ++(4) 4 * + *(4)  strchr ()8 =(4) "
 ; (
 ; 61
 load32 61 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; ++
 read -4 r14 r4
 add r4 1 r4
 write -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strchr
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strchr
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -72 r14 r2
 ; loc                 len : (@-76) : int
 ; if
 ; RPN'ized expression: "e "
 ; Expanded expression: "(@-72) *(4) "
 ; local ofs
 ; * (read dereference)
 read -72 r14 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_4049
 ; {
 ; RPN'ized expression: "len e argv i + *u - = "
 ; Expanded expression: "(@-76) (@-72) *(4) (@12) *(4) (@-4) *(4) 4 * + *(4) - =(4) "
 ; local ofs
 ; * (read dereference)
 read -72 r14 r2
 ; local ofs
 ; * (read dereference)
 read 12 r14 r8
 ; local ofs
 ; * (read dereference)
 read -4 r14 r9
 ; 2
 ; <<
 shiftl r9 2 r9
 ; +
 add r8 r9 r8
 ; * (read dereference)
 read 0 r8 r8
 ; -
 sub r2 r8 r2
 ; local ofs
 ; = (write dereference)
 write -76 r14 r2
 ; RPN'ized expression: "e ++p "
 ; Expanded expression: "(@-72) ++p(4) "
 ; local ofs
 ; ++p
 read -72 r14 r2
 add r2 1 r2
 write -72 r14 r2
 sub r2 1 r2
 ; }
 jump Label_4050
Label_4049:
 ; else
 ; {
 ; RPN'ized expression: "len ( argv i + *u strlen ) = "
 ; Expanded expression: "(@-76)  (@12) *(4) (@-4) *(4) 4 * + *(4)  strlen ()4 =(4) "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strlen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strlen
 add r13 16 r13
 ; local ofs
 ; = (write dereference)
 write -76 r14 r2

.rdata
Label_4051:
.dw 49 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "e L4051 = "
 ; Expanded expression: "(@-72) L4051 =(4) "
 ; 4051
 addr2reg Label_4051 r2
 ; local ofs
 ; = (write dereference)
 write -72 r14 r2
 ; }
Label_4050:
 ; if
 ; RPN'ized expression: "len 0 > len 63 <= && "
 ; Expanded expression: "(@-76) *(4) 0 > [sh&&->4054] (@-76) *(4) 63 <= &&[4054] "
 ; local ofs
 ; * (read dereference)
 read -76 r14 r2
 ; 0
 ; >
 bges r0 r2 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_4054
 ; local ofs
 ; * (read dereference)
 read -76 r14 r2
 ; 63
 ; <=
 load32 64 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_4054:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_4052
 ; {
 ; loc                     j : (@-80) : int
 ; loc                     bad : (@-84) : int
 ; RPN'ized expression: "bad 1 = "
 ; Expanded expression: "(@-84) 1 =(4) "
 ; 1
 load32 1 r2
 ; local ofs
 ; = (write dereference)
 write -84 r14 r2
 ; RPN'ized expression: "( len , argv i + *u , id memcpy ) "
 ; Expanded expression: " (@-76) *(4)  (@12) *(4) (@-4) *(4) 4 * + *(4)  (@-68)  memcpy ()12 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -76 r14 r6
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -4 r14 r5
 ; 2
 ; <<
 shiftl r5 2 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; local ofs
 sub r14 68 r4
 ; ,
 ; memcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump memcpy
 add r13 16 r13
 ; RPN'ized expression: "id len + *u 0 = "
 ; Expanded expression: "(@-68) (@-76) *(4) + 0 =(-1) "
 ; local ofs
 sub r14 68 r2
 ; local ofs
 ; * (read dereference)
 read -76 r14 r8
 ; +
 add r2 r8 r2
 ; 0
 ; =
 write 0 r2 r0
 ; for
 ; RPN'ized expression: "j 0 = "
 ; Expanded expression: "(@-80) 0 =(4) "
 ; 0
 ; local ofs
 ; =
 write -80 r14 r0
Label_4055:
 ; RPN'ized expression: "j len < "
 ; Expanded expression: "(@-80) *(4) (@-76) *(4) < "
 ; local ofs
 ; * (read dereference)
 read -80 r14 r2
 ; local ofs
 ; * (read dereference)
 read -76 r14 r8
 ; <
 bges r2 r8 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 bne r2 r0 2
 jump Label_4058
 ; RPN'ized expression: "j ++p "
 ; Expanded expression: "(@-80) ++p(4) "
 ; if
 ; RPN'ized expression: "bad id j + *u 95 == j 0 == ( id j + *u 255u & isalpha ) * j ( id j + *u 255u & isalnum ) * + || 0 == = 0 != "
 ; Expanded expression: "(@-84) (@-68) (@-80) *(4) + *(-1) 95 == [sh||->4061] (@-80) *(4) 0 ==  (@-68) (@-80) *(4) + *(-1) 255u &  isalpha ()4 * (@-80) *(4)  (@-68) (@-80) *(4) + *(-1) 255u &  isalnum ()4 * + _Bool ||[4061] 0 == =(4) 0 != "
 ; local ofs
 sub r14 68 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -80 r14 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 95
 ; ==
 load32 95 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit ||
 ; JumpIfNotZero
 beq r2 r0 2
 jump Label_4061
 ; local ofs
 ; * (read dereference)
 read -80 r14 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 sub r14 68 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -80 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; 255
 ; &
 and r4 255 r4
 ; ,
 ; isalpha
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isalpha
 add r13 16 r13
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r2 r2
 ; local ofs
 sub r13 4 r13
 write 0 r13 r2
 ; * (read dereference)
 read -80 r14 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; local ofs
 sub r14 68 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -80 r14 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; 255
 ; &
 and r4 255 r4
 ; ,
 ; isalnum
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump isalnum
 add r13 16 r13
 ; *
 read 0 r13 r11
 add r13 4 r13
 mult r11 r2 r2
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r2 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit || target
Label_4061:
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; local ofs
 ; = (write dereference)
 write -84 r14 r2
 ; 0
 ; !=
 bne r2 r0 2
 jump Label_4059
 ; break
 jump Label_4058
Label_4059:
Label_4056:
 ; local ofs
 ; ++p
 read -80 r14 r2
 add r2 1 r2
 write -80 r14 r2
 sub r2 1 r2
 jump Label_4055
Label_4058:
 ; if
 ; RPN'ized expression: "bad 0 == "
 ; Expanded expression: "(@-84) *(4) 0 == "
 ; local ofs
 ; * (read dereference)
 read -84 r14 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_4062
 ; {
 ; RPN'ized expression: "( e , id DefineMacro ) "
 ; Expanded expression: " (@-72) *(4)  (@-68)  DefineMacro ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read -72 r14 r5
 ; ,
 ; local ofs
 sub r14 68 r4
 ; ,
 ; DefineMacro
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DefineMacro
 add r13 16 r13
 ; continue
 jump Label_3991
 ; }
Label_4062:
 ; }
Label_4052:
 ; }
Label_4047:
 ; }
 jump Label_4045
Label_4044:
 ; else
 ; if
 ; RPN'ized expression: "argv i + *u 0 + *u 45 == "
 ; Expanded expression: "(@12) *(4) (@-4) *(4) 4 * + *(4) 0 + *(-1) 45 == "
 ; local ofs
 ; * (read dereference)
 read 12 r14 r2
 ; local ofs
 ; * (read dereference)
 read -4 r14 r8
 ; 2
 ; <<
 shiftl r8 2 r8
 ; +
 add r2 r8 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 0
 ; +
 add r2 0 r2
 ; * (read dereference)
 read 0 r2 r2
 ; 45
 ; ==
 load32 45 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_4064
 ; {
 ; }
 jump Label_4065
Label_4064:
 ; else
 ; if
 ; RPN'ized expression: "FileCnt 0 == "
 ; Expanded expression: "FileCnt *(4) 0 == "
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_4066
 ; {
 ; if
 ; RPN'ized expression: "( argv i + *u strlen ) 95 > "
 ; Expanded expression: " (@12) *(4) (@-4) *(4) 4 * + *(4)  strlen ()4 95 >u "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; strlen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strlen
 add r13 16 r13
 ; 95
 ; >u
 load32 96 r11
 bges r2 r11 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 beq r2 r0 2
 jump Label_4068
 ; RPN'ized expression: "( errorFileName ) "
 ; Expanded expression: " errorFileName ()0 "
 ; (
 ; errorFileName
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorFileName
 add r13 16 r13
Label_4068:
 ; RPN'ized expression: "( argv i + *u , FileNames 0 + *u strcpy ) "
 ; Expanded expression: " (@12) *(4) (@-4) *(4) 4 * + *(4)  FileNames 0 +  strcpy ()8 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r5
 ; local ofs
 sub r13 4 r13
 write 0 r13 r5
 ; * (read dereference)
 read -4 r14 r5
 ; 2
 ; <<
 shiftl r5 2 r5
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r5 r5
 ; * (read dereference)
 read 0 r5 r5
 ; ,
 ; FileNames
 addr2reg FileNames r4
 ; 0
 ; +
 add r4 0 r4
 ; ,
 ; strcpy
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump strcpy
 add r13 16 r13
 ; if

.rdata
Label_4072:
.dw 114 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "Files 0 + *u ( L4072 , FileNames 0 + *u fopen ) = 0 == "
 ; Expanded expression: "Files 0 +  L4072  FileNames 0 +  fopen ()8 =(4) 0 == "
 ; Files
 addr2reg Files r2
 ; 0
 ; +
 add r2 0 r2
 ; (
 sub r13 4 r13
 write 0 r13 r2
 ; 4072
 addr2reg Label_4072 r5
 ; ,
 ; FileNames
 addr2reg FileNames r4
 ; 0
 ; +
 add r4 0 r4
 ; ,
 ; fopen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump fopen
 add r13 16 r13
 ; = (write dereference)
 read 0 r13 r11
 add r13 4 r13
 write 0 r11 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_4070
 ; RPN'ized expression: "( FileNames 0 + *u errorFile ) "
 ; Expanded expression: " FileNames 0 +  errorFile ()4 "
 ; (
 ; FileNames
 addr2reg FileNames r4
 ; 0
 ; +
 add r4 0 r4
 ; ,
 ; errorFile
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorFile
 add r13 16 r13
Label_4070:
 ; RPN'ized expression: "LineNos 0 + *u LineNo = "
 ; Expanded expression: "LineNos 0 + LineNo *(4) =(4) "
 ; LineNos
 addr2reg LineNos r2
 ; 0
 ; +
 add r2 0 r2
 ; LineNo
 ; * (read dereference)
 addr2reg LineNo r1
 read 0 r1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "LinePoss 0 + *u LinePos = "
 ; Expanded expression: "LinePoss 0 + LinePos *(4) =(4) "
 ; LinePoss
 addr2reg LinePoss r2
 ; 0
 ; +
 add r2 0 r2
 ; LinePos
 ; * (read dereference)
 addr2reg LinePos r1
 read 0 r1 r8
 ; = (write dereference)
 write 0 r2 r8
 or r0 r8 r2
 ; RPN'ized expression: "FileCnt ++p "
 ; Expanded expression: "FileCnt ++p(4) "
 ; FileCnt
 ; ++p
 addr2reg FileCnt r1
 read 0 r1 r2
 add r2 1 r2
 addr2reg FileCnt r1
 write 0 r1 r2
 sub r2 1 r2
 ; continue
 jump Label_3991
 ; }
 jump Label_4067
Label_4066:
 ; else
 ; if
 ; RPN'ized expression: "FileCnt 1 == OutFile 0 == && "
 ; Expanded expression: "FileCnt *(4) 1 == [sh&&->4075] OutFile *(4) 0 == &&[4075] "
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r2
 ; 1
 ; ==
 load32 1 r1
 xor r2 r1 r2
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_4075
 ; OutFile
 ; * (read dereference)
 addr2reg OutFile r1
 read 0 r1 r2
 ; 0
 ; ==
 load32 1 r1
 bges r2 r1 3
 load32 1 r2
 jumpo 2
 load32 0 r2
 ; short-circuit && target
Label_4075:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_4073
 ; {
 ; if

.rdata
Label_4078:
.dw 119 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "OutFile ( L4078 , argv i + *u fopen ) = 0 == "
 ; Expanded expression: "OutFile  L4078  (@12) *(4) (@-4) *(4) 4 * + *(4)  fopen ()8 =(4) 0 == "
 ; (
 ; 4078
 addr2reg Label_4078 r5
 ; ,
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; fopen
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump fopen
 add r13 16 r13
 ; OutFile
 ; = (write dereference)
 addr2reg OutFile r1
 write 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_4076
 ; RPN'ized expression: "( argv i + *u errorFile ) "
 ; Expanded expression: " (@12) *(4) (@-4) *(4) 4 * + *(4)  errorFile ()4 "
 ; (
 ; local ofs
 ; * (read dereference)
 read 12 r14 r4
 ; local ofs
 sub r13 4 r13
 write 0 r13 r4
 ; * (read dereference)
 read -4 r14 r4
 ; 2
 ; <<
 shiftl r4 2 r4
 ; +
 read 0 r13 r11
 add r13 4 r13
 add r11 r4 r4
 ; * (read dereference)
 read 0 r4 r4
 ; ,
 ; errorFile
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump errorFile
 add r13 16 r13
Label_4076:
 ; continue
 jump Label_3991
 ; }
Label_4073:
Label_4067:
Label_4065:
Label_4045:
Label_4042:
Label_4029:
Label_4026:
Label_4023:
Label_4020:
Label_4015:
Label_4012:
Label_4009:
Label_4006:
Label_4003:
Label_4000:
Label_3997:
Label_3995:

.rdata
Label_4079:
.dw 73 110 118 97 108 105 100 32 111 114 32 117 110 115 117 112 112 111 114 116 101 100 32 99 111 109 109 97 110 100 32 108 105 110 101 32 111 112 116 105 111 110 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4079 error ) "
 ; Expanded expression: " L4079  error ()4 "
 ; (
 ; 4079
 addr2reg Label_4079 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
 ; }
Label_3991:
 ; local ofs
 ; ++p
 read -4 r14 r2
 add r2 1 r2
 write -4 r14 r2
 sub r2 1 r2
 jump Label_3990
Label_3993:
 ; if
 ; RPN'ized expression: "FileCnt 0 == "
 ; Expanded expression: "FileCnt *(4) 0 == "
 ; FileCnt
 ; * (read dereference)
 addr2reg FileCnt r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_4080

.rdata
Label_4082:
.dw 73 110 112 117 116 32 102 105 108 101 32 110 111 116 32 115 112 101 99 105 102 105 101 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4082 error ) "
 ; Expanded expression: " L4082  error ()4 "
 ; (
 ; 4082
 addr2reg Label_4082 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_4080:
 ; if
 ; RPN'ized expression: "OutFile 0 == "
 ; Expanded expression: "OutFile *(4) 0 == "
 ; OutFile
 ; * (read dereference)
 addr2reg OutFile r1
 read 0 r1 r2
 ; 0
 ; ==
 beq r2 r0 2
 jump Label_4083

.rdata
Label_4085:
.dw 79 117 116 112 117 116 32 102 105 108 101 32 110 111 116 32 115 112 101 99 105 102 105 101 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4085 error ) "
 ; Expanded expression: " L4085  error ()4 "
 ; (
 ; 4085
 addr2reg Label_4085 r4
 ; ,
 ; error
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump error
 add r13 16 r13
Label_4083:
 ; RPN'ized expression: "( GenInitFinalize ) "
 ; Expanded expression: " GenInitFinalize ()0 "
 ; (
 ; GenInitFinalize
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenInitFinalize
 add r13 16 r13

.rdata
Label_4086:
.dw 95 95 83 77 65 76 76 69 82 95 67 95 95 
; .space 1
.dw 0

.code

.rdata
Label_4087:
.dw 48 120 48 49 48 48 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4087 , L4086 DefineMacro ) "
 ; Expanded expression: " L4087  L4086  DefineMacro ()8 "
 ; (
 ; 4087
 addr2reg Label_4087 r5
 ; ,
 ; 4086
 addr2reg Label_4086 r4
 ; ,
 ; DefineMacro
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DefineMacro
 add r13 16 r13
 ; if
 ; RPN'ized expression: "SizeOfWord 2 == "
 ; Expanded expression: "SizeOfWord *(4) 2 == "
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; 2
 ; ==
 load32 2 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_4088

.rdata
Label_4090:
.dw 95 95 83 77 65 76 76 69 82 95 67 95 49 54 95 95 
; .space 1
.dw 0

.code

.rdata
Label_4091:
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4091 , L4090 DefineMacro ) "
 ; Expanded expression: " L4091  L4090  DefineMacro ()8 "
 ; (
 ; 4091
 addr2reg Label_4091 r5
 ; ,
 ; 4090
 addr2reg Label_4090 r4
 ; ,
 ; DefineMacro
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DefineMacro
 add r13 16 r13
 jump Label_4089
Label_4088:
 ; else
 ; if
 ; RPN'ized expression: "SizeOfWord 4 == "
 ; Expanded expression: "SizeOfWord *(4) 4 == "
 ; SizeOfWord
 ; * (read dereference)
 addr2reg SizeOfWord r1
 read 0 r1 r2
 ; 4
 ; ==
 load32 4 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_4092

.rdata
Label_4094:
.dw 95 95 83 77 65 76 76 69 82 95 67 95 51 50 95 95 
; .space 1
.dw 0

.code

.rdata
Label_4095:
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4095 , L4094 DefineMacro ) "
 ; Expanded expression: " L4095  L4094  DefineMacro ()8 "
 ; (
 ; 4095
 addr2reg Label_4095 r5
 ; ,
 ; 4094
 addr2reg Label_4094 r4
 ; ,
 ; DefineMacro
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DefineMacro
 add r13 16 r13
Label_4092:
Label_4089:
 ; if
 ; RPN'ized expression: "OutputFormat 3 == "
 ; Expanded expression: "OutputFormat *(4) 3 == "
 ; OutputFormat
 ; * (read dereference)
 addr2reg OutputFormat r1
 read 0 r1 r2
 ; 3
 ; ==
 load32 3 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_4096

.rdata
Label_4098:
.dw 95 95 72 85 71 69 95 95 
; .space 1
.dw 0

.code

.rdata
Label_4099:
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4099 , L4098 DefineMacro ) "
 ; Expanded expression: " L4099  L4098  DefineMacro ()8 "
 ; (
 ; 4099
 addr2reg Label_4099 r5
 ; ,
 ; 4098
 addr2reg Label_4098 r4
 ; ,
 ; DefineMacro
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DefineMacro
 add r13 16 r13
Label_4096:
 ; if
 ; RPN'ized expression: "OutputFormat 4 == "
 ; Expanded expression: "OutputFormat *(4) 4 == "
 ; OutputFormat
 ; * (read dereference)
 addr2reg OutputFormat r1
 read 0 r1 r2
 ; 4
 ; ==
 load32 4 r1
 xor r2 r1 r2
 beq r2 r0 2
 jump Label_4100

.rdata
Label_4102:
.dw 95 95 85 78 82 69 65 76 95 95 
; .space 1
.dw 0

.code

.rdata
Label_4103:
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4103 , L4102 DefineMacro ) "
 ; Expanded expression: " L4103  L4102  DefineMacro ()8 "
 ; (
 ; 4103
 addr2reg Label_4103 r5
 ; ,
 ; 4102
 addr2reg Label_4102 r4
 ; ,
 ; DefineMacro
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DefineMacro
 add r13 16 r13
Label_4100:
 ; if
 ; RPN'ized expression: "CharIsSigned "
 ; Expanded expression: "CharIsSigned *(4) "
 ; CharIsSigned
 ; * (read dereference)
 addr2reg CharIsSigned r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_4104

.rdata
Label_4106:
.dw 95 95 83 77 65 76 76 69 82 95 67 95 83 67 72 65 82 95 95 
; .space 1
.dw 0

.code

.rdata
Label_4107:
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4107 , L4106 DefineMacro ) "
 ; Expanded expression: " L4107  L4106  DefineMacro ()8 "
 ; (
 ; 4107
 addr2reg Label_4107 r5
 ; ,
 ; 4106
 addr2reg Label_4106 r4
 ; ,
 ; DefineMacro
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DefineMacro
 add r13 16 r13
 jump Label_4105
Label_4104:
 ; else

.rdata
Label_4108:
.dw 95 95 83 77 65 76 76 69 82 95 67 95 85 67 72 65 82 95 95 
; .space 1
.dw 0

.code

.rdata
Label_4109:
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4109 , L4108 DefineMacro ) "
 ; Expanded expression: " L4109  L4108  DefineMacro ()8 "
 ; (
 ; 4109
 addr2reg Label_4109 r5
 ; ,
 ; 4108
 addr2reg Label_4108 r4
 ; ,
 ; DefineMacro
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DefineMacro
 add r13 16 r13
Label_4105:
 ; RPN'ized expression: "( ShiftChar ) "
 ; Expanded expression: " ShiftChar ()0 "
 ; (
 ; ShiftChar
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ShiftChar
 add r13 16 r13
 ; RPN'ized expression: "( FileHeader puts2 ) "
 ; Expanded expression: " FileHeader *(4)  puts2 ()4 "
 ; (
 ; FileHeader
 ; * (read dereference)
 addr2reg FileHeader r1
 read 0 r1 r4
 ; ,
 ; puts2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump puts2
 add r13 16 r13
 ; RPN'ized expression: "( 0 , 0 ParseBlock ) "
 ; Expanded expression: " 0  0  ParseBlock ()8 "
 ; (
 ; 0
 load32 0 r5
 ; ,
 ; 0
 load32 0 r4
 ; ,
 ; ParseBlock
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump ParseBlock
 add r13 16 r13
 ; RPN'ized expression: "( GenFin ) "
 ; Expanded expression: " GenFin ()0 "
 ; (
 ; GenFin
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenFin
 add r13 16 r13
 ; RPN'ized expression: "( DumpSynDecls ) "
 ; Expanded expression: " DumpSynDecls ()0 "
 ; (
 ; DumpSynDecls
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DumpSynDecls
 add r13 16 r13
 ; RPN'ized expression: "( DumpMacroTable ) "
 ; Expanded expression: " DumpMacroTable ()0 "
 ; (
 ; DumpMacroTable
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DumpMacroTable
 add r13 16 r13
 ; RPN'ized expression: "( DumpIdentTable ) "
 ; Expanded expression: " DumpIdentTable ()0 "
 ; (
 ; DumpIdentTable
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump DumpIdentTable
 add r13 16 r13
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_4110:
.dw 78 101 120 116 32 108 97 98 101 108 32 110 117 109 98 101 114 58 32 37 100 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( LabelCnt , L4110 printf2 ) "
 ; Expanded expression: " LabelCnt *(4)  L4110  printf2 ()8 "
 ; (
 ; LabelCnt
 ; * (read dereference)
 addr2reg LabelCnt r1
 read 0 r1 r5
 ; ,
 ; 4110
 addr2reg Label_4110 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "warnings warnCnt && "
 ; Expanded expression: "warnings *(4) _Bool [sh&&->4113] warnCnt *(4) _Bool &&[4113] "
 ; warnings
 ; * (read dereference)
 addr2reg warnings r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit &&
 ; JumpIfZero
 bne r2 r0 2
 jump Label_4113
 ; warnCnt
 ; * (read dereference)
 addr2reg warnCnt r1
 read 0 r1 r2
 ; _Bool
 bgts r2 r0 3
 load32 0 r2
 jumpo 2
 load32 1 r2
 ; short-circuit && target
Label_4113:
 ; JumpIfZero
 bne r2 r0 2
 jump Label_4111

.rdata
Label_4114:
.dw 37 100 32 119 97 114 110 105 110 103 115 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( warnCnt , L4114 printf ) "
 ; Expanded expression: " warnCnt *(4)  L4114  printf ()8 "
 ; (
 ; warnCnt
 ; * (read dereference)
 addr2reg warnCnt r1
 read 0 r1 r5
 ; ,
 ; 4114
 addr2reg Label_4114 r4
 ; ,
 ; printf
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf
 add r13 16 r13
Label_4111:
 ; RPN'ized expression: "( GenStartCommentLine ) "
 ; Expanded expression: " GenStartCommentLine ()0 "
 ; (
 ; GenStartCommentLine
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump GenStartCommentLine
 add r13 16 r13

.rdata
Label_4115:
.dw 67 111 109 112 105 108 97 116 105 111 110 32 115 117 99 99 101 101 100 101 100 46 10 
; .space 1
.dw 0

.code
 ; RPN'ized expression: "( L4115 printf2 ) "
 ; Expanded expression: " L4115  printf2 ()4 "
 ; (
 ; 4115
 addr2reg Label_4115 r4
 ; ,
 ; printf2
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump printf2
 add r13 16 r13
 ; if
 ; RPN'ized expression: "OutFile "
 ; Expanded expression: "OutFile *(4) "
 ; OutFile
 ; * (read dereference)
 addr2reg OutFile r1
 read 0 r1 r2
 ; JumpIfZero
 bne r2 r0 2
 jump Label_4116
 ; RPN'ized expression: "( OutFile fclose ) "
 ; Expanded expression: " OutFile *(4)  fclose ()4 "
 ; (
 ; OutFile
 ; * (read dereference)
 addr2reg OutFile r1
 read 0 r1 r4
 ; ,
 ; fclose
 ; ) fxn call
 sub r13 16 r13
 savpc r15
 add r15 3 r15
 jump fclose
 add r13 16 r13
Label_4116:
 ; return
 ; RPN'ized expression: "0 "
 ; Expanded expression: "0 "
 ; Expression value: 0
 ; 0
 load32 0 r2
 jump Label_3987
 ; 0
 load32 0 r2
Label_3987:
 read 4 r14 r15
 read 0 r14 r14
 add r13 92 r13
 jumpr 0 r15

.code
Label_390:
 or r0 r6 r2
 or r0 r6 r3
Label_4118:
 read 0 r5 r6
 add r5 1 r5
 sub r4 1 r4
 write 0 r3 r6
 add r3 1 r3
beq r4 r0 2
jump Label_4118
 jumpr 0 r15

.code
; END OF COMPILED C CODE

; Interrupt handlers
; Has some administration before jumping to Label_int[ID]
; To prevent interfering with other stacks, they have their own stack
; Also, all registers have to be backed up and restored to hardware stack
; A return function has to be put on the stack as wel that the C code interrupt handler
; will jump to when it is done


.code
Int1:
    push r1
    push r2
    push r3
    push r4
    push r5
    push r6
    push r7
    push r8
    push r9
    push r10
    push r11
    push r12
    push r13
    push r14
    push r15

    load32 0x7FFFFF r13     ; initialize (BDOS) int stack address
    load32 0 r14            ; initialize base pointer address
    addr2reg Return_Interrupt r1 ; get address of return function
    or r0 r1 r15            ; copy return addr to r15
    jump int1               ; jump to interrupt handler of C program
                            ; should return to the address we just put on the stack
    halt                    ; should not get here


Int2:
    push r1
    push r2
    push r3
    push r4
    push r5
    push r6
    push r7
    push r8
    push r9
    push r10
    push r11
    push r12
    push r13
    push r14
    push r15

    load32 0x7FFFFF r13     ; initialize (BDOS) int stack address
    load32 0 r14            ; initialize base pointer address
    addr2reg Return_Interrupt r1 ; get address of return function
    or r0 r1 r15            ; copy return addr to r15
    jump int2               ; jump to interrupt handler of C program
                            ; should return to the address we just put on the stack
    halt                    ; should not get here


Int3:
    push r1
    push r2
    push r3
    push r4
    push r5
    push r6
    push r7
    push r8
    push r9
    push r10
    push r11
    push r12
    push r13
    push r14
    push r15

    load32 0x7FFFFF r13     ; initialize (BDOS) int stack address
    load32 0 r14            ; initialize base pointer address
    addr2reg Return_Interrupt r1 ; get address of return function
    or r0 r1 r15            ; copy return addr to r15
    jump int3               ; jump to interrupt handler of C program
                            ; should return to the address we just put on the stack
    halt                    ; should not get here


Int4:
    push r1
    push r2
    push r3
    push r4
    push r5
    push r6
    push r7
    push r8
    push r9
    push r10
    push r11
    push r12
    push r13
    push r14
    push r15

    load32 0x7FFFFF r13     ; initialize (BDOS) int stack address
    load32 0 r14            ; initialize base pointer address
    addr2reg Return_Interrupt r1 ; get address of return function
    or r0 r1 r15            ; copy return addr to r15
    jump int4               ; jump to interrupt handler of C program
                            ; should return to the address we just put on the stack
    halt                    ; should not get here


; Function that is called after any interrupt handler from C has returned
; Restores all registers and issues RETI instruction to continue from original code
Return_Interrupt:
    pop r15
    pop r14
    pop r13
    pop r12
    pop r11
    pop r10
    pop r9
    pop r8
    pop r7
    pop r6
    pop r5
    pop r4
    pop r3
    pop r2
    pop r1

    reti        ; return from interrrupt

    halt        ; should not get here

 ; Syntax/declaration table/stack:
 ; Bytes used: 13680/15360


 ; Macro table:
 ; Macro __SMALLER_C__ = `0x0100`
 ; Macro __SMALLER_C_32__ = ``
 ; Macro __SMALLER_C_SCHAR__ = ``
 ; Macro STATIC = ``
 ; Macro NO_EXTRAS = ``
 ; Macro CAN_COMPILE_32BIT = ``
 ; Macro MIPS = ``
 ; Macro B322 = ``
 ; Macro NO_PPACK = ``
 ; Macro NO_TYPEDEF_ENUM = ``
 ; Macro NO_FUNC_ = ``
 ; Macro NO_EXTRA_WARNS = ``
 ; Macro NO_FOR_DECL = ``
 ; Macro NO_STRUCT_BY_VAL = ``
 ; Macro NO_FP = ``
 ; Macro NO_WCHAR = ``
 ; Macro NULL = `0`
 ; Macro size_t = `unsigned int`
 ; Macro CHAR_BIT = `(8)`
 ; Macro CHAR_MIN = `(-128)`
 ; Macro CHAR_MAX = `(127)`
 ; Macro INT_MAX = `(2147483647)`
 ; Macro INT_MIN = `(-2147483647-1)`
 ; Macro UINT_MAX = `(4294967295u)`
 ; Macro UINT_MIN = `(0u)`
 ; Macro EXIT_FAILURE = `1`
 ; Macro FILE = `void`
 ; Macro EOF = `(-1)`
 ; Macro fpos_t = `struct fpos_t_`
 ; Macro MAX_IDENT_LEN = `63`
 ; Macro MAX_STRING_LEN = `255`
 ; Macro MAX_CHAR_QUEUE_LEN = `(MAX_STRING_LEN + 1)`
 ; Macro MAX_MACRO_TABLE_LEN = `(4096+1024)`
 ; Macro MAX_IDENT_TABLE_LEN = `(4096+1024+512)`
 ; Macro SYNTAX_STACK_MAX = `(2048+1024)`
 ; Macro MAX_FILE_NAME_LEN = `95`
 ; Macro MAX_INCLUDES = `8`
 ; Macro PREP_STACK_SIZE = `8`
 ; Macro MAX_SEARCH_PATH = `256`
 ; Macro tokEof = `0`
 ; Macro tokNumInt = `1`
 ; Macro tokNumUint = `2`
 ; Macro tokLitStr = `3`
 ; Macro tokLShift = `4`
 ; Macro tokRShift = `5`
 ; Macro tokLogAnd = `6`
 ; Macro tokLogOr = `7`
 ; Macro tokEQ = `8`
 ; Macro tokNEQ = `9`
 ; Macro tokLEQ = `10`
 ; Macro tokGEQ = `11`
 ; Macro tokInc = `12`
 ; Macro tokDec = `13`
 ; Macro tokArrow = `14`
 ; Macro tokEllipsis = `15`
 ; Macro tokIdent = `16`
 ; Macro tokVoid = `17`
 ; Macro tokChar = `18`
 ; Macro tokInt = `19`
 ; Macro tokReturn = `20`
 ; Macro tokGoto = `21`
 ; Macro tokIf = `22`
 ; Macro tokElse = `23`
 ; Macro tokWhile = `24`
 ; Macro tokCont = `25`
 ; Macro tokBreak = `26`
 ; Macro tokSizeof = `27`
 ; Macro tokAssignMul = `'A'`
 ; Macro tokAssignDiv = `'B'`
 ; Macro tokAssignMod = `'C'`
 ; Macro tokAssignAdd = `'D'`
 ; Macro tokAssignSub = `'E'`
 ; Macro tokAssignLSh = `'F'`
 ; Macro tokAssignRSh = `'G'`
 ; Macro tokAssignAnd = `'H'`
 ; Macro tokAssignXor = `'I'`
 ; Macro tokAssignOr = `'J'`
 ; Macro tokFloat = `'a'`
 ; Macro tokDouble = `'b'`
 ; Macro tokLong = `'c'`
 ; Macro tokShort = `'d'`
 ; Macro tokUnsigned = `'e'`
 ; Macro tokSigned = `'f'`
 ; Macro tokConst = `'g'`
 ; Macro tokVolatile = `'h'`
 ; Macro tokRestrict = `'i'`
 ; Macro tokStatic = `'j'`
 ; Macro tokInline = `'k'`
 ; Macro tokExtern = `'l'`
 ; Macro tokAuto = `'m'`
 ; Macro tokRegister = `'n'`
 ; Macro tokTypedef = `'o'`
 ; Macro tokEnum = `'p'`
 ; Macro tokStruct = `'q'`
 ; Macro tokUnion = `'r'`
 ; Macro tokDo = `'s'`
 ; Macro tokFor = `'t'`
 ; Macro tokSwitch = `'u'`
 ; Macro tokCase = `'v'`
 ; Macro tokDefault = `'w'`
 ; Macro tok_Bool = `'x'`
 ; Macro tok_Complex = `'y'`
 ; Macro tok_Imagin = `'z'`
 ; Macro tok_Asm = `'`'`
 ; Macro tokURShift = `28`
 ; Macro tokUDiv = `29`
 ; Macro tokUMod = `30`
 ; Macro tokAssignURSh = `31`
 ; Macro tokAssignUDiv = `'@'`
 ; Macro tokAssignUMod = `'K'`
 ; Macro tokComma = `'0'`
 ; Macro tokIfNot = `'L'`
 ; Macro tokUnaryAnd = `'M'`
 ; Macro tokUnaryStar = `'N'`
 ; Macro tokUnaryPlus = `'O'`
 ; Macro tokUnaryMinus = `'P'`
 ; Macro tokPostInc = `'Q'`
 ; Macro tokPostDec = `'R'`
 ; Macro tokPostAdd = `'S'`
 ; Macro tokPostSub = `'T'`
 ; Macro tokULess = `'U'`
 ; Macro tokUGreater = `'V'`
 ; Macro tokULEQ = `'W'`
 ; Macro tokUGEQ = `'X'`
 ; Macro tokLocalOfs = `'Y'`
 ; Macro tokShortCirc = `'Z'`
 ; Macro tokSChar = `0x80`
 ; Macro tokUChar = `0x81`
 ; Macro tokUShort = `0x82`
 ; Macro tokULong = `0x83`
 ; Macro tokGotoLabel = `0x8F`
 ; Macro tokStructPtr = `0x90`
 ; Macro tokTag = `0x91`
 ; Macro tokMemberIdent = `0x92`
 ; Macro tokEnumPtr = `0x93`
 ; Macro tokIntr = `0x94`
 ; Macro tokNumFloat = `0x95`
 ; Macro tokNumCharWide = `0x96`
 ; Macro tokLitStrWide = `0x97`
 ; Macro FormatSegmented = `1`
 ; Macro FormatSegHuge = `3`
 ; Macro FormatSegUnreal = `4`
 ; Macro SymVoidSynPtr = `0`
 ; Macro SymIntSynPtr = `1`
 ; Macro SymUintSynPtr = `2`
 ; Macro SymWideCharSynPtr = `3`
 ; Macro SymFloatSynPtr = `4`
 ; Macro SymFuncPtr = `5`
 ; Macro STACK_SIZE = `129`
 ; Macro SymFxn = `1`
 ; Macro SymGlobalVar = `2`
 ; Macro SymGlobalArr = `3`
 ; Macro SymLocalVar = `4`
 ; Macro SymLocalArr = `5`
 ; Macro MAX_GOTO_LABELS = `16`
 ; Macro MAX_CASES = `128`
 ; Macro OPERATOR_STACK_SIZE = `STACK_SIZE`
 ; Macro B322InstrHalt = `0x30`
 ; Macro B322InstrRead = `0x31`
 ; Macro B322InstrWrite = `0x32`
 ; Macro B322InstrCopy = `0x33`
 ; Macro B322InstrPush = `0x34`
 ; Macro B322InstrPop = `0x35`
 ; Macro B322InstrJump = `0x36`
 ; Macro B322InstrJumpo = `0x37`
 ; Macro B322InstrJumpr = `0x38`
 ; Macro B322InstrJumpro = `0x39`
 ; Macro B322InstrLoad = `0x3A`
 ; Macro B322InstrLoadhi = `0x3B`
 ; Macro B322InstrBeq = `0x3C`
 ; Macro B322InstrBne = `0x3D`
 ; Macro B322InstrBgt = `0x3E`
 ; Macro B322InstrBge = `0x3F`
 ; Macro B322InstrSavpc = `0x40`
 ; Macro B322InstrReti = `0x41`
 ; Macro B322InstrOr = `0x42`
 ; Macro B322InstrAnd = `0x43`
 ; Macro B322InstrXor = `0x44`
 ; Macro B322InstrAdd = `0x45`
 ; Macro B322InstrSub = `0x46`
 ; Macro B322InstrShiftl = `0x47`
 ; Macro B322InstrShiftr = `0x48`
 ; Macro B322InstrMult = `0x49`
 ; Macro B322InstrNot = `0x4A`
 ; Macro B322InstrNop = `0x4B`
 ; Macro B322InstrAddr2reg = `0x4C`
 ; Macro B322InstrReadintid = `0x4D`
 ; Macro B322OpRegZero = `0x00`
 ; Macro B322OpRegAt = `0x01`
 ; Macro B322OpRegV0 = `0x02`
 ; Macro B322OpRegV1 = `0x03`
 ; Macro B322OpRegA0 = `0x04`
 ; Macro B322OpRegA1 = `0x05`
 ; Macro B322OpRegA2 = `0x06`
 ; Macro B322OpRegA3 = `0x07`
 ; Macro B322OpRegT0 = `0x08`
 ; Macro B322OpRegT1 = `0x09`
 ; Macro B322OpRegT2 = `0x0A`
 ; Macro B322OpRegT8 = `0x0B`
 ; Macro B322OpRegT9 = `0x0C`
 ; Macro B322OpRegSp = `0x0D`
 ; Macro B322OpRegFp = `0x0E`
 ; Macro B322OpRegRa = `0x0F`
 ; Macro B322OpIndRegZero = `0x20`
 ; Macro B322OpIndRegAt = `0x21`
 ; Macro B322OpIndRegV0 = `0x22`
 ; Macro B322OpIndRegV1 = `0x23`
 ; Macro B322OpIndRegA0 = `0x24`
 ; Macro B322OpIndRegA1 = `0x25`
 ; Macro B322OpIndRegA2 = `0x26`
 ; Macro B322OpIndRegA3 = `0x27`
 ; Macro B322OpIndRegT0 = `0x28`
 ; Macro B322OpIndRegT1 = `0x29`
 ; Macro B322OpIndRegSp = `0x2D`
 ; Macro B322OpIndRegFp = `0x2E`
 ; Macro B322OpIndRegRa = `0x2F`
 ; Macro B322OpConst = `0x80`
 ; Macro B322OpLabel = `0x81`
 ; Macro B322OpNumLabel = `0x82`
 ; Macro B322OpLabelLo = `0x83`
 ; Macro B322OpIndLocal = `B322OpIndRegFp`
 ; Macro MAX_TEMP_REGS = `3`
 ; Macro TEMP_REG_A = `B322OpRegT8`
 ; Macro TEMP_REG_B = `B322OpRegT9`
 ; Macro tokRevIdent = `0x100`
 ; Macro tokRevLocalOfs = `0x101`
 ; Macro tokAssign0 = `0x102`
 ; Macro tokNum0 = `0x103`
 ; Bytes used: 3929/5120


 ; Identifier table:
 ; Ident 
 ; Ident exit
 ; Ident <something>
 ; Ident atoi
 ; Ident strlen
 ; Ident strcpy
 ; Ident strchr
 ; Ident strcmp
 ; Ident strncmp
 ; Ident memmove
 ; Ident memcpy
 ; Ident memset
 ; Ident memcmp
 ; Ident isspace
 ; Ident isdigit
 ; Ident isalpha
 ; Ident isalnum
 ; Ident fopen
 ; Ident fclose
 ; Ident putchar
 ; Ident fputc
 ; Ident fgetc
 ; Ident puts
 ; Ident fputs
 ; Ident sprintf
 ; Ident vsprintf
 ; Ident printf
 ; Ident fprintf
 ; Ident vprintf
 ; Ident vfprintf
 ; Ident fpos_t_
 ; Ident halves
 ; Ident align
 ; Ident u
 ; Ident fgetpos
 ; Ident fsetpos
 ; Ident divmod
 ; Ident dividend
 ; Ident divisor
 ; Ident rem
 ; Ident division
 ; Ident modulo
 ; Ident argument
 ; Ident dest
 ; Ident src
 ; Ident len
 ; Ident n
 ; Ident destination
 ; Ident source
 ; Ident str
 ; Ident strcat
 ; Ident s
 ; Ident c
 ; Ident s1
 ; Ident s2
 ; Ident truncUint
 ; Ident truncInt
 ; Ident GetToken
 ; Ident GetTokenName
 ; Ident token
 ; Ident DumpMacroTable
 ; Ident AddIdent
 ; Ident name
 ; Ident FindIdent
 ; Ident DumpIdentTable
 ; Ident lab2str
 ; Ident p
 ; Ident GenInit
 ; Ident GenFin
 ; Ident GenInitParams
 ; Ident argc
 ; Ident argv
 ; Ident idx
 ; Ident GenInitFinalize
 ; Ident GenStartCommentLine
 ; Ident GenWordAlignment
 ; Ident bss
 ; Ident GenLabel
 ; Ident Label
 ; Ident Static
 ; Ident GenNumLabel
 ; Ident GenZeroData
 ; Ident Size
 ; Ident GenIntData
 ; Ident Val
 ; Ident GenStartAsciiString
 ; Ident GenAddrData
 ; Ident ofs
 ; Ident GenJumpUncond
 ; Ident GenJumpIfZero
 ; Ident GenJumpIfNotZero
 ; Ident GenJumpIfEqual
 ; Ident val
 ; Ident GenFxnProlog
 ; Ident GenFxnEpilog
 ; Ident GenIsrProlog
 ; Ident GenIsrEpilog
 ; Ident GenMaxLocalsSize
 ; Ident GenDumpChar
 ; Ident ch
 ; Ident GenExpr
 ; Ident PushSyntax
 ; Ident t
 ; Ident PushSyntax2
 ; Ident v
 ; Ident DumpSynDecls
 ; Ident push2
 ; Ident v2
 ; Ident ins2
 ; Ident pos
 ; Ident ins
 ; Ident del
 ; Ident cnt
 ; Ident TokenStartsDeclaration
 ; Ident params
 ; Ident ParseDecl
 ; Ident tok
 ; Ident structInfo
 ; Ident cast
 ; Ident label
 ; Ident ShiftChar
 ; Ident puts2
 ; Ident printf2
 ; Ident error
 ; Ident format
 ; Ident warning
 ; Ident errorFile
 ; Ident errorFileName
 ; Ident errorInternal
 ; Ident errorChrStr
 ; Ident errorStrLen
 ; Ident errorUnexpectedToken
 ; Ident errorDirective
 ; Ident errorCtrlOutOfScope
 ; Ident errorDecl
 ; Ident errorVarSize
 ; Ident errorInit
 ; Ident errorUnexpectedVoid
 ; Ident errorOpType
 ; Ident errorNotLvalue
 ; Ident errorNotConst
 ; Ident errorLongExpr
 ; Ident FindSymbol
 ; Ident SymType
 ; Ident SynPtr
 ; Ident FindTaggedDecl
 ; Ident start
 ; Ident CurScope
 ; Ident GetDeclSize
 ; Ident SyntaxPtr
 ; Ident SizeForDeref
 ; Ident ParseExpr
 ; Ident GotUnary
 ; Ident ExprTypeSynPtr
 ; Ident ConstExpr
 ; Ident ConstVal
 ; Ident option
 ; Ident option2
 ; Ident GetFxnInfo
 ; Ident MinParams
 ; Ident MaxParams
 ; Ident ReturnExprTypeSynPtr
 ; Ident FirstParamSynPtr
 ; Ident verbose
 ; Ident warnings
 ; Ident warnCnt
 ; Ident compileUserBDOS
 ; Ident compileOS
 ; Ident TokenValueInt
 ; Ident TokenIdentName
 ; Ident TokenIdentNameLen
 ; Ident TokenValueString
 ; Ident TokenStringLen
 ; Ident TokenStringSize
 ; Ident LineNo
 ; Ident LinePos
 ; Ident CharQueue
 ; Ident CharQueueLen
 ; Ident MacroTable
 ; Ident MacroTableLen
 ; Ident IdentTable
 ; Ident IdentTableLen
 ; Ident DummyIdent
 ; Ident gotoLabels
 ; Ident gotoLabStat
 ; Ident gotoLabCnt
 ; Ident Cases
 ; Ident CasesCnt
 ; Ident FileCnt
 ; Ident FileNames
 ; Ident Files
 ; Ident OutFile
 ; Ident CharQueues
 ; Ident LineNos
 ; Ident LinePoss
 ; Ident SysSearchPaths
 ; Ident SysSearchPathsLen
 ; Ident SearchPaths
 ; Ident SearchPathsLen
 ; Ident PrepDontSkipTokens
 ; Ident PrepStack
 ; Ident PrepSp
 ; Ident ExprLevel
 ; Ident stack
 ; Ident sp
 ; Ident opstack
 ; Ident opsp
 ; Ident OutputFormat
 ; Ident GenExterns
 ; Ident UseBss
 ; Ident UseLeadingUnderscores
 ; Ident FileHeader
 ; Ident CodeHeaderFooter
 ; Ident DataHeaderFooter
 ; Ident RoDataHeaderFooter
 ; Ident BssHeaderFooter
 ; Ident CurHeaderFooter
 ; Ident CharIsSigned
 ; Ident SizeOfWord
 ; Ident SizeOfWideChar
 ; Ident WideCharIsSigned
 ; Ident WideCharType1
 ; Ident WideCharType2
 ; Ident LabelCnt
 ; Ident StructCpyLabel
 ; Ident StructPushLabel
 ; Ident CurFxnSyntaxPtr
 ; Ident CurFxnParamCntMin
 ; Ident CurFxnParamCntMax
 ; Ident CurFxnLocalOfs
 ; Ident CurFxnMinLocalOfs
 ; Ident CurFxnReturnExprTypeSynPtr
 ; Ident CurFxnEpilogLabel
 ; Ident CurFxnName
 ; Ident IsMain
 ; Ident ParseLevel
 ; Ident ParamLevel
 ; Ident SyntaxStack0
 ; Ident SyntaxStack1
 ; Ident SyntaxStackCnt
 ; Ident FindMacro
 ; Ident UndefineMacro
 ; Ident AddMacroIdent
 ; Ident AddMacroExpansionChar
 ; Ident e
 ; Ident DefineMacro
 ; Ident expansion
 ; Ident AddNumericIdent
 ; Ident AddGotoLabel
 ; Ident UndoNonLabelIdents
 ; Ident AddCase
 ; Ident rws
 ; Ident rwtk
 ; Ident GetTokenByWord
 ; Ident word
 ; Ident tktk
 ; Ident tks
 ; Ident GetNextChar
 ; Ident ShiftCharN
 ; Ident IncludeFile
 ; Ident quot
 ; Ident EndOfFiles
 ; Ident SkipSpace
 ; Ident SkipNewLines
 ; Ident SkipLine
 ; Ident GetIdent
 ; Ident GetCharValue
 ; Ident wide
 ; Ident GetString
 ; Ident terminator
 ; Ident pushPrep
 ; Ident NoSkip
 ; Ident popPrep
 ; Ident GetNumber
 ; Ident GetTokenInner
 ; Ident Reserve4Expansion
 ; Ident errorRedecl
 ; Ident GenPrintLabel
 ; Ident GenPrintNumLabel
 ; Ident GenFxnSizeNeeded
 ; Ident GenRecordFxnSize
 ; Ident startLabelName
 ; Ident endLabelNo
 ; Ident GenPrintInstr
 ; Ident instr
 ; Ident GenPrintOperand
 ; Ident op
 ; Ident GenPrintOperandSeparator
 ; Ident GenPrintNewLine
 ; Ident GenPrintInstr1Operand
 ; Ident instrval
 ; Ident operand
 ; Ident operandval
 ; Ident GenPrintInstr2Operands
 ; Ident operand1
 ; Ident operand1val
 ; Ident operand2
 ; Ident operand2val
 ; Ident GenPrintInstr3Operands
 ; Ident operand3
 ; Ident operand3val
 ; Ident GenExtendRegIfNeeded
 ; Ident reg
 ; Ident opSz
 ; Ident GenWreg
 ; Ident GenPrologPos
 ; Ident GenLeaf
 ; Ident GenWriteFrameSize
 ; Ident GenUpdateFrameSize
 ; Ident GenGrowStack
 ; Ident size
 ; Ident GenGetBinaryOperatorInstr
 ; Ident GenPreIdentAccess
 ; Ident GenPostIdentAccess
 ; Ident GenReadIdent
 ; Ident regDst
 ; Ident GenReadLocal
 ; Ident GenReadIndirect
 ; Ident regSrc
 ; Ident GenWriteIdent
 ; Ident GenWriteLocal
 ; Ident GenWriteIndirect
 ; Ident GenIncDecIdent
 ; Ident GenIncDecLocal
 ; Ident GenIncDecIndirect
 ; Ident GenPostIncDecIdent
 ; Ident GenPostIncDecLocal
 ; Ident GenPostIncDecIndirect
 ; Ident CanUseTempRegs
 ; Ident TempsUsed
 ; Ident GenLreg
 ; Ident GenRreg
 ; Ident GenWregInc
 ; Ident inc
 ; Ident GenPushReg
 ; Ident GenPopReg
 ; Ident GenPrep
 ; Ident CmpBlocks
 ; Ident GenCmp
 ; Ident GenIsCmp
 ; Ident GenExpr0
 ; Ident push
 ; Ident stacktop
 ; Ident pop2
 ; Ident pop
 ; Ident pushop2
 ; Ident pushop
 ; Ident opstacktop
 ; Ident popop2
 ; Ident popop
 ; Ident isop
 ; Ident isunary
 ; Ident preced
 ; Ident precedGEQ
 ; Ident lfttok
 ; Ident rhttok
 ; Ident expr
 ; Ident gotUnary
 ; Ident commaSeparator
 ; Ident exprUnary
 ; Ident argOfSizeOf
 ; Ident isAnyPtr
 ; Ident derefAnyPtr
 ; Ident decayArray
 ; Ident arithmetic
 ; Ident lvalueCheck
 ; Ident nonVoidTypeCheck
 ; Ident scalarTypeCheck
 ; Ident numericTypeCheck
 ; Ident anyIntTypeCheck
 ; Ident isUint
 ; Ident compatCheck
 ; Ident TheOtherExprTypeSynPtr
 ; Ident lidx
 ; Ident ridx
 ; Ident shiftCountCheck
 ; Ident psr
 ; Ident divCheckAndCalc
 ; Ident psl
 ; Ident sr
 ; Ident Unsigned
 ; Ident promoteType
 ; Ident simplifyConstExpr
 ; Ident isConst
 ; Ident top
 ; Ident bottom
 ; Ident AllocLocal
 ; Ident exprval
 ; Ident errorTagRedef
 ; Ident ident
 ; Ident tsd
 ; Ident InsertSyntax2
 ; Ident InsertSyntax
 ; Ident DeleteSyntax
 ; Ident GetDeclAlignment
 ; Ident DumpDecl
 ; Ident IsParam
 ; Ident ParseArrayDimension
 ; Ident AllowEmptyDimension
 ; Ident ParseFxnParams
 ; Ident BrkCntTargetFxn
 ; Ident ParseBlock
 ; Ident BrkCntTarget
 ; Ident casesIdx
 ; Ident AddFxnParamSymbols
 ; Ident CheckRedecl
 ; Ident lastSyntaxPtr
 ; Ident ParseBase
 ; Ident base
 ; Ident ParseDerived
 ; Ident PushBase
 ; Ident InitScalar
 ; Ident synPtr
 ; Ident InitArray
 ; Ident InitStruct
 ; Ident InitVar
 ; Ident compatCheck2
 ; Ident i
 ; Ident ParseStatement
 ; Ident main
 ; Bytes used: 4889/5632

 ; Next label number: 4119
 ; Compilation succeeded.
